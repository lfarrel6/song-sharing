{"version":3,"sources":["../node_modules/react/index.js","../node_modules/@zxing/library/esm5/core/NotFoundException.js","../node_modules/@zxing/library/esm5/core/IllegalArgumentException.js","../node_modules/@zxing/library/esm5/core/BarcodeFormat.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@zxing/library/esm5/core/ResultPoint.js","../node_modules/@zxing/library/esm5/core/DecodeHintType.js","../node_modules/buffer/index.js","../node_modules/@zxing/library/esm5/core/FormatException.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/@zxing/library/esm5/core/Exception.js","../node_modules/@zxing/library/esm5/core/util/System.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/resolve-pathname/index.js","../node_modules/value-equal/index.js","../node_modules/history/esm/history.js","../node_modules/@zxing/library/esm5/core/common/BitMatrix.js","../node_modules/@zxing/library/esm5/core/Result.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/webpack/buildin/global.js","../node_modules/process/browser.js","../node_modules/@zxing/library/esm5/core/oned/OneDReader.js","../node_modules/react-router/esm/react-router.js","../node_modules/@zxing/library/esm5/core/util/StringBuilder.js","../node_modules/react-router-dom/esm/react-router-dom.js","../node_modules/inherits/inherits_browser.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/@zxing/library/esm5/core/ChecksumException.js","../node_modules/@zxing/library/esm5/core/common/detector/MathUtils.js","../node_modules/@zxing/library/esm5/core/ResultMetadataType.js","../node_modules/@zxing/library/esm5/core/common/BitArray.js","../node_modules/@zxing/library/esm5/core/common/reedsolomon/GenericGF.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/core-util-is/lib/util.js","../node_modules/@zxing/library/esm5/browser/BrowserCodeReader.js","../node_modules/@zxing/library/esm5/core/InvertedLuminanceSource.js","../node_modules/@zxing/library/esm5/core/LuminanceSource.js","../node_modules/@zxing/library/esm5/core/IllegalStateException.js","../node_modules/@zxing/library/esm5/core/common/CharacterSetECI.js","../node_modules/@zxing/library/esm5/core/oned/UPCEANReader.js","../node_modules/process-nextick-args/index.js","../node_modules/safe-buffer/index.js","../node_modules/pako/lib/utils/common.js","../node_modules/@zxing/library/esm5/core/util/Integer.js","../node_modules/@zxing/library/esm5/core/common/reedsolomon/GenericGFPoly.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/ErrorCorrectionLevel.js","../node_modules/@zxing/library/esm5/core/EncodeHintType.js","../node_modules/object-assign/index.js","../node_modules/prop-types/index.js","../node_modules/events/events.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/@zxing/library/esm5/core/UnsupportedOperationException.js","../node_modules/@zxing/library/esm5/core/util/Arrays.js","../node_modules/@zxing/library/esm5/core/ArgumentException.js","../node_modules/@zxing/library/esm5/core/qrcode/QRCodeReader.js","../node_modules/@zxing/library/esm5/core/common/reedsolomon/ReedSolomonDecoder.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/Version.js","../node_modules/@zxing/library/esm5/core/common/BitSource.js","../node_modules/@zxing/library/esm5/core/common/DecoderResult.js","../node_modules/@zxing/library/esm5/core/util/StringEncoding.js","../node_modules/@zxing/library/esm5/core/common/DetectorResult.js","../node_modules/@zxing/library/esm5/core/common/GridSamplerInstance.js","../node_modules/@zxing/library/esm5/core/common/PerspectiveTransform.js","../node_modules/@zxing/library/esm5/core/datamatrix/DataMatrixReader.js","../node_modules/@zxing/library/esm5/core/qrcode/encoder/Encoder.js","../node_modules/@zxing/library/esm5/core/qrcode/encoder/QRCode.js","../node_modules/@zxing/library/esm5/core/WriterException.js","../node_modules/@zxing/library/esm5/core/oned/MultiFormatOneDReader.js","../node_modules/@zxing/library/esm5/index.js","../node_modules/react-router/node_modules/path-to-regexp/index.js","../node_modules/react-is/index.js","../node_modules/isarray/index.js","../node_modules/stream-browserify/index.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/assert/assert.js","../node_modules/util/util.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/@zxing/library/esm5/browser/HTMLCanvasElementLuminanceSource.js","../node_modules/@zxing/library/esm5/browser/VideoInputDevice.js","../node_modules/@zxing/library/esm5/core/BinaryBitmap.js","../node_modules/@zxing/library/esm5/core/common/HybridBinarizer.js","../node_modules/@zxing/library/esm5/core/common/GlobalHistogramBinarizer.js","../node_modules/@zxing/library/esm5/core/Binarizer.js","../node_modules/@zxing/library/esm5/core/ArithmeticException.js","../node_modules/@zxing/library/esm5/core/ReedSolomonException.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/FormatInformation.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/QRCodeDecoderMetaData.js","../node_modules/@zxing/library/esm5/core/common/StringUtils.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/Mode.js","../node_modules/@zxing/library/esm5/core/common/DefaultGridSampler.js","../node_modules/@zxing/library/esm5/core/common/GridSampler.js","../node_modules/@zxing/library/esm5/core/common/detector/WhiteRectangleDetector.js","../node_modules/@zxing/library/esm5/core/common/reedsolomon/ReedSolomonEncoder.js","../node_modules/@zxing/library/esm5/core/qrcode/encoder/MaskUtil.js","../node_modules/@zxing/library/esm5/core/oned/Code39Reader.js","../node_modules/@zxing/library/esm5/core/oned/Code128Reader.js","../node_modules/@zxing/library/esm5/core/oned/rss/RSS14Reader.js","../node_modules/@zxing/library/esm5/core/oned/rss/DataCharacter.js","../node_modules/@zxing/library/esm5/core/oned/ITFReader.js","../node_modules/@zxing/library/esm5/core/oned/EAN13Reader.js","../node_modules/@zxing/library/esm5/core/MultiFormatReader.js","../node_modules/@zxing/library/esm5/core/ReaderException.js","../node_modules/@zxing/library/esm5/core/qrcode/QRCodeWriter.js","../node_modules/react-dom/index.js","../node_modules/create-react-context/lib/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/create-react-context/lib/implementation.js","../node_modules/gud/index.js","../node_modules/fbjs/lib/warning.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/react-router/node_modules/isarray/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/qr-image/lib/qr.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/passthrough.js","../node_modules/qr-image/lib/qr-base.js","../node_modules/qr-image/lib/encode.js","../node_modules/qr-image/lib/errorcode.js","../node_modules/qr-image/lib/matrix.js","../node_modules/qr-image/lib/png.js","../node_modules/browserify-zlib/lib/index.js","../node_modules/browserify-zlib/lib/binding.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/qr-image/lib/crc32.js","../node_modules/qr-image/lib/crc32buffer.js","../node_modules/qr-image/lib/vector.js","../node_modules/@zxing/library/esm5/browser/BrowserQRCodeReader.js","../node_modules/ts-custom-error/dist/custom-error.umd.js","../node_modules/@zxing/library/esm5/core/util/Float.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/Decoder.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/BitMatrixParser.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/ECBlocks.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/ECB.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/DataMask.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/DataBlock.js","../node_modules/@zxing/library/esm5/core/qrcode/decoder/DecodedBitStreamParser.js","../node_modules/@zxing/library/esm5/core/qrcode/detector/Detector.js","../node_modules/@zxing/library/esm5/core/qrcode/detector/FinderPatternFinder.js","../node_modules/@zxing/library/esm5/core/qrcode/detector/FinderPattern.js","../node_modules/@zxing/library/esm5/core/qrcode/detector/FinderPatternInfo.js","../node_modules/@zxing/library/esm5/core/qrcode/detector/AlignmentPatternFinder.js","../node_modules/@zxing/library/esm5/core/qrcode/detector/AlignmentPattern.js","../node_modules/@zxing/library/esm5/browser/BrowserDatamatrixCodeReader.js","../node_modules/@zxing/library/esm5/core/datamatrix/decoder/Decoder.js","../node_modules/@zxing/library/esm5/core/datamatrix/decoder/BitMatrixParser.js","../node_modules/@zxing/library/esm5/core/datamatrix/decoder/Version.js","../node_modules/@zxing/library/esm5/core/datamatrix/decoder/DataBlock.js","../node_modules/@zxing/library/esm5/core/datamatrix/decoder/DecodedBitStreamParser.js","../node_modules/@zxing/library/esm5/core/datamatrix/detector/Detector.js","../node_modules/@zxing/library/esm5/browser/BrowserQRCodeSvgWriter.js","../node_modules/@zxing/library/esm5/core/qrcode/encoder/ByteMatrix.js","../node_modules/@zxing/library/esm5/core/qrcode/encoder/MatrixUtil.js","../node_modules/@zxing/library/esm5/core/qrcode/encoder/BlockPair.js","../node_modules/@zxing/library/esm5/browser/BrowserBarcodeReader.js","../node_modules/@zxing/library/esm5/core/oned/rss/AbstractRSSReader.js","../node_modules/@zxing/library/esm5/core/oned/rss/Pair.js","../node_modules/@zxing/library/esm5/core/oned/rss/FinderPattern.js","../node_modules/@zxing/library/esm5/core/oned/rss/RSSUtils.js","../node_modules/@zxing/library/esm5/core/oned/MultiFormatUPCEANReader.js","../node_modules/@zxing/library/esm5/core/oned/UPCEANExtensionSupport.js","../node_modules/@zxing/library/esm5/core/oned/UPCEANExtension5Support.js","../node_modules/@zxing/library/esm5/core/oned/UPCEANExtension2Support.js","../node_modules/@zxing/library/esm5/core/oned/EAN8Reader.js","../node_modules/@zxing/library/esm5/browser/BrowserMultiFormatReader.js","../node_modules/@zxing/library/esm5/core/MultiFormatWriter.js","../node_modules/@zxing/library/esm5/core/PlanarYUVLuminanceSource.js","../node_modules/@zxing/library/esm5/core/RGBLuminanceSource.js"],"names":["module","exports","__webpack_require__","__extends","this","_extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","NotFoundException","_super","apply","arguments","default","IllegalArgumentException","BarcodeFormat","_extends","assign","target","i","length","source","key","call","__webpack_exports__","MathUtils_1","Float_1","ResultPoint","x","y","getX","getY","equals","other","otherPoint","hashCode","floatToIntBits","toString","orderBestPatterns","patterns","pointA","pointB","pointC","zeroOneDistance","distance","oneTwoDistance","zeroTwoDistance","crossProductZ","temp","pattern1","pattern2","bX","bY","DecodeHintType","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","inspect","max","match","join","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","FormatException","_defineProperty","enumerable","writable","_objectSpread","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","forEach","Exception","message","_this","CustomError","System","arraycopy","srcPos","dest","destPos","currentTimeMillis","Date","now","isProduction","prefix","condition","_inheritsLoose","subClass","superClass","isAbsolute","pathname","charAt","spliceOne","index","k","pop","resolve_pathname","to","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","hasTrailingSlash","last","up","part","unshift","result","_typeof","iterator","value_equal","valueEqual","every","item","aType","aValue","valueOf","bValue","aKeys","bKeys","addLeadingSlash","path","stripLeadingSlash","stripBasename","RegExp","test","hasBasename","stripTrailingSlash","createPath","location","search","hash","createLocation","state","currentLocation","hashIndex","searchIndex","parsePath","esm_extends","decodeURI","URIError","locationsAreEqual","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","fn","isActive","listener","notifyListeners","_len","args","_key","createBrowserHistory","createHashHistory","createMemoryHistory","canUseDOM","window","document","createElement","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","props","tiny_invariant_esm","globalHistory","canUseHistory","ua","navigator","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","random","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","getHashPath","substring","replaceHashPath","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","pushHashPath","nextPaths","clamp","lowerBound","upperBound","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","map","entry","nextIndex","nextEntries","splice","canGo","BitArray_1","System_1","Arrays_1","StringBuilder_1","IllegalArgumentException_1","BitMatrix","width","height","rowSize","bits","Int32Array","parseFromBooleanArray","image","imageI","parseFromString","stringRepresentation","setString","unsetString","bitsPos","rowStartPos","rowLength","nRows","matrix","get","unset","flip","xor","mask","getWidth","getHeight","getRowSize","rowArray","row","getRow","getBitArray","clear","setRegion","left","top","right","bottom","getSize","setBulk","setRow","rotate180","topRow","bottomRow","length_1","reverse","getEnclosingRectangle","x32","theBits","bit","getTopLeftOnBit","bitsOffset","getBottomRightOnBit","o","lineSeparator","buildToString","append","clone","ResultPoint_1","Result","text","rawBytes","numBits","resultPoints","format","timestamp","resultMetadata","getText","getRawBytes","getNumBits","getResultPoints","getBarcodeFormat","getResultMetadata","putMetadata","Map","putAllMetadata","metadata","addResultPoints","newPoints","oldPoints","allPoints","getTimestamp","_classCallCheck","instance","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","getPrototypeOf","_typeof2","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_setPrototypeOf","_inherits","g","Function","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","name","binding","cwd","chdir","umask","DecodeHintType_1","ResultMetadataType_1","NotFoundException_1","OneDReader","decode","hints","doDecode","nfe","TRY_HARDER","isRotateSupported","rotatedImage","rotateCounterClockwise","orientation_1","ORIENTATION","points","reset","maxLines","tryHarder","rowStep","middle","trunc","rowStepsAboveOrBelow","rowNumber","getBlackRow","ignored","_loop_1","attempt","NEED_RESULT_POINT_CALLBACK","newHints_1","hint","delete","this_1","decodeRow","re","state_1","recordPattern","counters","numCounters","isWhite","counterPosition","recordPatternInReverse","numTransitionsLeft","patternMatchVariance","pattern","maxIndividualVariance","total","patternLength","POSITIVE_INFINITY","unitBarWidth","totalVariance","counter","scaledPattern","variance","Redirect","Route","Router","context","create_react_context__WEBPACK_IMPORTED_MODULE_0__","create_react_context__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","history__WEBPACK_IMPORTED_MODULE_4__","tiny_invariant__WEBPACK_IMPORTED_MODULE_5__","path_to_regexp__WEBPACK_IMPORTED_MODULE_6__","path_to_regexp__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_9__","Provider","displayName","Consumer","createNamedContext","_React$Component","_isMounted","_pendingLocation","staticContext","computeRootMatch","url","params","isExact","_proto","componentDidMount","componentWillUnmount","render","children","Component","Lifecycle","onMount","componentDidUpdate","prevProps","onUpdate","onUnmount","cache","cacheLimit","cacheCount","generatePath","generator","compile","compilePath","pretty","computedMatch","_ref$push","context$$1","method","cache$1","cacheLimit$1","cacheCount$1","matchPath","options","_options","_options$exact","exact","_options$strict","strict","_options$sensitive","sensitive","reduce","matched","_compilePath","cacheKey","pathCache","regexp","compilePath$1","exec","values","memo","_this$props","component","Children","count","isEmptyChildren","base","createURL","staticHandler","methodName","StringBuilder","s","deleteCharAt","setCharAt","insert","HashRouter","NavLink","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_router__WEBPACK_IMPORTED_MODULE_2__","history__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__","tiny_invariant__WEBPACK_IMPORTED_MODULE_7__","Link","handleClick","onClick","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","preventDefault","innerRef","rest","ref","_ref$ariaCurrent","ariaCurrent","_ref$activeClassName","activeClassName","activeStyle","classNameProp","className","isActiveProp","styleProp","style","escapedPath","_ref2","classnames","joinClassnames","aria-current","ctor","superCtor","super_","TempCtor","pna","objectKeys","Duplex","util","inherits","Readable","Writable","v","readable","allowHalfOpen","onend","_writableState","ended","onEndNT","highWaterMark","_readableState","destroyed","_destroy","err","cb","ChecksumException","MathUtils","round","NaN","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","aX","aY","xDiff","yDiff","sqrt","sum","ResultMetadataType","Integer_1","BitArray","makeArray","getSizeInBytes","ensureCapacity","newBits","getNextSet","currentBits","numberOfTrailingZeros","getNextUnset","setRange","firstInt","lastInt","isRange","appendBit","appendBits","numBitsLeft","appendBitArray","otherSize","toBytes","bitOffset","numBytes","theByte","oldBitsLen","leftOffset","currentInt","nextInt","GenericGFPoly_1","ArithmeticException_1","GenericGF","primitive","generatorBase","expTable","logTable","zero","one","getZero","getOne","buildMonomial","degree","coefficient","coefficients","addOrSubtract","exp","log","inverse","multiply","getGeneratorBase","toHexString","AZTEC_DATA_12","AZTEC_DATA_10","AZTEC_DATA_6","AZTEC_PARAM","QR_CODE_FIELD_256","DATA_MATRIX_FIELD_256","AZTEC_DATA_8","MAXICODE_FIELD_64","_objectWithoutPropertiesLoose","excluded","sourceKeys","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isFunction","isPrimitive","HTMLCanvasElementLuminanceSource_1","VideoInputDevice_1","BinaryBitmap_1","HybridBinarizer_1","ArgumentException_1","ChecksumException_1","FormatException_1","BrowserCodeReader","reader","timeBetweenScansMillis","getVideoInputDevices","Promise","resolve","reject","mediaDevices","enumerateDevices","then","devices","sources","device","kind","VideoInputDevice","deviceId","label","catch","decodeFromInputVideoDevice","videoElement","constraints","prepareVideoElement","video","facingMode","decodeOnceWithDelay","getUserMedia","stream","startDecodeFromStream","error","callbackFn","active","bindVideoSrc","bindEvents","videoPlayingEventListener","videoLoadedMetadataEventListener","play","decodeFromVideoSource","videoUrl","videoPlayEndedEventListener","stopStreams","setAttribute","getMediaElement","mediaElementId","mediaElement","getElementById","nodeName","decodeFromImage","imageElement","imageUrl","prepareImageElement","imageLoadedEventListener","decodeOnce","isImageLoaded","img","complete","naturalWidth","timeoutHandler","bind","retryIfNotFound","retryIfChecksumOrFormatError","binaryBitmap","createBinaryBitmap","decodeBitmap","canvasElementContext","prepareCaptureCanvas","drawImageOnCanvas","luminanceSource","HTMLCanvasElementLuminanceSource","canvasElement","hybridBinarizer","srcElement","drawImage","videoWidth","videoHeight","naturalHeight","getContext","getVideoTracks","t","stop","unbindVideoSrc","removeAttribute","srcObject","URL","createObjectURL","InvertedLuminanceSource","delegate","sourceRow","getMatrix","invertedMatrix","Uint8ClampedArray","isCropSupported","crop","invert","rotateCounterClockwise45","UnsupportedOperationException_1","LuminanceSource","luminance","IllegalStateException","CharacterSetValueIdentifiers","CharacterSetECI","valueIdentifier","valuesParam","otherEncodingNames","_i","VALUE_IDENTIFIER_TO_ECI","NAME_TO_ECI","VALUES_TO_ECI","_a","otherEncodingNames_1","otherName","getValueIdentifier","getName","getValue","getCharacterSetECIByValue","characterSet","getCharacterSetECIByName","Cp437","ISO8859_1","ISO8859_2","ISO8859_3","ISO8859_4","ISO8859_5","ISO8859_6","ISO8859_7","ISO8859_8","ISO8859_9","ISO8859_10","ISO8859_11","ISO8859_13","ISO8859_14","ISO8859_15","ISO8859_16","SJIS","Cp1250","Cp1251","Cp1252","Cp1256","UnicodeBigUnmarked","UTF8","ASCII","Big5","GB18030","EUC_KR","BarcodeFormat_1","Result_1","OneDReader_1","UPCEANExtensionSupport_1","UPCEANReader","decodeRowStringBuffer","L_AND_G_PATTERNS","L_PATTERNS","widths","reversedWidths","findStartGuardPattern","foundStart","startRange","nextStart","findGuardPattern","START_END_PATTERN","quietStart","startGuardRange","resultPointCallback","resultPoint_1","foundPossibleResultPoint","budello","decodeMiddle","endStart","rowOffset","resultString","resultPoint_2","endRange","decodeEnd","resultPoint_3","quietEnd","checkChecksum","resultPoint","decodeResult","getTime","extensionLength","extensionResult","UPC_EAN_EXTENSION","allowedExtensions","ALLOWED_EAN_EXTENSIONS","valid","EAN_13","UPC_A","checkStandardUPCEANChecksum","check","getStandardUPCEANChecksum","digit","whiteFirst","patternStart","MAX_INDIVIDUAL_VARIANCE","MAX_AVG_VARIANCE","decodeDigit","bestVariance","bestMatch","MIDDLE_PATTERN","END_PATTERN","arg1","arg2","arg3","copyProps","SafeBuffer","TYPED_OK","Uint16Array","_has","shift","shrinkBuf","fnTyped","arraySet","src_offs","dest_offs","flattenChunks","chunks","l","chunk","fnUntyped","setTyped","Buf8","Buf16","Buf32","Integer","numberOfLeadingZeros","bitCount","MIN_VALUE_32_BITS","GenericGF_1","GenericGFPoly","field","coefficientsLength","firstNonZero","getCoefficients","getDegree","isZero","getCoefficient","evaluateAt","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","aCoefficients","aLength","bCoefficients","bLength","product","aCoeff","multiplyScalar","scalar","multiplyByMonomial","divide","quotient","remainder","denominatorLeadingTerm","inverseDenominatorLeadingTerm","degreeDifference","scale","term","iterationQuotient","alphaPower","ErrorCorrectionLevelValues","ErrorCorrectionLevel","stringValue","FOR_BITS","FOR_VALUE","getBits","L","M","Q","H","forBits","EncodeHintType","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","symbols","toObject","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","NumberIsNaN","EventEmitter","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","prepend","events","existing","warning","newListener","warned","w","emitter","console","warn","_onceWrap","fired","wrapFn","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","setMaxListeners","getMaxListeners","doError","er","handler","position","originalListener","rawListeners","eventNames","Stream","Transform","PassThrough","setImmediate","CorkedRequest","next","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","WritableState","internalUtil","deprecate","OurUint8Array","realHasInstance","destroyImpl","nop","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","destroy","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","_","hasInstance","object","pipe","_uint8ArrayToBuffer","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_undestroy","undestroy","UnsupportedOperationException","Arrays","first","second","a_1","fillUint8Array","copyOf","original","newLength","binarySearch","ar","el","comparator","numberComparator","cmp","ArgumentException","BitMatrix_1","Decoder_1","QRCodeDecoderMetaData_1","Detector_1","QRCodeReader","decoder","getDecoder","decoderResult","PURE_BARCODE","extractPureBits","getBlackMatrix","decodeBitMatrix","NO_POINTS","detectorResult","detect","getPoints","getOther","applyMirroredCorrection","QR_CODE","byteSegments","getByteSegments","BYTE_SEGMENTS","ecLevel","getECLevel","ERROR_CORRECTION_LEVEL","hasStructuredAppend","STRUCTURED_APPEND_SEQUENCE","getStructuredAppendSequenceNumber","STRUCTURED_APPEND_PARITY","getStructuredAppendParity","leftTopBlack","rightBottomBlack","moduleSize","matrixWidth","matrixHeight","nudge","nudgedTooFarRight","nudgedTooFarDown","iOffset","inBlack","transitions","ReedSolomonException_1","IllegalStateException_1","ReedSolomonDecoder","received","twoS","poly","syndromeCoefficients","noError","evalResult","syndrome","sigmaOmega","runEuclideanAlgorithm","sigma","omega","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","rLast","r","tLast","rLastLast","tLastLast","q","dltInverse","degreeDiff","sigmaTildeAtZero","errorLocator","numErrors","errorEvaluator","xiInverse","denominator","termPlus1","FormatInformation_1","ECBlocks_1","ECB_1","Version","versionNumber","alignmentPatternCenters","ecBlocks","ecCodewords","getECCodewordsPerBlock","ecbArray_1","getECBlocks","ecBlock","getCount","getDataCodewords","totalCodewords","getVersionNumber","getAlignmentPatternCenters","getTotalCodewords","getDimensionForVersion","getECBlocksForLevel","getProvisionalVersionForDimension","dimension","getVersionForNumber","VERSIONS","decodeVersionInformation","versionBits","bestDifference","bestVersion","VERSION_DECODE_INFO","targetVersion","bitsDifference","numBitsDiffering","buildFunctionPattern","bitMatrix","BitSource","getBitOffset","getByteOffset","readBits","available","bitsLeft","toRead","bitsToNotRead","DecoderResult","structuredAppendSequenceNumber","structuredAppendParity","setNumBits","getErrorsCorrected","errorsCorrected","setErrorsCorrected","getErasures","erasures","setErasures","setOther","CharacterSetECI_1","StringEncoding","encodingName","TextDecoder","decodeFallback","encode","isBrowser","TextEncoder","encodeFallback","NONSTANDARD_allowLegacyEncoding","encodingCharacterSet","h","decodeURIComponent","charList","btoa","unescape","encodeURIComponent","uintArray","DetectorResult","DefaultGridSampler_1","GridSamplerInstance","setGridSampler","newGridSampler","gridSampler","getInstance","PerspectiveTransform","a11","a21","a31","a12","a22","a32","a13","a23","a33","quadrilateralToQuadrilateral","x0","y0","x1","y1","x2","y2","x3","y3","x0p","y0p","x1p","y1p","x2p","y2p","x3p","y3p","qToS","quadrilateralToSquare","squareToQuadrilateral","times","transformPoints","transformPointsWithValues","xValues","yValues","dx3","dy3","dx1","dx2","dy1","dy2","buildAdjoint","DataMatrixReader","has","DATA_MATRIX","EncodeHintType_1","ReedSolomonEncoder_1","Mode_1","Version_1","MaskUtil_1","ByteMatrix_1","QRCode_1","MatrixUtil_1","StringEncoding_1","BlockPair_1","WriterException_1","Encoder","calculateMaskPenalty","applyMaskPenaltyRule1","applyMaskPenaltyRule2","applyMaskPenaltyRule3","applyMaskPenaltyRule4","content","DEFAULT_BYTE_MODE_ENCODING","hasEncodingHint","CHARACTER_SET","mode","chooseMode","headerBits","BYTE","eci","appendECI","appendModeInfo","dataBits","appendBytes","QR_VERSION","bitsNeeded","calculateBitsNeeded","willFit","recommendVersion","headerAndDataBits","numLetters","appendLengthInfo","numDataBytes","getTotalECCodewords","terminateBits","finalBits","interleaveWithECBytes","getNumBlocks","qrCode","setECLevel","setMode","setVersion","maskPattern","chooseMaskPattern","setMaskPattern","buildMatrix","setMatrix","provisionalBitsNeeded","provisionalVersion","chooseVersion","getCharacterCountBits","getAlphanumericCode","ALPHANUMERIC_TABLE","isOnlyDoubleByteKanji","KANJI","hasNumeric","hasAlphanumeric","isDigit","ALPHANUMERIC","NUMERIC","byte1","minPenalty","bestMaskPattern","NUM_MASK_PATTERNS","penalty","numInputBits","versionNum","capacity","numBitsInLastByte","numPaddingBytes","getNumDataBytesAndNumECBytesForBlockID","numTotalBytes","numRSBlocks","blockID","numDataBytesInBlock","numECBytesInBlock","numRsBlocksInGroup2","numRsBlocksInGroup1","numTotalBytesInGroup1","numTotalBytesInGroup2","numDataBytesInGroup1","numDataBytesInGroup2","numEcBytesInGroup1","numEcBytesInGroup2","dataBytesOffset","maxNumDataBytes","maxNumEcBytes","blocks","numEcBytesInBlock","dataBytes","ecBytes","generateECBytes","blocks_1","getDataBytes","blocks_2","getErrorCorrectionBytes","toEncode","appendNumericBytes","appendAlphanumericBytes","append8BitBytes","appendKanjiBytes","getDigit","singleCharacter","cn","num1","num2","num3","code1","code2","uee","length_2","subtracted","encoded","ECI","QRCode","getMode","getVersion","getMaskPattern","isValidMaskPattern","WriterException","Code39Reader_1","Code128Reader_1","RSS14Reader_1","ITFReader_1","MultiFormatUPCEANReader_1","MultiFormatOneDReader","readers","possibleFormats","POSSIBLE_FORMATS","useCode39CheckDigit","ASSUME_CODE_39_CHECK_DIGIT","EAN_8","CODE_39","CODE_128","ITF","RSS_14","__export","Exception_1","ArithmeticException","ReaderException_1","ReaderException","ReedSolomonException","Binarizer_1","Binarizer","BinaryBitmap","InvertedLuminanceSource_1","LuminanceSource_1","MultiFormatReader_1","MultiFormatReader","MultiFormatWriter_1","MultiFormatWriter","PlanarYUVLuminanceSource_1","PlanarYUVLuminanceSource","RGBLuminanceSource_1","RGBLuminanceSource","BitSource_1","DecoderResult_1","DefaultGridSampler","DetectorResult_1","GlobalHistogramBinarizer_1","GlobalHistogramBinarizer","GridSampler_1","GridSampler","GridSamplerInstance_1","HybridBinarizer","PerspectiveTransform_1","StringUtils_1","StringUtils","WhiteRectangleDetector_1","WhiteRectangleDetector","ReedSolomonDecoder_1","ReedSolomonEncoder","DataMatrixReader_1","QRCodeReader_1","QRCodeWriter_1","QRCodeWriter","ErrorCorrectionLevel_1","QRCodeDecoderErrorCorrectionLevel","Encoder_1","QRCodeEncoder","QRCodeEncoderQRCode","EAN13Reader_1","EAN13Reader","Code128Reader","ITFReader","Code39Reader","RSS14Reader","MultiFormatOneDReader_1","MultiformatReader","isarray","pathToRegexp","parse","tokensToFunction","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","escaped","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","token","segment","JSON","stringify","attachKeys","flags","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","EE","ondata","pause","ondrain","resume","_isStdio","onclose","didOnEnd","onerror","cleanup","ReadableState","EElistenerCount","debugUtil","debug","debuglog","StringDecoder","BufferList","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","_read","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","head","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","hasStrings","nb","tail","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nOrig","doRead","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onfinish","cleanedUp","pipeOnDrain","increasedAwaitDrain","dests","ev","wrap","paused","_fromList","emitErrorNT","readableDestroyed","writableDestroyed","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","_byte","utf8CheckExtraBytes","utf8CheckIncomplete","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","done","_this2","err2","objectAssign","hasOwn","pSlice","functionsHaveNames","pToString","arrbuf","DataView","assert","regex","func","truncate","something","rawname","fail","expected","operator","stackStartFunction","AssertionError","_deepEqual","memos","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","aIsArgs","isArguments","bIsArgs","ka","kb","sort","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","_tryBlock","userProvidedMessage","isUnexpectedException","generatedMessage","captureStackTrace","stack","fn_name","idx","next_line","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","getOwnPropertyDescriptors","descriptors","formatRegExp","f","objects","msg","noDeprecation","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","ctx","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","styles","recurseTimes","simple","formatPrimitive","visibleKeys","arrayToHash","formatError","output","braces","toUTCString","formatProperty","formatArray","prev","cur","numLinesEst","reduceToSingleString","desc","line","pad","NODE_ENV","PUBLIC_URL","NODE_DEBUG","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","promiseResolve","promiseReject","promise","defineProperties","custom","callbackify","callbackified","maybeCb","rej","adler","s1","s2","crcTable","table","makeTable","crc","canvas","tempCanvasElement","makeBufferFromCanvasImageData","imageData","getImageData","toGrayscaleBuffer","imageBuffer","grayscaleBuffer","gray","rotate","getTempCanvasElement","ownerDocument","angle","tempContext","angleRadians","DEGREE_TO_RADIANS","newWidth","ceil","abs","cos","sin","newHeight","translate","PI","binarizer","getLuminanceSource","newSource","createBinarizer","MINIMUM_DIMENSION","luminances","subWidth","BLOCK_SIZE_POWER","BLOCK_SIZE_MASK","subHeight","blackPoints","calculateBlackPoints","newMatrix","calculateThresholdForBlock","maxYOffset","BLOCK_SIZE","maxXOffset","yoffset","top_1","cap","xoffset","z","blackRow","average","thresholdBlock","threshold","stride","yy","xx","pixel","MIN_DYNAMIC_RANGE","averageNeighborBlackPoint","EMPTY","buckets","LUMINANCE_BUCKETS","initArrays","localLuminances","localBuckets","LUMINANCE_SHIFT","blackPoint","estimateBlackPoint","center","localLuminances_1","luminanceSize","numBuckets","maxBucketCount","firstPeak","firstPeakSize","secondPeak","secondPeakScore","distanceToBiggest","score","bestValley","bestValleyScore","fromFirst","LUMINANCE_BITS","FormatInformation","formatInfo","errorCorrectionLevel","dataMask","decodeFormatInformation","maskedFormatInfo1","maskedFormatInfo2","doDecodeFormatInformation","FORMAT_INFO_MASK_QR","bestFormatInfo","FORMAT_INFO_DECODE_LOOKUP","decodeInfo","targetInfo","getErrorCorrectionLevel","getDataMask","QRCodeDecoderMetaData","mirrored","isMirrored","bottomLeft","guessEncoding","canBeISO88591","canBeShiftJIS","canBeUTF8","utf8BytesLeft","utf2BytesChars","utf3BytesChars","utf4BytesChars","sjisBytesLeft","sjisKatakanaChars","sjisCurKatakanaWordLength","sjisCurDoubleBytesWordLength","sjisMaxKatakanaWordLength","sjisMaxDoubleBytesWordLength","isoHighOther","utf8bom","ASSUME_SHIFT_JIS","SHIFT_JIS","ISO88591","PLATFORM_DEFAULT_ENCODING","GB2312","EUC_JP","ModeValues","Mode","characterCountBitsForVersions","TERMINATOR","STRUCTURED_APPEND","FNC1_FIRST_POSITION","FNC1_SECOND_POSITION","HANZI","sampleGrid","dimensionX","dimensionY","p1ToX","p1ToY","p2ToX","p2ToY","p3ToX","p3ToY","p4ToX","p4ToY","p1FromX","p1FromY","p2FromX","p2FromY","p3FromX","p3FromY","p4FromX","p4FromY","sampleGridWithTransform","iValue","checkAndNudgePoints","aioobe","nudged","initSize","INIT_SIZE","halfsize","leftInit","rightInit","upInit","downInit","down","sizeExceeded","aBlackPointFoundOnBorder","atLeastOneBlackPointFoundOnBorder","atLeastOneBlackPointFoundOnRight","atLeastOneBlackPointFoundOnBottom","atLeastOneBlackPointFoundOnLeft","atLeastOneBlackPointFoundOnTop","rightBorderNotWhite","containsBlackPoint","bottomBorderNotWhite","leftBorderNotWhite","topBorderNotWhite","maxSize","getBlackPointOnSegment","centerEdges","dist","xStep","yStep","yi","yj","zi","zj","xi","xj","ti","tj","CORR","fixed","horizontal","cachedGenerators","buildGenerator","lastGenerator","nextGenerator","infoCoefficients","info","numZeroCoefficients","MaskUtil","applyMaskPenaltyRule1Internal","getArray","arrayY","N2","numPenalties","isWhiteHorizontal","isWhiteVertical","N3","col","numDarkCells","numTotalCells","N4","getDataMaskBit","intermediate","isHorizontal","iLimit","jLimit","numSameBitCells","prevBit","N1","usingCheckDigit","extendedMode","decodeRowResult","theCounters","decodedChar","lastStart","findAsteriskPattern","toNarrowWidePattern","patternToChar","theCounters_1","lastPatternSize","theCounters_2","ALPHABET_STRING","decodeExtended","ASTERISK_ENCODING","copyWithin","wideCounters","maxNarrowCounter","minCounter","counters_1","totalWideCountersWidth","CHARACTER_ENCODINGS","decoded","findStartPattern","startCode","CODE_START_A","CODE_START_C","CODE_PATTERNS","decodeCode","codeSet","convertFNC1","ASSUME_GS1","startPatternInfo","currentRawCodesIndex","rawCodes","CODE_CODE_A","CODE_START_B","CODE_CODE_B","CODE_CODE_C","isNextShifted","lastCode","checksumTotal","multiplier","lastCharacterWasPrintable","upperMode","shiftUpperMode","CODE_STOP","previous","CODE_FNC_1","CODE_FNC_2","CODE_FNC_3","CODE_FNC_4_A","CODE_SHIFT","CODE_FNC_4_B","resultLength","rawCodesSize","AbstractRSSReader_1","Pair_1","FinderPattern_1","DataCharacter_1","RSSUtils_1","possibleLeftPairs","possibleRightPairs","leftPair","decodePair","addOrTally","rightPair","_b","_c","constructResult","possiblePairs","pair","possiblePairs_1","incrementCount","symbolValue","checkDigit","leftPoints","getFinderPattern","rightPoints","checkValue","getChecksumPortion","targetCheckValue","startEnd","findFinderPattern","parseFoundFinderPattern","outside","decodeDataCharacter","inside","outsideChar","getDataCharacterCounters","getStartEnd","numModules","elementWidth","oddCounts","getOddCounts","evenCounts","getEvenCounts","oddRoundingErrors","getOddRoundingErrors","evenRoundingErrors","getEvenRoundingErrors","adjustOddEvenCounts","oddSum","oddChecksumPortion","evenChecksumPortion","evenSum","checksumPortion","evenWidest","oddWidest","OUTSIDE_ODD_WIDEST","vOdd","getRSSvalue","vEven","tEven","OUTSIDE_EVEN_TOTAL_SUBSET","gSum","OUTSIDE_GSUM","INSIDE_ODD_WIDEST","tOdd","INSIDE_ODD_TOTAL_SUBSET","INSIDE_GSUM","rightFinderPattern","getDecodeFinderCounters","isFinderPattern","firstIsBlack","firstElementStart","firstCounter","parseFinderValue","FINDER_PATTERNS","incrementOdd","decrementOdd","incrementEven","decrementEven","mismatch","oddParityBad","evenParityBad","increment","decrement","DataCharacter","narrowLineWidth","decodeStart","allowedLengths","ALLOWED_LENGTHS","DEFAULT_ALLOWED_LENGTHS","lengthOK","maxAllowedLength","allowedLengths_1","payloadStart","payloadEnd","counterDigitPair","counterBlack","counterWhite","twoK","counterDigit","skipWhiteSpace","startPattern","START_PATTERN","validateQuietZone","quietCount","endPattern","END_PATTERN_REVERSED","PATTERNS","W","N","UPCEANReader_1","decodeMiddleCounters","lgPatternFound","determineFirstDigit","counters_2","FIRST_DIGIT_ENCODINGS","setHints","decodeInternal","decodeWithState","formats","addOneDReader","some","UPC_E","CODABAR","CODE_93","RSS_EXPANDED","ex","contents","quietZone","QUIET_ZONE_SIZE","ERROR_CORRECTION","MARGIN","renderResult","input","inputWidth","inputHeight","qrWidth","qrHeight","outputWidth","outputHeight","multiple","leftPadding","topPadding","inputY","outputY","inputX","outputX","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","__esModule","_react2","_interopRequireDefault","_implementation2","createContext","ReactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","TYPE_STATICS","getStatics","isMemo","ForwardRef","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","for","u","aa","ba","A","B","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","F","G","isReactComponent","forceUpdate","isPureReactComponent","I","J","K","__self","__source","_owner","O","P","keyPrefix","U","S","T","=",":","escape","ea","fa","V","da","X","toArray","only","createRef","PureComponent","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","_context","forwardRef","lazy","_ctor","_status","_result","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","onError","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","va","wa","currentTarget","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","Fa","Ga","Ha","parentNode","tag","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","ab","bb","db","eb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","returnValue","ib","eventPool","jb","destructor","hb","getPooled","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","extend","lb","mb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","keyCode","vb","detail","wb","zb","locale","which","xb","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","datetime","datetime-local","email","month","password","range","tel","week","Mb","Nb","correspondingUseElement","nodeType","Ob","Pb","Rb","_valueTracker","setValue","stopTracking","Qb","Sb","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","activeElement","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","detachEvent","Kc","Lc","attachEvent","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","view","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","pageX","pageY","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","defaultView","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","child","sibling","gd","id","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","charCode","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","body","Kd","firstChild","Ld","node","nextSibling","Nd","HTMLIFrameElement","contentWindow","Od","contentEditable","Qd","focusedElem","selectionRange","Md","contains","compareDocumentPosition","documentElement","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","scrollLeft","scrollTop","focus","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","ie","je","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","br","embed","hr","keygen","link","meta","param","track","wbr","qe","is","se","blur","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Set","Fe","Ge","He","Ie","Je","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","payload","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","zf","Af","_stringRef","Bf","Cf","Df","Ef","Ff","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","qg","lastRenderedState","eagerReducer","eagerState","rg","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","Qg","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","hidden","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","kh","lh","mh","nh","oh","onclick","ph","WeakSet","qh","rh","sh","th","vh","wh","xh","yh","insertBefore","_reactRootContainer","zh","wasMultiple","Ce","display","uh","Xh","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","createTextNode","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","unstable_now","ui","vi","wi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","_react","_propTypes2","_gud2","MAX_SIGNED_31_BIT_INT","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","_Component","_temp","handlers","newValue","changedBits","createEventEmitter","nextProps","oldValue","_Component2","_temp2","_len2","_key2","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Lazy","Memo","Portal","Profiler","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","QR","png","vector","fn_noop","BITMAP_OPTIONS","parse_url","ec_level","margin","customize","VECTOR_OPTIONS","get_options","force_type","defaults","svg_object","bitmap","imageSync","Boolean","svgObject","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","messagePrefix","onGlobalMessage","installPostMessageImplementation","channel","installMessageChannelImplementation","script","onreadystatechange","installReadyStateChangeImplementation","task","config","localStorage","calculateEC","_deepCopy","EC_LEVELS","getTemplate","data1","data_len","data10","data27","fillTemplate","template","ec_len","num_template","level","pushBits","ALPHANUM","encode_numeric","encode_alphanum","path_res","encode_url","encode_8bit","EXP_TABLE","LOG_TABLE","POLYNOMIALS","generatorPolynomial","log_k","zeros","fillFinders","fillAlignAndTiming","fillStub","fillReserved","FORMATS","fillData","MASK_FUNCTIONS","mask_fn","put","calculatePenalty","numDark","bestMask","cell","zlib","crc32","PNG_HEAD","PNG_IHDR","PNG_IDAT","PNG_IEND","IHDR","IDAT","deflateSync","kRangeErrorMessage","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","bkeys","bk","bkey","codes","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_VERSION_ERROR","ckeys","ck","ckey","zlibBuffer","engine","buffers","nread","onEnd","zlibBufferSync","flushFlag","_finishFlushFlag","_processChunk","Deflate","Zlib","DEFLATE","Inflate","INFLATE","Gzip","GZIP","Gunzip","GUNZIP","DeflateRaw","DEFLATERAW","InflateRaw","INFLATERAW","Unzip","UNZIP","isValidFlushFlag","flag","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","_opts","_chunkSize","chunkSize","finishFlush","_flushFlag","windowBits","memLevel","strategy","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","dictionary","_handle","_hadError","errno","_close","_buffer","_offset","_level","_strategy","emitCloseNT","freeze","createDeflate","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflate","gzip","gzipSync","deflateRaw","deflateRawSync","unzip","unzipSync","inflate","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","ws","availInBefore","availOutBefore","inOff","async","writeSync","req","availInAfter","availOutAfter","have","newReq","Zstream","zlib_deflate","zlib_inflate","constants","NONE","init_done","write_in_progress","pending_close","gzip_id_bytes_read","deflateEnd","strm","inflateEnd","in_off","in_len","out_off","out_len","avail_in","next_in","avail_out","next_out","_process","_checkError","_afterSync","_after","next_expected_header_byte","inflateSetDictionary","_error","_init","_setDictionary","_reset","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset","total_in","total_out","data_type","configuration_table","utils","trees","adler32","Z_UNKNOWN","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","L_CODES","LITERALS","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","rank","flush_pending","pending","pending_buf","pending_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","ins_h","hash_shift","hash_mask","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","DeflateState","status","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","deflateResetKeep","_tr_init","max_block_size","max_start","deflateInit","deflateSetHeader","old_flush","beg","hcrc","extra","comment","os","header","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","Z_BINARY","Z_TEXT","STORED_BLOCK","STATIC_TREES","DYN_TREES","LENGTH_CODES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lx","build_tree","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","static_init_done","stored_len","copy_block","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","bi_flush","2","1","0","-1","-2","-3","-4","-5","-6","inflate_fast","inflate_table","CODES","LENS","DISTS","Z_TREES","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","DEF_WBITS","zswap32","InflateState","havedict","dmax","wbits","wsize","whave","wnext","hold","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","work","lendyn","distdyn","sane","back","was","inflateResetKeep","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","inflateInit","_in","_out","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","here","hbuf","inf_leave","xflags","extra_len","inflateGetHeader","inflateInfo","s_window","lcode","dcode","lmask","dmask","op","dolen","dodist","lbase","lext","dbase","dext","lens_index","table_index","incr","low","root","curr","drop","used","huff","base_index","MAXBITS","offs","extra_index","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","arch","crc_table","update","b0","b1","b2","b3","matrix2path","filled","isDark","plot","row0","col0","pushSVGPath","subpath","XY","eps","pdf","xref","BrowserCodeReader_1","BrowserQRCodeReader","extendStatics","fixStack","_newTarget","fixProto","customErrorFactory","parent","factory","Float","BitMatrixParser_1","DataBlock_1","DecodedBitStreamParser_1","Decoder","rsDecoder","decodeBooleanArray","parser","decodeBitMatrixParser","remask","setMirror","readVersion","readFormatInformation","mirror","codewords","readCodewords","dataBlocks","getDataBlocks","totalBytes","dataBlocks_1","dataBlock","getNumDataCodewords","resultBytes","resultOffset","dataBlocks_2","codewordBytes","getCodewords","numDataCodewords","correctErrors","codewordsInts","DataMask_1","BitMatrixParser","parsedFormatInfo","formatInfoBits1","copyBit","formatInfoBits2","jMin","parsedVersion","ijMin","theParsedVersion","isMirror","unmaskBitMatrix","functionPattern","readingUp","currentByte","bitsRead","ECBlocks","ecCodewordsPerBlock","ecBlocks_1","ECB","dataCodewords","DataMaskValues","DataMask","isMasked","DATA_MASK_000","DATA_MASK_001","DATA_MASK_010","DATA_MASK_011","DATA_MASK_100","DATA_MASK_101","DATA_MASK_110","DATA_MASK_111","DataBlock","rawCodewords","totalBlocks","ecBlockArray","ecBlockArray_1","numResultBlocks","ecBlockArray_2","numBlockCodewords","shorterBlocksTotalCodewords","longerBlocksStartAt","shorterBlocksNumDataCodewords","rawCodewordsOffset","DecodedBitStreamParser","symbolSequence","parityData","currentCharacterSetECI","fc1InEffect","modeBits","parseECIValue","subset","countHanzi","GB2312_SUBSET","decodeHanziSegment","decodeNumericSegment","decodeAlphanumericSegment","decodeByteSegment","decodeKanjiSegment","iae","twoBytes","assembledTwoBytes","readBytes","toAlphaNumericChar","ALPHANUMERIC_CHARS","nextTwoCharsBits","threeDigitsBits","twoDigitsBits","digitBits","FinderPatternFinder_1","AlignmentPatternFinder_1","Detector","getImage","getResultPointCallback","find","processFinderPatternInfo","topLeft","getTopLeft","topRight","getTopRight","getBottomLeft","calculateModuleSize","computeDimension","modulesBetweenFPCenters","alignmentPattern","bottomRightX","bottomRightY","correctionToTopLeft","estAlignmentX","estAlignmentY","findAlignmentInRegion","createTransform","sourceBottomRightX","sourceBottomRightY","dimMinusThree","tltrCentersDimension","tlblCentersDimension","calculateModuleSizeOneWay","otherPattern","moduleSizeEst1","sizeOfBlackWhiteBlackRunBothWays","moduleSizeEst2","fromX","fromY","toX","toY","sizeOfBlackWhiteBlackRun","otherToX","otherToY","steep","dx","dy","xstep","ystep","xLimit","realX","realY","overallEstModuleSize","allowanceFactor","allowance","alignmentAreaLeftX","alignmentAreaRightX","alignmentAreaTopY","alignmentAreaBottomY","FinderPatternInfo_1","FinderPatternFinder","possibleCenters","crossCheckStateCount","getPossibleCenters","pureBarcode","maxI","maxJ","iSkip","MAX_MODULES","MIN_SKIP","stateCount","currentState","foundPatternCross","handlePossibleCenter","hasSkipped","haveMultiplyConfirmedCenters","rowSkip","findRowSkip","patternInfo","selectBestPatterns","centerFromEnd","totalModuleSize","maxVariance","getCrossCheckStateCount","crossCheckDiagonal","startI","centerJ","maxCount","originalStateCountTotal","stateCountTotal","crossCheckVertical","crossCheckHorizontal","startJ","centerI","estimatedModuleSize","aboutEquals","combineEstimate","point","firstConfirmedCenter","CENTER_QUORUM","confirmedCount","getEstimatedModuleSize","totalDeviation","startSize","square","stdDev","center1","center2","dA","dB","possibleCenters_1","FinderPattern","posX","posY","moduleSizeDiff","newModuleSize","combinedCount","FinderPatternInfo","patternCenters","AlignmentPattern_1","AlignmentPatternFinder","startX","startY","middleI","iGen","confirmed","AlignmentPattern","BrowserDatamatrixCodeReader","dataBlocksCount","mappingBitMatrix","extractDataRegion","readMappingMatrix","numRows","numColumns","getVersionForDimensions","Int8Array","column","corner1Read","corner2Read","corner3Read","corner4Read","readUtah","readCorner4","readCorner3","readCorner2","readCorner1","readModule","symbolSizeRows","getSymbolSizeRows","symbolSizeColumns","getSymbolSizeColumns","dataRegionSizeRows","getDataRegionSizeRows","dataRegionSizeColumns","getDataRegionSizeColumns","numDataRegionsRow","numDataRegionsColumn","sizeDataRegionRow","sizeDataRegionColumn","bitMatrixWithoutAlignment","dataRegionRow","dataRegionRowOffset","dataRegionColumn","dataRegionColumnOffset","readRowOffset","writeRowOffset","readColumnOffset","writeColumnOffset","ecBlocks1","ecBlocks2","getECCodewords","buildVersions","longerBlocksNumDataCodewords","specialVersion","numLongerBlocks","jOffset","__1","resultTrailer","ASCII_ENCODE","decodeAsciiSegment","C40_ENCODE","decodeC40Segment","TEXT_ENCODE","decodeTextSegment","ANSIX12_ENCODE","decodeAnsiX12Segment","EDIFACT_ENCODE","decodeEdifactSegment","BASE256_ENCODE","decodeBase256Segment","PAD_ENCODE","upperShift","oneByte","cValues","parseTwoBytes","cValue","C40_BASIC_SET_CHARS","c40char","C40_SHIFT2_SET_CHARS","TEXT_BASIC_SET_CHARS","textChar","TEXT_SHIFT2_SET_CHARS","TEXT_SHIFT3_SET_CHARS","fullBitValue","edifactValue","codewordPosition","d1","unrandomize255State","randomizedBase256Codeword","base256CodewordPosition","tempVariable","rectangleDetector","cornerPoints","pointD","transitionsBetween","ResultPointsAndTransitions","resultPointsAndTransitionsComparator","lSideOne","lSideTwo","pointCount","getFrom","getTo","maybeTopLeft","maybeBottomRight","corners","bottomRight","correctedTopRight","dimensionTop","getTransitions","dimensionRight","correctTopRightRectangular","correctTopRight","dimensionCorrected","corr","norm","c1","c2","isValid","isBlack","o1","o2","BrowserQRCodeSvgWriter","writeToDom","containerElement","querySelector","svgElement","createSVGElement","svgRectElement","createSvgRectElement","SVG_NS","rect","ByteMatrix","setNumber","setBoolean","aByte","bytesY","otherBytesY","MatrixUtil","clearMatrix","embedBasicPatterns","embedTypeInfo","maybeEmbedVersionInfo","embedDataBits","embedPositionDetectionPatternsAndSeparators","embedDarkDotAtLeftBottomCorner","maybeEmbedPositionAdjustmentPatterns","embedTimingPatterns","typeInfoBits","makeTypeInfoBits","coordinates","TYPE_INFO_COORDINATES","versionInfoBits","makeVersionInfoBits","bitIndex","direction","isEmpty","findMSBSet","calculateBCHCode","msbSetInPoly","typeInfo","bchCode","TYPE_INFO_POLY","maskBits","TYPE_INFO_MASK_PATTERN","VERSION_INFO_POLY","embedHorizontalSeparationPattern","xStart","yStart","embedVerticalSeparationPattern","embedPositionAdjustmentPattern","patternY","POSITION_ADJUSTMENT_PATTERN","embedPositionDetectionPattern","POSITION_DETECTION_PATTERN","pdpWidth","hspWidth","POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE","BlockPair","errorCorrectionBytes","BrowserBarcodeReader","AbstractRSSReader","decodeFinderCounters","dataCharacterCounters","finderPatterns","errors","biggestError","firstTwoSum","ratio","MIN_FINDER_PATTERN_RATIO","MAX_FINDER_PATTERN_RATIO","maxCounter","Pair","finderPattern","RSSUtils","maxWidth","noNarrow","widths_1","narrowMask","elements","bar","elmWidth","subVal","combins","lessVal","mxwElement","maxDenom","minDenom","EAN8Reader_1","MultiFormatUPCEANReader","UPCEANExtension5Support_1","UPCEANExtension2Support_1","UPCEANExtensionSupport","extensionStartRange","EXTENSION_START_PATTERN","UPCEANExtension5Support","CHECK_DIGIT_ENCODINGS","extensionData","parseExtensionString","determineCheckDigit","extensionChecksum","raw","parseExtension5String","SUGGESTED_PRICE","currency","rawAmount","hundredths","UPCEANExtension2Support","checkParity","ISSUE_NUMBER","EAN8Reader","BrowserMultiFormatReader","writer","yuvData","dataWidth","dataHeight","reverseHorizontal","inputOffset","outputOffset","renderThumbnail","THUMBNAIL_SCALE_FACTOR","pixels","yuv","getThumbnailWidth","getThumbnailHeight","rowStart","BYTES_PER_ELEMENT","luminancesUint8Array","g2"],"mappings":"sFAGAA,EAAAC,QAAmBC,EAAQ,mCCD3B,IAAAC,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAC,EAEA,SAAAC,GAGA,SAAAD,IACA,cAAAC,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAiB,EAAAC,GAMAD,EAPA,CARkBlB,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAJ,gCChDA,IAAAjB,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAM,EAEA,SAAAJ,GAGA,SAAAI,IACA,cAAAJ,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAsB,EAAAJ,GAMAI,EAPA,CARkBvB,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAC,gCClBA,IAAAC,EA3BAlB,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IA4BA,SAAAO,GAEAA,IAAA,iBAGAA,IAAA,qBAGAA,IAAA,qBAGAA,IAAA,qBAGAA,IAAA,uBAGAA,IAAA,6BAGAA,IAAA,iBAGAA,IAAA,mBAGAA,IAAA,aAGAA,IAAA,uBAGAA,IAAA,sBAGAA,IAAA,sBAGAA,IAAA,oBAGAA,IAAA,gCAGAA,IAAA,kBAGAA,IAAA,kBAGAA,IAAA,0CAlDA,CAmDCA,MAAA,KAEDzB,EAAAuB,QAAAE,gCCvFe,SAAAC,IAef,OAdAA,EAAAnB,OAAAoB,QAAA,SAAAC,GACA,QAAAC,EAAA,EAAmBA,EAAAP,UAAAQ,OAAsBD,IAAA,CACzC,IAAAE,EAAAT,UAAAO,GAEA,QAAAG,KAAAD,EACAxB,OAAAQ,UAAAH,eAAAqB,KAAAF,EAAAC,KACAJ,EAAAI,GAAAD,EAAAC,IAKA,OAAAJ,IAGAP,MAAAlB,KAAAmB,WAfArB,EAAAI,EAAA6B,EAAA,sBAAAR,kCCiBAnB,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiB,EAAkBlC,EAAQ,IAE1BmC,EAAcnC,EAAQ,KAStBoC,EAEA,WACA,SAAAA,EAAAC,EAEAC,GAGApC,KAAAmC,IACAnC,KAAAoC,IAmGA,OAhGAF,EAAAtB,UAAAyB,KAAA,WACA,OAAArC,KAAAmC,GAGAD,EAAAtB,UAAA0B,KAAA,WACA,OAAAtC,KAAAoC,GAKAF,EAAAtB,UAAA2B,OAAA,SAAAC,GACA,GAAAA,aAAAN,EAAA,CACA,IAAAO,EAAAD,EACA,OAAAxC,KAAAmC,IAAAM,EAAAN,GAAAnC,KAAAoC,IAAAK,EAAAL,EAGA,UAKAF,EAAAtB,UAAA8B,SAAA,WACA,UAAAT,EAAAb,QAAAuB,eAAA3C,KAAAmC,GAAAF,EAAAb,QAAAuB,eAAA3C,KAAAoC,IAKAF,EAAAtB,UAAAgC,SAAA,WACA,UAAA5C,KAAAmC,EAAA,IAAAnC,KAAAoC,EAAA,KAUAF,EAAAW,kBAAA,SAAAC,GAEA,IAGAC,EACAC,EACAC,EALAC,EAAAlD,KAAAmD,SAAAL,EAAA,GAAAA,EAAA,IACAM,EAAApD,KAAAmD,SAAAL,EAAA,GAAAA,EAAA,IACAO,EAAArD,KAAAmD,SAAAL,EAAA,GAAAA,EAAA,IAuBA,GAlBAM,GAAAF,GAAAE,GAAAC,GACAL,EAAAF,EAAA,GACAC,EAAAD,EAAA,GACAG,EAAAH,EAAA,IACKO,GAAAD,GAAAC,GAAAH,GACLF,EAAAF,EAAA,GACAC,EAAAD,EAAA,GACAG,EAAAH,EAAA,KAEAE,EAAAF,EAAA,GACAC,EAAAD,EAAA,GACAG,EAAAH,EAAA,IAOA9C,KAAAsD,cAAAP,EAAAC,EAAAC,GAAA,GACA,IAAAM,EAAAR,EACAA,EAAAE,EACAA,EAAAM,EAGAT,EAAA,GAAAC,EACAD,EAAA,GAAAE,EACAF,EAAA,GAAAG,GASAf,EAAAiB,SAAA,SAAAK,EAAAC,GACA,OAAAzB,EAAAZ,QAAA+B,SAAAK,EAAArB,EAAAqB,EAAApB,EAAAqB,EAAAtB,EAAAsB,EAAArB,IAOAF,EAAAoB,cAAA,SAAAP,EAAAC,EAAAC,GACA,IAAAS,EAAAV,EAAAb,EACAwB,EAAAX,EAAAZ,EACA,OAAAa,EAAAd,EAAAuB,IAAAX,EAAAX,EAAAuB,IAAAV,EAAAb,EAAAuB,IAAAZ,EAAAZ,EAAAuB,IAGAxB,EA1GA,GA6GArC,EAAAuB,QAAAc,gCChHA,IAAA0B,EAfAxD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAgBA,SAAA6C,GAIAA,IAAA,iBAQAA,IAAA,+BAQAA,IAAA,uCAQAA,IAAA,2BAOAA,IAAA,iCAOAA,IAAA,qCAQAA,IAAA,2DASAA,IAAA,2BASAA,IAAA,uDAQAA,IAAA,2DAWAA,IAAA,oDAvFA,CA0GCA,MAAA,KAED/D,EAAAuB,QAAAwC,iCC9IA,SAAAC,GAUA,IAAAC,EAAahE,EAAQ,KAErBiE,EAAcjE,EAAQ,KAEtBkE,EAAclE,EAAQ,IAsDtB,SAAAmE,IACA,OAAAC,EAAAC,oBAAA,sBAGA,SAAAC,EAAAC,EAAA1C,GACA,GAAAsC,IAAAtC,EACA,UAAA2C,WAAA,8BAgBA,OAbAJ,EAAAC,qBAEAE,EAAA,IAAAE,WAAA5C,IACArB,UAAA4D,EAAAtD,WAGA,OAAAyD,IACAA,EAAA,IAAAH,EAAAvC,IAGA0C,EAAA1C,UAGA0C,EAaA,SAAAH,EAAAM,EAAAC,EAAA9C,GACA,IAAAuC,EAAAC,uBAAAnE,gBAAAkE,GACA,WAAAA,EAAAM,EAAAC,EAAA9C,GAIA,qBAAA6C,EAAA,CACA,qBAAAC,EACA,UAAAC,MAAA,qEAGA,OAAAC,EAAA3E,KAAAwE,GAGA,OAAAI,EAAA5E,KAAAwE,EAAAC,EAAA9C,GAWA,SAAAiD,EAAAP,EAAAtD,EAAA0D,EAAA9C,GACA,qBAAAZ,EACA,UAAA8D,UAAA,yCAGA,2BAAAC,aAAA/D,aAAA+D,YAsIA,SAAAT,EAAAU,EAAAC,EAAArD,GAGA,GAFAoD,EAAAE,WAEAD,EAAA,GAAAD,EAAAE,WAAAD,EACA,UAAAV,WAAA,6BAGA,GAAAS,EAAAE,WAAAD,GAAArD,GAAA,GACA,UAAA2C,WAAA,6BAIAS,OADAG,IAAAF,QAAAE,IAAAvD,EACA,IAAA4C,WAAAQ,QACGG,IAAAvD,EACH,IAAA4C,WAAAQ,EAAAC,GAEA,IAAAT,WAAAQ,EAAAC,EAAArD,GAGAuC,EAAAC,qBAEAE,EAAAU,GACAzE,UAAA4D,EAAAtD,UAGAyD,EAAAc,EAAAd,EAAAU,GAGA,OAAAV,EAjKAe,CAAAf,EAAAtD,EAAA0D,EAAA9C,GAGA,kBAAAZ,EAgGA,SAAAsD,EAAAgB,EAAAC,GACA,kBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAApB,EAAAqB,WAAAD,GACA,UAAAT,UAAA,8CAGA,IAAAlD,EAAA,EAAAsD,EAAAI,EAAAC,GAEAE,GADAnB,EAAAD,EAAAC,EAAA1C,IACA8D,MAAAJ,EAAAC,GAEAE,IAAA7D,IAIA0C,IAAAqB,MAAA,EAAAF,IAGA,OAAAnB,EAnHAsB,CAAAtB,EAAAtD,EAAA0D,GAgKA,SAAAJ,EAAAuB,GACA,GAAA1B,EAAA2B,SAAAD,GAAA,CACA,IAAAE,EAAA,EAAAC,EAAAH,EAAAjE,QAGA,YAFA0C,EAAAD,EAAAC,EAAAyB,IAEAnE,OACA0C,GAGAuB,EAAAI,KAAA3B,EAAA,IAAAyB,GACAzB,GAGA,GAAAuB,EAAA,CACA,wBAAAd,aAAAc,EAAAK,kBAAAnB,aAAA,WAAAc,EACA,wBAAAA,EAAAjE,SAigDAuE,EAjgDAN,EAAAjE,UAkgDAuE,EAjgDA9B,EAAAC,EAAA,GAGAc,EAAAd,EAAAuB,GAGA,cAAAA,EAAAO,MAAAnC,EAAA4B,EAAAQ,MACA,OAAAjB,EAAAd,EAAAuB,EAAAQ,MAy/CA,IAAAF,EAr/CA,UAAArB,UAAA,sFAxLAwB,CAAAhC,EAAAtD,GA6BA,SAAAuF,EAAAC,GACA,qBAAAA,EACA,UAAA1B,UAAA,oCACG,GAAA0B,EAAA,EACH,UAAAjC,WAAA,wCA8BA,SAAAK,EAAAN,EAAAkC,GAIA,GAHAD,EAAAC,GACAlC,EAAAD,EAAAC,EAAAkC,EAAA,MAAAR,EAAAQ,KAEArC,EAAAC,oBACA,QAAAzC,EAAA,EAAmBA,EAAA6E,IAAU7E,EAC7B2C,EAAA3C,GAAA,EAIA,OAAA2C,EA0CA,SAAAc,EAAAd,EAAAU,GACA,IAAApD,EAAAoD,EAAApD,OAAA,MAAAoE,EAAAhB,EAAApD,QACA0C,EAAAD,EAAAC,EAAA1C,GAEA,QAAAD,EAAA,EAAiBA,EAAAC,EAAYD,GAAA,EAC7B2C,EAAA3C,GAAA,IAAAqD,EAAArD,GAGA,OAAA2C,EAgEA,SAAA0B,EAAApE,GAGA,GAAAA,GAAAsC,IACA,UAAAK,WAAA,0DAAAL,IAAArB,SAAA,cAGA,SAAAjB,EA8FA,SAAAsD,EAAAI,EAAAC,GACA,GAAApB,EAAA2B,SAAAR,GACA,OAAAA,EAAA1D,OAGA,wBAAAmD,aAAA,oBAAAA,YAAA0B,SAAA1B,YAAA0B,OAAAnB,iBAAAP,aACA,OAAAO,EAAAJ,WAGA,kBAAAI,IACAA,EAAA,GAAAA,GAGA,IAAAS,EAAAT,EAAA1D,OACA,OAAAmE,EAAA,SAIA,IAFA,IAAAW,GAAA,IAGA,OAAAnB,GACA,YACA,aACA,aACA,OAAAQ,EAEA,WACA,YACA,UAAAZ,EACA,OAAAwB,EAAArB,GAAA1D,OAEA,WACA,YACA,cACA,eACA,SAAAmE,EAEA,UACA,OAAAA,IAAA,EAEA,aACA,OAAAa,EAAAtB,GAAA1D,OAEA,QACA,GAAA8E,EAAA,OAAAC,EAAArB,GAAA1D,OAEA2D,GAAA,GAAAA,GAAAsB,cACAH,GAAA,GAgFA,SAAAI,EAAA1G,EAAA2G,EAAAC,GACA,IAAArF,EAAAvB,EAAA2G,GACA3G,EAAA2G,GAAA3G,EAAA4G,GACA5G,EAAA4G,GAAArF,EAgJA,SAAAsF,EAAAf,EAAAC,EAAAlB,EAAAM,EAAA2B,GAEA,OAAAhB,EAAAtE,OAAA,SAqBA,GAnBA,kBAAAqD,GACAM,EAAAN,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAGAA,KAEAkC,MAAAlC,KAEAA,EAAAiC,EAAA,EAAAhB,EAAAtE,OAAA,GAIAqD,EAAA,IAAAA,EAAAiB,EAAAtE,OAAAqD,GAEAA,GAAAiB,EAAAtE,OAAA,CACA,GAAAsF,EAAA,SAAuBjC,EAAAiB,EAAAtE,OAAA,OACpB,GAAAqD,EAAA,GACH,IAAAiC,EAA4B,SAA5BjC,EAAA,EASA,GALA,kBAAAkB,IACAA,EAAAhC,EAAAU,KAAAsB,EAAAZ,IAIApB,EAAA2B,SAAAK,GAEA,WAAAA,EAAAvE,QACA,EAGAwF,EAAAlB,EAAAC,EAAAlB,EAAAM,EAAA2B,GACG,qBAAAf,EAGH,OAFAA,GAAA,IAEAhC,EAAAC,qBAAA,oBAAAI,WAAA3D,UAAAwG,QACAH,EACA1C,WAAA3D,UAAAwG,QAAAtF,KAAAmE,EAAAC,EAAAlB,GAEAT,WAAA3D,UAAAyG,YAAAvF,KAAAmE,EAAAC,EAAAlB,GAIAmC,EAAAlB,EAAA,CAAAC,GAAAlB,EAAAM,EAAA2B,GAGA,UAAApC,UAAA,wCAGA,SAAAsC,EAAAG,EAAApB,EAAAlB,EAAAM,EAAA2B,GACA,IA2BAvF,EA3BA6F,EAAA,EACAC,EAAAF,EAAA3F,OACA8F,EAAAvB,EAAAvE,OAEA,QAAAuD,IAAAI,IAGA,UAFAA,EAAAoC,OAAApC,GAAAsB,gBAEA,UAAAtB,GAAA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAgC,EAAA3F,OAAA,GAAAuE,EAAAvE,OAAA,EACA,SAGA4F,EAAA,EACAC,GAAA,EACAC,GAAA,EACAzC,GAAA,EAIA,SAAA2C,EAAAC,EAAAlG,GACA,WAAA6F,EACAK,EAAAlG,GAEAkG,EAAAC,aAAAnG,EAAA6F,GAMA,GAAAN,EAAA,CACA,IAAAa,GAAA,EAEA,IAAApG,EAAAsD,EAAwBtD,EAAA8F,EAAe9F,IACvC,GAAAiG,EAAAL,EAAA5F,KAAAiG,EAAAzB,GAAA,IAAA4B,EAAA,EAAApG,EAAAoG,IAEA,IADA,IAAAA,MAAApG,GACAA,EAAAoG,EAAA,IAAAL,EAAA,OAAAK,EAAAP,OAEA,IAAAO,IAAApG,KAAAoG,GACAA,GAAA,OAMA,IAFA9C,EAAAyC,EAAAD,IAAAxC,EAAAwC,EAAAC,GAEA/F,EAAAsD,EAAwBtD,GAAA,EAAQA,IAAA,CAGhC,IAFA,IAAAqG,GAAA,EAEAC,EAAA,EAAqBA,EAAAP,EAAeO,IACpC,GAAAL,EAAAL,EAAA5F,EAAAsG,KAAAL,EAAAzB,EAAA8B,GAAA,CACAD,GAAA,EACA,MAIA,GAAAA,EAAA,OAAArG,EAIA,SAeA,SAAAuG,EAAAL,EAAAvC,EAAA6C,EAAAvG,GACAuG,EAAAC,OAAAD,IAAA,EACA,IAAAE,EAAAR,EAAAjG,OAAAuG,EAEAvG,GAGAA,EAAAwG,OAAAxG,IAEAyG,IACAzG,EAAAyG,GALAzG,EAAAyG,EAUA,IAAAC,EAAAhD,EAAA1D,OACA,GAAA0G,EAAA,gBAAAxD,UAAA,sBAEAlD,EAAA0G,EAAA,IACA1G,EAAA0G,EAAA,GAGA,QAAA3G,EAAA,EAAiBA,EAAAC,IAAYD,EAAA,CAC7B,IAAA4G,EAAAC,SAAAlD,EAAAmD,OAAA,EAAA9G,EAAA,OACA,GAAAwF,MAAAoB,GAAA,OAAA5G,EACAkG,EAAAM,EAAAxG,GAAA4G,EAGA,OAAA5G,EAGA,SAAA+G,EAAAb,EAAAvC,EAAA6C,EAAAvG,GACA,OAAA+G,EAAAhC,EAAArB,EAAAuC,EAAAjG,OAAAuG,GAAAN,EAAAM,EAAAvG,GAGA,SAAAgH,EAAAf,EAAAvC,EAAA6C,EAAAvG,GACA,OAAA+G,EA26BA,SAAAE,GAGA,IAFA,IAAAC,EAAA,GAEAnH,EAAA,EAAiBA,EAAAkH,EAAAjH,SAAgBD,EAEjCmH,EAAAC,KAAA,IAAAF,EAAAG,WAAArH,IAGA,OAAAmH,EAn7BAG,CAAA3D,GAAAuC,EAAAM,EAAAvG,GAGA,SAAAsH,EAAArB,EAAAvC,EAAA6C,EAAAvG,GACA,OAAAgH,EAAAf,EAAAvC,EAAA6C,EAAAvG,GAGA,SAAAuH,EAAAtB,EAAAvC,EAAA6C,EAAAvG,GACA,OAAA+G,EAAA/B,EAAAtB,GAAAuC,EAAAM,EAAAvG,GAGA,SAAAwH,EAAAvB,EAAAvC,EAAA6C,EAAAvG,GACA,OAAA+G,EA06BA,SAAAE,EAAAQ,GAIA,IAHA,IAAAC,EAAAC,EAAAC,EACAV,EAAA,GAEAnH,EAAA,EAAiBA,EAAAkH,EAAAjH,WACjByH,GAAA,QADiC1H,EAEjC2H,EAAAT,EAAAG,WAAArH,GACA4H,EAAAD,GAAA,EACAE,EAAAF,EAAA,IACAR,EAAAC,KAAAS,GACAV,EAAAC,KAAAQ,GAGA,OAAAT,EAv7BAW,CAAAnE,EAAAuC,EAAAjG,OAAAuG,GAAAN,EAAAM,EAAAvG,GA+EA,SAAA8H,EAAA7B,EAAA8B,EAAAC,GACA,WAAAD,GAAAC,IAAA/B,EAAAjG,OACAmC,EAAA8F,cAAAhC,GAEA9D,EAAA8F,cAAAhC,EAAAlC,MAAAgE,EAAAC,IAIA,SAAAE,EAAAjC,EAAA8B,EAAAC,GACAA,EAAAG,KAAAC,IAAAnC,EAAAjG,OAAAgI,GAIA,IAHA,IAAAK,EAAA,GACAtI,EAAAgI,EAEAhI,EAAAiI,GAAA,CACA,IAKAM,EAAAC,EAAAC,EAAAC,EALAC,EAAAzC,EAAAlG,GACA4I,EAAA,KACAC,EAAAF,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAEA,GAAA3I,EAAA6I,GAAAZ,EAGA,OAAAY,GACA,OACAF,EAAA,MACAC,EAAAD,GAGA,MAEA,OAGA,YAFAJ,EAAArC,EAAAlG,EAAA,OAGA0I,GAAA,GAAAC,IAAA,KAAAJ,GAEA,MACAK,EAAAF,GAIA,MAEA,OACAH,EAAArC,EAAAlG,EAAA,GACAwI,EAAAtC,EAAAlG,EAAA,GAEA,WAAAuI,IAAA,WAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,GAEA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAIA,MAEA,OACAH,EAAArC,EAAAlG,EAAA,GACAwI,EAAAtC,EAAAlG,EAAA,GACAyI,EAAAvC,EAAAlG,EAAA,GAEA,WAAAuI,IAAA,WAAAC,IAAA,WAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,GAEA,OAAAC,EAAA,UACAE,EAAAF,GAOA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACAN,EAAAlB,KAAAwB,IAAA,eACAA,EAAA,WAAAA,GAGAN,EAAAlB,KAAAwB,GACA5I,GAAA6I,EAGA,OAQA,SAAAC,GACA,IAAA1E,EAAA0E,EAAA7I,OAEA,GAAAmE,GAAA2E,EACA,OAAA/C,OAAAgD,aAAAxJ,MAAAwG,OAAA8C,GAIA,IAAAR,EAAA,GACAtI,EAAA,EAEA,KAAAA,EAAAoE,GACAkE,GAAAtC,OAAAgD,aAAAxJ,MAAAwG,OAAA8C,EAAA9E,MAAAhE,KAAA+I,IAGA,OAAAT,EAvBAW,CAAAX,GA1gCAnK,EAAAqE,SACArE,EAAA+K,WAiUA,SAAAjJ,IACAA,OAEAA,EAAA,GAGA,OAAAuC,EAAA2G,OAAAlJ,IAtUA9B,EAAAiL,kBAAA,GA0BA5G,EAAAC,yBAAAe,IAAArB,EAAAM,oBAAAN,EAAAM,oBAOA,WACA,IACA,IAAAmD,EAAA,IAAA/C,WAAA,GAOA,OANA+C,EAAAhH,UAAA,CACAA,UAAAiE,WAAA3D,UACAmK,IAAA,WACA,YAGA,KAAAzD,EAAAyD,OACA,oBAAAzD,EAAA0D,UACA,IAAA1D,EAAA0D,SAAA,KAAA/F,WACG,MAAAgG,GACH,UApBAC,GAKArL,EAAAoE,eAuEAC,EAAAiH,SAAA,KAGAjH,EAAAkH,SAAA,SAAA9D,GAEA,OADAA,EAAAhH,UAAA4D,EAAAtD,UACA0G,GA4BApD,EAAAU,KAAA,SAAA7D,EAAA0D,EAAA9C,GACA,OAAAiD,EAAA,KAAA7D,EAAA0D,EAAA9C,IAGAuC,EAAAC,sBACAD,EAAAtD,UAAAN,UAAAiE,WAAA3D,UACAsD,EAAA5D,UAAAiE,WAEA,qBAAA8G,eAAAC,SAAApH,EAAAmH,OAAAC,WAAApH,GAEA9D,OAAAU,eAAAoD,EAAAmH,OAAAC,QAAA,CACAvK,MAAA,KACAwK,cAAA,KAmCArH,EAAA2G,MAAA,SAAAtE,EAAAiF,EAAAlG,GACA,OAvBA,SAAAjB,EAAAkC,EAAAiF,EAAAlG,GAGA,OAFAgB,EAAAC,GAEAA,GAAA,EACAnC,EAAAC,EAAAkC,QAGArB,IAAAsG,EAIA,kBAAAlG,EAAAlB,EAAAC,EAAAkC,GAAAiF,OAAAlG,GAAAlB,EAAAC,EAAAkC,GAAAiF,QAGApH,EAAAC,EAAAkC,GASAsE,CAAA,KAAAtE,EAAAiF,EAAAlG,IAoBApB,EAAAS,YAAA,SAAA4B,GACA,OAAA5B,EAAA,KAAA4B,IAOArC,EAAAuH,gBAAA,SAAAlF,GACA,OAAA5B,EAAA,KAAA4B,IAqHArC,EAAA2B,SAAA,SAAA1F,GACA,cAAAA,MAAAuL,YAGAxH,EAAAyH,QAAA,SAAAC,EAAAzL,GACA,IAAA+D,EAAA2B,SAAA+F,KAAA1H,EAAA2B,SAAA1F,GACA,UAAA0E,UAAA,6BAGA,GAAA+G,IAAAzL,EAAA,SAIA,IAHA,IAAAgC,EAAAyJ,EAAAjK,OACAS,EAAAjC,EAAAwB,OAEAD,EAAA,EAAAoE,EAAAgE,KAAAC,IAAA5H,EAAAC,GAAuCV,EAAAoE,IAASpE,EAChD,GAAAkK,EAAAlK,KAAAvB,EAAAuB,GAAA,CACAS,EAAAyJ,EAAAlK,GACAU,EAAAjC,EAAAuB,GACA,MAIA,OAAAS,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGA+B,EAAAqB,WAAA,SAAAD,GACA,OAAAoC,OAAApC,GAAAsB,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SAEA,QACA,WAIA1C,EAAA2H,OAAA,SAAAC,EAAAnK,GACA,IAAAqC,EAAA8H,GACA,UAAAjH,UAAA,+CAGA,OAAAiH,EAAAnK,OACA,OAAAuC,EAAA2G,MAAA,GAGA,IAAAnJ,EAEA,QAAAwD,IAAAvD,EAGA,IAFAA,EAAA,EAEAD,EAAA,EAAeA,EAAAoK,EAAAnK,SAAiBD,EAChCC,GAAAmK,EAAApK,GAAAC,OAIA,IAAAsE,EAAA/B,EAAAS,YAAAhD,GACAoK,EAAA,EAEA,IAAArK,EAAA,EAAaA,EAAAoK,EAAAnK,SAAiBD,EAAA,CAC9B,IAAAkG,EAAAkE,EAAApK,GAEA,IAAAwC,EAAA2B,SAAA+B,GACA,UAAA/C,UAAA,+CAGA+C,EAAA5B,KAAAC,EAAA8F,GACAA,GAAAnE,EAAAjG,OAGA,OAAAsE,GAsDA/B,EAAAe,aAyEAf,EAAAtD,UAAA8K,WAAA,EAQAxH,EAAAtD,UAAAoL,OAAA,WACA,IAAAlG,EAAA9F,KAAA2B,OAEA,GAAAmE,EAAA,MACA,UAAAxB,WAAA,6CAGA,QAAA5C,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,EAC1BmF,EAAA7G,KAAA0B,IAAA,GAGA,OAAA1B,MAGAkE,EAAAtD,UAAAqL,OAAA,WACA,IAAAnG,EAAA9F,KAAA2B,OAEA,GAAAmE,EAAA,MACA,UAAAxB,WAAA,6CAGA,QAAA5C,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,EAC1BmF,EAAA7G,KAAA0B,IAAA,GACAmF,EAAA7G,KAAA0B,EAAA,EAAAA,EAAA,GAGA,OAAA1B,MAGAkE,EAAAtD,UAAAsL,OAAA,WACA,IAAApG,EAAA9F,KAAA2B,OAEA,GAAAmE,EAAA,MACA,UAAAxB,WAAA,6CAGA,QAAA5C,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,EAC1BmF,EAAA7G,KAAA0B,IAAA,GACAmF,EAAA7G,KAAA0B,EAAA,EAAAA,EAAA,GACAmF,EAAA7G,KAAA0B,EAAA,EAAAA,EAAA,GACAmF,EAAA7G,KAAA0B,EAAA,EAAAA,EAAA,GAGA,OAAA1B,MAGAkE,EAAAtD,UAAAgC,SAAA,WACA,IAAAjB,EAAA,EAAA3B,KAAA2B,OACA,WAAAA,EAAA,GACA,IAAAR,UAAAQ,OAAAkI,EAAA7J,KAAA,EAAA2B,GAhIA,SAAA2D,EAAAoE,EAAAC,GACA,IAAAlD,GAAA,EAaA,SANAvB,IAAAwE,KAAA,KACAA,EAAA,GAKAA,EAAA1J,KAAA2B,OACA,SAOA,SAJAuD,IAAAyE,KAAA3J,KAAA2B,UACAgI,EAAA3J,KAAA2B,QAGAgI,GAAA,EACA,SAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,SAKA,IAFApE,MAAA,UAGA,OAAAA,GACA,UACA,OAAA6G,EAAAnM,KAAA0J,EAAAC,GAEA,WACA,YACA,OAAAE,EAAA7J,KAAA0J,EAAAC,GAEA,YACA,OAAAyC,EAAApM,KAAA0J,EAAAC,GAEA,aACA,aACA,OAAA0C,EAAArM,KAAA0J,EAAAC,GAEA,aACA,OAAAF,EAAAzJ,KAAA0J,EAAAC,GAEA,WACA,YACA,cACA,eACA,OAAA2C,EAAAtM,KAAA0J,EAAAC,GAEA,QACA,GAAAlD,EAAA,UAAA5B,UAAA,qBAAAS,GACAA,KAAA,IAAAsB,cACAH,GAAA,IAiEAvF,MAAAlB,KAAAmB,YAGA+C,EAAAtD,UAAA2B,OAAA,SAAApC,GACA,IAAA+D,EAAA2B,SAAA1F,GAAA,UAAA0E,UAAA,6BACA,OAAA7E,OAAAG,GACA,IAAA+D,EAAAyH,QAAA3L,KAAAG,IAGA+D,EAAAtD,UAAA2L,QAAA,WACA,IAAA3D,EAAA,GACA4D,EAAA3M,EAAAiL,kBAOA,OALA9K,KAAA2B,OAAA,IACAiH,EAAA5I,KAAA4C,SAAA,QAAA4J,GAAAC,MAAA,SAAkDC,KAAA,KAClD1M,KAAA2B,OAAA6K,IAAA5D,GAAA,UAGA,WAAAA,EAAA,KAGA1E,EAAAtD,UAAA+K,QAAA,SAAAlK,EAAAiI,EAAAC,EAAAgD,EAAAC,GACA,IAAA1I,EAAA2B,SAAApE,GACA,UAAAoD,UAAA,6BAmBA,QAhBAK,IAAAwE,IACAA,EAAA,QAGAxE,IAAAyE,IACAA,EAAAlI,IAAAE,OAAA,QAGAuD,IAAAyH,IACAA,EAAA,QAGAzH,IAAA0H,IACAA,EAAA5M,KAAA2B,QAGA+H,EAAA,GAAAC,EAAAlI,EAAAE,QAAAgL,EAAA,GAAAC,EAAA5M,KAAA2B,OACA,UAAA2C,WAAA,sBAGA,GAAAqI,GAAAC,GAAAlD,GAAAC,EACA,SAGA,GAAAgD,GAAAC,EACA,SAGA,GAAAlD,GAAAC,EACA,SAOA,GAAA3J,OAAAyB,EAAA,SAOA,IANA,IAAAU,GAFAyK,KAAA,IADAD,KAAA,GAIAvK,GALAuH,KAAA,IADAD,KAAA,GAOA5D,EAAAgE,KAAAC,IAAA5H,EAAAC,GACAyK,EAAA7M,KAAA0F,MAAAiH,EAAAC,GACAE,EAAArL,EAAAiE,MAAAgE,EAAAC,GAEAjI,EAAA,EAAiBA,EAAAoE,IAASpE,EAC1B,GAAAmL,EAAAnL,KAAAoL,EAAApL,GAAA,CACAS,EAAA0K,EAAAnL,GACAU,EAAA0K,EAAApL,GACA,MAIA,OAAAS,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAqIA+B,EAAAtD,UAAAmM,SAAA,SAAA7G,EAAAlB,EAAAM,GACA,WAAAtF,KAAAoH,QAAAlB,EAAAlB,EAAAM,IAGApB,EAAAtD,UAAAwG,QAAA,SAAAlB,EAAAlB,EAAAM,GACA,OAAA0B,EAAAhH,KAAAkG,EAAAlB,EAAAM,GAAA,IAGApB,EAAAtD,UAAAyG,YAAA,SAAAnB,EAAAlB,EAAAM,GACA,OAAA0B,EAAAhH,KAAAkG,EAAAlB,EAAAM,GAAA,IAsDApB,EAAAtD,UAAA6E,MAAA,SAAAJ,EAAA6C,EAAAvG,EAAA2D,GAEA,QAAAJ,IAAAgD,EACA5C,EAAA,OACA3D,EAAA3B,KAAA2B,OACAuG,EAAA,OACG,QAAAhD,IAAAvD,GAAA,kBAAAuG,EACH5C,EAAA4C,EACAvG,EAAA3B,KAAA2B,OACAuG,EAAA,MACG,KAAA8E,SAAA9E,GAYH,UAAAxD,MAAA,2EAXAwD,GAAA,EAEA8E,SAAArL,IACAA,GAAA,OACAuD,IAAAI,MAAA,UAEAA,EAAA3D,EACAA,OAAAuD,GAOA,IAAAkD,EAAApI,KAAA2B,OAAAuG,EAGA,SAFAhD,IAAAvD,KAAAyG,KAAAzG,EAAAyG,GAEA/C,EAAA1D,OAAA,IAAAA,EAAA,GAAAuG,EAAA,IAAAA,EAAAlI,KAAA2B,OACA,UAAA2C,WAAA,0CAGAgB,MAAA,QAGA,IAFA,IAAAmB,GAAA,IAGA,OAAAnB,GACA,UACA,OAAA2C,EAAAjI,KAAAqF,EAAA6C,EAAAvG,GAEA,WACA,YACA,OAAA8G,EAAAzI,KAAAqF,EAAA6C,EAAAvG,GAEA,YACA,OAAAgH,EAAA3I,KAAAqF,EAAA6C,EAAAvG,GAEA,aACA,aACA,OAAAsH,EAAAjJ,KAAAqF,EAAA6C,EAAAvG,GAEA,aAEA,OAAAuH,EAAAlJ,KAAAqF,EAAA6C,EAAAvG,GAEA,WACA,YACA,cACA,eACA,OAAAwH,EAAAnJ,KAAAqF,EAAA6C,EAAAvG,GAEA,QACA,GAAA8E,EAAA,UAAA5B,UAAA,qBAAAS,GACAA,GAAA,GAAAA,GAAAsB,cACAH,GAAA,IAKAvC,EAAAtD,UAAAqM,OAAA,WACA,OACA9G,KAAA,SACAC,KAAA7F,MAAAK,UAAA8E,MAAA5D,KAAA9B,KAAAkN,MAAAlN,KAAA,KAkGA,IAAAyK,EAAA,KAoBA,SAAA2B,EAAAxE,EAAA8B,EAAAC,GACA,IAAAwD,EAAA,GACAxD,EAAAG,KAAAC,IAAAnC,EAAAjG,OAAAgI,GAEA,QAAAjI,EAAAgI,EAAqBhI,EAAAiI,IAASjI,EAC9ByL,GAAAzF,OAAAgD,aAAA,IAAA9C,EAAAlG,IAGA,OAAAyL,EAGA,SAAAd,EAAAzE,EAAA8B,EAAAC,GACA,IAAAwD,EAAA,GACAxD,EAAAG,KAAAC,IAAAnC,EAAAjG,OAAAgI,GAEA,QAAAjI,EAAAgI,EAAqBhI,EAAAiI,IAASjI,EAC9ByL,GAAAzF,OAAAgD,aAAA9C,EAAAlG,IAGA,OAAAyL,EAGA,SAAAhB,EAAAvE,EAAA8B,EAAAC,GACA,IAAA7D,EAAA8B,EAAAjG,SACA+H,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAA7D,KAAA6D,EAAA7D,GAGA,IAFA,IAAAsH,EAAA,GAEA1L,EAAAgI,EAAqBhI,EAAAiI,IAASjI,EAC9B0L,GAAAC,EAAAzF,EAAAlG,IAGA,OAAA0L,EAGA,SAAAd,EAAA1E,EAAA8B,EAAAC,GAIA,IAHA,IAAA2D,EAAA1F,EAAAlC,MAAAgE,EAAAC,GACAK,EAAA,GAEAtI,EAAA,EAAiBA,EAAA4L,EAAA3L,OAAkBD,GAAA,EACnCsI,GAAAtC,OAAAgD,aAAA4C,EAAA5L,GAAA,IAAA4L,EAAA5L,EAAA,IAGA,OAAAsI,EA4CA,SAAAuD,EAAArF,EAAAsF,EAAA7L,GACA,GAAAuG,EAAA,OAAAA,EAAA,YAAA5D,WAAA,sBACA,GAAA4D,EAAAsF,EAAA7L,EAAA,UAAA2C,WAAA,yCA+IA,SAAAmJ,EAAA7F,EAAA7G,EAAAmH,EAAAsF,EAAAhB,EAAAzC,GACA,IAAA7F,EAAA2B,SAAA+B,GAAA,UAAA/C,UAAA,+CACA,GAAA9D,EAAAyL,GAAAzL,EAAAgJ,EAAA,UAAAzF,WAAA,qCACA,GAAA4D,EAAAsF,EAAA5F,EAAAjG,OAAA,UAAA2C,WAAA,sBAsDA,SAAAoJ,EAAA9F,EAAA7G,EAAAmH,EAAAyF,GACA5M,EAAA,IAAAA,EAAA,MAAAA,EAAA,GAEA,QAAAW,EAAA,EAAAsG,EAAA8B,KAAAC,IAAAnC,EAAAjG,OAAAuG,EAAA,GAAuDxG,EAAAsG,IAAOtG,EAC9DkG,EAAAM,EAAAxG,IAAAX,EAAA,QAAA4M,EAAAjM,EAAA,EAAAA,MAAA,GAAAiM,EAAAjM,EAAA,EAAAA,GAkCA,SAAAkM,EAAAhG,EAAA7G,EAAAmH,EAAAyF,GACA5M,EAAA,IAAAA,EAAA,WAAAA,EAAA,GAEA,QAAAW,EAAA,EAAAsG,EAAA8B,KAAAC,IAAAnC,EAAAjG,OAAAuG,EAAA,GAAuDxG,EAAAsG,IAAOtG,EAC9DkG,EAAAM,EAAAxG,GAAAX,IAAA,GAAA4M,EAAAjM,EAAA,EAAAA,GAAA,IAmKA,SAAAmM,EAAAjG,EAAA7G,EAAAmH,EAAAsF,EAAAhB,EAAAzC,GACA,GAAA7B,EAAAsF,EAAA5F,EAAAjG,OAAA,UAAA2C,WAAA,sBACA,GAAA4D,EAAA,YAAA5D,WAAA,sBAGA,SAAAwJ,EAAAlG,EAAA7G,EAAAmH,EAAAyF,EAAAI,GAMA,OALAA,GACAF,EAAAjG,EAAA7G,EAAAmH,EAAA,GAGAnE,EAAA0B,MAAAmC,EAAA7G,EAAAmH,EAAAyF,EAAA,MACAzF,EAAA,EAWA,SAAA8F,EAAApG,EAAA7G,EAAAmH,EAAAyF,EAAAI,GAMA,OALAA,GACAF,EAAAjG,EAAA7G,EAAAmH,EAAA,GAGAnE,EAAA0B,MAAAmC,EAAA7G,EAAAmH,EAAAyF,EAAA,MACAzF,EAAA,EA5dAhE,EAAAtD,UAAA8E,MAAA,SAAAgE,EAAAC,GACA,IAmBAsE,EAnBAnI,EAAA9F,KAAA2B,OAqBA,IApBA+H,OAGA,GACAA,GAAA5D,GACA,IAAA4D,EAAA,GACGA,EAAA5D,IACH4D,EAAA5D,IANA6D,OAAAzE,IAAAyE,EAAA7D,IAAA6D,GASA,GACAA,GAAA7D,GACA,IAAA6D,EAAA,GACGA,EAAA7D,IACH6D,EAAA7D,GAGA6D,EAAAD,IAAAC,EAAAD,GAGAxF,EAAAC,qBACA8J,EAAAjO,KAAAgL,SAAAtB,EAAAC,IACArJ,UAAA4D,EAAAtD,cACG,CACH,IAAAsN,EAAAvE,EAAAD,EACAuE,EAAA,IAAA/J,EAAAgK,OAAAhJ,GAEA,QAAAxD,EAAA,EAAmBA,EAAAwM,IAAcxM,EACjCuM,EAAAvM,GAAA1B,KAAA0B,EAAAgI,GAIA,OAAAuE,GAYA/J,EAAAtD,UAAAuN,WAAA,SAAAjG,EAAAjD,EAAA8I,GACA7F,GAAA,EACAjD,GAAA,EACA8I,GAAAR,EAAArF,EAAAjD,EAAAjF,KAAA2B,QAKA,IAJA,IAAAuE,EAAAlG,KAAAkI,GACAkG,EAAA,EACA1M,EAAA,IAEAA,EAAAuD,IAAAmJ,GAAA,MACAlI,GAAAlG,KAAAkI,EAAAxG,GAAA0M,EAGA,OAAAlI,GAGAhC,EAAAtD,UAAAyN,WAAA,SAAAnG,EAAAjD,EAAA8I,GACA7F,GAAA,EACAjD,GAAA,EAEA8I,GACAR,EAAArF,EAAAjD,EAAAjF,KAAA2B,QAMA,IAHA,IAAAuE,EAAAlG,KAAAkI,IAAAjD,GACAmJ,EAAA,EAEAnJ,EAAA,IAAAmJ,GAAA,MACAlI,GAAAlG,KAAAkI,IAAAjD,GAAAmJ,EAGA,OAAAlI,GAGAhC,EAAAtD,UAAA0N,UAAA,SAAApG,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA3B,KAAAkI,IAGAhE,EAAAtD,UAAA2N,aAAA,SAAArG,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA3B,KAAAkI,GAAAlI,KAAAkI,EAAA,OAGAhE,EAAAtD,UAAAiH,aAAA,SAAAK,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA3B,KAAAkI,IAAA,EAAAlI,KAAAkI,EAAA,IAGAhE,EAAAtD,UAAA4N,aAAA,SAAAtG,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,SACA3B,KAAAkI,GAAAlI,KAAAkI,EAAA,MAAAlI,KAAAkI,EAAA,iBAAAlI,KAAAkI,EAAA,IAGAhE,EAAAtD,UAAA6N,aAAA,SAAAvG,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA,SAAA3B,KAAAkI,IAAAlI,KAAAkI,EAAA,OAAAlI,KAAAkI,EAAA,MAAAlI,KAAAkI,EAAA,KAGAhE,EAAAtD,UAAA8N,UAAA,SAAAxG,EAAAjD,EAAA8I,GACA7F,GAAA,EACAjD,GAAA,EACA8I,GAAAR,EAAArF,EAAAjD,EAAAjF,KAAA2B,QAKA,IAJA,IAAAuE,EAAAlG,KAAAkI,GACAkG,EAAA,EACA1M,EAAA,IAEAA,EAAAuD,IAAAmJ,GAAA,MACAlI,GAAAlG,KAAAkI,EAAAxG,GAAA0M,EAKA,OADAlI,IADAkI,GAAA,OACAlI,GAAA4D,KAAA6E,IAAA,IAAA1J,IACAiB,GAGAhC,EAAAtD,UAAAgO,UAAA,SAAA1G,EAAAjD,EAAA8I,GACA7F,GAAA,EACAjD,GAAA,EACA8I,GAAAR,EAAArF,EAAAjD,EAAAjF,KAAA2B,QAKA,IAJA,IAAAD,EAAAuD,EACAmJ,EAAA,EACAlI,EAAAlG,KAAAkI,IAAAxG,GAEAA,EAAA,IAAA0M,GAAA,MACAlI,GAAAlG,KAAAkI,IAAAxG,GAAA0M,EAKA,OADAlI,IADAkI,GAAA,OACAlI,GAAA4D,KAAA6E,IAAA,IAAA1J,IACAiB,GAGAhC,EAAAtD,UAAAiO,SAAA,SAAA3G,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA,IAAA3B,KAAAkI,IACA,OAAAlI,KAAAkI,GAAA,GADAlI,KAAAkI,IAIAhE,EAAAtD,UAAAkO,YAAA,SAAA5G,EAAA6F,GACAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA,IAAAuE,EAAAlG,KAAAkI,GAAAlI,KAAAkI,EAAA,MACA,aAAAhC,EAAA,WAAAA,KAGAhC,EAAAtD,UAAAmO,YAAA,SAAA7G,EAAA6F,GACAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA,IAAAuE,EAAAlG,KAAAkI,EAAA,GAAAlI,KAAAkI,IAAA,EACA,aAAAhC,EAAA,WAAAA,KAGAhC,EAAAtD,UAAAoO,YAAA,SAAA9G,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA3B,KAAAkI,GAAAlI,KAAAkI,EAAA,MAAAlI,KAAAkI,EAAA,OAAAlI,KAAAkI,EAAA,QAGAhE,EAAAtD,UAAAqO,YAAA,SAAA/G,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACA3B,KAAAkI,IAAA,GAAAlI,KAAAkI,EAAA,OAAAlI,KAAAkI,EAAA,MAAAlI,KAAAkI,EAAA,IAGAhE,EAAAtD,UAAAsO,YAAA,SAAAhH,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACAoC,EAAA4D,KAAA3H,KAAAkI,GAAA,SAGAhE,EAAAtD,UAAAuO,YAAA,SAAAjH,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACAoC,EAAA4D,KAAA3H,KAAAkI,GAAA,SAGAhE,EAAAtD,UAAAwO,aAAA,SAAAlH,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACAoC,EAAA4D,KAAA3H,KAAAkI,GAAA,SAGAhE,EAAAtD,UAAAyO,aAAA,SAAAnH,EAAA6F,GAEA,OADAA,GAAAR,EAAArF,EAAA,EAAAlI,KAAA2B,QACAoC,EAAA4D,KAAA3H,KAAAkI,GAAA,SASAhE,EAAAtD,UAAA0O,YAAA,SAAAvO,EAAAmH,EAAAjD,EAAA8I,IACAhN,KACAmH,GAAA,EACAjD,GAAA,EAEA8I,IAEAN,EAAAzN,KAAAe,EAAAmH,EAAAjD,EADA6E,KAAA6E,IAAA,IAAA1J,GAAA,EACA,GAGA,IAAAmJ,EAAA,EACA1M,EAAA,EAGA,IAFA1B,KAAAkI,GAAA,IAAAnH,IAEAW,EAAAuD,IAAAmJ,GAAA,MACApO,KAAAkI,EAAAxG,GAAAX,EAAAqN,EAAA,IAGA,OAAAlG,EAAAjD,GAGAf,EAAAtD,UAAA2O,YAAA,SAAAxO,EAAAmH,EAAAjD,EAAA8I,IACAhN,KACAmH,GAAA,EACAjD,GAAA,EAEA8I,IAEAN,EAAAzN,KAAAe,EAAAmH,EAAAjD,EADA6E,KAAA6E,IAAA,IAAA1J,GAAA,EACA,GAGA,IAAAvD,EAAAuD,EAAA,EACAmJ,EAAA,EAGA,IAFApO,KAAAkI,EAAAxG,GAAA,IAAAX,IAEAW,GAAA,IAAA0M,GAAA,MACApO,KAAAkI,EAAAxG,GAAAX,EAAAqN,EAAA,IAGA,OAAAlG,EAAAjD,GAGAf,EAAAtD,UAAA4O,WAAA,SAAAzO,EAAAmH,EAAA6F,GAMA,OALAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,SACAhE,EAAAC,sBAAApD,EAAA+I,KAAA2F,MAAA1O,IACAf,KAAAkI,GAAA,IAAAnH,EACAmH,EAAA,GAWAhE,EAAAtD,UAAA8O,cAAA,SAAA3O,EAAAmH,EAAA6F,GAYA,OAXAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,WAEAhE,EAAAC,qBACAnE,KAAAkI,GAAA,IAAAnH,EACAf,KAAAkI,EAAA,GAAAnH,IAAA,GAEA2M,EAAA1N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAGAhE,EAAAtD,UAAA+O,cAAA,SAAA5O,EAAAmH,EAAA6F,GAYA,OAXAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,WAEAhE,EAAAC,qBACAnE,KAAAkI,GAAAnH,IAAA,EACAf,KAAAkI,EAAA,OAAAnH,GAEA2M,EAAA1N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAWAhE,EAAAtD,UAAAgP,cAAA,SAAA7O,EAAAmH,EAAA6F,GAcA,OAbAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,gBAEAhE,EAAAC,qBACAnE,KAAAkI,EAAA,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,EACAf,KAAAkI,GAAA,IAAAnH,GAEA6M,EAAA5N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAGAhE,EAAAtD,UAAAiP,cAAA,SAAA9O,EAAAmH,EAAA6F,GAcA,OAbAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,gBAEAhE,EAAAC,qBACAnE,KAAAkI,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,EACAf,KAAAkI,EAAA,OAAAnH,GAEA6M,EAAA5N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAGAhE,EAAAtD,UAAAkP,WAAA,SAAA/O,EAAAmH,EAAAjD,EAAA8I,GAIA,GAHAhN,KACAmH,GAAA,GAEA6F,EAAA,CACA,IAAAgC,EAAAjG,KAAA6E,IAAA,IAAA1J,EAAA,GACAwI,EAAAzN,KAAAe,EAAAmH,EAAAjD,EAAA8K,EAAA,GAAAA,GAGA,IAAArO,EAAA,EACA0M,EAAA,EACA4B,EAAA,EAGA,IAFAhQ,KAAAkI,GAAA,IAAAnH,IAEAW,EAAAuD,IAAAmJ,GAAA,MACArN,EAAA,OAAAiP,GAAA,IAAAhQ,KAAAkI,EAAAxG,EAAA,KACAsO,EAAA,GAGAhQ,KAAAkI,EAAAxG,IAAAX,EAAAqN,GAAA,GAAA4B,EAAA,IAGA,OAAA9H,EAAAjD,GAGAf,EAAAtD,UAAAqP,WAAA,SAAAlP,EAAAmH,EAAAjD,EAAA8I,GAIA,GAHAhN,KACAmH,GAAA,GAEA6F,EAAA,CACA,IAAAgC,EAAAjG,KAAA6E,IAAA,IAAA1J,EAAA,GACAwI,EAAAzN,KAAAe,EAAAmH,EAAAjD,EAAA8K,EAAA,GAAAA,GAGA,IAAArO,EAAAuD,EAAA,EACAmJ,EAAA,EACA4B,EAAA,EAGA,IAFAhQ,KAAAkI,EAAAxG,GAAA,IAAAX,IAEAW,GAAA,IAAA0M,GAAA,MACArN,EAAA,OAAAiP,GAAA,IAAAhQ,KAAAkI,EAAAxG,EAAA,KACAsO,EAAA,GAGAhQ,KAAAkI,EAAAxG,IAAAX,EAAAqN,GAAA,GAAA4B,EAAA,IAGA,OAAA9H,EAAAjD,GAGAf,EAAAtD,UAAAsP,UAAA,SAAAnP,EAAAmH,EAAA6F,GAOA,OANAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,YACAhE,EAAAC,sBAAApD,EAAA+I,KAAA2F,MAAA1O,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAf,KAAAkI,GAAA,IAAAnH,EACAmH,EAAA,GAGAhE,EAAAtD,UAAAuP,aAAA,SAAApP,EAAAmH,EAAA6F,GAYA,OAXAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,gBAEAhE,EAAAC,qBACAnE,KAAAkI,GAAA,IAAAnH,EACAf,KAAAkI,EAAA,GAAAnH,IAAA,GAEA2M,EAAA1N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAGAhE,EAAAtD,UAAAwP,aAAA,SAAArP,EAAAmH,EAAA6F,GAYA,OAXAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,gBAEAhE,EAAAC,qBACAnE,KAAAkI,GAAAnH,IAAA,EACAf,KAAAkI,EAAA,OAAAnH,GAEA2M,EAAA1N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAGAhE,EAAAtD,UAAAyP,aAAA,SAAAtP,EAAAmH,EAAA6F,GAcA,OAbAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,0BAEAhE,EAAAC,qBACAnE,KAAAkI,GAAA,IAAAnH,EACAf,KAAAkI,EAAA,GAAAnH,IAAA,EACAf,KAAAkI,EAAA,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,IAEA6M,EAAA5N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAGAhE,EAAAtD,UAAA0P,aAAA,SAAAvP,EAAAmH,EAAA6F,GAeA,OAdAhN,KACAmH,GAAA,EACA6F,GAAAN,EAAAzN,KAAAe,EAAAmH,EAAA,0BACAnH,EAAA,IAAAA,EAAA,WAAAA,EAAA,GAEAmD,EAAAC,qBACAnE,KAAAkI,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,GACAf,KAAAkI,EAAA,GAAAnH,IAAA,EACAf,KAAAkI,EAAA,OAAAnH,GAEA6M,EAAA5N,KAAAe,EAAAmH,GAAA,GAGAA,EAAA,GAiBAhE,EAAAtD,UAAA2P,aAAA,SAAAxP,EAAAmH,EAAA6F,GACA,OAAAD,EAAA9N,KAAAe,EAAAmH,GAAA,EAAA6F,IAGA7J,EAAAtD,UAAA4P,aAAA,SAAAzP,EAAAmH,EAAA6F,GACA,OAAAD,EAAA9N,KAAAe,EAAAmH,GAAA,EAAA6F,IAYA7J,EAAAtD,UAAA6P,cAAA,SAAA1P,EAAAmH,EAAA6F,GACA,OAAAC,EAAAhO,KAAAe,EAAAmH,GAAA,EAAA6F,IAGA7J,EAAAtD,UAAA8P,cAAA,SAAA3P,EAAAmH,EAAA6F,GACA,OAAAC,EAAAhO,KAAAe,EAAAmH,GAAA,EAAA6F,IAIA7J,EAAAtD,UAAAoF,KAAA,SAAAvE,EAAAkP,EAAAjH,EAAAC,GAOA,GANAD,MAAA,GACAC,GAAA,IAAAA,MAAA3J,KAAA2B,QACAgP,GAAAlP,EAAAE,SAAAgP,EAAAlP,EAAAE,QACAgP,MAAA,GACAhH,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAEAC,IAAAD,EAAA,SACA,OAAAjI,EAAAE,QAAA,IAAA3B,KAAA2B,OAAA,SAEA,GAAAgP,EAAA,EACA,UAAArM,WAAA,6BAGA,GAAAoF,EAAA,GAAAA,GAAA1J,KAAA2B,OAAA,UAAA2C,WAAA,6BACA,GAAAqF,EAAA,YAAArF,WAAA,2BAEAqF,EAAA3J,KAAA2B,SAAAgI,EAAA3J,KAAA2B,QAEAF,EAAAE,OAAAgP,EAAAhH,EAAAD,IACAC,EAAAlI,EAAAE,OAAAgP,EAAAjH,GAGA,IACAhI,EADAoE,EAAA6D,EAAAD,EAGA,GAAA1J,OAAAyB,GAAAiI,EAAAiH,KAAAhH,EAEA,IAAAjI,EAAAoE,EAAA,EAAqBpE,GAAA,IAAQA,EAC7BD,EAAAC,EAAAiP,GAAA3Q,KAAA0B,EAAAgI,QAEG,GAAA5D,EAAA,MAAA5B,EAAAC,oBAEH,IAAAzC,EAAA,EAAeA,EAAAoE,IAASpE,EACxBD,EAAAC,EAAAiP,GAAA3Q,KAAA0B,EAAAgI,QAGAnF,WAAA3D,UAAAgQ,IAAA9O,KAAAL,EAAAzB,KAAAgL,SAAAtB,IAAA5D,GAAA6K,GAGA,OAAA7K,GAOA5B,EAAAtD,UAAA4K,KAAA,SAAAtF,EAAAwD,EAAAC,EAAArE,GAEA,qBAAAY,EAAA,CAUA,GATA,kBAAAwD,GACApE,EAAAoE,EACAA,EAAA,EACAC,EAAA3J,KAAA2B,QACK,kBAAAgI,IACLrE,EAAAqE,EACAA,EAAA3J,KAAA2B,QAGA,IAAAuE,EAAAvE,OAAA,CACA,IAAAkP,EAAA3K,EAAA6C,WAAA,GAEA8H,EAAA,MACA3K,EAAA2K,GAIA,QAAA3L,IAAAI,GAAA,kBAAAA,EACA,UAAAT,UAAA,6BAGA,qBAAAS,IAAApB,EAAAqB,WAAAD,GACA,UAAAT,UAAA,qBAAAS,OAEG,kBAAAY,IACHA,GAAA,KAIA,GAAAwD,EAAA,GAAA1J,KAAA2B,OAAA+H,GAAA1J,KAAA2B,OAAAgI,EACA,UAAArF,WAAA,sBAGA,GAAAqF,GAAAD,EACA,OAAA1J,KAMA,IAAA0B,EAEA,GALAgI,KAAA,EACAC,OAAAzE,IAAAyE,EAAA3J,KAAA2B,OAAAgI,IAAA,EACAzD,MAAA,GAGA,kBAAAA,EACA,IAAAxE,EAAAgI,EAAmBhI,EAAAiI,IAASjI,EAC5B1B,KAAA0B,GAAAwE,MAEG,CACH,IAAAoH,EAAApJ,EAAA2B,SAAAK,KAAAQ,EAAA,IAAAxC,EAAAgC,EAAAZ,GAAA1C,YACAkD,EAAAwH,EAAA3L,OAEA,IAAAD,EAAA,EAAeA,EAAAiI,EAAAD,IAAiBhI,EAChC1B,KAAA0B,EAAAgI,GAAA4D,EAAA5L,EAAAoE,GAIA,OAAA9F,MAKA,IAAA8Q,EAAA,qBAoBA,SAAAzD,EAAAvG,GACA,OAAAA,EAAA,OAAAA,EAAAlE,SAAA,IACAkE,EAAAlE,SAAA,IAGA,SAAA8D,EAAArB,EAAA+D,GAEA,IAAAkB,EADAlB,KAAA2H,IAMA,IAJA,IAAApP,EAAA0D,EAAA1D,OACAqP,EAAA,KACA1D,EAAA,GAEA5L,EAAA,EAAiBA,EAAAC,IAAYD,EAAA,CAG7B,IAFA4I,EAAAjF,EAAA0D,WAAArH,IAEA,OAAA4I,EAAA,OAEA,IAAA0G,EAAA,CAEA,GAAA1G,EAAA,QAEAlB,GAAA,OAAAkE,EAAAxE,KAAA,aACA,SACS,GAAApH,EAAA,IAAAC,EAAA,EAETyH,GAAA,OAAAkE,EAAAxE,KAAA,aACA,SAIAkI,EAAA1G,EACA,SAIA,GAAAA,EAAA,QACAlB,GAAA,OAAAkE,EAAAxE,KAAA,aACAkI,EAAA1G,EACA,SAIAA,EAAA,OAAA0G,EAAA,UAAA1G,EAAA,YACK0G,IAEL5H,GAAA,OAAAkE,EAAAxE,KAAA,aAKA,GAFAkI,EAAA,KAEA1G,EAAA,KACA,IAAAlB,GAAA,WACAkE,EAAAxE,KAAAwB,QACK,GAAAA,EAAA,MACL,IAAAlB,GAAA,WACAkE,EAAAxE,KAAAwB,GAAA,SAAAA,EAAA,UACK,GAAAA,EAAA,OACL,IAAAlB,GAAA,WACAkE,EAAAxE,KAAAwB,GAAA,OAAAA,GAAA,YAAAA,EAAA,SACK,MAAAA,EAAA,SAIL,UAAA5F,MAAA,sBAHA,IAAA0E,GAAA,WACAkE,EAAAxE,KAAAwB,GAAA,OAAAA,GAAA,UAAAA,GAAA,YAAAA,EAAA,MAMA,OAAAgD,EA8BA,SAAA3G,EAAAiC,GACA,OAAA9E,EAAAmN,YApHA,SAAArI,GAIA,IAFAA,EAWA,SAAAA,GACA,OAAAA,EAAAsI,KAAAtI,EAAAsI,OACAtI,EAAAuI,QAAA,iBAbAC,CAAAxI,GAAAuI,QAAAL,EAAA,KAEAnP,OAAA,WAEA,KAAAiH,EAAAjH,OAAA,OACAiH,GAAA,IAGA,OAAAA,EA0GAyI,CAAAzI,IAGA,SAAAF,EAAA4I,EAAAC,EAAArJ,EAAAvG,GACA,QAAAD,EAAA,EAAiBA,EAAAC,KACjBD,EAAAwG,GAAAqJ,EAAA5P,QAAAD,GAAA4P,EAAA3P,UAD6BD,EAE7B6P,EAAA7P,EAAAwG,GAAAoJ,EAAA5P,GAGA,OAAAA,oDCrzDA,IAAA3B,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAyQ,EAEA,SAAAvQ,GAGA,SAAAuQ,IACA,cAAAvQ,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAyR,EAAAvQ,GAMAuQ,EAPA,CARkB1R,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAoQ,gCClDe,SAAAC,EAAA7L,EAAA/D,EAAAd,GAYf,OAXAc,KAAA+D,EACAxF,OAAAU,eAAA8E,EAAA/D,EAAA,CACAd,QACA2Q,YAAA,EACAnG,cAAA,EACAoG,UAAA,IAGA/L,EAAA/D,GAAAd,EAGA6E,ECXe,SAAAgM,EAAAnQ,GACf,QAAAC,EAAA,EAAiBA,EAAAP,UAAAQ,OAAsBD,IAAA,CACvC,IAAAE,EAAA,MAAAT,UAAAO,GAAAP,UAAAO,GAAA,GACAmQ,EAAAzR,OAAA0R,KAAAlQ,GAEA,oBAAAxB,OAAA2R,wBACAF,IAAAhG,OAAAzL,OAAA2R,sBAAAnQ,GAAAoQ,OAAA,SAAAC,GACA,OAAA7R,OAAA8R,yBAAAtQ,EAAAqQ,GAAAP,eAIAG,EAAAM,QAAA,SAAAtQ,GACM4P,EAAchQ,EAAAI,EAAAD,EAAAC,MAIpB,OAAAJ,EAjBA3B,EAAAI,EAAA6B,EAAA,sBAAA6P,kCCEA,IAAA7R,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAqR,EAEA,SAAAnR,GAQA,SAAAmR,EAAAC,QACA,IAAAA,IACAA,OAAAnN,GAGA,IAAAoN,EAAArR,EAAAa,KAAA9B,KAAAqS,IAAArS,KAGA,OADAsS,EAAAD,UACAC,EAGA,OAlBAvS,EAAAqS,EAAAnR,GAkBAmR,EAnBA,CARwBtS,EAAQ,KA4B/ByS,aAED1S,EAAAuB,QAAAgR,gCC5DAhS,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAyR,EAEA,WACA,SAAAA,KAsBA,OAfAA,EAAAC,UAAA,SAAAnB,EAAAoB,EAAAC,EAAAC,EAAAjR,GAEA,KAAAA,KACAgR,EAAAC,KAAAtB,EAAAoB,MAQAF,EAAAK,kBAAA,WACA,OAAAC,KAAAC,OAGAP,EAvBA,GA0BA3S,EAAAuB,QAAAoR,gCClCA,IAAAQ,GAAmB,EACnBC,EAAA,mBAcelR,EAAA,EAZf,SAAAmR,EAAAb,GACA,IAAAa,EAIA,MAAAF,EACA,IAAAtO,MAAAuO,GAEA,IAAAvO,MAAAuO,EAAA,MAAAZ,GAAA,oCCXe,SAAAc,EAAAC,EAAAC,GACfD,EAAAxS,UAAAR,OAAAS,OAAAwS,EAAAzS,WACAwS,EAAAxS,UAAAD,YAAAyS,EACAA,EAAA9S,UAAA+S,EAHAvT,EAAAI,EAAA6B,EAAA,sBAAAoR,6CCAA,SAAAG,EAAAC,GACA,YAAAA,EAAAC,OAAA,GAIA,SAAAC,EAAA3H,EAAA4H,GACA,QAAAhS,EAAAgS,EAAAC,EAAAjS,EAAA,EAAAoF,EAAAgF,EAAAnK,OAAiDgS,EAAA7M,EAAOpF,GAAA,EAAAiS,GAAA,EACxD7H,EAAApK,GAAAoK,EAAA6H,GAGA7H,EAAA8H,MAwDe,IAAAC,EApDf,SAAAC,GACA,IAAAlP,EAAAzD,UAAAQ,OAAA,QAAAuD,IAAA/D,UAAA,GAAAA,UAAA,MACA4S,EAAAD,KAAAE,MAAA,SACAC,EAAArP,KAAAoP,MAAA,SACAE,EAAAJ,GAAAR,EAAAQ,GACAK,EAAAvP,GAAA0O,EAAA1O,GACAwP,EAAAF,GAAAC,EAWA,GATAL,GAAAR,EAAAQ,GAEAG,EAAAF,EACGA,EAAApS,SAEHsS,EAAAL,MACAK,IAAApI,OAAAkI,KAGAE,EAAAtS,OAAA,UACA,IAAA0S,OAAA,EAEA,GAAAJ,EAAAtS,OAAA,CACA,IAAA2S,EAAAL,IAAAtS,OAAA,GACA0S,EAAA,MAAAC,GAAA,OAAAA,GAAA,KAAAA,OAEAD,GAAA,EAKA,IAFA,IAAAE,EAAA,EAEA7S,EAAAuS,EAAAtS,OAAgCD,GAAA,EAAQA,IAAA,CACxC,IAAA8S,EAAAP,EAAAvS,GAEA,MAAA8S,EACAf,EAAAQ,EAAAvS,GACK,OAAA8S,GACLf,EAAAQ,EAAAvS,GACA6S,KACKA,IACLd,EAAAQ,EAAAvS,GACA6S,KAIA,IAAAH,EAAA,KAAyBG,IAAMA,EAC/BN,EAAAQ,QAAA,OAEAL,GAAA,KAAAH,EAAA,IAAAA,EAAA,IAAAX,EAAAW,EAAA,KAAAA,EAAAQ,QAAA,IACA,IAAAC,EAAAT,EAAAvH,KAAA,KAEA,OADA2H,GAAA,MAAAK,EAAAlM,QAAA,KAAAkM,GAAA,KACAA,GC/DAC,EAAA,oBAAAtJ,QAAA,kBAAAA,OAAAuJ,SAAA,SAAAhP,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,oBAAAyF,QAAAzF,EAAAjF,cAAA0K,QAAAzF,IAAAyF,OAAAzK,UAAA,gBAAAgF,GAgCe,IAAAiP,EA7Bf,SAAAC,EAAAlJ,EAAAzL,GACA,GAAAyL,IAAAzL,EAAA,SACA,SAAAyL,GAAA,MAAAzL,EAAA,SAEA,GAAAI,MAAAyD,QAAA4H,GACA,OAAArL,MAAAyD,QAAA7D,IAAAyL,EAAAjK,SAAAxB,EAAAwB,QAAAiK,EAAAmJ,MAAA,SAAAC,EAAAtB,GACA,OAAAoB,EAAAE,EAAA7U,EAAAuT,MAIA,IAAAuB,EAAA,qBAAArJ,EAAA,YAAA+I,EAAA/I,GAEA,GAAAqJ,KADA,qBAAA9U,EAAA,YAAAwU,EAAAxU,IACA,SAEA,cAAA8U,EAAA,CACA,IAAAC,EAAAtJ,EAAAuJ,UACAC,EAAAjV,EAAAgV,UACA,GAAAD,IAAAtJ,GAAAwJ,IAAAjV,EAAA,OAAA2U,EAAAI,EAAAE,GACA,IAAAC,EAAAjV,OAAA0R,KAAAlG,GACA0J,EAAAlV,OAAA0R,KAAA3R,GACA,OAAAkV,EAAA1T,SAAA2T,EAAA3T,QACA0T,EAAAN,MAAA,SAAAlT,GACA,OAAAiT,EAAAlJ,EAAA/J,GAAA1B,EAAA0B,MAIA,kBC1BA,SAAA0T,EAAAC,GACA,YAAAA,EAAAhC,OAAA,GAAAgC,EAAA,IAAAA,EAGA,SAAAC,EAAAD,GACA,YAAAA,EAAAhC,OAAA,GAAAgC,EAAAhN,OAAA,GAAAgN,EAOA,SAAAE,EAAAF,EAAAvC,GACA,OALA,SAAAuC,EAAAvC,GACA,WAAA0C,OAAA,IAAA1C,EAAA,qBAAA2C,KAAAJ,GAIAK,CAAAL,EAAAvC,GAAAuC,EAAAhN,OAAAyK,EAAAtR,QAAA6T,EAGA,SAAAM,EAAAN,GACA,YAAAA,EAAAhC,OAAAgC,EAAA7T,OAAA,GAAA6T,EAAA9P,MAAA,MAAA8P,EA4BA,SAAAO,EAAAC,GACA,IAAAzC,EAAAyC,EAAAzC,SACA0C,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,KACAV,EAAAjC,GAAA,IAGA,OAFA0C,GAAA,MAAAA,IAAAT,GAAA,MAAAS,EAAAzC,OAAA,GAAAyC,EAAA,IAAAA,GACAC,GAAA,MAAAA,IAAAV,GAAA,MAAAU,EAAA1C,OAAA,GAAA0C,EAAA,IAAAA,GACAV,EAGA,SAAAW,EAAAX,EAAAY,EAAAvU,EAAAwU,GACA,IAAAL,EAEA,kBAAAR,GAEAQ,EAxCA,SAAAR,GACA,IAAAjC,EAAAiC,GAAA,IACAS,EAAA,GACAC,EAAA,GACAI,EAAA/C,EAAAnM,QAAA,MAEA,IAAAkP,IACAJ,EAAA3C,EAAA/K,OAAA8N,GACA/C,IAAA/K,OAAA,EAAA8N,IAGA,IAAAC,EAAAhD,EAAAnM,QAAA,KAOA,OALA,IAAAmP,IACAN,EAAA1C,EAAA/K,OAAA+N,GACAhD,IAAA/K,OAAA,EAAA+N,IAGA,CACAhD,WACA0C,OAAA,MAAAA,EAAA,GAAAA,EACAC,KAAA,MAAAA,EAAA,GAAAA,GAmBAM,CAAAhB,IACAY,cAIAlR,KADA8Q,EAAe5V,OAAAqW,EAAA,EAAArW,CAAQ,GAAGoV,IAC1BjC,WAAAyC,EAAAzC,SAAA,IAEAyC,EAAAC,OACA,MAAAD,EAAAC,OAAAzC,OAAA,KAAAwC,EAAAC,OAAA,IAAAD,EAAAC,QAEAD,EAAAC,OAAA,GAGAD,EAAAE,KACA,MAAAF,EAAAE,KAAA1C,OAAA,KAAAwC,EAAAE,KAAA,IAAAF,EAAAE,MAEAF,EAAAE,KAAA,QAGAhR,IAAAkR,QAAAlR,IAAA8Q,EAAAI,QAAAJ,EAAAI,UAGA,IACAJ,EAAAzC,SAAAmD,UAAAV,EAAAzC,UACG,MAAAtI,GACH,MAAAA,aAAA0L,SACA,IAAAA,SAAA,aAAAX,EAAAzC,SAAA,iFAEAtI,EAoBA,OAhBApJ,IAAAmU,EAAAnU,OAEAwU,EAEAL,EAAAzC,SAEK,MAAAyC,EAAAzC,SAAAC,OAAA,KACLwC,EAAAzC,SAA0BM,EAAemC,EAAAzC,SAAA8C,EAAA9C,WAFzCyC,EAAAzC,SAAA8C,EAAA9C,SAMAyC,EAAAzC,WACAyC,EAAAzC,SAAA,KAIAyC,EAGA,SAAAY,EAAAhL,EAAAzL,GACA,OAAAyL,EAAA2H,WAAApT,EAAAoT,UAAA3H,EAAAqK,SAAA9V,EAAA8V,QAAArK,EAAAsK,OAAA/V,EAAA+V,MAAAtK,EAAA/J,MAAA1B,EAAA0B,KAAuGgT,EAAUjJ,EAAAwK,MAAAjW,EAAAiW,OAGjH,SAAAS,IACA,IAAAC,EAAA,KAiCA,IAAAC,EAAA,GA4BA,OACAC,UA5DA,SAAAC,GAGA,OADAH,EAAAG,EACA,WACAH,IAAAG,IAAAH,EAAA,QAyDAI,oBArDA,SAAAlB,EAAAmB,EAAAC,EAAAC,GAIA,SAAAP,EAAA,CACA,IAAApC,EAAA,oBAAAoC,IAAAd,EAAAmB,GAAAL,EAEA,kBAAApC,EACA,oBAAA0C,EACAA,EAAA1C,EAAA2C,GAGAA,GAAA,GAIAA,GAAA,IAAA3C,QAGA2C,GAAA,IAmCAC,eA7BA,SAAAC,GACA,IAAAC,GAAA,EAEA,SAAAC,IACAD,GAAAD,EAAArW,WAAA,EAAAC,WAIA,OADA4V,EAAAjO,KAAA2O,GACA,WACAD,GAAA,EACAT,IAAA/E,OAAA,SAAAgD,GACA,OAAAA,IAAAyC,MAmBAC,gBAdA,WACA,QAAAC,EAAAxW,UAAAQ,OAAAiW,EAAA,IAAArX,MAAAoX,GAAAE,EAAA,EAAuEA,EAAAF,EAAaE,IACpFD,EAAAC,GAAA1W,UAAA0W,GAGAd,EAAA5E,QAAA,SAAAsF,GACA,OAAAA,EAAAvW,WAAA,EAAA0W,OAnLA9X,EAAAI,EAAA6B,EAAA,sBAAA+V,IAAAhY,EAAAI,EAAA6B,EAAA,sBAAAgW,IAAAjY,EAAAI,EAAA6B,EAAA,sBAAAiW,IAAAlY,EAAAI,EAAA6B,EAAA,sBAAAoU,IAAArW,EAAAI,EAAA6B,EAAA,sBAAA6U,IAAA9W,EAAAI,EAAA6B,EAAA,sBAAAgU,IA+LA,IAAAkC,IAAA,qBAAAC,gBAAAC,WAAAD,OAAAC,SAAAC,eAEA,SAAAC,EAAAhG,EAAAgF,GACAA,EAAAa,OAAAI,QAAAjG,IA4CA,IAAAkG,EAAA,WACAC,EAAA,aAEA,SAAAC,IACA,IACA,OAAAP,OAAAQ,QAAAtC,OAAA,GACG,MAAAnL,GAGH,UASA,SAAA6M,EAAAa,QACA,IAAAA,IACAA,EAAA,IAGAV,GAAyG7X,OAAAwY,EAAA,EAAAxY,EAAS,GAClH,IAAAyY,EAAAX,OAAAQ,QACAI,EA1DA,WACA,IAAAC,EAAAb,OAAAc,UAAAC,UACA,YAAAF,EAAA3R,QAAA,oBAAA2R,EAAA3R,QAAA,qBAAA2R,EAAA3R,QAAA,uBAAA2R,EAAA3R,QAAA,gBAAA2R,EAAA3R,QAAA,mBACA8Q,OAAAQ,SAAA,cAAAR,OAAAQ,QAuDAQ,GACAC,KA/CA,IAAAjB,OAAAc,UAAAC,UAAA7R,QAAA,YAgDAgS,EAAAT,EACAU,EAAAD,EAAAE,aACAA,OAAA,IAAAD,KACAE,EAAAH,EAAAhC,oBACAA,OAAA,IAAAmC,EAAAlB,EAAAkB,EACAC,EAAAJ,EAAAK,UACAA,OAAA,IAAAD,EAAA,EAAAA,EACAE,EAAAf,EAAAe,SAAA5D,EAAAP,EAAAoD,EAAAe,WAAA,GAEA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,GAAA,GACA/X,EAAAgY,EAAAhY,IACAuU,EAAAyD,EAAAzD,MAEA0D,EAAA5B,OAAAlC,SAIAR,EAHAsE,EAAAvG,SACAuG,EAAA7D,OACA6D,EAAA5D,KAIA,OADAwD,IAAAlE,EAAAE,EAAAF,EAAAkE,IACAvD,EAAAX,EAAAY,EAAAvU,GAGA,SAAAkY,IACA,OAAAjQ,KAAAkQ,SAAApX,SAAA,IAAA4F,OAAA,EAAAiR,GAGA,IAAAQ,EAAApD,IAEA,SAAAqD,EAAAC,GACI/Z,OAAAqW,EAAA,EAAArW,CAAQsY,EAAAyB,GAEZzB,EAAA/W,OAAAkX,EAAAlX,OACAsY,EAAAvC,gBAAAgB,EAAA1C,SAAA0C,EAAAvB,QAGA,SAAAiD,EAAAC,IApEA,SAAAA,QACAnV,IAAAmV,EAAAjE,OAAA4C,UAAAC,UAAA7R,QAAA,UAqEAkT,CAAAD,IACAE,EAAAZ,EAAAU,EAAAjE,QAGA,SAAAoE,IACAD,EAAAZ,EAAAlB,MAGA,IAAAgC,GAAA,EAEA,SAAAF,EAAAvE,GACA,GAAAyE,EACAA,GAAA,EACAP,QACK,CAELD,EAAA/C,oBAAAlB,EADA,MACAoB,EAAA,SAAAsD,GACAA,EACAR,EAAA,CACA/C,OAJA,MAKAnB,aASA,SAAA2E,GACA,IAAAC,EAAAlC,EAAA1C,SAIA6E,EAAAC,EAAA1T,QAAAwT,EAAA/Y,MACA,IAAAgZ,MAAA,GACA,IAAAE,EAAAD,EAAA1T,QAAAuT,EAAA9Y,MACA,IAAAkZ,MAAA,GACA,IAAAC,EAAAH,EAAAE,EAEAC,IACAP,GAAA,EACAQ,EAAAD,IAnBAE,CAAAlF,MAuBA,IAAAmF,EAAAxB,EAAAlB,KACAqC,EAAA,CAAAK,EAAAtZ,KAEA,SAAAuZ,EAAApF,GACA,OAAA0D,EAAA3D,EAAAC,GAuEA,SAAAiF,EAAAnU,GACA+R,EAAAoC,GAAAnU,GAWA,IAAAuU,EAAA,EAEA,SAAAC,EAAAN,GAGA,KAFAK,GAAAL,IAEA,IAAAA,GACA9C,OAAAqD,iBAAAhD,EAAA6B,GACAjB,GAAAjB,OAAAqD,iBAAA/C,EAAAgC,IACK,IAAAa,IACLnD,OAAAsD,oBAAAjD,EAAA6B,GACAjB,GAAAjB,OAAAsD,oBAAAhD,EAAAgC,IAIA,IAAAiB,GAAA,EAiCA,IAAA/C,EAAA,CACA/W,OAAAkX,EAAAlX,OACAwV,OAAA,MACAnB,SAAAmF,EACAC,aACAtS,KApIA,SAAA0M,EAAAY,GAEA,IACAJ,EAAAG,EAAAX,EAAAY,EAAA2D,IAAArB,EAAA1C,UACAiE,EAAA/C,oBAAAlB,EAFA,OAEAoB,EAAA,SAAAsD,GACA,GAAAA,EAAA,CACA,IAAAgB,EAAAN,EAAApF,GACAnU,EAAAmU,EAAAnU,IACAuU,EAAAJ,EAAAI,MAEA,GAAA0C,EAMA,GALAD,EAAA8C,UAAA,CACA9Z,MACAuU,SACS,KAAAsF,GAETpC,EACApB,OAAAlC,SAAA0F,WACS,CACT,IAAAE,EAAAd,EAAA1T,QAAAsR,EAAA1C,SAAAnU,KACAga,EAAAf,EAAApV,MAAA,OAAAkW,EAAA,EAAAA,EAAA,GACAC,EAAA/S,KAAAkN,EAAAnU,KACAiZ,EAAAe,EACA3B,EAAA,CACA/C,OAtBA,OAuBAnB,kBAKAkC,OAAAlC,SAAA0F,WAuGAvK,QAlGA,SAAAqE,EAAAY,GAEA,IACAJ,EAAAG,EAAAX,EAAAY,EAAA2D,IAAArB,EAAA1C,UACAiE,EAAA/C,oBAAAlB,EAFA,UAEAoB,EAAA,SAAAsD,GACA,GAAAA,EAAA,CACA,IAAAgB,EAAAN,EAAApF,GACAnU,EAAAmU,EAAAnU,IACAuU,EAAAJ,EAAAI,MAEA,GAAA0C,EAMA,GALAD,EAAAiD,aAAA,CACAja,MACAuU,SACS,KAAAsF,GAETpC,EACApB,OAAAlC,SAAA7E,QAAAuK,OACS,CACT,IAAAE,EAAAd,EAAA1T,QAAAsR,EAAA1C,SAAAnU,MACA,IAAA+Z,IAAAd,EAAAc,GAAA5F,EAAAnU,KACAqY,EAAA,CACA/C,OApBA,UAqBAnB,kBAKAkC,OAAAlC,SAAA7E,QAAAuK,OAuEAT,KACAc,OA/DA,WACAd,GAAA,IA+DAe,UA5DA,WACAf,EAAA,IA4DAgB,MAzCA,SAAAnF,QACA,IAAAA,IACAA,GAAA,GAGA,IAAAoF,EAAAjC,EAAAjD,UAAAF,GAOA,OALA2E,IACAH,EAAA,GACAG,GAAA,GAGA,WAMA,OALAA,IACAA,GAAA,EACAH,GAAA,IAGAY,MAwBAC,OApBA,SAAA1E,GACA,IAAA2E,EAAAnC,EAAA3C,eAAAG,GAEA,OADA6D,EAAA,GACA,WACAA,GAAA,GACAc,OAiBA,OAAA1D,EAGA,IAAA2D,EAAA,aACAC,EAAA,CACAC,SAAA,CACAC,WAAA,SAAAhH,GACA,YAAAA,EAAAhC,OAAA,GAAAgC,EAAA,KAAAC,EAAAD,IAEAiH,WAAA,SAAAjH,GACA,YAAAA,EAAAhC,OAAA,GAAAgC,EAAAhN,OAAA,GAAAgN,IAGAkH,QAAA,CACAF,WAAA/G,EACAgH,WAAAlH,GAEAoH,MAAA,CACAH,WAAAjH,EACAkH,WAAAlH,IAIA,SAAAqH,IAGA,IAAAlB,EAAAxD,OAAAlC,SAAA0F,KACApF,EAAAoF,EAAAtU,QAAA,KACA,WAAAkP,EAAA,GAAAoF,EAAAmB,UAAAvG,EAAA,GAOA,SAAAwG,EAAAtH,GACA,IAAAc,EAAA4B,OAAAlC,SAAA0F,KAAAtU,QAAA,KACA8Q,OAAAlC,SAAA7E,QAAA+G,OAAAlC,SAAA0F,KAAAhW,MAAA,EAAA4Q,GAAA,EAAAA,EAAA,OAAAd,GAGA,SAAAuC,EAAAY,QACA,IAAAA,IACAA,EAAA,IAGAV,GAAsG7X,OAAAwY,EAAA,EAAAxY,EAAS,GAC/G,IAAAyY,EAAAX,OAAAQ,QAEAU,GAhUAlB,OAAAc,UAAAC,UAAA7R,QAAA,WAgUAuR,GACAY,EAAAH,EAAAhC,oBACAA,OAAA,IAAAmC,EAAAlB,EAAAkB,EACAwD,EAAA3D,EAAA4D,SACAA,OAAA,IAAAD,EAAA,QAAAA,EACArD,EAAAf,EAAAe,SAAA5D,EAAAP,EAAAoD,EAAAe,WAAA,GACAuD,EAAAX,EAAAU,GACAR,EAAAS,EAAAT,WACAC,EAAAQ,EAAAR,WAEA,SAAA9C,IACA,IAAAnE,EAAAiH,EAAAG,KAGA,OADAlD,IAAAlE,EAAAE,EAAAF,EAAAkE,IACAvD,EAAAX,GAGA,IAAAyE,EAAApD,IAEA,SAAAqD,EAAAC,GACI/Z,OAAAqW,EAAA,EAAArW,CAAQsY,EAAAyB,GAEZzB,EAAA/W,OAAAkX,EAAAlX,OACAsY,EAAAvC,gBAAAgB,EAAA1C,SAAA0C,EAAAvB,QAGA,IAAAsD,GAAA,EACAyC,EAAA,KAEA,SAAA1C,IACA,IAAAhF,EAAAoH,IACAO,EAAAX,EAAAhH,GAEA,GAAAA,IAAA2H,EAEAL,EAAAK,OACK,CACL,IAAAnH,EAAA2D,IACAyD,EAAA1E,EAAA1C,SACA,IAAAyE,GAAA7D,EAAAwG,EAAApH,GAAA,OAEA,GAAAkH,IAAAnH,EAAAC,GAAA,OAEAkH,EAAA,KAKA,SAAAlH,GACA,GAAAyE,EACAA,GAAA,EACAP,QACK,CAELD,EAAA/C,oBAAAlB,EADA,MACAoB,EAAA,SAAAsD,GACAA,EACAR,EAAA,CACA/C,OAJA,MAKAnB,aASA,SAAA2E,GACA,IAAAC,EAAAlC,EAAA1C,SAIA6E,EAAAwC,EAAAhW,YAAA0O,EAAA6E,KACA,IAAAC,MAAA,GACA,IAAAE,EAAAsC,EAAAhW,YAAA0O,EAAA4E,KACA,IAAAI,MAAA,GACA,IAAAC,EAAAH,EAAAE,EAEAC,IACAP,GAAA,EACAQ,EAAAD,IAnBAE,CAAAlF,MAjBAuE,CAAAvE,IAyCA,IAAAR,EAAAoH,IACAO,EAAAX,EAAAhH,GACAA,IAAA2H,GAAAL,EAAAK,GACA,IAAAhC,EAAAxB,IACA0D,EAAA,CAAAtH,EAAAoF,IAgEA,SAAAF,EAAAnU,GAEA+R,EAAAoC,GAAAnU,GAWA,IAAAuU,EAAA,EAEA,SAAAC,EAAAN,GAGA,KAFAK,GAAAL,IAEA,IAAAA,EACA9C,OAAAqD,iBAAAc,EAAA7B,GACK,IAAAa,GACLnD,OAAAsD,oBAAAa,EAAA7B,GAIA,IAAAiB,GAAA,EAiCA,IAAA/C,EAAA,CACA/W,OAAAkX,EAAAlX,OACAwV,OAAA,MACAnB,SAAAmF,EACAC,WA5HA,SAAApF,GACA,UAAAwG,EAAA9C,EAAA3D,EAAAC,KA4HAlN,KAzHA,SAAA0M,EAAAY,GAEA,IACAJ,EAAAG,EAAAX,OAAAtQ,SAAAwT,EAAA1C,UACAiE,EAAA/C,oBAAAlB,EAFA,OAEAoB,EAAA,SAAAsD,GACA,GAAAA,EAAA,CACA,IAAAlF,EAAAO,EAAAC,GACAmH,EAAAX,EAAA9C,EAAAlE,GAGA,GAFAoH,MAAAO,EAEA,CAIAD,EAAA1H,EA9HA,SAAAA,GACA0C,OAAAlC,SAAAE,KAAAV,EA8HA8H,CAAAH,GACA,IAAAvB,EAAAyB,EAAAhW,YAAA0O,EAAA2C,EAAA1C,WACAuH,EAAAF,EAAA3X,MAAA,OAAAkW,EAAA,EAAAA,EAAA,GACA2B,EAAAzU,KAAA0M,GACA6H,EAAAE,EACArD,EAAA,CACA/C,OAnBA,OAoBAnB,kBAIAkE,QAgGA/I,QA3FA,SAAAqE,EAAAY,GAEA,IACAJ,EAAAG,EAAAX,OAAAtQ,SAAAwT,EAAA1C,UACAiE,EAAA/C,oBAAAlB,EAFA,UAEAoB,EAAA,SAAAsD,GACA,GAAAA,EAAA,CACA,IAAAlF,EAAAO,EAAAC,GACAmH,EAAAX,EAAA9C,EAAAlE,GACAoH,MAAAO,IAMAD,EAAA1H,EACAsH,EAAAK,IAGA,IAAAvB,EAAAyB,EAAAjW,QAAA2O,EAAA2C,EAAA1C,YACA,IAAA4F,IAAAyB,EAAAzB,GAAApG,GACA0E,EAAA,CACA/C,OAnBA,UAoBAnB,iBAsEAiF,KACAc,OA7DA,WACAd,GAAA,IA6DAe,UA1DA,WACAf,EAAA,IA0DAgB,MAzCA,SAAAnF,QACA,IAAAA,IACAA,GAAA,GAGA,IAAAoF,EAAAjC,EAAAjD,UAAAF,GAOA,OALA2E,IACAH,EAAA,GACAG,GAAA,GAGA,WAMA,OALAA,IACAA,GAAA,EACAH,GAAA,IAGAY,MAwBAC,OApBA,SAAA1E,GACA,IAAA2E,EAAAnC,EAAA3C,eAAAG,GAEA,OADA6D,EAAA,GACA,WACAA,GAAA,GACAc,OAiBA,OAAA1D,EAGA,SAAA8E,EAAA1W,EAAA2W,EAAAC,GACA,OAAA5T,KAAAC,IAAAD,KAAA0C,IAAA1F,EAAA2W,GAAAC,GAOA,SAAA1F,EAAAW,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAS,EAAAT,EACAvB,EAAAgC,EAAAhC,oBACAuG,EAAAvE,EAAAwE,eACAA,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAAzE,EAAA0E,aACAA,OAAA,IAAAD,EAAA,EAAAA,EACArE,EAAAJ,EAAAK,UACAA,OAAA,IAAAD,EAAA,EAAAA,EACAS,EAAApD,IAEA,SAAAqD,EAAAC,GACI/Z,OAAAqW,EAAA,EAAArW,CAAQsY,EAAAyB,GAEZzB,EAAA/W,OAAA+W,EAAAqF,QAAApc,OACAsY,EAAAvC,gBAAAgB,EAAA1C,SAAA0C,EAAAvB,QAGA,SAAA4C,IACA,OAAAjQ,KAAAkQ,SAAApX,SAAA,IAAA4F,OAAA,EAAAiR,GAGA,IAAA/F,EAAA8J,EAAAM,EAAA,EAAAF,EAAAjc,OAAA,GACAoc,EAAAH,EAAAI,IAAA,SAAAC,GACA,OAAA9H,EAAA8H,OAAA/Y,EAAA,kBAAA+Y,EAAAlE,IAAAkE,EAAApc,KAAAkY,OAGAqB,EAAArF,EAyCA,SAAAkF,EAAAnU,GACA,IAAAoX,EAAAV,EAAA9E,EAAAhF,MAAA5M,EAAA,EAAA4R,EAAAqF,QAAApc,OAAA,GAEAqU,EAAA0C,EAAAqF,QAAAG,GACAjE,EAAA/C,oBAAAlB,EAFA,MAEAoB,EAAA,SAAAsD,GACAA,EACAR,EAAA,CACA/C,OALA,MAMAnB,WACAtC,MAAAwK,IAKAhE,MA8BA,IAAAxB,EAAA,CACA/W,OAAAoc,EAAApc,OACAwV,OAAA,MACAnB,SAAA+H,EAAArK,GACAA,QACAqK,UACA3C,aACAtS,KA1FA,SAAA0M,EAAAY,GAEA,IACAJ,EAAAG,EAAAX,EAAAY,EAAA2D,IAAArB,EAAA1C,UACAiE,EAAA/C,oBAAAlB,EAFA,OAEAoB,EAAA,SAAAsD,GACA,GAAAA,EAAA,CACA,IACAwD,EADAxF,EAAAhF,MACA,EACAyK,EAAAzF,EAAAqF,QAAArY,MAAA,GAEAyY,EAAAxc,OAAAuc,EACAC,EAAAC,OAAAF,EAAAC,EAAAxc,OAAAuc,EAAAlI,GAEAmI,EAAArV,KAAAkN,GAGAkE,EAAA,CACA/C,OAfA,OAgBAnB,WACAtC,MAAAwK,EACAH,QAAAI,QAuEAhN,QAlEA,SAAAqE,EAAAY,GAEA,IACAJ,EAAAG,EAAAX,EAAAY,EAAA2D,IAAArB,EAAA1C,UACAiE,EAAA/C,oBAAAlB,EAFA,UAEAoB,EAAA,SAAAsD,GACAA,IACAhC,EAAAqF,QAAArF,EAAAhF,OAAAsC,EACAkE,EAAA,CACA/C,OANA,UAOAnB,iBA0DAiF,KACAc,OAnCA,WACAd,GAAA,IAmCAe,UAhCA,WACAf,EAAA,IAgCAoD,MA7BA,SAAAvX,GACA,IAAAoX,EAAAxF,EAAAhF,MAAA5M,EACA,OAAAoX,GAAA,GAAAA,EAAAxF,EAAAqF,QAAApc,QA4BAsa,MAzBA,SAAAnF,GAKA,YAJA,IAAAA,IACAA,GAAA,GAGAmD,EAAAjD,UAAAF,IAqBAqF,OAlBA,SAAA1E,GACA,OAAAwC,EAAA3C,eAAAG,KAmBA,OAAAiB,iCC/3BAtY,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAMA,IAAAud,EAAiBxe,EAAQ,IAEzBye,EAAeze,EAAQ,IAEvB0e,EAAe1e,EAAQ,IAEvB2e,EAAsB3e,EAAQ,IAE9B4e,EAAiC5e,EAAQ,GAkBzC6e,EAIA,WAyBA,SAAAA,EAAAC,EAEAC,EAEAC,EAEAC,GAYA,GAXA/e,KAAA4e,QACA5e,KAAA6e,SACA7e,KAAA8e,UACA9e,KAAA+e,YAEA7Z,IAAA2Z,GAAA,OAAAA,IACAA,EAAAD,GAGA5e,KAAA6e,SAEAD,EAAA,GAAAC,EAAA,EACA,UAAAH,EAAAtd,QAAA,+CAGA8D,IAAA4Z,GAAA,OAAAA,IACAA,EAAAhV,KAAA2F,OAAAmP,EAAA,SAGA5e,KAAA8e,eAEA5Z,IAAA6Z,GAAA,OAAAA,IACA/e,KAAA+e,KAAA,IAAAC,WAAAhf,KAAA8e,QAAA9e,KAAA6e,SA2gBA,OAhgBAF,EAAAM,sBAAA,SAAAC,GAKA,IAJA,IAAAL,EAAAK,EAAAvd,OACAid,EAAAM,EAAA,GAAAvd,OACAod,EAAA,IAAAJ,EAAAC,EAAAC,GAEAnd,EAAA,EAAmBA,EAAAmd,EAAYnd,IAG/B,IAFA,IAAAyd,EAAAD,EAAAxd,GAEAsG,EAAA,EAAqBA,EAAA4W,EAAW5W,IAChCmX,EAAAnX,IACA+W,EAAAnO,IAAA5I,EAAAtG,GAKA,OAAAqd,GAGAJ,EAAAS,gBAAA,SAAAC,EAAAC,EAAAC,GACA,UAAAF,EACA,UAAAX,EAAAtd,QAAA,uCAUA,IAPA,IAAA2d,EAAA,IAAAxe,MAAA8e,EAAA1d,QACA6d,EAAA,EACAC,EAAA,EACAC,GAAA,EACAC,EAAA,EACA5T,EAAA,EAEAA,EAAAsT,EAAA1d,QACA,UAAA0d,EAAA7L,OAAAzH,IAAA,OAAAsT,EAAA7L,OAAAzH,GAAA,CACA,GAAAyT,EAAAC,EAAA,CACA,QAAAC,EACAA,EAAAF,EAAAC,OACW,GAAAD,EAAAC,IAAAC,EACX,UAAAhB,EAAAtd,QAAA,4BAGAqe,EAAAD,EACAG,IAGA5T,SACO,GAAAsT,EAAAxC,UAAA9Q,IAAAuT,EAAA3d,UAAA2d,EACPvT,GAAAuT,EAAA3d,OACAod,EAAAS,IAAA,EACAA,QACO,IAAAH,EAAAxC,UAAA9Q,IAAAwT,EAAA5d,UAAA4d,EAKP,UAAAb,EAAAtd,QAAA,kCAAAie,EAAAxC,UAAA9Q,IAJAA,GAAAwT,EAAA5d,OACAod,EAAAS,IAAA,EACAA,IAOA,GAAAA,EAAAC,EAAA,CACA,QAAAC,EACAA,EAAAF,EAAAC,OACO,GAAAD,EAAAC,IAAAC,EACP,UAAAhB,EAAAtd,QAAA,4BAGAue,IAKA,IAFA,IAAAC,EAAA,IAAAjB,EAAAe,EAAAC,GAEAje,EAAA,EAAmBA,EAAA8d,EAAa9d,IAChCqd,EAAArd,IACAke,EAAAhP,IAAA9G,KAAA2F,MAAA/N,EAAAge,GAAA5V,KAAA2F,MAAA/N,EAAAge,IAIA,OAAAE,GAWAjB,EAAA/d,UAAAif,IAAA,SAAA1d,EAEAC,GAGA,IAAA8F,EAAA9F,EAAApC,KAAA8e,QAAAhV,KAAA2F,MAAAtN,EAAA,IACA,YAAAnC,KAAA+e,KAAA7W,MAAA,GAAA/F,GAAA,IAUAwc,EAAA/d,UAAAgQ,IAAA,SAAAzO,EAEAC,GAGA,IAAA8F,EAAA9F,EAAApC,KAAA8e,QAAAhV,KAAA2F,MAAAtN,EAAA,IACAnC,KAAA+e,KAAA7W,IAAA,OAAA/F,GAAA,YAGAwc,EAAA/d,UAAAkf,MAAA,SAAA3d,EAEAC,GAGA,IAAA8F,EAAA9F,EAAApC,KAAA8e,QAAAhV,KAAA2F,MAAAtN,EAAA,IACAnC,KAAA+e,KAAA7W,MAAA,OAAA/F,GAAA,aAUAwc,EAAA/d,UAAAmf,KAAA,SAAA5d,EAEAC,GAGA,IAAA8F,EAAA9F,EAAApC,KAAA8e,QAAAhV,KAAA2F,MAAAtN,EAAA,IACAnC,KAAA+e,KAAA7W,IAAA,OAAA/F,GAAA,YAUAwc,EAAA/d,UAAAof,IAAA,SAAAC,GACA,GAAAjgB,KAAA4e,QAAAqB,EAAAC,YAAAlgB,KAAA6e,SAAAoB,EAAAE,aAAAngB,KAAA8e,UAAAmB,EAAAG,aACA,UAAA1B,EAAAtd,QAAA,wCAOA,IAJA,IAAAif,EAAA,IAAA/B,EAAAld,QAAA0I,KAAA2F,MAAAzP,KAAA4e,MAAA,OACAE,EAAA9e,KAAA8e,QACAC,EAAA/e,KAAA+e,KAEA3c,EAAA,EAAAyc,EAAA7e,KAAA6e,OAAyCzc,EAAAyc,EAAYzc,IAIrD,IAHA,IAAA8F,EAAA9F,EAAA0c,EACAwB,EAAAL,EAAAM,OAAAne,EAAAie,GAAAG,cAEAre,EAAA,EAAqBA,EAAA2c,EAAa3c,IAClC4c,EAAA7W,EAAA/F,IAAAme,EAAAne,IASAwc,EAAA/d,UAAA6f,MAAA,WAIA,IAHA,IAAA1B,EAAA/e,KAAA+e,KACAvS,EAAAuS,EAAApd,OAEAD,EAAA,EAAmBA,EAAA8K,EAAS9K,IAC5Bqd,EAAArd,GAAA,GAaAid,EAAA/d,UAAA8f,UAAA,SAAAC,EAEAC,EAEAhC,EAEAC,GAGA,GAAA+B,EAAA,GAAAD,EAAA,EACA,UAAAjC,EAAAtd,QAAA,oCAGA,GAAAyd,EAAA,GAAAD,EAAA,EACA,UAAAF,EAAAtd,QAAA,uCAGA,IAAAyf,EAAAF,EAAA/B,EACAkC,EAAAF,EAAA/B,EAEA,GAAAiC,EAAA9gB,KAAA6e,QAAAgC,EAAA7gB,KAAA4e,MACA,UAAAF,EAAAtd,QAAA,yCAMA,IAHA,IAAA0d,EAAA9e,KAAA8e,QACAC,EAAA/e,KAAA+e,KAEA3c,EAAAwe,EAAqBxe,EAAA0e,EAAY1e,IAGjC,IAFA,IAAA8F,EAAA9F,EAAA0c,EAEA3c,EAAAwe,EAAwBxe,EAAA0e,EAAW1e,IACnC4c,EAAA7W,EAAA4B,KAAA2F,MAAAtN,EAAA,aAAAA,GAAA,YAcAwc,EAAA/d,UAAA2f,OAAA,SAAAne,EAEAke,GACA,OAAAA,QAAApb,IAAAob,KAAAS,UAAA/gB,KAAA4e,MACA0B,EAAA,IAAAhC,EAAAld,QAAApB,KAAA4e,OAEA0B,EAAAG,QAOA,IAJA,IAAA3B,EAAA9e,KAAA8e,QACAC,EAAA/e,KAAA+e,KACA7W,EAAA9F,EAAA0c,EAEA3c,EAAA,EAAmBA,EAAA2c,EAAa3c,IAChCme,EAAAU,QAAA,GAAA7e,EAAA4c,EAAA7W,EAAA/F,IAGA,OAAAme,GAQA3B,EAAA/d,UAAAqgB,OAAA,SAAA7e,EAEAke,GACA/B,EAAAnd,QAAAqR,UAAA6N,EAAAE,cAAA,EAAAxgB,KAAA+e,KAAA3c,EAAApC,KAAA8e,QAAA9e,KAAA8e,UAOAH,EAAA/d,UAAAsgB,UAAA,WAMA,IALA,IAAAtC,EAAA5e,KAAAkgB,WACArB,EAAA7e,KAAAmgB,YACAgB,EAAA,IAAA7C,EAAAld,QAAAwd,GACAwC,EAAA,IAAA9C,EAAAld,QAAAwd,GAEAld,EAAA,EAAA2f,EAAAvX,KAAA2F,OAAAoP,EAAA,MAA4Dnd,EAAA2f,EAAc3f,IAC1Eyf,EAAAnhB,KAAAugB,OAAA7e,EAAAyf,GACAC,EAAAphB,KAAAugB,OAAA1B,EAAA,EAAAnd,EAAA0f,GACAD,EAAAG,UACAF,EAAAE,UACAthB,KAAAihB,OAAAvf,EAAA0f,GACAphB,KAAAihB,OAAApC,EAAA,EAAAnd,EAAAyf,IAUAxC,EAAA/d,UAAA2gB,sBAAA,WAUA,IATA,IAAA3C,EAAA5e,KAAA4e,MACAC,EAAA7e,KAAA6e,OACAC,EAAA9e,KAAA8e,QACAC,EAAA/e,KAAA+e,KACA4B,EAAA/B,EACAgC,EAAA/B,EACAgC,GAAA,EACAC,GAAA,EAEA1e,EAAA,EAAmBA,EAAAyc,EAAYzc,IAC/B,QAAAof,EAAA,EAAuBA,EAAA1C,EAAe0C,IAAA,CACtC,IAAAC,EAAA1C,EAAA3c,EAAA0c,EAAA0C,GAEA,OAAAC,EAAA,CASA,GARArf,EAAAwe,IACAA,EAAAxe,GAGAA,EAAA0e,IACAA,EAAA1e,GAGA,GAAAof,EAAAb,EAAA,CAGA,IAFA,IAAAe,EAAA,EAEA,KAAAD,GAAA,GAAAC,EAAA,aACAA,IAGA,GAAAF,EAAAE,EAAAf,IACAA,EAAA,GAAAa,EAAAE,GAIA,MAAAF,EAAA,GAAAX,EAAA,CAGA,IAFAa,EAAA,GAEAD,IAAAC,IAAA,GACAA,IAGA,GAAAF,EAAAE,EAAAb,IACAA,EAAA,GAAAW,EAAAE,KAOA,OAAAb,EAAAF,GAAAG,EAAAF,EACA,KAGA5B,WAAApa,KAAA,CAAA+b,EAAAC,EAAAC,EAAAF,EAAA,EAAAG,EAAAF,EAAA,KASAjC,EAAA/d,UAAA+gB,gBAAA,WAKA,IAJA,IAAA7C,EAAA9e,KAAA8e,QACAC,EAAA/e,KAAA+e,KACA6C,EAAA,EAEAA,EAAA7C,EAAApd,QAAA,IAAAod,EAAA6C,IACAA,IAGA,GAAAA,IAAA7C,EAAApd,OACA,YAQA,IALA,IAAAS,EAAAwf,EAAA9C,EACA3c,EAAAyf,EAAA9C,EAAA,GACA2C,EAAA1C,EAAA6C,GACAF,EAAA,EAEA,KAAAD,GAAA,GAAAC,EAAA,aACAA,IAIA,OADAvf,GAAAuf,EACA1C,WAAApa,KAAA,CAAAzC,EAAAC,KAGAuc,EAAA/d,UAAAihB,oBAAA,WAKA,IAJA,IAAA/C,EAAA9e,KAAA8e,QACAC,EAAA/e,KAAA+e,KACA6C,EAAA7C,EAAApd,OAAA,EAEAigB,GAAA,OAAA7C,EAAA6C,IACAA,IAGA,GAAAA,EAAA,EACA,YAQA,IALA,IAAAxf,EAAA0H,KAAA2F,MAAAmS,EAAA9C,GACA3c,EAAA,GAAA2H,KAAA2F,MAAAmS,EAAA9C,GACA2C,EAAA1C,EAAA6C,GACAF,EAAA,GAEAD,IAAAC,IAAA,GACAA,IAIA,OADAvf,GAAAuf,EACA1C,WAAApa,KAAA,CAAAzC,EAAAC,KAOAuc,EAAA/d,UAAAsf,SAAA,WACA,OAAAlgB,KAAA4e,OAOAD,EAAA/d,UAAAuf,UAAA,WACA,OAAAngB,KAAA6e,QAOAF,EAAA/d,UAAAwf,WAAA,WACA,OAAApgB,KAAA8e,SAKAH,EAAA/d,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAnD,GACA,SAGA,IAAAnc,EAAAsf,EACA,OAAA9hB,KAAA4e,QAAApc,EAAAoc,OAAA5e,KAAA6e,SAAArc,EAAAqc,QAAA7e,KAAA8e,UAAAtc,EAAAsc,SAAAN,EAAApd,QAAAmB,OAAAvC,KAAA+e,KAAAvc,EAAAuc,OAKAJ,EAAA/d,UAAA8B,SAAA,WACA,IAAAwT,EAAAlW,KAAA4e,MAKA,OADA1I,EAAA,IADAA,EAAA,IADAA,EAAA,IADAA,EAAA,GAAAA,EAAAlW,KAAA4e,OACA5e,KAAA6e,QACA7e,KAAA8e,SACAN,EAAApd,QAAAsB,SAAA1C,KAAA+e,OA+BAJ,EAAA/d,UAAAgC,SAAA,SAAA0c,EAAAC,EAAAwC,GAaA,YAZA,IAAAzC,IACAA,EAAA,UAGA,IAAAC,IACAA,EAAA,UAGA,IAAAwC,IACAA,EAAA,MAGA/hB,KAAAgiB,cAAA1C,EAAAC,EAAAwC,IAGApD,EAAA/d,UAAAohB,cAAA,SAAA1C,EAAAC,EAAAwC,GACA,IAAArN,EAAA,IAAA+J,EAAArd,QACAsT,EAAAuN,OAAAF,GAEA,QAAA3f,EAAA,EAAAyc,EAAA7e,KAAA6e,OAAyCzc,EAAAyc,EAAYzc,IAAA,CACrD,QAAAD,EAAA,EAAAyc,EAAA5e,KAAA4e,MAAyCzc,EAAAyc,EAAWzc,IACpDuS,EAAAuN,OAAAjiB,KAAA6f,IAAA1d,EAAAC,GAAAkd,EAAAC,GAGA7K,EAAAuN,OAAAF,GAGA,OAAArN,EAAA9R,YAKA+b,EAAA/d,UAAAshB,MAAA,WACA,WAAAvD,EAAA3e,KAAA4e,MAAA5e,KAAA6e,OAAA7e,KAAA8e,QAAA9e,KAAA+e,KAAArZ,UAGAiZ,EAjkBA,GAokBA9e,EAAAuB,QAAAud,gCCzmBAve,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAQA,IAAAohB,EAAoBriB,EAAQ,GAE5Bye,EAAeze,EAAQ,IAQvBsiB,EAEA,WAeA,SAAAA,EAAAC,EAAAC,EAAAC,EAEAC,EAAAC,EAAAC,GAGA1iB,KAAAqiB,OACAriB,KAAAsiB,WACAtiB,KAAAuiB,UACAviB,KAAAwiB,eACAxiB,KAAAyiB,SACAziB,KAAA0iB,YACA1iB,KAAAqiB,OACAriB,KAAAsiB,WAGAtiB,KAAAuiB,aADArd,IAAAqd,GAAA,OAAAA,EACA,OAAAD,QAAApd,IAAAod,EAAA,IAAAA,EAAA3gB,OAEA4gB,EAGAviB,KAAAwiB,eACAxiB,KAAAyiB,SACAziB,KAAA2iB,eAAA,KAGA3iB,KAAA0iB,eADAxd,IAAAwd,GAAA,OAAAA,EACAnE,EAAAnd,QAAAyR,oBAEA6P,EAkGA,OA1FAN,EAAAxhB,UAAAgiB,QAAA,WACA,OAAA5iB,KAAAqiB,MAOAD,EAAAxhB,UAAAiiB,YAAA,WACA,OAAA7iB,KAAAsiB,UAQAF,EAAAxhB,UAAAkiB,WAAA,WACA,OAAA9iB,KAAAuiB,SASAH,EAAAxhB,UAAAmiB,gBAAA,WACA,OAAA/iB,KAAAwiB,cAOAJ,EAAAxhB,UAAAoiB,iBAAA,WACA,OAAAhjB,KAAAyiB,QASAL,EAAAxhB,UAAAqiB,kBAAA,WACA,OAAAjjB,KAAA2iB,gBAGAP,EAAAxhB,UAAAsiB,YAAA,SAAA/c,EAAApF,GACA,OAAAf,KAAA2iB,iBACA3iB,KAAA2iB,eAAA,IAAAQ,KAGAnjB,KAAA2iB,eAAA/R,IAAAzK,EAAApF,IAGAqhB,EAAAxhB,UAAAwiB,eAAA,SAAAC,GACA,OAAAA,IACA,OAAArjB,KAAA2iB,eACA3iB,KAAA2iB,eAAAU,EAEArjB,KAAA2iB,eAAA,IAAAQ,IAAAE,KAKAjB,EAAAxhB,UAAA0iB,gBAAA,SAAAC,GACA,IAAAC,EAAAxjB,KAAAwiB,aAEA,UAAAgB,EACAxjB,KAAAwiB,aAAAe,OACK,UAAAA,KAAA5hB,OAAA,GACL,IAAA8hB,EAAA,IAAAtB,EAAA/gB,QAAAoiB,EAAA7hB,OAAA4hB,EAAA5hB,QACA4c,EAAAnd,QAAAqR,UAAA+Q,EAAA,EAAAC,EAAA,EAAAD,EAAA7hB,QACA4c,EAAAnd,QAAAqR,UAAA8Q,EAAA,EAAAE,EAAAD,EAAA7hB,OAAA4hB,EAAA5hB,QACA3B,KAAAwiB,aAAAiB,IAIArB,EAAAxhB,UAAA8iB,aAAA,WACA,OAAA1jB,KAAA0iB,WAKAN,EAAAxhB,UAAAgC,SAAA,WACA,OAAA5C,KAAAqiB,MAGAD,EA5IA,GA+IAviB,EAAAuB,QAAAghB,gCCrLe,SAAAuB,EAAAC,EAAAC,GACf,KAAAD,aAAAC,GACA,UAAAhf,UAAA,qCAFA/E,EAAAI,EAAA6B,EAAA,sBAAA4hB,kCCAA,SAAAG,EAAAriB,EAAAkX,GACA,QAAAjX,EAAA,EAAiBA,EAAAiX,EAAAhX,OAAkBD,IAAA,CACnC,IAAAqiB,EAAApL,EAAAjX,GACAqiB,EAAArS,WAAAqS,EAAArS,aAAA,EACAqS,EAAAxY,cAAA,EACA,UAAAwY,MAAApS,UAAA,GACAvR,OAAAU,eAAAW,EAAAsiB,EAAAliB,IAAAkiB,IAIe,SAAAC,EAAAH,EAAAI,EAAAC,GAGf,OAFAD,GAAAH,EAAAD,EAAAjjB,UAAAqjB,GACAC,GAAAJ,EAAAD,EAAAK,GACAL,EAbA/jB,EAAAI,EAAA6B,EAAA,sBAAAiiB,kCCAe,SAAAG,EAAArC,GAIf,OAHAqC,EAAA/jB,OAAAC,eAAAD,OAAAgkB,eAAA,SAAAtC,GACA,OAAAA,EAAAxhB,WAAAF,OAAAgkB,eAAAtC,KAEAA,GAJAhiB,EAAAI,EAAA6B,EAAA,sBAAAoiB,kCCAA,SAAAE,EAAAze,GAA6U,OAA1Oye,EAA3E,oBAAAhZ,QAAA,kBAAAA,OAAAuJ,SAA2E,SAAAhP,GAAoC,cAAAA,GAA+B,SAAAA,GAAoC,OAAAA,GAAA,oBAAAyF,QAAAzF,EAAAjF,cAAA0K,QAAAzF,IAAAyF,OAAAzK,UAAA,gBAAAgF,IAAmIA,GAE9T,SAAA+O,EAAA/O,GAWf,OATA+O,EADA,oBAAAtJ,QAAA,WAAAgZ,EAAAhZ,OAAAuJ,UACA,SAAAhP,GACA,OAAAye,EAAAze,IAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAyF,QAAAzF,EAAAjF,cAAA0K,QAAAzF,IAAAyF,OAAAzK,UAAA,SAAAyjB,EAAAze,KAIAA,GCXe,SAAA0e,EAAAC,EAAAziB,GACf,OAAAA,GAAsB,WAAP6S,EAAO7S,IAAA,oBAAAA,ECHP,SAAAyiB,GACf,YAAAA,EACA,UAAAC,eAAA,6DAGA,OAAAD,EDESE,CAAqBF,GAH9BziB,EAJAhC,EAAAI,EAAA6B,EAAA,sBAAAuiB,kCEAe,SAAAI,EAAA5C,EAAAthB,GAMf,OALAkkB,EAAAtkB,OAAAC,gBAAA,SAAAyhB,EAAAthB,GAEA,OADAshB,EAAAxhB,UAAAE,EACAshB,IAGAA,EAAAthB,GCLe,SAAAmkB,EAAAvR,EAAAC,GACf,uBAAAA,GAAA,OAAAA,EACA,UAAAxO,UAAA,sDAGAuO,EAAAxS,UAAAR,OAAAS,OAAAwS,KAAAzS,UAAA,CACAD,YAAA,CACAI,MAAAqS,EACAzB,UAAA,EACApG,cAAA,KAGA8H,GAAkBqR,EAActR,EAAAC,GAbhCvT,EAAAI,EAAA6B,EAAA,sBAAA4iB,mBCAA,IAAAC,EAEAA,EAAA,WACA,OAAA5kB,KADA,GAIA,IAEA4kB,KAAA,IAAAC,SAAA,iBACC,MAAA5Z,GAED,kBAAAiN,SAAA0M,EAAA1M,QAMAtY,EAAAC,QAAA+kB,iBChBA,IAKAE,EACAC,EANAC,EAAAplB,EAAAC,QAAA,GAQA,SAAAolB,IACA,UAAAvgB,MAAA,mCAGA,SAAAwgB,IACA,UAAAxgB,MAAA,qCAyBA,SAAAygB,EAAAC,GACA,GAAAN,IAAAO,WAEA,OAAAA,WAAAD,EAAA,GAIA,IAAAN,IAAAG,IAAAH,IAAAO,WAEA,OADAP,EAAAO,WACAA,WAAAD,EAAA,GAGA,IAEA,OAAAN,EAAAM,EAAA,GACG,MAAAna,GACH,IAEA,OAAA6Z,EAAAhjB,KAAA,KAAAsjB,EAAA,GACK,MAAAna,GAEL,OAAA6Z,EAAAhjB,KAAA9B,KAAAolB,EAAA,MA3CA,WACA,IAEAN,EADA,oBAAAO,WACAA,WAEAJ,EAEG,MAAAha,GACH6Z,EAAAG,EAGA,IAEAF,EADA,oBAAAO,aACAA,aAEAJ,EAEG,MAAAja,GACH8Z,EAAAG,GAlBA,GA2EA,IAEAK,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAIAE,GAAA,EAEAF,EAAA5jB,OACA6jB,EAAAD,EAAA1Z,OAAA2Z,GAEAE,GAAA,EAGAF,EAAA7jB,QACAikB,KAIA,SAAAA,IACA,IAAAH,EAAA,CAIA,IAAAI,EAAAV,EAAAQ,GACAF,GAAA,EAGA,IAFA,IAAA3f,EAAA0f,EAAA7jB,OAEAmE,GAAA,CAIA,IAHAyf,EAAAC,EACAA,EAAA,KAEAE,EAAA5f,GACAyf,GACAA,EAAAG,GAAAI,MAIAJ,GAAA,EACA5f,EAAA0f,EAAA7jB,OAGA4jB,EAAA,KACAE,GAAA,EA1EA,SAAAM,GACA,GAAAhB,IAAAO,aAEA,OAAAA,aAAAS,GAIA,IAAAhB,IAAAG,IAAAH,IAAAO,aAEA,OADAP,EAAAO,aACAA,aAAAS,GAGA,IAEAhB,EAAAgB,GACG,MAAA9a,GACH,IAEA,OAAA8Z,EAAAjjB,KAAA,KAAAikB,GACK,MAAA9a,GAGL,OAAA8Z,EAAAjjB,KAAA9B,KAAA+lB,KAqDAC,CAAAH,IAoBA,SAAAI,EAAAb,EAAArgB,GACA/E,KAAAolB,MACAplB,KAAA+E,QAeA,SAAAmhB,KAlCAlB,EAAAmB,SAAA,SAAAf,GACA,IAAAxN,EAAA,IAAArX,MAAAY,UAAAQ,OAAA,GAEA,GAAAR,UAAAQ,OAAA,EACA,QAAAD,EAAA,EAAmBA,EAAAP,UAAAQ,OAAsBD,IACzCkW,EAAAlW,EAAA,GAAAP,UAAAO,GAIA8jB,EAAA1c,KAAA,IAAAmd,EAAAb,EAAAxN,IAEA,IAAA4N,EAAA7jB,QAAA8jB,GACAN,EAAAS,IAUAK,EAAArlB,UAAAklB,IAAA,WACA9lB,KAAAolB,IAAAlkB,MAAA,KAAAlB,KAAA+E,QAGAigB,EAAAoB,MAAA,UACApB,EAAAqB,SAAA,EACArB,EAAAsB,IAAA,GACAtB,EAAAuB,KAAA,GACAvB,EAAAwB,QAAA,GAEAxB,EAAAyB,SAAA,GAIAzB,EAAA0B,GAAAR,EACAlB,EAAA2B,YAAAT,EACAlB,EAAA4B,KAAAV,EACAlB,EAAA6B,IAAAX,EACAlB,EAAA8B,eAAAZ,EACAlB,EAAA+B,mBAAAb,EACAlB,EAAAgC,KAAAd,EACAlB,EAAAiC,gBAAAf,EACAlB,EAAAkC,oBAAAhB,EAEAlB,EAAAjO,UAAA,SAAAoQ,GACA,UAGAnC,EAAAoC,QAAA,SAAAD,GACA,UAAAziB,MAAA,qCAGAsgB,EAAAqC,IAAA,WACA,WAGArC,EAAAsC,MAAA,SAAArgB,GACA,UAAAvC,MAAA,mCAGAsgB,EAAAuC,MAAA,WACA,wCC7LAnnB,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAud,EAAiBxe,EAAQ,IAEzB0nB,EAAuB1nB,EAAQ,GAE/B2nB,EAA2B3nB,EAAQ,IAEnCqiB,EAAoBriB,EAAQ,GAE5B4nB,EAA0B5nB,EAAQ,GAUlC6nB,EAEA,WACA,SAAAA,KAmRA,OAxQAA,EAAA/mB,UAAAgnB,OAAA,SAAA1I,EAAA2I,GACA,IACA,OAAA7nB,KAAA8nB,SAAA5I,EAAA2I,GACK,MAAAE,GAGL,GAFAF,IAAA,IAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA4mB,aAEA9I,EAAA+I,oBAAA,CACA,IAAAC,EAAAhJ,EAAAiJ,yBACAzT,EAAA1U,KAAA8nB,SAAAI,EAAAL,GAEAxE,EAAA3O,EAAAuO,oBACAmF,EAAA,IAEA,OAAA/E,IAAA,IAAAA,EAAAxD,IAAA4H,EAAArmB,QAAAinB,eAEAD,GAAA/E,EAAAxD,IAAA4H,EAAArmB,QAAAinB,aAAA,KAGA3T,EAAAwO,YAAAuE,EAAArmB,QAAAinB,YAAAD,GAEA,IAAAE,EAAA5T,EAAAqO,kBAEA,UAAAuF,EAGA,IAFA,IAAAzJ,EAAAqJ,EAAA/H,YAEAze,EAAA,EAAyBA,EAAA4mB,EAAA3mB,OAAmBD,IAC5C4mB,EAAA5mB,GAAA,IAAAygB,EAAA/gB,QAAAyd,EAAAyJ,EAAA5mB,GAAAY,OAAA,EAAAgmB,EAAA5mB,GAAAW,QAIA,OAAAqS,EAEA,UAAAgT,EAAAtmB,UAMAumB,EAAA/mB,UAAA2nB,MAAA,aAkBAZ,EAAA/mB,UAAAknB,SAAA,SAAA5I,EAAA2I,GACA,IAKAW,EALA5J,EAAAM,EAAAgB,WACArB,EAAAK,EAAAiB,YACAG,EAAA,IAAAhC,EAAAld,QAAAwd,GACA6J,EAAAZ,IAAA,IAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA4mB,YACAU,EAAA5e,KAAA0C,IAAA,EAAAqS,IAAA4J,EAAA,MAIAD,EADAC,EACA5J,EAEA,GAKA,IAFA,IAAA8J,EAAA7e,KAAA8e,MAAA/J,EAAA,GAEA1c,EAAA,EAAmBA,EAAAqmB,EAAcrmB,IAAA,CAEjC,IAAA0mB,EAAA/e,KAAA8e,OAAAzmB,EAAA,MAGA2mB,EAAAH,EAAAD,GAFA,OAAAvmB,GAEA0mB,MAEA,GAAAC,EAAA,GAAAA,GAAAjK,EAEA,MAIA,IACAyB,EAAApB,EAAA6J,YAAAD,EAAAxI,GACO,MAAA0I,GACP,SAgDA,IA7CA,IAAAC,EAAA,SAAAC,GACA,OAAAA,IAEA5I,EAAAgB,UAMAuG,IAAA,IAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA+nB,6BAAA,CACA,IAAAC,EAAA,IAAAjG,IACA0E,EAAA1V,QAAA,SAAAkX,EAAAxnB,GACA,OAAAunB,EAAAxY,IAAA/O,EAAAwnB,KAEAD,EAAAE,OAAA9B,EAAApmB,QAAA+nB,4BACAtB,EAAAuB,EAIA,IAEA,IAAA1U,EAAA6U,EAAAC,UAAAV,EAAAxI,EAAAuH,GAEA,OAAAqB,EAAA,CAEAxU,EAAAwO,YAAAuE,EAAArmB,QAAAinB,YAAA,KAEA,IAAAC,EAAA5T,EAAAqO,kBAEA,OAAAuF,IACAA,EAAA,OAAAnG,EAAA/gB,QAAAwd,EAAA0J,EAAA,GAAAjmB,OAAA,EAAAimB,EAAA,GAAAhmB,QACAgmB,EAAA,OAAAnG,EAAA/gB,QAAAwd,EAAA0J,EAAA,GAAAjmB,OAAA,EAAAimB,EAAA,GAAAhmB,SAIA,OACAvB,MAAA2T,GAES,MAAA+U,MAITF,EAAAvpB,KAGAkpB,EAAA,EAA2BA,EAAA,EAAaA,IAAA,CACxC,IAAAQ,EAAAT,EAAAC,GAEA,qBAAAQ,EAAA,OAAAA,EAAA3oB,OAIA,UAAA2mB,EAAAtmB,SAiBAumB,EAAAgC,cAAA,SAAArJ,EAAA5W,EAAAkgB,GAGA,IAFA,IAAAC,EAAAD,EAAAjoB,OAEA+R,EAAA,EAAuBA,EAAAmW,EAAqBnW,IAC5CkW,EAAAlW,GAAA,EAGA,IAAA/J,EAAA2W,EAAAS,UAEA,GAAArX,GAAAC,EACA,UAAA+d,EAAAtmB,QAOA,IAJA,IAAA0oB,GAAAxJ,EAAAT,IAAAnW,GACAqgB,EAAA,EACAroB,EAAAgI,EAEAhI,EAAAiI,GAAA,CACA,GAAA2W,EAAAT,IAAAne,KAAAooB,EACAF,EAAAG,SACO,CACP,KAAAA,IAAAF,EACA,MAEAD,EAAAG,GAAA,EACAD,KAIApoB,IAKA,GAAAqoB,IAAAF,IAAAE,IAAAF,EAAA,GAAAnoB,IAAAiI,GACA,UAAA+d,EAAAtmB,SAIAumB,EAAAqC,uBAAA,SAAA1J,EAAA5W,EAAAkgB,GAKA,IAHA,IAAAK,EAAAL,EAAAjoB,OACA2S,EAAAgM,EAAAT,IAAAnW,GAEAA,EAAA,GAAAugB,GAAA,GACA3J,EAAAT,MAAAnW,KAAA4K,IACA2V,IACA3V,MAIA,GAAA2V,GAAA,EACA,UAAAvC,EAAAtmB,QAGAumB,EAAAgC,cAAArJ,EAAA5W,EAAA,EAAAkgB,IAcAjC,EAAAuC,qBAAA,SAAAN,EAAAO,EAAAC,GAKA,IAJA,IAAAP,EAAAD,EAAAjoB,OACA0oB,EAAA,EACAC,EAAA,EAEA5oB,EAAA,EAAmBA,EAAAmoB,EAAiBnoB,IACpC2oB,GAAAT,EAAAloB,GACA4oB,GAAAH,EAAAzoB,GAGA,GAAA2oB,EAAAC,EAGA,OAAAniB,OAAAoiB,kBAGA,IAAAC,EAAAH,EAAAC,EACAF,GAAAI,EAGA,IAFA,IAAAC,EAAA,EAEAtoB,EAAA,EAAmBA,EAAA0nB,EAAiB1nB,IAAA,CACpC,IAAAuoB,EAAAd,EAAAznB,GACAwoB,EAAAR,EAAAhoB,GAAAqoB,EACAI,EAAAF,EAAAC,EAAAD,EAAAC,IAAAD,EAEA,GAAAE,EAAAR,EACA,OAAAjiB,OAAAoiB,kBAGAE,GAAAG,EAGA,OAAAH,EAAAJ,GAGA1C,EApRA,GAuRA9nB,EAAAuB,QAAAumB,gCChUA7nB,EAAAI,EAAA6B,EAAA,sBAAA8oB,IAAA/qB,EAAAI,EAAA6B,EAAA,sBAAA+oB,IAAAhrB,EAAAI,EAAA6B,EAAA,sBAAAgpB,IAAAjrB,EAAAI,EAAA6B,EAAA,sBAAAipB,IAAA,IAAAC,EAAAnrB,EAAA,KAAAorB,EAAAprB,EAAAgH,EAAAmkB,GAAAE,EAAArrB,EAAA,IAAAsrB,EAAAtrB,EAAA,GAAAurB,EAAAvrB,EAAAgH,EAAAskB,GAAAE,GAAAxrB,EAAA,IAAAA,EAAA,KAAAyrB,EAAAzrB,EAAA,IAAA0rB,EAAA1rB,EAAA,IAAA2rB,EAAA3rB,EAAAgH,EAAA0kB,GAAAE,EAAA5rB,EAAA,GAAA6rB,GAAA7rB,EAAA,IAAAA,EAAA,KAoBAkrB,GApBAlrB,EAAA,KAaA,SAAAqnB,GACA,IAAA6D,EAAgBE,MAGhB,OAFAF,EAAAY,SAAAC,YAAA1E,EAAA,YACA6D,EAAAc,SAAAD,YAAA1E,EAAA,YACA6D,EAKAe,CAAA,WAKAhB,EAEA,SAAAiB,GAYA,SAAAjB,EAAApS,GACA,IAAArG,EA0BA,OAxBAA,EAAA0Z,EAAAlqB,KAAA9B,KAAA2Y,IAAA3Y,MACAoW,MAAA,CACAJ,SAAA2C,EAAAD,QAAA1C,UAOA1D,EAAA2Z,YAAA,EACA3Z,EAAA4Z,iBAAA,KAEAvT,EAAAwT,gBACA7Z,EAAA8J,SAAAzD,EAAAD,QAAAyD,OAAA,SAAAnG,GACA1D,EAAA2Z,WACA3Z,EAAA4H,SAAA,CACAlE,aAGA1D,EAAA4Z,iBAAAlW,KAKA1D,EAtCElS,OAAA+qB,EAAA,EAAA/qB,CAAc2qB,EAAAiB,GAEhBjB,EAAAqB,iBAAA,SAAA7Y,GACA,OACAiC,KAAA,IACA6W,IAAA,IACAC,OAAA,GACAC,QAAA,MAAAhZ,IAkCA,IAAAiZ,EAAAzB,EAAAnqB,UA4BA,OA1BA4rB,EAAAC,kBAAA,WACAzsB,KAAAisB,YAAA,EAEAjsB,KAAAksB,kBACAlsB,KAAAka,SAAA,CACAlE,SAAAhW,KAAAksB,oBAKAM,EAAAE,qBAAA,WACA1sB,KAAAoc,UAAApc,KAAAoc,YAGAoQ,EAAAG,OAAA,WACA,OAAWtB,EAAAzf,EAAKwM,cAAA4S,EAAAY,SAAA,CAChBgB,SAAA5sB,KAAA2Y,MAAAiU,UAAA,KACA7rB,MAAA,CACA2X,QAAA1Y,KAAA2Y,MAAAD,QACA1C,SAAAhW,KAAAoW,MAAAJ,SACAvJ,MAAAse,EAAAqB,iBAAApsB,KAAAoW,MAAAJ,SAAAzC,UACA4Y,cAAAnsB,KAAA2Y,MAAAwT,kBAKApB,EAtEA,CAuEEM,EAAAzf,EAAKihB,WA6CLxB,EAAAzf,EAAKihB,UAgBP,IAAAC,EAEA,SAAAd,GAGA,SAAAc,IACA,OAAAd,EAAA9qB,MAAAlB,KAAAmB,YAAAnB,KAHEI,OAAA+qB,EAAA,EAAA/qB,CAAc0sB,EAAAd,GAMhB,IAAAQ,EAAAM,EAAAlsB,UAkBA,OAhBA4rB,EAAAC,kBAAA,WACAzsB,KAAA2Y,MAAAoU,SAAA/sB,KAAA2Y,MAAAoU,QAAAjrB,KAAA9B,YAGAwsB,EAAAQ,mBAAA,SAAAC,GACAjtB,KAAA2Y,MAAAuU,UAAAltB,KAAA2Y,MAAAuU,SAAAprB,KAAA9B,UAAAitB,IAGAT,EAAAE,qBAAA,WACA1sB,KAAA2Y,MAAAwU,WAAAntB,KAAA2Y,MAAAwU,UAAArrB,KAAA9B,YAGAwsB,EAAAG,OAAA,WACA,aAGAG,EAzBA,CA0BEzB,EAAAzf,EAAKihB,WAwCP,IAAAO,EAAA,GACAC,EAAA,IACAC,EAAA,EAkBA,SAAAC,EAAA/X,EAAA8W,GASA,YARA,IAAA9W,IACAA,EAAA,UAGA,IAAA8W,IACAA,EAAA,IAGA,MAAA9W,IAzBA,SAAAA,GACA,GAAA4X,EAAA5X,GAAA,OAAA4X,EAAA5X,GACA,IAAAgY,EAAkB/B,EAAA7f,EAAY6hB,QAAAjY,GAO9B,OALA8X,EAAAD,IACAD,EAAA5X,GAAAgY,EACAF,KAGAE,EAgBAE,CAAAlY,EAAAkY,CAAApB,EAAA,CACAqB,QAAA,IAQA,SAAA9C,EAAAhR,GACA,IAAA+T,EAAA/T,EAAA+T,cACA9Z,EAAA+F,EAAA/F,GACA+Z,EAAAhU,EAAA/Q,KACAA,OAAA,IAAA+kB,KACA,OAASxC,EAAAzf,EAAKwM,cAAA4S,EAAAc,SAAA,cAAAgC,GACdA,GAAiI1tB,OAAAmrB,EAAA,EAAAnrB,EAAS,GAC1I,IAAAsY,EAAAoV,EAAApV,QACAyT,EAAA2B,EAAA3B,cACA4B,EAAAjlB,EAAA4P,EAAA5P,KAAA4P,EAAAvH,QACA6E,EAAmB5V,OAAAkrB,EAAA,EAAAlrB,CAAcwtB,EAAA,kBAAA9Z,EAAAyZ,EAAAzZ,EAAA8Z,EAAAtB,QAAmFlsB,OAAAsrB,EAAA,EAAAtrB,CAAQ,GAAG0T,EAAA,CAC/HP,SAAAga,EAAAzZ,EAAAP,SAAAqa,EAAAtB,UACKxY,GAGL,OAAAqY,GACA4B,EAAA/X,GACA,MAGWqV,EAAAzf,EAAKwM,cAAA0U,EAAA,CAChBC,QAAA,WACAgB,EAAA/X,IAEAkX,SAAA,SAAA3I,EAAA0I,GACa7sB,OAAAkrB,EAAA,EAAAlrB,CAAiB6sB,EAAAnZ,GAAAkC,IAC9B+X,EAAA/X,IAGAlC,SAaA,IAAAka,EAAA,GACAC,EAAA,IACAC,EAAA,EAyBA,SAAAC,EAAA5a,EAAA6a,QACA,IAAAA,IACAA,EAAA,IAGA,kBAAAA,MAAA,CACA5Y,KAAA4Y,IAEA,IAAAC,EAAAD,EACA5Y,EAAA6Y,EAAA7Y,KACA8Y,EAAAD,EAAAE,MACAA,OAAA,IAAAD,KACAE,EAAAH,EAAAI,OACAA,OAAA,IAAAD,KACAE,EAAAL,EAAAM,UACAA,OAAA,IAAAD,KAEA,MADA,GAAA7iB,OAAA2J,GACAoZ,OAAA,SAAAC,EAAArZ,GACA,GAAAqZ,EAAA,OAAAA,EAEA,IAAAC,EA3CA,SAAAtZ,EAAA4Y,GACA,IAAAW,EAAA,GAAAX,EAAAzkB,IAAAykB,EAAAK,OAAAL,EAAAO,UACAK,EAAAhB,EAAAe,KAAAf,EAAAe,GAAA,IACA,GAAAC,EAAAxZ,GAAA,OAAAwZ,EAAAxZ,GACA,IAAA1D,EAAA,GAEA4C,EAAA,CACAua,OAFexD,IAAYjW,EAAA1D,EAAAsc,GAG3Btc,QAQA,OALAoc,EAAAD,IACAe,EAAAxZ,GAAAd,EACAwZ,KAGAxZ,EA2BAwa,CAAA1Z,EAAA,CACA7L,IAAA4kB,EACAE,SACAE,cAEAM,EAAAH,EAAAG,OACAnd,EAAAgd,EAAAhd,KAEArF,EAAAwiB,EAAAE,KAAA5b,GACA,IAAA9G,EAAA,YACA,IAAA4f,EAAA5f,EAAA,GACA2iB,EAAA3iB,EAAA/G,MAAA,GACA6mB,EAAAhZ,IAAA8Y,EACA,OAAAkC,IAAAhC,EAAA,KACA,CACA/W,OAEA6W,IAAA,MAAA7W,GAAA,KAAA6W,EAAA,IAAAA,EAEAE,UAEAD,OAAAxa,EAAA8c,OAAA,SAAAS,EAAAxtB,EAAA6R,GAEA,OADA2b,EAAAxtB,EAAAslB,MAAAiI,EAAA1b,GACA2b,GACO,MAEJ,MAWH,IAAAvE,EAEA,SAAAkB,GAGA,SAAAlB,IACA,OAAAkB,EAAA9qB,MAAAlB,KAAAmB,YAAAnB,KAgDA,OAnDEI,OAAA+qB,EAAA,EAAA/qB,CAAc0qB,EAAAkB,GAMhBlB,EAAAlqB,UAEA+rB,OAAA,WACA,IAAAra,EAAAtS,KAEA,OAAWqrB,EAAAzf,EAAKwM,cAAA4S,EAAAc,SAAA,cAAAgC,GAChBA,GAAgI1tB,OAAAmrB,EAAA,EAAAnrB,EAAS,GACzI,IAAA4V,EAAA1D,EAAAqG,MAAA3C,UAAA8X,EAAA9X,SACAvJ,EAAA6F,EAAAqG,MAAAiV,cAAAtb,EAAAqG,MAAAiV,cACAtb,EAAAqG,MAAAnD,KAAA2Y,EAAAnY,EAAAzC,SAAAjB,EAAAqG,OAAAmV,EAAArhB,MAEAkM,EAAkBvY,OAAAsrB,EAAA,EAAAtrB,CAAQ,GAAG0tB,EAAA,CAC7B9X,WACAvJ,UAGA6iB,EAAAhd,EAAAqG,MACAiU,EAAA0C,EAAA1C,SACA2C,EAAAD,EAAAC,UACA5C,EAAA2C,EAAA3C,QAGApsB,MAAAyD,QAAA4oB,IAAA,IAAAA,EAAAjrB,SACAirB,EAAA,MAGA,oBAAAA,UAGA1nB,KAFA0nB,IAAAjU,MAQAiU,EAAA,OAIA,OAAavB,EAAAzf,EAAKwM,cAAA4S,EAAAY,SAAA,CAClB7qB,MAAA4X,GACOiU,IA1DP,SAAAA,GACA,OAAc,IAALvB,EAAAzf,EAAK4jB,SAAAC,MAAA7C,GAyDP8C,CAAA9C,KAAAjU,EAAAlM,MAAA8iB,EAAgFlE,EAAAzf,EAAKwM,cAAAmX,EAAA5W,GAAAgU,IAAAhU,GAAA,cAI5FmS,EApDA,CAqDEO,EAAAzf,EAAKihB,WA8BP,SAAAtX,EAAAC,GACA,YAAAA,EAAAhC,OAAA,GAAAgC,EAAA,IAAAA,EAUA,SAAAE,EAAAgE,EAAA1D,GACA,IAAA0D,EAAA,OAAA1D,EACA,IAAA2Z,EAAApa,EAAAmE,GACA,WAAA1D,EAAAzC,SAAAnM,QAAAuoB,GAAA3Z,EACS5V,OAAAsrB,EAAA,EAAAtrB,CAAQ,GAAG4V,EAAA,CACpBzC,SAAAyC,EAAAzC,SAAA/K,OAAAmnB,EAAAhuB,UAIA,SAAAiuB,EAAA5Z,GACA,wBAAAA,IAAmD5V,OAAAkrB,EAAA,EAAAlrB,CAAU4V,GAG7D,SAAA6Z,EAAAC,GACA,kBACgH1vB,OAAAmrB,EAAA,EAAAnrB,EAAS,IAIzH,SAAA8lB,KAqFEmF,EAAAzf,EAAKihB,UAyDLxB,EAAAzf,EAAKihB,wCCxoBPzsB,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAgvB,EAEA,WACA,SAAAA,EAAAhvB,QACA,IAAAA,IACAA,EAAA,IAGAf,KAAAe,QAqCA,OAlCAgvB,EAAAnvB,UAAAqhB,OAAA,SAAA+N,GAOA,OALAhwB,KAAAe,OADA,kBAAAivB,EACAA,EAAAptB,WAEA8E,OAAAgD,aAAAslB,GAGAhwB,MAGA+vB,EAAAnvB,UAAAe,OAAA,WACA,OAAA3B,KAAAe,MAAAY,QAGAouB,EAAAnvB,UAAA4S,OAAA,SAAA1M,GACA,OAAA9G,KAAAe,MAAAyS,OAAA1M,IAGAipB,EAAAnvB,UAAAqvB,aAAA,SAAAnpB,GACA9G,KAAAe,MAAAf,KAAAe,MAAAyH,OAAA,EAAA1B,GAAA9G,KAAAe,MAAA8b,UAAA/V,EAAA,IAGAipB,EAAAnvB,UAAAsvB,UAAA,SAAAppB,EAAAuC,GACArJ,KAAAe,MAAAf,KAAAe,MAAAyH,OAAA,EAAA1B,GAAAuC,EAAArJ,KAAAe,MAAAyH,OAAA1B,EAAA,IAGAipB,EAAAnvB,UAAAgC,SAAA,WACA,OAAA5C,KAAAe,OAGAgvB,EAAAnvB,UAAAuvB,OAAA,SAAArpB,EAAAuC,GACArJ,KAAAe,MAAAf,KAAAe,MAAAyH,OAAA,EAAA1B,GAAAuC,EAAArJ,KAAAe,MAAAyH,OAAA1B,EAAAuC,EAAA1H,SAGAouB,EA3CA,GA8CAlwB,EAAAuB,QAAA2uB,gCCtDAjwB,EAAAI,EAAA6B,EAAA,sBAAAquB,IAAAtwB,EAAAI,EAAA6B,EAAA,sBAAAsuB,IAAA,IAAAC,EAAAxwB,EAAA,IAAAywB,EAAAzwB,EAAA,GAAA0wB,EAAA1wB,EAAAgH,EAAAypB,GAAAE,EAAA3wB,EAAA,IAAA4wB,EAAA5wB,EAAA,IAAA6wB,GAAA7wB,EAAA,IAAAA,EAAA,IAAA8wB,EAAA9wB,EAAA,IAAA+wB,EAAA/wB,EAAA,IAyCE0wB,EAAA5kB,EAAKihB,UAoBP,IAAAuD,EAEA,SAAApE,GAGA,SAAAoE,IAGA,IAFA,IAAA9d,EAEAqF,EAAAxW,UAAAQ,OAAAiW,EAAA,IAAArX,MAAAoX,GAAAE,EAAA,EAAuEA,EAAAF,EAAaE,IACpFD,EAAAC,GAAA1W,UAAA0W,GAKA,OAFAvF,EAAA0Z,EAAAlqB,KAAAZ,MAAA8qB,EAAA,CAAAhsB,MAAA6L,OAAA+L,KAAA5X,MACA0Y,QAAoBtY,OAAAswB,EAAA,EAAAtwB,CAAiBkS,EAAAqG,OACrCrG,EAYA,OAvBElS,OAAAkwB,EAAA,EAAAlwB,CAAcgwB,EAAApE,GAchBoE,EAAAxvB,UAEA+rB,OAAA,WACA,OAAW6D,EAAA5kB,EAAKwM,cAAeqY,EAAA,EAAM,CACrC/X,QAAA1Y,KAAA0Y,QACAkU,SAAA5sB,KAAA2Y,MAAAiU,YAIAwD,EAxBA,CAyBEI,EAAA5kB,EAAKihB,WAuBP,IAAAiE,EAEA,SAAA9E,GAGA,SAAA8E,IACA,OAAA9E,EAAA9qB,MAAAlB,KAAAmB,YAAAnB,KAHEI,OAAAkwB,EAAA,EAAAlwB,CAAc0wB,EAAA9E,GAMhB,IAAAQ,EAAAsE,EAAAlwB,UAwCA,OAtCA4rB,EAAAuE,YAAA,SAAA1W,EAAA3B,IACA1Y,KAAA2Y,MAAAqY,SAAAhxB,KAAA2Y,MAAAqY,QAAA3W,GAEAA,EAAA4W,kBACA,IAAA5W,EAAA6W,QACAlxB,KAAA2Y,MAAAlX,QAAA,UAAAzB,KAAA2Y,MAAAlX,QAxBA,SAAA4Y,GACA,SAAAA,EAAA8W,SAAA9W,EAAA+W,QAAA/W,EAAAgX,SAAAhX,EAAAiX,UAwBAC,CAAAlX,MAEAA,EAAAmX,kBACAxxB,KAAA2Y,MAAAxH,QAAAuH,EAAAvH,QAAAuH,EAAA5P,MACA9I,KAAA2Y,MAAA7E,MAIA0Y,EAAAG,OAAA,WACA,IAAAra,EAAAtS,KAEAsvB,EAAAtvB,KAAA2Y,MACA8Y,EAAAnC,EAAAmC,SAEA3d,GADAwb,EAAAne,QACAme,EAAAxb,IACA4d,EAAetxB,OAAAwwB,EAAA,EAAAxwB,CAA6BkvB,EAAA,6BAG5C,OAAWkB,EAAA5kB,EAAKwM,cAAeqY,EAAA,EAAe3E,SAAA,cAAAd,GAC9CA,GAA4H5qB,OAAAywB,EAAA,EAAAzwB,EAAS,GACrI,IAAA4V,EAAA,kBAAAlC,EAA8C1T,OAAAswB,EAAA,EAAAtwB,CAAc0T,EAAA,UAAAkX,EAAAhV,UAAAlC,EAC5D4H,EAAA1F,EAAAgV,EAAAtS,QAAA0C,WAAApF,GAAA,GACA,OAAawa,EAAA5kB,EAAKwM,cAAA,IAAoBhY,OAAAuwB,EAAA,EAAAvwB,CAAQ,GAAGsxB,EAAA,CACjDV,QAAA,SAAA3W,GACA,OAAA/H,EAAAye,YAAA1W,EAAA2Q,EAAAtS,UAEAgD,OACAiW,IAAAF,QAKAX,EA/CA,CAgDEN,EAAA5kB,EAAKihB,WA8BP,SAAAwD,EAAAxW,GACA,IAAA+X,EAAA/X,EAAA,gBACAgY,OAAA,IAAAD,EAAA,OAAAA,EACAE,EAAAjY,EAAAkY,gBACAA,OAAA,IAAAD,EAAA,SAAAA,EACAE,EAAAnY,EAAAmY,YACAC,EAAApY,EAAAqY,UACA3D,EAAA1U,EAAA0U,MACA4D,EAAAtY,EAAArC,SACAxB,EAAA6D,EAAA7D,SACAyY,EAAA5U,EAAA4U,OACA2D,EAAAvY,EAAAwY,MACAve,EAAA+F,EAAA/F,GACA4d,EAAatxB,OAAAwwB,EAAA,EAAAxwB,CAA6ByZ,EAAA,kHAE1CrE,EAAA,kBAAA1B,IAAAP,SAAAO,EAEAwe,EAAA9c,KAAArE,QAAA,6BAAuD,QACvD,OAASqf,EAAA5kB,EAAKwM,cAAeqY,EAAA,EAAK,CAClCjb,KAAA8c,EACA/D,QACAE,SACAzY,WACA4W,SAAA,SAAA2F,GACA,IAAAvc,EAAAuc,EAAAvc,SACAvJ,EAAA8lB,EAAA9lB,MACA+K,KAAA2a,IAAA1lB,EAAAuJ,GAAAvJ,GACAylB,EAAA1a,EAzCA,WACA,QAAAG,EAAAxW,UAAAQ,OAAA6wB,EAAA,IAAAjyB,MAAAoX,GAAAE,EAAA,EAA2EA,EAAAF,EAAaE,IACxF2a,EAAA3a,GAAA1W,UAAA0W,GAGA,OAAA2a,EAAAxgB,OAAA,SAAAtQ,GACA,OAAAA,IACGgL,KAAA,KAkCH+lB,CAAAR,EAAAF,GAAAE,EACAI,EAAA7a,EAA6BpX,OAAAuwB,EAAA,EAAAvwB,CAAQ,GAAGgyB,EAAAJ,GAAAI,EACxC,OAAa5B,EAAA5kB,EAAKwM,cAAA0Y,EAAqB1wB,OAAAuwB,EAAA,EAAAvwB,CAAQ,CAC/CsyB,eAAAlb,GAAAqa,GAAA,KACAK,YACAG,QACAve,MACO4d,uBCjOP,oBAAAtxB,OAAAS,OAEAjB,EAAAC,QAAA,SAAA8yB,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAA/xB,UAAAR,OAAAS,OAAA+xB,EAAAhyB,UAAA,CACAD,YAAA,CACAI,MAAA4xB,EACAjhB,YAAA,EACAC,UAAA,EACApG,cAAA,MAMA3L,EAAAC,QAAA,SAAA8yB,EAAAC,GACAD,EAAAE,OAAAD,EAEA,IAAAE,EAAA,aAEAA,EAAAlyB,UAAAgyB,EAAAhyB,UACA+xB,EAAA/xB,UAAA,IAAAkyB,EACAH,EAAA/xB,UAAAD,YAAAgyB,iCCKA,IAAAI,EAAUjzB,EAAQ,IAMlBkzB,EAAA5yB,OAAA0R,MAAA,SAAAlM,GACA,IAAAkM,EAAA,GAEA,QAAAjQ,KAAA+D,EACAkM,EAAAhJ,KAAAjH,GAGA,OAAAiQ,GAKAlS,EAAAC,QAAAozB,EAGA,IAAAC,EAAWpzB,EAAQ,IAEnBozB,EAAAC,SAAgBrzB,EAAQ,IAGxB,IAAAszB,EAAetzB,EAAQ,IAEvBuzB,EAAevzB,EAAQ,IAEvBozB,EAAAC,SAAAF,EAAAG,GAKA,IAFA,IAAAthB,EAAAkhB,EAAAK,EAAAzyB,WAEA0yB,EAAA,EAAiBA,EAAAxhB,EAAAnQ,OAAiB2xB,IAAA,CAClC,IAAAvF,EAAAjc,EAAAwhB,GACAL,EAAAryB,UAAAmtB,KAAAkF,EAAAryB,UAAAmtB,GAAAsF,EAAAzyB,UAAAmtB,IAIA,SAAAkF,EAAA7E,GACA,KAAApuB,gBAAAizB,GAAA,WAAAA,EAAA7E,GACAgF,EAAAtxB,KAAA9B,KAAAouB,GACAiF,EAAAvxB,KAAA9B,KAAAouB,GACAA,IAAA,IAAAA,EAAAmF,WAAAvzB,KAAAuzB,UAAA,GACAnF,IAAA,IAAAA,EAAAzc,WAAA3R,KAAA2R,UAAA,GACA3R,KAAAwzB,eAAA,EACApF,IAAA,IAAAA,EAAAoF,gBAAAxzB,KAAAwzB,eAAA,GACAxzB,KAAA4mB,KAAA,MAAA6M,GAaA,SAAAA,IAGAzzB,KAAAwzB,eAAAxzB,KAAA0zB,eAAAC,OAGAZ,EAAA5M,SAAAyN,EAAA5zB,MAGA,SAAA4zB,EAAArP,GACAA,EAAA5a,MApBAvJ,OAAAU,eAAAmyB,EAAAryB,UAAA,yBAIA8Q,YAAA,EACAmO,IAAA,WACA,OAAA7f,KAAA0zB,eAAAG,iBAiBAzzB,OAAAU,eAAAmyB,EAAAryB,UAAA,aACAif,IAAA,WACA,YAAA3a,IAAAlF,KAAA8zB,qBAAA5uB,IAAAlF,KAAA0zB,iBAIA1zB,KAAA8zB,eAAAC,WAAA/zB,KAAA0zB,eAAAK,YAEAnjB,IAAA,SAAA7P,QAGAmE,IAAAlF,KAAA8zB,qBAAA5uB,IAAAlF,KAAA0zB,iBAMA1zB,KAAA8zB,eAAAC,UAAAhzB,EACAf,KAAA0zB,eAAAK,UAAAhzB,MAIAkyB,EAAAryB,UAAAozB,SAAA,SAAAC,EAAAC,GACAl0B,KAAA8I,KAAA,MACA9I,KAAA2J,MACAopB,EAAA5M,SAAA+N,EAAAD,kCC7HA,IAAAl0B,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAozB,EAEA,SAAAlzB,GAGA,SAAAkzB,IACA,cAAAlzB,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAo0B,EAAAlzB,GAMAkzB,EAPA,CARkBr0B,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAA+yB,gCCjCA/zB,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAQA,IAAAqzB,EAEA,WACA,SAAAA,KAiFA,OA/EAA,EAAAxzB,UAAAwzB,UAAA,aAYAA,EAAAC,MAAA,SAAAn0B,GAGA,OAAAo0B,MAAAp0B,EAAA,EACAA,GAAAiI,OAAAosB,iBAAApsB,OAAAosB,iBACAr0B,GAAAiI,OAAAqsB,iBAAArsB,OAAAqsB,iBAGAt0B,KAAA,aAaAk0B,EAAAjxB,SAAA,SAAAsxB,EAEAC,EAEAhxB,EAEAC,GAGA,IAAAgxB,EAAAF,EAAA/wB,EACAkxB,EAAAF,EAAA/wB,EACA,OAEAmG,KAAA+qB,KAAAF,IAAAC,MAsBAR,EAAAU,IAAA,SAAA/vB,GAGA,IAFA,IAAA0qB,EAAA,EAEA/tB,EAAA,EAAA2f,EAAAtc,EAAApD,OAA4CD,IAAA2f,EAAgB3f,IAAA,CAE5D+tB,GADA1qB,EAAArD,GAIA,OAAA+tB,GAGA2E,EAlFA,GAqFAv0B,EAAAuB,QAAAgzB,gCCpFA,IAAAW,EAZA30B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAaA,SAAAg0B,GAIAA,IAAA,iBASAA,IAAA,6BAWAA,IAAA,iCAMAA,IAAA,mDAKAA,IAAA,+BAMAA,IAAA,qCAMAA,IAAA,uCAKAA,IAAA,yCAKAA,IAAA,iDAMAA,IAAA,2DAMAA,IAAA,wDArEA,CAsECA,MAAA,KAEDl1B,EAAAuB,QAAA2zB,gCCtFA30B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAMA,IAAAwd,EAAeze,EAAQ,IAEvBk1B,EAAgBl1B,EAAQ,IAExB0e,EAAe1e,EAAQ,IAEvB4e,EAAiC5e,EAAQ,GAQzCm1B,EAIA,WAcA,SAAAA,EAAA1uB,EAEAwY,QACA7Z,IAAAqB,GACAvG,KAAAuG,KAAA,EACAvG,KAAA+e,KAAA,IAAAC,WAAA,KAEAhf,KAAAuG,OAGAvG,KAAA+e,UADA7Z,IAAA6Z,GAAA,OAAAA,EACAkW,EAAAC,UAAA3uB,GAEAwY,GAwaA,OAnaAkW,EAAAr0B,UAAAmgB,QAAA,WACA,OAAA/gB,KAAAuG,MAGA0uB,EAAAr0B,UAAAu0B,eAAA,WACA,OAAArrB,KAAA2F,OAAAzP,KAAAuG,KAAA,OAGA0uB,EAAAr0B,UAAAw0B,eAAA,SAAA7uB,GAGA,GAAAA,EAAA,GAAAvG,KAAA+e,KAAApd,OAAA,CACA,IAAA0zB,EAAAJ,EAAAC,UAAA3uB,GACAgY,EAAAnd,QAAAqR,UAAAzS,KAAA+e,KAAA,EAAAsW,EAAA,EAAAr1B,KAAA+e,KAAApd,QACA3B,KAAA+e,KAAAsW,IASAJ,EAAAr0B,UAAAif,IAAA,SAAAne,GAGA,YAAA1B,KAAA+e,KAAAjV,KAAA2F,MAAA/N,EAAA,YAAAA,KASAuzB,EAAAr0B,UAAAgQ,IAAA,SAAAlP,GAGA1B,KAAA+e,KAAAjV,KAAA2F,MAAA/N,EAAA,aAAAA,IASAuzB,EAAAr0B,UAAAmf,KAAA,SAAAre,GAGA1B,KAAA+e,KAAAjV,KAAA2F,MAAA/N,EAAA,aAAAA,IAUAuzB,EAAAr0B,UAAA00B,WAAA,SAAA1wB,GAGA,IAAA2B,EAAAvG,KAAAuG,KAEA,GAAA3B,GAAA2B,EACA,OAAAA,EAGA,IAAAwY,EAAA/e,KAAA+e,KACA6C,EAAA9X,KAAA2F,MAAA7K,EAAA,IACA2wB,EAAAxW,EAAA6C,GAEA2T,MAAA,OAAA3wB,IAAA,GAGA,IAFA,IAAAjD,EAAAod,EAAApd,OAEA,IAAA4zB,GAAA,CACA,KAAA3T,IAAAjgB,EACA,OAAA4E,EAGAgvB,EAAAxW,EAAA6C,GAGA,IAAAlN,EAAA,GAAAkN,EAAAoT,EAAA5zB,QAAAo0B,sBAAAD,GACA,OAAA7gB,EAAAnO,IAAAmO,GASAugB,EAAAr0B,UAAA60B,aAAA,SAAA7wB,GAGA,IAAA2B,EAAAvG,KAAAuG,KAEA,GAAA3B,GAAA2B,EACA,OAAAA,EAGA,IAAAwY,EAAA/e,KAAA+e,KACA6C,EAAA9X,KAAA2F,MAAA7K,EAAA,IACA2wB,GAAAxW,EAAA6C,GAEA2T,MAAA,OAAA3wB,IAAA,GAGA,IAFA,IAAAjD,EAAAod,EAAApd,OAEA,IAAA4zB,GAAA,CACA,KAAA3T,IAAAjgB,EACA,OAAA4E,EAGAgvB,GAAAxW,EAAA6C,GAGA,IAAAlN,EAAA,GAAAkN,EAAAoT,EAAA5zB,QAAAo0B,sBAAAD,GACA,OAAA7gB,EAAAnO,IAAAmO,GAWAugB,EAAAr0B,UAAAogB,QAAA,SAAAtf,EAEA2zB,GAGAr1B,KAAA+e,KAAAjV,KAAA2F,MAAA/N,EAAA,KAAA2zB,GAUAJ,EAAAr0B,UAAA80B,SAAA,SAAAhsB,EAEAC,GAGA,GAAAA,EAAAD,KAAA,GAAAC,EAAA3J,KAAAuG,KACA,UAAAmY,EAAAtd,QAGA,GAAAuI,IAAAD,EAAA,CAIAC,IAMA,IAJA,IAAAgsB,EAAA7rB,KAAA2F,MAAA/F,EAAA,IACAksB,EAAA9rB,KAAA2F,MAAA9F,EAAA,IACAoV,EAAA/e,KAAA+e,KAEArd,EAAAi0B,EAA0Bj0B,GAAAk0B,EAAcl0B,IAAA,CACxC,IAGAue,GAAA,IAFAve,EAAAk0B,EAAA,MAAAjsB,KAEA,IAHAjI,EAAAi0B,EAAA,KAAAjsB,IAIAqV,EAAArd,IAAAue,KAQAgV,EAAAr0B,UAAA6f,MAAA,WAIA,IAHA,IAAAjU,EAAAxM,KAAA+e,KAAApd,OACAod,EAAA/e,KAAA+e,KAEArd,EAAA,EAAmBA,EAAA8K,EAAS9K,IAC5Bqd,EAAArd,GAAA,GAcAuzB,EAAAr0B,UAAAi1B,QAAA,SAAAnsB,EAEAC,EAEA5I,GACA,GAAA4I,EAAAD,KAAA,GAAAC,EAAA3J,KAAAuG,KACA,UAAAmY,EAAAtd,QAGA,GAAAuI,IAAAD,EACA,SAGAC,IAMA,IAJA,IAAAgsB,EAAA7rB,KAAA2F,MAAA/F,EAAA,IACAksB,EAAA9rB,KAAA2F,MAAA9F,EAAA,IACAoV,EAAA/e,KAAA+e,KAEArd,EAAAi0B,EAA0Bj0B,GAAAk0B,EAAcl0B,IAAA,CACxC,IAGAue,GAAA,IAFAve,EAAAk0B,EAAA,MAAAjsB,KAEA,IAHAjI,EAAAi0B,EAAA,KAAAjsB,IAGA,WAIA,IAAAqV,EAAArd,GAAAue,MAAAlf,EAAAkf,EAAA,GACA,SAIA,UAGAgV,EAAAr0B,UAAAk1B,UAAA,SAAApU,GACA1hB,KAAAo1B,eAAAp1B,KAAAuG,KAAA,GAEAmb,IACA1hB,KAAA+e,KAAAjV,KAAA2F,MAAAzP,KAAAuG,KAAA,aAAAvG,KAAAuG,OAGAvG,KAAAuG,QAYA0uB,EAAAr0B,UAAAm1B,WAAA,SAAAh1B,EAEAwhB,GAGA,GAAAA,EAAA,GAAAA,EAAA,GACA,UAAA7D,EAAAtd,QAAA,qCAGApB,KAAAo1B,eAAAp1B,KAAAuG,KAAAgc,GACAviB,KAAA81B,UAEA,IAFA,IAEAE,EAAAzT,EAAmCyT,EAAA,EAAiBA,IACpDh2B,KAAA81B,UAAA,KAAA/0B,GAAAi1B,EAAA,OAIAf,EAAAr0B,UAAAq1B,eAAA,SAAAzzB,GACA,IAAA0zB,EAAA1zB,EAAA+D,KACAvG,KAAAo1B,eAAAp1B,KAAAuG,KAAA2vB,GACAl2B,KAAA81B,UAEA,IAFA,IAEAp0B,EAAA,EAAmBA,EAAAw0B,EAAex0B,IAClC1B,KAAA81B,UAAAtzB,EAAAqd,IAAAne,KAIAuzB,EAAAr0B,UAAAof,IAAA,SAAAxd,GACA,GAAAxC,KAAAuG,OAAA/D,EAAA+D,KACA,UAAAmY,EAAAtd,QAAA,qBAKA,IAFA,IAAA2d,EAAA/e,KAAA+e,KAEArd,EAAA,EAAA2f,EAAAtC,EAAApd,OAA2CD,EAAA2f,EAAc3f,IAGzDqd,EAAArd,IAAAc,EAAAuc,KAAArd,IAaAuzB,EAAAr0B,UAAAu1B,QAAA,SAAAC,EAEArxB,EAAAmD,EAEAmuB,GAGA,QAAA30B,EAAA,EAAmBA,EAAA20B,EAAc30B,IAAA,CAGjC,IAFA,IAAA40B,EAAA,EAEAtuB,EAAA,EAAqBA,EAAA,EAAOA,IAC5BhI,KAAA6f,IAAAuW,KACAE,GAAA,KAAAtuB,GAGAouB,IAGArxB,EAAAmD,EAAAxG,GAEA40B,IASArB,EAAAr0B,UAAA4f,YAAA,WACA,OAAAxgB,KAAA+e,MAOAkW,EAAAr0B,UAAA0gB,QAAA,WAOA,IANA,IAAA+T,EAAA,IAAArW,WAAAhf,KAAA+e,KAAApd,QAEAmE,EAAAgE,KAAA2F,OAAAzP,KAAAuG,KAAA,OACAgwB,EAAAzwB,EAAA,EACAiZ,EAAA/e,KAAA+e,KAEArd,EAAA,EAAmBA,EAAA60B,EAAgB70B,IAAA,CACnC,IAAAS,EAAA4c,EAAArd,GAKAS,GADAA,GADAA,GADAA,GADAA,KAAA,yBAAAA,IAAA,IACA,uBAAAA,IAAA,IACA,uBAAAA,IAAA,IACA,qBAAAA,IAAA,IACA,gBAAAA,IAAA,GACAkzB,EAAAvvB,EAAApE,GAEAS,EAIA,GAAAnC,KAAAuG,OAAA,GAAAgwB,EAAA,CACA,IAAAC,EAAA,GAAAD,EAAAv2B,KAAAuG,KACAkwB,EAAApB,EAAA,KAAAmB,EAEA,IAAA90B,EAAA,EAAqBA,EAAA60B,EAAgB70B,IAAA,CACrC,IAAAg1B,EAAArB,EAAA3zB,GACA+0B,GAAAC,GAAA,GAAAF,EACAnB,EAAA3zB,EAAA,GAAA+0B,EACAA,EAAAC,IAAAF,EAGAnB,EAAAkB,EAAA,GAAAE,EAGAz2B,KAAA+e,KAAAsW,GAGAJ,EAAAC,UAAA,SAAA3uB,GAGA,WAAAyY,WAAAlV,KAAA2F,OAAAlJ,EAAA,UAKA0uB,EAAAr0B,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAmT,GACA,SAGA,IAAAzyB,EAAAsf,EACA,OAAA9hB,KAAAuG,OAAA/D,EAAA+D,MAAAiY,EAAApd,QAAAmB,OAAAvC,KAAA+e,KAAAvc,EAAAuc,OAKAkW,EAAAr0B,UAAA8B,SAAA,WACA,UAAA1C,KAAAuG,KAAAiY,EAAApd,QAAAsB,SAAA1C,KAAA+e,OAKAkW,EAAAr0B,UAAAgC,SAAA,WAGA,IAFA,IAAA8R,EAAA,GAEAhT,EAAA,EAAA6E,EAAAvG,KAAAuG,KAAqC7E,EAAA6E,EAAU7E,IAC/C,OAAAA,KACAgT,GAAA,KAGAA,GAAA1U,KAAA6f,IAAAne,GAAA,QAGA,OAAAgT,GAKAugB,EAAAr0B,UAAAshB,MAAA,WACA,WAAA+S,EAAAj1B,KAAAuG,KAAAvG,KAAA+e,KAAArZ,UAGAuvB,EAlcA,GAqcAp1B,EAAAuB,QAAA6zB,gCC9dA70B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAA41B,EAAsB72B,EAAQ,IAE9Bk1B,EAAgBl1B,EAAQ,IAExB4e,EAAiC5e,EAAQ,GAEzC82B,EAA4B92B,EAAQ,IAcpC+2B,EAEA,WAYA,SAAAA,EAAAC,EAEAvwB,EAEAwwB,GAGA/2B,KAAA82B,YACA92B,KAAAuG,OACAvG,KAAA+2B,gBAIA,IAHA,IAAAC,EAAA,IAAAhY,WAAAzY,GACApE,EAAA,EAEAT,EAAA,EAAmBA,EAAA6E,EAAU7E,IAC7Bs1B,EAAAt1B,GAAAS,GACAA,GAAA,IAEAoE,IACApE,GAAA20B,EACA30B,GAAAoE,EAAA,GAIAvG,KAAAg3B,WACA,IAAAC,EAAA,IAAAjY,WAAAzY,GAEA,IAAA7E,EAAA,EAAmBA,EAAA6E,EAAA,EAAc7E,IACjCu1B,EAAAD,EAAAt1B,MAGA1B,KAAAi3B,WAEAj3B,KAAAk3B,KAAA,IAAAP,EAAAv1B,QAAApB,KAAAgf,WAAApa,KAAA,MACA5E,KAAAm3B,IAAA,IAAAR,EAAAv1B,QAAApB,KAAAgf,WAAApa,KAAA,MAqIA,OAlIAiyB,EAAAj2B,UAAAw2B,QAAA,WACA,OAAAp3B,KAAAk3B,MAGAL,EAAAj2B,UAAAy2B,OAAA,WACA,OAAAr3B,KAAAm3B,KAOAN,EAAAj2B,UAAA02B,cAAA,SAAAC,EAEAC,GAGA,GAAAD,EAAA,EACA,UAAA7Y,EAAAtd,QAGA,OAAAo2B,EACA,OAAAx3B,KAAAk3B,KAGA,IAAAO,EAAA,IAAAzY,WAAAuY,EAAA,GAEA,OADAE,EAAA,GAAAD,EACA,IAAAb,EAAAv1B,QAAApB,KAAAy3B,IASAZ,EAAAa,cAAA,SAAA9rB,EAEAzL,GAGA,OAAAyL,EAAAzL,GAOA02B,EAAAj2B,UAAA+2B,IAAA,SAAA/rB,GAGA,OAAA5L,KAAAg3B,SAAAprB,IAOAirB,EAAAj2B,UAAAg3B,IAAA,SAAAhsB,GAGA,OAAAA,EACA,UAAA8S,EAAAtd,QAGA,OAAApB,KAAAi3B,SAAArrB,IAOAirB,EAAAj2B,UAAAi3B,QAAA,SAAAjsB,GAGA,OAAAA,EACA,UAAAgrB,EAAAx1B,QAGA,OAAApB,KAAAg3B,SAAAh3B,KAAAuG,KAAAvG,KAAAi3B,SAAArrB,GAAA,IAOAirB,EAAAj2B,UAAAk3B,SAAA,SAAAlsB,EAEAzL,GAGA,WAAAyL,GAAA,IAAAzL,EACA,EAGAH,KAAAg3B,UAAAh3B,KAAAi3B,SAAArrB,GAAA5L,KAAAi3B,SAAA92B,KAAAH,KAAAuG,KAAA,KAGAswB,EAAAj2B,UAAAmgB,QAAA,WACA,OAAA/gB,KAAAuG,MAGAswB,EAAAj2B,UAAAm3B,iBAAA,WACA,OAAA/3B,KAAA+2B,eAKAF,EAAAj2B,UAAAgC,SAAA,WACA,cAAAoyB,EAAA5zB,QAAA42B,YAAAh4B,KAAA82B,WAAA,IAAA92B,KAAAuG,KAAA,KAGAswB,EAAAj2B,UAAA2B,OAAA,SAAAuf,GACA,OAAAA,IAAA9hB,MAGA62B,EAAAoB,cAAA,IAAApB,EAAA,aAEAA,EAAAqB,cAAA,IAAArB,EAAA,aAEAA,EAAAsB,aAAA,IAAAtB,EAAA,SAEAA,EAAAuB,YAAA,IAAAvB,EAAA,SAEAA,EAAAwB,kBAAA,IAAAxB,EAAA,WAEAA,EAAAyB,sBAAA,IAAAzB,EAAA,WAEAA,EAAA0B,aAAA1B,EAAAyB,sBACAzB,EAAA2B,kBAAA3B,EAAAsB,aACAtB,EAlLA,GAqLAh3B,EAAAuB,QAAAy1B,gCCjOe,SAAA4B,EAAA72B,EAAA82B,GACf,SAAA92B,EAAA,SACA,IAEAC,EAAAH,EAFAD,EAAA,GACAk3B,EAAAv4B,OAAA0R,KAAAlQ,GAGA,IAAAF,EAAA,EAAaA,EAAAi3B,EAAAh3B,OAAuBD,IACpCG,EAAA82B,EAAAj3B,GACAg3B,EAAAtxB,QAAAvF,IAAA,IACAJ,EAAAI,GAAAD,EAAAC,IAGA,OAAAJ,EAZA3B,EAAAI,EAAA6B,EAAA,sBAAA02B,sBCAA,SAAAv0B,GAgHA,SAAA00B,EAAA9W,GACA,OAAA1hB,OAAAQ,UAAAgC,SAAAd,KAAAggB,GAnFAjiB,EAAAmE,QARA,SAAAQ,GACA,OAAAjE,MAAAyD,QACAzD,MAAAyD,QAAAQ,GAGA,mBAAAo0B,EAAAp0B,IASA3E,EAAAg5B,UAJA,SAAAr0B,GACA,yBAAAA,GASA3E,EAAAi5B,OAJA,SAAAt0B,GACA,cAAAA,GASA3E,EAAAk5B,kBAJA,SAAAv0B,GACA,aAAAA,GASA3E,EAAAm5B,SAJA,SAAAx0B,GACA,wBAAAA,GASA3E,EAAAo5B,SAJA,SAAAz0B,GACA,wBAAAA,GASA3E,EAAAq5B,SAJA,SAAA10B,GACA,wBAAAA,GASA3E,EAAAs5B,YAJA,SAAA30B,GACA,gBAAAA,GASA3E,EAAAu5B,SAJA,SAAA3P,GACA,0BAAAmP,EAAAnP,IASA5pB,EAAAw5B,SAJA,SAAA70B,GACA,wBAAAA,GAAA,OAAAA,GASA3E,EAAAy5B,OAJA,SAAAp5B,GACA,wBAAA04B,EAAA14B,IASAL,EAAA05B,QAJA,SAAAtuB,GACA,yBAAA2tB,EAAA3tB,iBAAAvG,OASA7E,EAAA25B,WAJA,SAAAh1B,GACA,0BAAAA,GAUA3E,EAAA45B,YALA,SAAAj1B,GACA,cAAAA,GAAA,mBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GACA,qBAAAA,GAIA3E,EAAAgG,SAAA3B,EAAA2B,gEC5GAzF,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA24B,EAAyC55B,EAAQ,IAEjD65B,EAAyB75B,EAAQ,IAEjC85B,EAAqB95B,EAAQ,IAE7B+5B,EAAwB/5B,EAAQ,IAEhC4nB,EAA0B5nB,EAAQ,GAElCg6B,EAA0Bh6B,EAAQ,IAElCi6B,EAA0Bj6B,EAAQ,IAElCk6B,EAAwBl6B,EAAQ,GAQhCm6B,EAEA,WAQA,SAAAA,EAAAC,EAAAC,EAAAtS,QACA,IAAAsS,IACAA,EAAA,KAGAn6B,KAAAk6B,SACAl6B,KAAAm6B,yBACAn6B,KAAA6nB,QAkcA,OAvbAoS,EAAAr5B,UAAAw5B,qBAAA,WACA,WAAAC,QAAA,SAAAC,EAAAC,GACAvhB,UAAAwhB,aAAAC,mBAAAC,KAAA,SAAAC,GAIA,IAHA,IAAAC,EAAA,IAAAr6B,MACA8I,EAAA,EAEA3H,EAAA,EAAA2f,EAAAsZ,EAAAh5B,OAAkDD,IAAA2f,EAAgB3f,IAAA,CAClE,IAAAm5B,EAAAF,EAAAj5B,GAEA,eAAAm5B,EAAAC,OACAF,EAAA9xB,KAAA,IAAA6wB,EAAAoB,iBAAAF,EAAAG,SAAAH,EAAAI,OAAA,gBAAA5xB,IACAA,KAIAixB,EAAAM,KACOM,MAAA,SAAAjH,GACPsG,EAAAtG,QAeAgG,EAAAr5B,UAAAu6B,2BAAA,SAAAH,EAAAI,GACA,IAIAC,EAJA/oB,EAAAtS,KAsBA,OApBAA,KAAAuoB,QACAvoB,KAAAs7B,oBAAAF,GAIAC,OADAn2B,IAAA81B,EACA,CACAO,MAAA,CACAC,WAAA,gBAIA,CACAD,MAAA,CACAP,SAAA,CACAzM,MAAAyM,KAMA,IAAAX,QAAA,SAAAC,EAAAC,GACA,IAAAljB,EAAA,WACA/E,EAAAmpB,oBAAAnB,EAAAC,IAGAvhB,UAAAwhB,aAAAkB,aAAAL,GAAAX,KAAA,SAAAiB,GACA,OAAArpB,EAAAspB,sBAAAD,EAAAtkB,KACO6jB,MAAA,SAAAW,GACP,OAAAtB,EAAAsB,QAcA5B,EAAAr5B,UAAAg7B,sBAAA,SAAAD,EAAAG,GAGA,GAFA97B,KAAA27B,UAEA37B,KAAAo7B,cAAAp7B,KAAA27B,OAAAI,OACA,OAAA/7B,KAAAuoB,QAGAvoB,KAAAg8B,aAAAh8B,KAAAo7B,aAAAO,GACA37B,KAAAi8B,WAAAj8B,KAAAo7B,aAAAU,IAUA7B,EAAAr5B,UAAAq7B,WAAA,SAAAb,EAAA3jB,GACAzX,KAAAk8B,0BAAAzkB,EACA2jB,EAAA7f,iBAAA,UAAAvb,KAAAk8B,2BAEAl8B,KAAAm8B,iCAAA,WACA,OAAAf,EAAAgB,QAGAhB,EAAA7f,iBAAA,iBAAAvb,KAAAm8B,mCAaAlC,EAAAr5B,UAAAy7B,sBAAA,SAAAC,EAAAlB,GACA,IAAA9oB,EAAAtS,KAIA,OAFAA,KAAAuoB,QACAvoB,KAAAs7B,oBAAAF,GACA,IAAAf,QAAA,SAAAC,EAAAC,GACAjoB,EAAAiqB,4BAAA,WACAjqB,EAAAkqB,cAEAjC,EAAA,IAAA7S,EAAAtmB,UAGAkR,EAAA8oB,aAAA7f,iBAAA,QAAAjJ,EAAAiqB,6BAEAjqB,EAAA4pB,0BAAA,WACA5pB,EAAAmpB,oBAAAnB,EAAAC,IAGAjoB,EAAA8oB,aAAA7f,iBAAA,UAAAjJ,EAAA4pB,2BAEA5pB,EAAA8oB,aAAAqB,aAAA,mBAEAnqB,EAAA8oB,aAAAqB,aAAA,MAAAH,MAUArC,EAAAr5B,UAAA06B,oBAAA,SAAAF,GACAA,GAAA,qBAAAjjB,YACAijB,EAAAjjB,SAAAC,cAAA,UACAwG,MAAA,IACAwc,EAAAvc,OAAA,KAGA,kBAAAuc,IACAA,EAAAp7B,KAAA08B,gBAAAtB,EAAA,UAIAA,EAAAqB,aAAA,mBACArB,EAAAqB,aAAA,gBACArB,EAAAqB,aAAA,sBACArB,EAAAqB,aAAA,oBACAz8B,KAAAo7B,gBAGAnB,EAAAr5B,UAAA87B,gBAAA,SAAAC,EAAAx2B,GACA,IAAAy2B,EAAAzkB,SAAA0kB,eAAAF,GAEA,UAAAC,EACA,UAAA9C,EAAA14B,QAAA,oBAAAu7B,EAAA,eAGA,GAAAC,EAAAE,SAAAl2B,gBAAAT,EAAAS,cACA,UAAAkzB,EAAA14B,QAAA,oBAAAu7B,EAAA,gBAAAx2B,EAAA,YAGA,OAAAy2B,GAaA3C,EAAAr5B,UAAAm8B,gBAAA,SAAAC,EAAAC,GACA,IAAA3qB,EAAAtS,KAIA,GAFAA,KAAAuoB,aAEArjB,IAAA83B,QAAA93B,IAAA+3B,EACA,UAAAnD,EAAA14B,QAAA,iEAIA,OADApB,KAAAk9B,oBAAAF,GACA,IAAA3C,QAAA,SAAAC,EAAAC,GACA,QAAAr1B,IAAA+3B,EACA3qB,EAAA6qB,yBAAA,WACA7qB,EAAA8qB,WAAA9C,EAAAC,GAAA,OAGAjoB,EAAA0qB,aAAAzhB,iBAAA,OAAAjJ,EAAA6qB,0BAEA7qB,EAAA0qB,aAAA1rB,IAAA2rB,MACO,KAAA3qB,EAAA+qB,cAAA/qB,EAAA0qB,cAGP,UAAAlD,EAAA14B,QAAA,iDAFAkR,EAAA8qB,WAAA9C,EAAAC,GAAA,UAOAN,EAAAr5B,UAAAy8B,cAAA,SAAAC,GAIA,QAAAA,EAAAC,UAOA,IAAAD,EAAAE,cAQAvD,EAAAr5B,UAAAs8B,oBAAA,SAAAF,GACA,qBAAAA,KACAA,EAAA7kB,SAAAC,cAAA,QACAwG,MAAA,IACAoe,EAAAne,OAAA,KAGA,kBAAAme,IACAA,EAAAh9B,KAAA08B,gBAAAM,EAAA,QAGAh9B,KAAAg9B,gBAGA/C,EAAAr5B,UAAA66B,oBAAA,SAAAnB,EAAAC,GACAv6B,KAAAy9B,eAAAvlB,OAAAmN,WAAArlB,KAAAo9B,WAAAM,KAAA19B,KAAAs6B,EAAAC,GAAAv6B,KAAAm6B,yBAGAF,EAAAr5B,UAAAw8B,WAAA,SAAA9C,EAAAC,EAAAoD,EAAAC,QACA,IAAAD,IACAA,GAAA,QAGA,IAAAC,IACAA,GAAA,GAGA,IAEAtD,EADAt6B,KAAA4nB,UAEK,MAAA6B,GACLkU,GAAAlU,aAAA/B,EAAAtmB,QAEApB,KAAAy7B,oBAAAnB,EAAAC,GACOqD,IAAAnU,aAAAsQ,EAAA34B,SAAAqoB,aAAAuQ,EAAA54B,SAEPpB,KAAAy7B,oBAAAnB,EAAAC,GAEAA,EAAA9Q,KASAwQ,EAAAr5B,UAAAgnB,OAAA,WAEA,IAAAiW,EAAA79B,KAAA89B,mBAAA99B,KAAAo7B,cAAAp7B,KAAAg9B,cACA,OAAAh9B,KAAA+9B,aAAAF,IASA5D,EAAAr5B,UAAAk9B,mBAAA,SAAAlB,QACA13B,IAAAlF,KAAAg+B,sBACAh+B,KAAAi+B,uBAGAj+B,KAAAk+B,kBAAAl+B,KAAAg+B,qBAAApB,GACA,IAAAuB,EAAA,IAAAzE,EAAA0E,iCAAAp+B,KAAAq+B,eACAC,EAAA,IAAAzE,EAAAz4B,QAAA+8B,GACA,WAAAvE,EAAAx4B,QAAAk9B,IAOArE,EAAAr5B,UAAAs9B,kBAAA,SAAAF,EAAAO,GACAP,EAAAQ,UAAAD,EAAA,MAOAtE,EAAAr5B,UAAAm9B,aAAA,SAAAF,GACA,OAAA79B,KAAAk6B,OAAAtS,OAAAiW,EAAA79B,KAAA6nB,QAOAoS,EAAAr5B,UAAAq9B,qBAAA,WACA,wBAAA9lB,SAGA,OAFAnY,KAAAq+B,mBAAAn5B,OACAlF,KAAAg+B,0BAAA94B,GAIA,IACA0Z,EACAC,EAFAwf,EAAAlmB,SAAAC,cAAA,UAIA,qBAAApY,KAAAo7B,eACAxc,EAAA5e,KAAAo7B,aAAAqD,WACA5f,EAAA7e,KAAAo7B,aAAAsD,aAGA9f,GAAAC,GAAA,qBAAA7e,KAAAg9B,eACApe,EAAA5e,KAAAg9B,aAAAQ,cAAAx9B,KAAAg9B,aAAApe,MACAC,EAAA7e,KAAAg9B,aAAA2B,eAAA3+B,KAAAg9B,aAAAne,QAGAwf,EAAAhM,MAAAzT,QAAA,KACAyf,EAAAhM,MAAAxT,SAAA,KACAwf,EAAAzf,QACAyf,EAAAxf,SACA7e,KAAAq+B,gBACAr+B,KAAAg+B,qBAAAK,EAAAO,WAAA,OAOA3E,EAAAr5B,UAAA47B,YAAA,WACAx8B,KAAA27B,SACA37B,KAAA27B,OAAAkD,iBAAA1sB,QAAA,SAAA2sB,GACA,OAAAA,EAAAC,SAEA/+B,KAAA27B,YAAAz2B,IAUA+0B,EAAAr5B,UAAA2nB,MAAA,WACArQ,OAAAoN,aAAAtlB,KAAAy9B,gBAEAz9B,KAAAw8B,mBAEAt3B,IAAAlF,KAAAu8B,kCAAAr3B,IAAAlF,KAAAo7B,cACAp7B,KAAAo7B,aAAA5f,oBAAA,QAAAxb,KAAAu8B,kCAGAr3B,IAAAlF,KAAAk8B,gCAAAh3B,IAAAlF,KAAAo7B,cACAp7B,KAAAo7B,aAAA5f,oBAAA,UAAAxb,KAAAk8B,gCAGAh3B,IAAAlF,KAAAo7B,eACAp7B,KAAAg/B,eAAAh/B,KAAAo7B,cACAp7B,KAAAo7B,kBAAAl2B,QAGAA,IAAAlF,KAAAu8B,kCAAAr3B,IAAAlF,KAAAg9B,cACAh9B,KAAAg9B,aAAAxhB,oBAAA,OAAAxb,KAAAm9B,+BAGAj4B,IAAAlF,KAAAg9B,eACAh9B,KAAAg9B,aAAA1rB,SAAApM,EACAlF,KAAAg9B,aAAAiC,gBAAA,OACAj/B,KAAAg9B,kBAAA93B,GAGAlF,KAAAg+B,0BAAA94B,EACAlF,KAAAq+B,mBAAAn5B,GAUA+0B,EAAAr5B,UAAAo7B,aAAA,SAAAZ,EAAAO,GAEA,IAEAP,EAAA8D,UAAAvD,EACK,MAAA1H,GAELmH,EAAA9pB,IAAA4G,OAAAinB,IAAAC,gBAAAzD,KAUA1B,EAAAr5B,UAAAo+B,eAAA,SAAA5D,GACA,IACAA,EAAA8D,UAAA,KACK,MAAAjL,GACLmH,EAAA9pB,IAAA,KAIA2oB,EAjdA,GAodAp6B,EAAAo6B,kDCjeA,IAAAl6B,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAWAs+B,EAEA,SAAAp+B,GAGA,SAAAo+B,EAAAC,GACA,IAAAhtB,EAAArR,EAAAa,KAAA9B,KAAAs/B,EAAApf,WAAAof,EAAAnf,cAAAngB,KAGA,OADAsS,EAAAgtB,WACAhtB,EAoFA,OA1FAvS,EAAAs/B,EAAAp+B,GAWAo+B,EAAAz+B,UAAA2f,OAAA,SAAAne,EAEAke,GAIA,IAHA,IAAAif,EAAAv/B,KAAAs/B,SAAA/e,OAAAne,EAAAke,GACA1B,EAAA5e,KAAAkgB,WAEAxe,EAAA,EAAmBA,EAAAkd,EAAWld,IAC9B69B,EAAA79B,GAEA,SAAA69B,EAAA79B,IAGA,OAAA69B,GAKAF,EAAAz+B,UAAA4+B,UAAA,WAKA,IAJA,IAAA5f,EAAA5f,KAAAs/B,SAAAE,YACA79B,EAAA3B,KAAAkgB,WAAAlgB,KAAAmgB,YACAsf,EAAA,IAAAC,kBAAA/9B,GAEAD,EAAA,EAAmBA,EAAAC,EAAYD,IAC/B+9B,EAAA/9B,GAEA,SAAAke,EAAAle,IAGA,OAAA+9B,GAKAJ,EAAAz+B,UAAA++B,gBAAA,WACA,OAAA3/B,KAAAs/B,SAAAK,mBAKAN,EAAAz+B,UAAAg/B,KAAA,SAAAjf,EAEAC,EAEAhC,EAEAC,GAGA,WAAAwgB,EAAAr/B,KAAAs/B,SAAAM,KAAAjf,EAAAC,EAAAhC,EAAAC,KAKAwgB,EAAAz+B,UAAAqnB,kBAAA,WACA,OAAAjoB,KAAAs/B,SAAArX,qBASAoX,EAAAz+B,UAAAi/B,OAAA,WACA,OAAA7/B,KAAAs/B,UAKAD,EAAAz+B,UAAAunB,uBAAA,WACA,WAAAkX,EAAAr/B,KAAAs/B,SAAAnX,2BAKAkX,EAAAz+B,UAAAk/B,yBAAA,WACA,WAAAT,EAAAr/B,KAAAs/B,SAAAQ,6BAGAT,EA3FA,CAbwBv/B,EAAQ,IAyG/BsB,SAEDvB,EAAAuB,QAAAi+B,gCCzIAj/B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA0d,EAAsB3e,EAAQ,IAE9BigC,EAAsCjgC,EAAQ,IAc9CkgC,EAEA,WACA,SAAAA,EAAAphB,EAEAC,GAGA7e,KAAA4e,QACA5e,KAAA6e,SAgHA,OAzGAmhB,EAAAp/B,UAAAsf,SAAA,WACA,OAAAlgB,KAAA4e,OAOAohB,EAAAp/B,UAAAuf,UAAA,WACA,OAAAngB,KAAA6e,QAOAmhB,EAAAp/B,UAAA++B,gBAAA,WACA,UAcAK,EAAAp/B,UAAAg/B,KAAA,SAAAjf,EAEAC,EAEAhC,EAEAC,GAGA,UAAAkhB,EAAA3+B,QAAA,qDAOA4+B,EAAAp/B,UAAAqnB,kBAAA,WACA,UAUA+X,EAAAp/B,UAAAunB,uBAAA,WACA,UAAA4X,EAAA3+B,QAAA,mEAUA4+B,EAAAp/B,UAAAk/B,yBAAA,WACA,UAAAC,EAAA3+B,QAAA,mEAKA4+B,EAAAp/B,UAAAgC,SAAA,WAIA,IAHA,IAAA0d,EAAA,IAAAof,kBAAA1/B,KAAA4e,OACAlK,EAAA,IAAA+J,EAAArd,QAEAgB,EAAA,EAAmBA,EAAApC,KAAA6e,OAAiBzc,IAAA,CAGpC,IAFA,IAAAm9B,EAAAv/B,KAAAugB,OAAAne,EAAAke,GAEAne,EAAA,EAAqBA,EAAAnC,KAAA4e,MAAgBzc,IAAA,CACrC,IAAA89B,EAAA,IAAAV,EAAAp9B,GACAkH,OAAA,EAGAA,EADA42B,EAAA,GACA,IACSA,EAAA,IACT,IACSA,EAAA,IACT,IAEA,IAGAvrB,EAAAuN,OAAA5Y,GAGAqL,EAAAuN,OAAA,MAGA,OAAAvN,EAAA9R,YAGAo9B,EAvHA,GA0HAngC,EAAAuB,QAAA4+B,gCC/JA,IAAAjgC,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAm/B,EAEA,SAAAj/B,GAGA,SAAAi/B,IACA,cAAAj/B,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAmgC,EAAAj/B,GAMAi/B,EAPA,CARkBpgC,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAA8+B,gCCjCA9/B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAMAo/B,EANAnG,EAAwBl6B,EAAQ,IAQhC,SAAAqgC,GACAA,IAAA,iBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,gBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,4CACAA,IAAA,gBACAA,IAAA,kBACAA,IAAA,gBACAA,IAAA,sBACAA,IAAA,oBA3BA,CA4BCA,EAAAtgC,EAAAsgC,+BAAAtgC,EAAAsgC,6BAAA,KASD,IAAAC,EAEA,WACA,SAAAA,EAAAC,EAAAC,EAAAnZ,GAGA,IAFA,IAAAoZ,EAAA,GAEAC,EAAA,EAAoBA,EAAAr/B,UAAAQ,OAAuB6+B,IAC3CD,EAAAC,EAAA,GAAAr/B,UAAAq/B,GAGAxgC,KAAAqgC,kBACArgC,KAAAmnB,OAGAnnB,KAAAovB,OADA,kBAAAkR,EACAthB,WAAApa,KAAA,CAAA07B,IAEAA,EAGAtgC,KAAAugC,qBACAH,EAAAK,wBAAA7vB,IAAAyvB,EAAArgC,MACAogC,EAAAM,YAAA9vB,IAAAuW,EAAAnnB,MAGA,IAFA,IAAAovB,EAAApvB,KAAAovB,OAEA1tB,EAAA,EAAA2f,EAAA+N,EAAAztB,OAA6CD,IAAA2f,EAAgB3f,IAAA,CAC7D,IAAA4xB,EAAAlE,EAAA1tB,GACA0+B,EAAAO,cAAA/vB,IAAA0iB,EAAAtzB,MAGA,QAAA4gC,EAAA,EAAAC,EAAAN,EAA+DK,EAAAC,EAAAl/B,OAAkCi/B,IAAA,CACjG,IAAAE,EAAAD,EAAAD,GACAR,EAAAM,YAAA9vB,IAAAkwB,EAAA9gC,OA6GA,OA9FAogC,EAAAx/B,UAAAmgC,mBAAA,WACA,OAAA/gC,KAAAqgC,iBAGAD,EAAAx/B,UAAAogC,QAAA,WACA,OAAAhhC,KAAAmnB,MAGAiZ,EAAAx/B,UAAAqgC,SAAA,WACA,OAAAjhC,KAAAovB,OAAA,IAUAgR,EAAAc,0BAAA,SAAAngC,GAGA,GAAAA,EAAA,GAAAA,GAAA,IACA,UAAAi5B,EAAA54B,QAAA,kBAGA,IAAA+/B,EAAAf,EAAAO,cAAA9gB,IAAA9e,GAEA,QAAAmE,IAAAi8B,EACA,UAAAnH,EAAA54B,QAAA,kBAGA,OAAA+/B,GASAf,EAAAgB,yBAAA,SAAAja,GACA,IAAAga,EAAAf,EAAAM,YAAA7gB,IAAAsH,GAEA,QAAAjiB,IAAAi8B,EACA,UAAAnH,EAAA54B,QAAA,kBAGA,OAAA+/B,GAGAf,EAAAx/B,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAse,GACA,SAGA,IAAA59B,EAAAsf,EACA,OAAA9hB,KAAAghC,YAAAx+B,EAAAw+B,WAGAZ,EAAAK,wBAAA,IAAAtd,IACAid,EAAAO,cAAA,IAAAxd,IACAid,EAAAM,YAAA,IAAAvd,IAKAid,EAAAiB,MAAA,IAAAjB,EAAAD,EAAAkB,MAAAriB,WAAApa,KAAA,gBACAw7B,EAAAkB,UAAA,IAAAlB,EAAAD,EAAAmB,UAAAtiB,WAAApa,KAAA,4CACAw7B,EAAAmB,UAAA,IAAAnB,EAAAD,EAAAoB,UAAA,uCACAnB,EAAAoB,UAAA,IAAApB,EAAAD,EAAAqB,UAAA,uCACApB,EAAAqB,UAAA,IAAArB,EAAAD,EAAAsB,UAAA,uCACArB,EAAAsB,UAAA,IAAAtB,EAAAD,EAAAuB,UAAA,uCACAtB,EAAAuB,UAAA,IAAAvB,EAAAD,EAAAwB,UAAA,uCACAvB,EAAAwB,UAAA,IAAAxB,EAAAD,EAAAyB,UAAA,uCACAxB,EAAAyB,UAAA,IAAAzB,EAAAD,EAAA0B,UAAA,wCACAzB,EAAA0B,UAAA,IAAA1B,EAAAD,EAAA2B,UAAA,wCACA1B,EAAA2B,WAAA,IAAA3B,EAAAD,EAAA4B,WAAA,2CACA3B,EAAA4B,WAAA,IAAA5B,EAAAD,EAAA6B,WAAA,2CACA5B,EAAA6B,WAAA,IAAA7B,EAAAD,EAAA8B,WAAA,2CACA7B,EAAA8B,WAAA,IAAA9B,EAAAD,EAAA+B,WAAA,2CACA9B,EAAA+B,WAAA,IAAA/B,EAAAD,EAAAgC,WAAA,2CACA/B,EAAAgC,WAAA,IAAAhC,EAAAD,EAAAiC,WAAA,2CACAhC,EAAAiC,KAAA,IAAAjC,EAAAD,EAAAkC,KAAA,uBACAjC,EAAAkC,OAAA,IAAAlC,EAAAD,EAAAmC,OAAA,4BACAlC,EAAAmC,OAAA,IAAAnC,EAAAD,EAAAoC,OAAA,4BACAnC,EAAAoC,OAAA,IAAApC,EAAAD,EAAAqC,OAAA,4BACApC,EAAAqC,OAAA,IAAArC,EAAAD,EAAAsC,OAAA,4BACArC,EAAAsC,mBAAA,IAAAtC,EAAAD,EAAAuC,mBAAA,iDACAtC,EAAAuC,KAAA,IAAAvC,EAAAD,EAAAwC,KAAA,mBACAvC,EAAAwC,MAAA,IAAAxC,EAAAD,EAAAyC,MAAA5jB,WAAApa,KAAA,8BACAw7B,EAAAyC,KAAA,IAAAzC,EAAAD,EAAA0C,KAAA,WACAzC,EAAA0C,QAAA,IAAA1C,EAAAD,EAAA2C,QAAA,sCACA1C,EAAA2C,OAAA,IAAA3C,EAAAD,EAAA4C,OAAA,sBACA3C,EA1IA,GA6IAvgC,EAAAuB,QAAAg/B,gCCjMA,IAAArgC,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAiiC,EAAsBljC,EAAQ,GAE9B0nB,EAAuB1nB,EAAQ,GAE/BmjC,EAAenjC,EAAQ,IAEvB2nB,EAA2B3nB,EAAQ,IAEnCqiB,EAAoBriB,EAAQ,GAE5BojC,EAAmBpjC,EAAQ,IAE3BqjC,EAA+BrjC,EAAQ,KAEvC4nB,EAA0B5nB,EAAQ,GAElCk6B,EAAwBl6B,EAAQ,GAEhCi6B,EAA0Bj6B,EAAQ,IAWlCsjC,EAEA,SAAAniC,GAKA,SAAAmiC,IACA,IAAA9wB,EAAArR,EAAAa,KAAA9B,YAEAsS,EAAA+wB,sBAAA,GACA/wB,EAAA+wB,sBAAA,GACAD,EAAAE,iBAAAF,EAAAG,WAAAvlB,IAAA,SAAA1W,GACA,OAAAA,EAAA5B,UAGA,QAAAhE,EAAA,GAAoBA,EAAA,GAAQA,IAAA,CAI5B,IAHA,IAAA8hC,EAAAJ,EAAAG,WAAA7hC,EAAA,IACA+hC,EAAA,IAAAljC,MAAAijC,EAAA7hC,QAEAqG,EAAA,EAAqBA,EAAAw7B,EAAA7hC,OAAmBqG,IACxCy7B,EAAAz7B,GAAAw7B,IAAA7hC,OAAAqG,EAAA,GAGAo7B,EAAAE,iBAAA5hC,GAAA+hC,EAGA,OAAAnxB,EAyPA,OAjRAvS,EAAAqjC,EAAAniC,GAmCAmiC,EAAAM,sBAAA,SAAApjB,GAMA,IALA,IAAAqjB,GAAA,EACAC,EAAA,KACAC,EAAA,EACAja,EAAA,SAEA+Z,GAAA,CACA/Z,EAAA,QAEA,IAAAlgB,GADAk6B,EAAAR,EAAAU,iBAAAxjB,EAAAujB,GAAA,EAAA7jC,KAAA+jC,kBAAAna,IACA,GAEAoa,EAAAt6B,IADAm6B,EAAAD,EAAA,IACAl6B,GAEAs6B,GAAA,IACAL,EAAArjB,EAAAuV,QAAAmO,EAAAt6B,GAAA,IAIA,OAAAk6B,GAGAR,EAAAxiC,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GACA,IAAAoc,EAAAb,EAAAM,sBAAApjB,GACA4jB,EAAA,MAAArc,EAAA,KAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA+nB,4BAEA,SAAA+a,EAAA,CACA,IAAAC,EAAA,IAAAhiB,EAAA/gB,SAAA6iC,EAAA,GAAAA,EAAA,MAAAnb,GACAob,EAAAE,yBAAAD,GAGA,IAAAE,EAAArkC,KAAAskC,aAAAhkB,EAAA2jB,EAAAjkC,KAAAqjC,uBACAkB,EAAAF,EAAAG,UACA9vB,EAAA2vB,EAAAI,aAEA,SAAAP,EAAA,CACA,IAAAQ,EAAA,IAAAviB,EAAA/gB,QAAAmjC,EAAAzb,GACAob,EAAAE,yBAAAM,GAGA,IAAAC,EAAAvB,EAAAwB,UAAAtkB,EAAAikB,GAEA,SAAAL,EAAA,CACA,IAAAW,EAAA,IAAA1iB,EAAA/gB,SAAAujC,EAAA,GAAAA,EAAA,MAAA7b,GACAob,EAAAE,yBAAAS,GAKA,IAAAl7B,EAAAg7B,EAAA,GACAG,EAAAn7B,KAAAg7B,EAAA,IAEA,GAAAG,GAAAxkB,EAAAS,YAAAT,EAAAuV,QAAAlsB,EAAAm7B,GAAA,GACA,UAAApd,EAAAtmB,QAGA,IAAAqjC,EAAA/vB,EAAA9R,WAEA,GAAA6hC,EAAA9iC,OAAA,EACA,UAAAq4B,EAAA54B,QAGA,IAAAgiC,EAAA2B,cAAAN,GACA,UAAA1K,EAAA34B,QAGA,IAAAuf,GAAAsjB,EAAA,GAAAA,EAAA,MACApjB,GAAA8jB,EAAA,GAAAA,EAAA,MACAliB,EAAAziB,KAAAgjB,mBACAgiB,EAAA,KAAA7iB,EAAA/gB,QAAAuf,EAAAmI,GAAA,IAAA3G,EAAA/gB,QAAAyf,EAAAiI,IACAmc,EAAA,IAAAhC,EAAA7hC,QAAAqjC,EAAA,OAAAO,EAAAviB,GAAA,IAAA3P,MAAAoyB,WACAC,EAAA,EAEA,IACA,IAAAC,EAAAjC,EAAA/hC,QAAAooB,UAAAV,EAAAxI,EAAAqkB,EAAA,IACAM,EAAA/hB,YAAAuE,EAAArmB,QAAAikC,kBAAAD,EAAAxiB,WACAqiB,EAAA7hB,eAAAgiB,EAAAniB,qBACAgiB,EAAA3hB,gBAAA8hB,EAAAriB,mBACAoiB,EAAAC,EAAAxiB,UAAAjhB,OACK,MAAAsyB,IAEL,IAAAqR,EAAA,MAAAzd,EAAA,KAAAA,EAAAhI,IAAA2H,EAAApmB,QAAAmkC,wBAEA,SAAAD,EAAA,CACA,IAAAE,GAAA,EAEA,QAAAnkB,KAAAikB,EACA,GAAAH,EAAAviC,aAAAye,EAAA,CAEAmkB,GAAA,EACA,MAIA,IAAAA,EACA,UAAA9d,EAAAtmB,QAUA,OANAqhB,IAAAugB,EAAA5hC,QAAAqkC,QAAAzC,EAAA5hC,QAAAskC,MAMAT,GAGA7B,EAAA2B,cAAA,SAAA/U,GACA,OAAAoT,EAAAuC,4BAAA3V,IAGAoT,EAAAuC,4BAAA,SAAA3V,GACA,IAAAruB,EAAAquB,EAAAruB,OACA,OAAAA,EAAA,SACA,IAAAikC,EAAAr9B,SAAAynB,EAAAxc,OAAA7R,EAAA,OACA,OAAAyhC,EAAAyC,0BAAA7V,EAAAnT,UAAA,EAAAlb,EAAA,MAAAikC,GAGAxC,EAAAyC,0BAAA,SAAA7V,GAIA,IAHA,IAAAruB,EAAAquB,EAAAruB,OACAmzB,EAAA,EAEApzB,EAAAC,EAAA,EAA4BD,GAAA,EAAQA,GAAA,GAGpC,IAFAokC,EAAA9V,EAAAxc,OAAA9R,GAAAqH,WAAA,OAAAA,WAAA,IAEA,GAAA+8B,EAAA,EACA,UAAA9L,EAAA54B,QAGA0zB,GAAAgR,EAGAhR,GAAA,EAEA,IAAApzB,EAAAC,EAAA,EAA4BD,GAAA,EAAQA,GAAA,GACpC,IAAAokC,EAEA,IAFAA,EAAA9V,EAAAxc,OAAA9R,GAAAqH,WAAA,OAAAA,WAAA,IAEA,GAAA+8B,EAAA,EACA,UAAA9L,EAAA54B,QAGA0zB,GAAAgR,EAGA,WAAAhR,GAAA,IAGAsO,EAAAwB,UAAA,SAAAtkB,EAAAikB,GACA,OAAAnB,EAAAU,iBAAAxjB,EAAAikB,GAAA,EAAAnB,EAAAW,kBAAA,IAAAxjC,MAAA6iC,EAAAW,kBAAApiC,QAAA6J,KAAA,KAGA43B,EAAAU,iBAAA,SAAAxjB,EAAAkkB,EAAAuB,EAAA5b,EAAAP,GAQA,IAPA,IAAAhL,EAAA0B,EAAAS,UAEAgJ,EAAA,EACAic,EAFAxB,EAAAuB,EAAAzlB,EAAAmV,aAAA+O,GAAAlkB,EAAAgV,WAAAkP,GAGAla,EAAAH,EAAAxoB,OACAmoB,EAAAic,EAEA5jC,EAAAqiC,EAA2BriC,EAAAyc,EAAWzc,IACtC,GAAAme,EAAAT,IAAA1d,KAAA2nB,EACAF,EAAAG,SACO,CACP,GAAAA,IAAAO,EAAA,GACA,GAAA4Y,EAAA9hC,QAAA8oB,qBAAAN,EAAAO,EAAAiZ,EAAA6C,yBAAA7C,EAAA8C,iBACA,OAAAF,EAAA7jC,GAGA6jC,GAAApc,EAAA,GAAAA,EAAA,GAGA,IAFA,IAAAlkB,EAAAkkB,EAAAlkB,MAAA,EAAAkkB,EAAAjoB,QAEAD,EAAA,EAAyBA,EAAAqoB,EAAA,EAAyBroB,IAClDkoB,EAAAloB,GAAAgE,EAAAhE,GAGAkoB,EAAAG,EAAA,KACAH,EAAAG,GAAA,EACAA,SAEAA,IAGAH,EAAAG,GAAA,EACAD,KAIA,UAAApC,EAAAtmB,SAGAgiC,EAAA+C,YAAA,SAAA7lB,EAAAsJ,EAAA4a,EAAA1hC,GACA9C,KAAA2pB,cAAArJ,EAAAkkB,EAAA5a,GAKA,IAJA,IAAAwc,EAAApmC,KAAAkmC,iBACAG,GAAA,EACA75B,EAAA1J,EAAAnB,OAEAD,EAAA,EAAmBA,EAAA8K,EAAS9K,IAAA,CAC5B,IAAAyoB,EAAArnB,EAAApB,GACAkpB,EAAAsY,EAAA9hC,QAAA8oB,qBAAAN,EAAAO,EAAAiZ,EAAA6C,yBAEArb,EAAAwb,IACAA,EAAAxb,EACAyb,EAAA3kC,GAIA,GAAA2kC,GAAA,EACA,OAAAA,EAEA,UAAA3e,EAAAtmB,SAOAgiC,EAAA8C,iBAAA,IACA9C,EAAA6C,wBAAA,GAKA7C,EAAAW,kBAAA,QAKAX,EAAAkD,eAAA,YAKAlD,EAAAmD,YAAA,cAKAnD,EAAAG,WAAA,sGACAH,EAlRA,CAmRCF,EAAA9hC,SAEDvB,EAAAuB,QAAAgiC,iCCnWA,SAAApe,IAEAA,EAAAwB,SAAA,IAAAxB,EAAAwB,QAAApf,QAAA,YAAA4d,EAAAwB,QAAApf,QAAA,YAAA4d,EAAAwB,QAAApf,QAAA,SACAxH,EAAAC,QAAA,CACAsmB,SAMA,SAAA5O,EAAAivB,EAAAC,EAAAC,GACA,uBAAAnvB,EACA,UAAA1S,UAAA,0CAGA,IACA+S,EAAAlW,EADAoE,EAAA3E,UAAAQ,OAGA,OAAAmE,GACA,OACA,OACA,OAAAkf,EAAAmB,SAAA5O,GAEA,OACA,OAAAyN,EAAAmB,SAAA,WACA5O,EAAAzV,KAAA,KAAA0kC,KAGA,OACA,OAAAxhB,EAAAmB,SAAA,WACA5O,EAAAzV,KAAA,KAAA0kC,EAAAC,KAGA,OACA,OAAAzhB,EAAAmB,SAAA,WACA5O,EAAAzV,KAAA,KAAA0kC,EAAAC,EAAAC,KAGA,QAIA,IAHA9uB,EAAA,IAAArX,MAAAuF,EAAA,GACApE,EAAA,EAEAA,EAAAkW,EAAAjW,QACAiW,EAAAlW,KAAAP,UAAAO,GAGA,OAAAsjB,EAAAmB,SAAA,WACA5O,EAAArW,MAAA,KAAA0W,QAxCAhY,EAAAC,QAAAmlB,sCCNA,IAAA/e,EAAanG,EAAQ,GAErBoE,EAAA+B,EAAA/B,OAEA,SAAAyiC,EAAAr1B,EAAAC,GACA,QAAA1P,KAAAyP,EACAC,EAAA1P,GAAAyP,EAAAzP,GAYA,SAAA+kC,EAAApiC,EAAAC,EAAA9C,GACA,OAAAuC,EAAAM,EAAAC,EAAA9C,GATAuC,EAAAU,MAAAV,EAAA2G,OAAA3G,EAAAS,aAAAT,EAAAuH,gBACA7L,EAAAC,QAAAoG,GAGA0gC,EAAA1gC,EAAApG,GACAA,EAAAqE,OAAA0iC,GAQAD,EAAAziC,EAAA0iC,GAEAA,EAAAhiC,KAAA,SAAAJ,EAAAC,EAAA9C,GACA,qBAAA6C,EACA,UAAAK,UAAA,iCAGA,OAAAX,EAAAM,EAAAC,EAAA9C,IAGAilC,EAAA/7B,MAAA,SAAAtE,EAAAiF,EAAAlG,GACA,qBAAAiB,EACA,UAAA1B,UAAA,6BAGA,IAAA+C,EAAA1D,EAAAqC,GAYA,YAVArB,IAAAsG,EACA,kBAAAlG,EACAsC,EAAA4D,OAAAlG,GAEAsC,EAAA4D,QAGA5D,EAAA4D,KAAA,GAGA5D,GAGAg/B,EAAAjiC,YAAA,SAAA4B,GACA,qBAAAA,EACA,UAAA1B,UAAA,6BAGA,OAAAX,EAAAqC,IAGAqgC,EAAAn7B,gBAAA,SAAAlF,GACA,qBAAAA,EACA,UAAA1B,UAAA,6BAGA,OAAAoB,EAAA2E,WAAArE,kCCjEA,IAAAsgC,EAAA,qBAAAtiC,YAAA,qBAAAuiC,aAAA,qBAAA9nB,WAEA,SAAA+nB,EAAAnhC,EAAA/D,GACA,OAAAzB,OAAAQ,UAAAH,eAAAqB,KAAA8D,EAAA/D,GAGAhC,EAAA2B,OAAA,SAAAoE,GAKA,IAFA,IAAAg1B,EAAAr6B,MAAAK,UAAA8E,MAAA5D,KAAAX,UAAA,GAEAy5B,EAAAj5B,QAAA,CACA,IAAAC,EAAAg5B,EAAAoM,QAEA,GAAAplC,EAAA,CAIA,qBAAAA,EACA,UAAAiD,UAAAjD,EAAA,sBAGA,QAAApB,KAAAoB,EACAmlC,EAAAnlC,EAAApB,KACAoF,EAAApF,GAAAoB,EAAApB,KAKA,OAAAoF,GAIA/F,EAAAonC,UAAA,SAAAr/B,EAAArB,GACA,OAAAqB,EAAAjG,SAAA4E,EACAqB,EAGAA,EAAAoD,SACApD,EAAAoD,SAAA,EAAAzE,IAGAqB,EAAAjG,OAAA4E,EACAqB,IAGA,IAAAs/B,EAAA,CACAC,SAAA,SAAAx0B,EAAArB,EAAA81B,EAAAthC,EAAAuhC,GACA,GAAA/1B,EAAAtG,UAAA2H,EAAA3H,SACA2H,EAAA/B,IAAAU,EAAAtG,SAAAo8B,IAAAthC,GAAAuhC,QAKA,QAAA3lC,EAAA,EAAmBA,EAAAoE,EAASpE,IAC5BiR,EAAA00B,EAAA3lC,GAAA4P,EAAA81B,EAAA1lC,IAIA4lC,cAAA,SAAAC,GACA,IAAA7lC,EAAA8lC,EAAA1hC,EAAAiG,EAAA07B,EAAA/yB,EAIA,IAFA5O,EAAA,EAEApE,EAAA,EAAA8lC,EAAAD,EAAA5lC,OAAkCD,EAAA8lC,EAAO9lC,IACzCoE,GAAAyhC,EAAA7lC,GAAAC,OAOA,IAHA+S,EAAA,IAAAnQ,WAAAuB,GACAiG,EAAA,EAEArK,EAAA,EAAA8lC,EAAAD,EAAA5lC,OAAkCD,EAAA8lC,EAAO9lC,IACzC+lC,EAAAF,EAAA7lC,GACAgT,EAAA9D,IAAA62B,EAAA17B,GACAA,GAAA07B,EAAA9lC,OAGA,OAAA+S,IAGAgzB,EAAA,CACAP,SAAA,SAAAx0B,EAAArB,EAAA81B,EAAAthC,EAAAuhC,GACA,QAAA3lC,EAAA,EAAmBA,EAAAoE,EAASpE,IAC5BiR,EAAA00B,EAAA3lC,GAAA4P,EAAA81B,EAAA1lC,IAIA4lC,cAAA,SAAAC,GACA,SAAA17B,OAAA3K,MAAA,GAAAqmC,KAKA1nC,EAAA8nC,SAAA,SAAAjhB,GACAA,GACA7mB,EAAA+nC,KAAArjC,WACA1E,EAAAgoC,MAAAf,YACAjnC,EAAAioC,MAAA9oB,WACAnf,EAAA2B,OAAA3B,EAAAqnC,KAEArnC,EAAA+nC,KAAArnC,MACAV,EAAAgoC,MAAAtnC,MACAV,EAAAioC,MAAAvnC,MACAV,EAAA2B,OAAA3B,EAAA6nC,KAIA7nC,EAAA8nC,SAAAd,iCC5GAzmC,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAgnC,EAEA,WACA,SAAAA,KAuFA,OArFAA,EAAAvS,sBAAA,SAAA9zB,GACA,IAAAU,EACA,OAAAV,EAAA,UACA,IAAAoF,EAAA,GA6BA,OA1BA,KAFA1E,EAAAV,GAAA,MAGAoF,GAAA,GACApF,EAAAU,GAKA,KAFAA,EAAAV,GAAA,KAGAoF,GAAA,EACApF,EAAAU,GAKA,KAFAA,EAAAV,GAAA,KAGAoF,GAAA,EACApF,EAAAU,GAKA,KAFAA,EAAAV,GAAA,KAGAoF,GAAA,EACApF,EAAAU,GAGA0E,GAAApF,GAAA,SAGAqmC,EAAAC,qBAAA,SAAAtmC,GAEA,OAAAA,EACA,UAGA,IAAAoF,EAAA,EAuBA,OArBApF,IAAA,SACAoF,GAAA,GACApF,IAAA,IAGAA,IAAA,SACAoF,GAAA,EACApF,IAAA,GAGAA,IAAA,SACAoF,GAAA,EACApF,IAAA,GAGAA,IAAA,SACAoF,GAAA,EACApF,IAAA,GAGAoF,GAAApF,IAAA,IAIAqmC,EAAA/P,YAAA,SAAAt2B,GACA,OAAAA,EAAAkB,SAAA,KAMAmlC,EAAAE,SAAA,SAAAvmC,GAOA,OAHAA,GADAA,GAAA,WADAA,OAAA,gBACAA,IAAA,eACAA,IAAA,aACAA,OAAA,EAEA,IADAA,OAAA,KAIAqmC,EAAAG,mBAAA,WACAH,EAxFA,GA2FAloC,EAAAuB,QAAA2mC,gCClFA3nC,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAonC,EAAkBroC,EAAQ,IAE1Bye,EAAeze,EAAQ,IAEvB4e,EAAiC5e,EAAQ,GAYzCsoC,EAEA,WAUA,SAAAA,EAAAC,EAAA5Q,GACA,OAAAA,EAAA91B,OACA,UAAA+c,EAAAtd,QAGApB,KAAAqoC,QACA,IAAAC,EAAA7Q,EAAA91B,OAEA,GAAA2mC,EAAA,OAAA7Q,EAAA,IAIA,IAFA,IAAA8Q,EAAA,EAEAA,EAAAD,GAAA,IAAA7Q,EAAA8Q,IACAA,IAGAA,IAAAD,EACAtoC,KAAAy3B,aAAAzY,WAAApa,KAAA,MAEA5E,KAAAy3B,aAAA,IAAAzY,WAAAspB,EAAAC,GACAhqB,EAAAnd,QAAAqR,UAAAglB,EAAA8Q,EAAAvoC,KAAAy3B,aAAA,EAAAz3B,KAAAy3B,aAAA91B,cAGA3B,KAAAy3B,eA6PA,OAzPA2Q,EAAAxnC,UAAA4nC,gBAAA,WACA,OAAAxoC,KAAAy3B,cAOA2Q,EAAAxnC,UAAA6nC,UAAA,WACA,OAAAzoC,KAAAy3B,aAAA91B,OAAA,GAOAymC,EAAAxnC,UAAA8nC,OAAA,WACA,WAAA1oC,KAAAy3B,aAAA,IAOA2Q,EAAAxnC,UAAA+nC,eAAA,SAAApR,GAGA,OAAAv3B,KAAAy3B,aAAAz3B,KAAAy3B,aAAA91B,OAAA,EAAA41B,IAOA6Q,EAAAxnC,UAAAgoC,WAAA,SAAAh9B,GAGA,OAAAA,EAEA,OAAA5L,KAAA2oC,eAAA,GAGA,IACAj0B,EADA+iB,EAAAz3B,KAAAy3B,aAGA,OAAA7rB,EAAA,CAEA8I,EAAA,EAEA,QAAAhT,EAAA,EAAA2f,EAAAoW,EAAA91B,OAAqDD,IAAA2f,EAAgB3f,IAAA,CACrE,IAAA81B,EAAAC,EAAA/1B,GACAgT,EAAAyzB,EAAA/mC,QAAAs2B,cAAAhjB,EAAA8iB,GAGA,OAAA9iB,EAGAA,EAAA+iB,EAAA,GACA,IAAAlxB,EAAAkxB,EAAA91B,OACA0mC,EAAAroC,KAAAqoC,MAEA,IAAA3mC,EAAA,EAAmBA,EAAA6E,EAAU7E,IAC7BgT,EAAAyzB,EAAA/mC,QAAAs2B,cAAA2Q,EAAAvQ,SAAAlsB,EAAA8I,GAAA+iB,EAAA/1B,IAGA,OAAAgT,GAGA0zB,EAAAxnC,UAAA82B,cAAA,SAAAl1B,GACA,IAAAxC,KAAAqoC,MAAA9lC,OAAAC,EAAA6lC,OACA,UAAA3pB,EAAAtd,QAAA,mDAGA,GAAApB,KAAA0oC,SACA,OAAAlmC,EAGA,GAAAA,EAAAkmC,SACA,OAAA1oC,KAGA,IAAA6oC,EAAA7oC,KAAAy3B,aACAqR,EAAAtmC,EAAAi1B,aAEA,GAAAoR,EAAAlnC,OAAAmnC,EAAAnnC,OAAA,CACA,IAAA4B,EAAAslC,EACAA,EAAAC,EACAA,EAAAvlC,EAGA,IAAAwlC,EAAA,IAAA/pB,WAAA8pB,EAAAnnC,QACAqnC,EAAAF,EAAAnnC,OAAAknC,EAAAlnC,OAEA4c,EAAAnd,QAAAqR,UAAAq2B,EAAA,EAAAC,EAAA,EAAAC,GAEA,QAAAtnC,EAAAsnC,EAA4BtnC,EAAAonC,EAAAnnC,OAA+BD,IAC3DqnC,EAAArnC,GAAAymC,EAAA/mC,QAAAs2B,cAAAmR,EAAAnnC,EAAAsnC,GAAAF,EAAApnC,IAGA,WAAA0mC,EAAApoC,KAAAqoC,MAAAU,IAGAX,EAAAxnC,UAAAk3B,SAAA,SAAAt1B,GACA,IAAAxC,KAAAqoC,MAAA9lC,OAAAC,EAAA6lC,OACA,UAAA3pB,EAAAtd,QAAA,mDAGA,GAAApB,KAAA0oC,UAAAlmC,EAAAkmC,SACA,OAAA1oC,KAAAqoC,MAAAjR,UAUA,IAPA,IAAA6R,EAAAjpC,KAAAy3B,aACAyR,EAAAD,EAAAtnC,OACAwnC,EAAA3mC,EAAAi1B,aACA2R,EAAAD,EAAAxnC,OACA0nC,EAAA,IAAArqB,WAAAkqB,EAAAE,EAAA,GACAf,EAAAroC,KAAAqoC,MAEA3mC,EAAA,EAAmBA,EAAAwnC,EAAaxnC,IAGhC,IAFA,IAAA4nC,EAAAL,EAAAvnC,GAEAsG,EAAA,EAAqBA,EAAAohC,EAAaphC,IAClCqhC,EAAA3nC,EAAAsG,GAAAmgC,EAAA/mC,QAAAs2B,cAAA2R,EAAA3nC,EAAAsG,GAAAqgC,EAAAvQ,SAAAwR,EAAAH,EAAAnhC,KAIA,WAAAogC,EAAAC,EAAAgB,IAGAjB,EAAAxnC,UAAA2oC,eAAA,SAAAC,GAGA,OAAAA,EACA,OAAAxpC,KAAAqoC,MAAAjR,UAGA,OAAAoS,EACA,OAAAxpC,KAQA,IALA,IAAAuG,EAAAvG,KAAAy3B,aAAA91B,OACA0mC,EAAAroC,KAAAqoC,MACAgB,EAAA,IAAArqB,WAAAzY,GACAkxB,EAAAz3B,KAAAy3B,aAEA/1B,EAAA,EAAmBA,EAAA6E,EAAU7E,IAC7B2nC,EAAA3nC,GAAA2mC,EAAAvQ,SAAAL,EAAA/1B,GAAA8nC,GAGA,WAAApB,EAAAC,EAAAgB,IAGAjB,EAAAxnC,UAAA6oC,mBAAA,SAAAlS,EAEAC,GAGA,GAAAD,EAAA,EACA,UAAA7Y,EAAAtd,QAGA,OAAAo2B,EACA,OAAAx3B,KAAAqoC,MAAAjR,UAQA,IALA,IAAAK,EAAAz3B,KAAAy3B,aACAlxB,EAAAkxB,EAAA91B,OACA0nC,EAAA,IAAArqB,WAAAzY,EAAAgxB,GACA8Q,EAAAroC,KAAAqoC,MAEA3mC,EAAA,EAAmBA,EAAA6E,EAAU7E,IAC7B2nC,EAAA3nC,GAAA2mC,EAAAvQ,SAAAL,EAAA/1B,GAAA81B,GAGA,WAAA4Q,EAAAC,EAAAgB,IAGAjB,EAAAxnC,UAAA8oC,OAAA,SAAAlnC,GACA,IAAAxC,KAAAqoC,MAAA9lC,OAAAC,EAAA6lC,OACA,UAAA3pB,EAAAtd,QAAA,mDAGA,GAAAoB,EAAAkmC,SACA,UAAAhqB,EAAAtd,QAAA,eASA,IANA,IAAAinC,EAAAroC,KAAAqoC,MACAsB,EAAAtB,EAAAjR,UACAwS,EAAA5pC,KACA6pC,EAAArnC,EAAAmmC,eAAAnmC,EAAAimC,aACAqB,EAAAzB,EAAAxQ,QAAAgS,GAEAD,EAAAnB,aAAAjmC,EAAAimC,cAAAmB,EAAAlB,UAAA,CACA,IAAAqB,EAAAH,EAAAnB,YAAAjmC,EAAAimC,YACAuB,EAAA3B,EAAAvQ,SAAA8R,EAAAjB,eAAAiB,EAAAnB,aAAAqB,GACAG,EAAAznC,EAAAinC,mBAAAM,EAAAC,GACAE,EAAA7B,EAAA/Q,cAAAyS,EAAAC,GACAL,IAAAjS,cAAAwS,GACAN,IAAAlS,cAAAuS,GAGA,OAAAN,EAAAC,IAKAxB,EAAAxnC,UAAAgC,SAAA,WAGA,IAFA,IAAA8R,EAAA,GAEA6iB,EAAAv3B,KAAAyoC,YAAuClR,GAAA,EAAaA,IAAA,CACpD,IAAAC,EAAAx3B,KAAA2oC,eAAApR,GAEA,OAAAC,EAAA,CAUA,GATAA,EAAA,GACA9iB,GAAA,MACA8iB,MAEA9iB,EAAA/S,OAAA,IACA+S,GAAA,OAIA,IAAA6iB,GAAA,IAAAC,EAAA,CACA,IAAA2S,EAAAnqC,KAAAqoC,MAAAzQ,IAAAJ,GAEA,IAAA2S,EACAz1B,GAAA,IACW,IAAAy1B,EACXz1B,GAAA,KAEAA,GAAA,KACAA,GAAAy1B,GAIA,IAAA5S,IACA,IAAAA,EACA7iB,GAAA,KAEAA,GAAA,KACAA,GAAA6iB,KAMA,OAAA7iB,GAGA0zB,EA9RA,GAiSAvoC,EAAAuB,QAAAgnC,gCCxTAhoC,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAIAqpC,EAJAtQ,EAA0Bh6B,EAAQ,IAElC4e,EAAiC5e,EAAQ,IAIzC,SAAAsqC,GACAA,IAAA,SACAA,IAAA,SACAA,IAAA,SACAA,IAAA,SAJA,CAKCA,EAAAvqC,EAAAuqC,6BAAAvqC,EAAAuqC,2BAAA,KASD,IAAAC,EAEA,WACA,SAAAA,EAAAtpC,EAAAupC,EAAAvrB,GAGA/e,KAAAe,QACAf,KAAAsqC,cACAtqC,KAAA+e,OACAsrB,EAAAE,SAAA35B,IAAAmO,EAAA/e,MACAqqC,EAAAG,UAAA55B,IAAA7P,EAAAf,MAwEA,OArEAqqC,EAAAzpC,UAAAqgC,SAAA,WACA,OAAAjhC,KAAAe,OAGAspC,EAAAzpC,UAAA6pC,QAAA,WACA,OAAAzqC,KAAA+e,MAGAsrB,EAAA1kC,WAAA,SAAAqqB,GACA,OAAAA,GACA,QACA,OAAAqa,EAAAK,EAEA,QACA,OAAAL,EAAAM,EAEA,QACA,OAAAN,EAAAO,EAEA,QACA,OAAAP,EAAAQ,EAEA,QACA,UAAA/Q,EAAA14B,QAAA4uB,EAAA,mBAIAqa,EAAAzpC,UAAAgC,SAAA,WACA,OAAA5C,KAAAsqC,aAGAD,EAAAzpC,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAuoB,GACA,SAGA,IAAA7nC,EAAAsf,EACA,OAAA9hB,KAAAe,QAAAyB,EAAAzB,OAQAspC,EAAAS,QAAA,SAAA/rB,GAGA,GAAAA,EAAA,GAAAA,GAAAsrB,EAAAE,SAAAhkC,KACA,UAAAmY,EAAAtd,QAGA,OAAAipC,EAAAE,SAAA1qB,IAAAd,IAGAsrB,EAAAE,SAAA,IAAApnB,IACAknB,EAAAG,UAAA,IAAArnB,IAGAknB,EAAAK,EAAA,IAAAL,EAAAD,EAAAM,EAAA,OAGAL,EAAAM,EAAA,IAAAN,EAAAD,EAAAO,EAAA,OAGAN,EAAAO,EAAA,IAAAP,EAAAD,EAAAQ,EAAA,OAGAP,EAAAQ,EAAA,IAAAR,EAAAD,EAAAS,EAAA,OACAR,EAhFA,GAmFAxqC,EAAAuB,QAAAipC,gCCnGA,IAAAU,EAXA3qC,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAYA,SAAAgqC,GAUAA,IAAA,uCAKAA,IAAA,iCAKAA,IAAA,yCAUAA,IAAA,uBASAA,IAAA,uBAOAA,IAAA,mBAMAA,IAAA,mCAOAA,IAAA,yCAMAA,IAAA,yCASAA,IAAA,+BAMAA,IAAA,4BAhFA,CAiFCA,MAAA,KAEDlrC,EAAAuB,QAAA2pC,gCCzGA,IAAAh5B,EAAA3R,OAAA2R,sBACAtR,EAAAL,OAAAQ,UAAAH,eACAuqC,EAAA5qC,OAAAQ,UAAAqqC,qBA0DArrC,EAAAC,QAhDA,WACA,IACA,IAAAO,OAAAoB,OACA,SAKA,IAAA0pC,EAAA,IAAAxjC,OAAA,OAIA,GAFAwjC,EAAA,QAEA,MAAA9qC,OAAA+qC,oBAAAD,GAAA,GACA,SAMA,IAFA,IAAAE,EAAA,GAEA1pC,EAAA,EAAmBA,EAAA,GAAQA,IAC3B0pC,EAAA,IAAA1jC,OAAAgD,aAAAhJ,MAOA,kBAJAtB,OAAA+qC,oBAAAC,GAAAptB,IAAA,SAAAlX,GACA,OAAAskC,EAAAtkC,KAGA4F,KAAA,IACA,SAIA,IAAA2+B,EAAA,GAKA,MAJA,uBAAAr3B,MAAA,IAAA7B,QAAA,SAAAm5B,GACAD,EAAAC,OAGoC,yBAApClrC,OAAA0R,KAAA1R,OAAAoB,OAAA,GAAoC6pC,IAAA3+B,KAAA,IAKjC,MAAAunB,GAEH,UAIAsX,GAAAnrC,OAAAoB,OAAA,SAAAC,EAAAG,GAKA,IAJA,IAAAgD,EAEA4mC,EADA13B,EA1DA,SAAA5N,GACA,UAAAA,QAAAhB,IAAAgB,EACA,UAAArB,UAAA,yDAGA,OAAAzE,OAAA8F,GAqDAulC,CAAAhqC,GAGAuuB,EAAA,EAAiBA,EAAA7uB,UAAAQ,OAAsBquB,IAAA,CAGvC,QAAAnuB,KAFA+C,EAAAxE,OAAAe,UAAA6uB,IAGAvvB,EAAAqB,KAAA8C,EAAA/C,KACAiS,EAAAjS,GAAA+C,EAAA/C,IAIA,GAAAkQ,EAAA,CACAy5B,EAAAz5B,EAAAnN,GAEA,QAAAlD,EAAA,EAAqBA,EAAA8pC,EAAA7pC,OAAoBD,IACzCspC,EAAAlpC,KAAA8C,EAAA4mC,EAAA9pC,MACAoS,EAAA03B,EAAA9pC,IAAAkD,EAAA4mC,EAAA9pC,MAMA,OAAAoS,oBC7EAlU,EAAAC,QAAmBC,EAAQ,IAARA,iCCMnB,IAIA4rC,EAJAC,EAAA,kBAAAC,gBAAA,KACAC,EAAAF,GAAA,oBAAAA,EAAAzqC,MAAAyqC,EAAAzqC,MAAA,SAAAO,EAAAqqC,EAAAl0B,GACA,OAAAiN,SAAAjkB,UAAAM,MAAAY,KAAAL,EAAAqqC,EAAAl0B,IAKA8zB,EADAC,GAAA,oBAAAA,EAAA95B,QACA85B,EAAA95B,QACCzR,OAAA2R,sBACD,SAAAtQ,GACA,OAAArB,OAAA+qC,oBAAA1pC,GAAAoK,OAAAzL,OAAA2R,sBAAAtQ,KAGA,SAAAA,GACA,OAAArB,OAAA+qC,oBAAA1pC,IAQA,IAAAsqC,EAAA5jC,OAAAjB,OAAA,SAAAnG,GACA,OAAAA,OAGA,SAAAirC,IACAA,EAAAC,KAAAnqC,KAAA9B,MAGAJ,EAAAC,QAAAmsC,EAEAA,iBACAA,EAAAprC,UAAAsrC,aAAAhnC,EACA8mC,EAAAprC,UAAAurC,aAAA,EACAH,EAAAprC,UAAAwrC,mBAAAlnC,EAGA,IAAAmnC,EAAA,GAmCA,SAAAC,EAAAjoC,GACA,YAAAa,IAAAb,EAAA+nC,cAAAJ,EAAAK,oBACAhoC,EAAA+nC,cAmDA,SAAAG,EAAA9qC,EAAA0E,EAAAsR,EAAA+0B,GACA,IAAAzlC,EACA0lC,EACAC,EA/GAC,EAiHA,uBAAAl1B,EACA,UAAA5S,UAAA,0EAAA4S,GAqBA,QAhBAvS,KAFAunC,EAAAhrC,EAAAyqC,UAGAO,EAAAhrC,EAAAyqC,QAAA9rC,OAAAS,OAAA,MACAY,EAAA0qC,aAAA,SAIAjnC,IAAAunC,EAAAG,cACAnrC,EAAAulB,KAAA,cAAA7gB,EAAAsR,yBAGAg1B,EAAAhrC,EAAAyqC,SAGAQ,EAAAD,EAAAtmC,SAGAjB,IAAAwnC,EAEAA,EAAAD,EAAAtmC,GAAAsR,IACAhW,EAAA0qC,kBAcA,GAZA,oBAAAO,EAEAA,EAAAD,EAAAtmC,GAAAqmC,EAAA,CAAA/0B,EAAAi1B,GAAA,CAAAA,EAAAj1B,GACK+0B,EACLE,EAAAj4B,QAAAgD,GAEAi1B,EAAA5jC,KAAA2O,IAIA1Q,EAAAulC,EAAA7qC,IAEA,GAAAirC,EAAA/qC,OAAAoF,IAAA2lC,EAAAG,OAAA,CACAH,EAAAG,QAAA,EAGA,IAAAC,EAAA,IAAApoC,MAAA,+CAAAgoC,EAAA/qC,OAAA,IAAA+F,OAAAvB,GAAA,qEACA2mC,EAAA3lB,KAAA,8BACA2lB,EAAAC,QAAAtrC,EACAqrC,EAAA3mC,OACA2mC,EAAArd,MAAAid,EAAA/qC,OAhKAgrC,EAiKAG,EAhKAE,iBAAAC,MAAAD,QAAAC,KAAAN,GAoKA,OAAAlrC,EA2BA,SAAAyrC,EAAAzrC,EAAA0E,EAAAsR,GACA,IAAArB,EAAA,CACA+2B,OAAA,EACAC,YAAAloC,EACAzD,SACA0E,OACAsR,YAEA41B,EAtBA,WAGA,IAFA,IAAAz1B,EAAA,GAEAlW,EAAA,EAAiBA,EAAAP,UAAAQ,OAAsBD,IACvCkW,EAAA9O,KAAA3H,UAAAO,IAGA1B,KAAAmtC,QACAntC,KAAAyB,OAAAqlB,eAAA9mB,KAAAmG,KAAAnG,KAAAotC,QACAptC,KAAAmtC,OAAA,EACAtB,EAAA7rC,KAAAyX,SAAAzX,KAAAyB,OAAAmW,KAYA8lB,KAAAtnB,GAGA,OAFAi3B,EAAA51B,WACArB,EAAAg3B,OAAAC,EACAA,EA8GA,SAAAC,EAAA7rC,EAAA0E,EAAAonC,GACA,IAAAd,EAAAhrC,EAAAyqC,QACA,QAAAhnC,IAAAunC,EAAA,SACA,IAAAe,EAAAf,EAAAtmC,GACA,YAAAjB,IAAAsoC,EAAA,GACA,oBAAAA,EAAAD,EAAA,CAAAC,EAAA/1B,UAAA+1B,GAAA,CAAAA,GACAD,EA2DA,SAAAjmC,GAGA,IAFA,IAAA6F,EAAA,IAAA5M,MAAA+G,EAAA3F,QAEAD,EAAA,EAAiBA,EAAAyL,EAAAxL,SAAgBD,EACjCyL,EAAAzL,GAAA4F,EAAA5F,GAAA+V,UAAAnQ,EAAA5F,GAGA,OAAAyL,EAlEAsgC,CAAAD,GAAAE,EAAAF,IAAA7rC,QAqBA,SAAA0Z,EAAAlV,GACA,IAAAsmC,EAAAzsC,KAAAksC,QAEA,QAAAhnC,IAAAunC,EAAA,CACA,IAAAe,EAAAf,EAAAtmC,GAEA,uBAAAqnC,EACA,SACK,QAAAtoC,IAAAsoC,EACL,OAAAA,EAAA7rC,OAIA,SAOA,SAAA+rC,EAAApmC,EAAAR,GAGA,IAFA,IAAAd,EAAA,IAAAzF,MAAAuG,GAEApF,EAAA,EAAiBA,EAAAoF,IAAOpF,EACxBsE,EAAAtE,GAAA4F,EAAA5F,GAGA,OAAAsE,EA1VA5F,OAAAU,eAAAkrC,EAAA,uBACAt6B,YAAA,EACAmO,IAAA,WACA,OAAAwsB,GAEAz7B,IAAA,SAAApM,GACA,qBAAAA,KAAA,GAAAunC,EAAAvnC,GACA,UAAAF,WAAA,kGAAAE,EAAA,KAGA6nC,EAAA7nC,KAIAwnC,EAAAC,KAAA,gBACA/mC,IAAAlF,KAAAksC,SAAAlsC,KAAAksC,UAAA9rC,OAAAgkB,eAAApkB,MAAAksC,UACAlsC,KAAAksC,QAAA9rC,OAAAS,OAAA,MACAb,KAAAmsC,aAAA,GAGAnsC,KAAAosC,cAAApsC,KAAAosC,oBAAAlnC,GAKA8mC,EAAAprC,UAAA+sC,gBAAA,SAAA7mC,GACA,qBAAAA,KAAA,GAAAilC,EAAAjlC,GACA,UAAAxC,WAAA,gFAAAwC,EAAA,KAIA,OADA9G,KAAAosC,cAAAtlC,EACA9G,MAQAgsC,EAAAprC,UAAAgtC,gBAAA,WACA,OAAAtB,EAAAtsC,OAGAgsC,EAAAprC,UAAAomB,KAAA,SAAA7gB,GAGA,IAFA,IAAAyR,EAAA,GAEAlW,EAAA,EAAiBA,EAAAP,UAAAQ,OAAsBD,IACvCkW,EAAA9O,KAAA3H,UAAAO,IAGA,IAAAmsC,EAAA,UAAA1nC,EACAsmC,EAAAzsC,KAAAksC,QACA,QAAAhnC,IAAAunC,EAAAoB,UAAA3oC,IAAAunC,EAAA5Q,WAA4E,IAAAgS,EAAA,SAE5E,GAAAA,EAAA,CACA,IAAAC,EAGA,GAFAl2B,EAAAjW,OAAA,IAAAmsC,EAAAl2B,EAAA,IAEAk2B,aAAAppC,MAGA,MAAAopC,EAIA,IAAA7Z,EAAA,IAAAvvB,MAAA,oBAAAopC,EAAA,KAAAA,EAAAz7B,QAAA,SAEA,MADA4hB,EAAAjJ,QAAA8iB,EACA7Z,EAGA,IAAA8Z,EAAAtB,EAAAtmC,GACA,QAAAjB,IAAA6oC,EAAA,SAEA,uBAAAA,EACAlC,EAAAkC,EAAA/tC,KAAA4X,OAEA,KAAA9R,EAAAioC,EAAApsC,OACAoV,EAAA22B,EAAAK,EAAAjoC,GAEA,IAAApE,EAAA,EAAmBA,EAAAoE,IAASpE,EAC5BmqC,EAAA90B,EAAArV,GAAA1B,KAAA4X,GAIA,UA+DAo0B,EAAAprC,UAAA+lB,YAAA,SAAAxgB,EAAAsR,GACA,OAAA80B,EAAAvsC,KAAAmG,EAAAsR,GAAA,IAGAu0B,EAAAprC,UAAA8lB,GAAAslB,EAAAprC,UAAA+lB,YAEAqlB,EAAAprC,UAAAqmB,gBAAA,SAAA9gB,EAAAsR,GACA,OAAA80B,EAAAvsC,KAAAmG,EAAAsR,GAAA,IA+BAu0B,EAAAprC,UAAAgmB,KAAA,SAAAzgB,EAAAsR,GACA,uBAAAA,EACA,UAAA5S,UAAA,0EAAA4S,GAIA,OADAzX,KAAA0mB,GAAAvgB,EAAA+mC,EAAAltC,KAAAmG,EAAAsR,IACAzX,MAGAgsC,EAAAprC,UAAAsmB,oBAAA,SAAA/gB,EAAAsR,GACA,uBAAAA,EACA,UAAA5S,UAAA,0EAAA4S,GAIA,OADAzX,KAAAinB,gBAAA9gB,EAAA+mC,EAAAltC,KAAAmG,EAAAsR,IACAzX,MAIAgsC,EAAAprC,UAAAkmB,eAAA,SAAA3gB,EAAAsR,GACA,IAAA3L,EAAA2gC,EAAAuB,EAAAtsC,EAAAusC,EAEA,uBAAAx2B,EACA,UAAA5S,UAAA,0EAAA4S,GAIA,QAAAvS,KADAunC,EAAAzsC,KAAAksC,SACA,OAAAlsC,KAEA,QAAAkF,KADA4G,EAAA2gC,EAAAtmC,IACA,OAAAnG,KAEA,GAAA8L,IAAA2L,GAAA3L,EAAA2L,aACA,MAAAzX,KAAAmsC,aAAAnsC,KAAAksC,QAAA9rC,OAAAS,OAAA,cACA4rC,EAAAtmC,GACAsmC,EAAA3lB,gBAAA9mB,KAAAgnB,KAAA,iBAAA7gB,EAAA2F,EAAA2L,mBAEG,uBAAA3L,EAAA,CAGH,IAFAkiC,GAAA,EAEAtsC,EAAAoK,EAAAnK,OAAA,EAA6BD,GAAA,EAAQA,IACrC,GAAAoK,EAAApK,KAAA+V,GAAA3L,EAAApK,GAAA+V,aAAA,CACAw2B,EAAAniC,EAAApK,GAAA+V,SACAu2B,EAAAtsC,EACA,MAIA,GAAAssC,EAAA,SAAAhuC,KACA,IAAAguC,EAAAliC,EAAAk7B,QAoHA,SAAAl7B,EAAA4H,GACA,KAAQA,EAAA,EAAA5H,EAAAnK,OAAyB+R,IACjC5H,EAAA4H,GAAA5H,EAAA4H,EAAA,GAGA5H,EAAA8H,MAxHAH,CAAA3H,EAAAkiC,GAEA,IAAAliC,EAAAnK,SAAA8qC,EAAAtmC,GAAA2F,EAAA,SACA5G,IAAAunC,EAAA3lB,gBAAA9mB,KAAAgnB,KAAA,iBAAA7gB,EAAA8nC,GAAAx2B,GAGA,OAAAzX,MAGAgsC,EAAAprC,UAAAimB,IAAAmlB,EAAAprC,UAAAkmB,eAEAklB,EAAAprC,UAAAmmB,mBAAA,SAAA5gB,GACA,IAAA4Q,EAAA01B,EAAA/qC,EAEA,QAAAwD,KADAunC,EAAAzsC,KAAAksC,SACA,OAAAlsC,KAEA,QAAAkF,IAAAunC,EAAA3lB,eAQA,OAPA,IAAA3lB,UAAAQ,QACA3B,KAAAksC,QAAA9rC,OAAAS,OAAA,MACAb,KAAAmsC,aAAA,QACKjnC,IAAAunC,EAAAtmC,KACL,MAAAnG,KAAAmsC,aAAAnsC,KAAAksC,QAAA9rC,OAAAS,OAAA,aAAwE4rC,EAAAtmC,IAGxEnG,KAIA,OAAAmB,UAAAQ,OAAA,CACA,IACAE,EADAiQ,EAAA1R,OAAA0R,KAAA26B,GAGA,IAAA/qC,EAAA,EAAeA,EAAAoQ,EAAAnQ,SAAiBD,EAEhC,oBADAG,EAAAiQ,EAAApQ,KAEA1B,KAAA+mB,mBAAAllB,GAMA,OAHA7B,KAAA+mB,mBAAA,kBACA/mB,KAAAksC,QAAA9rC,OAAAS,OAAA,MACAb,KAAAmsC,aAAA,EACAnsC,KAKA,uBAFA+W,EAAA01B,EAAAtmC,IAGAnG,KAAA8mB,eAAA3gB,EAAA4Q,QACG,QAAA7R,IAAA6R,EAEH,IAAArV,EAAAqV,EAAApV,OAAA,EAAkCD,GAAA,EAAQA,IAC1C1B,KAAA8mB,eAAA3gB,EAAA4Q,EAAArV,IAIA,OAAA1B,MAYAgsC,EAAAprC,UAAAmW,UAAA,SAAA5Q,GACA,OAAAmnC,EAAAttC,KAAAmG,GAAA,IAGA6lC,EAAAprC,UAAAstC,aAAA,SAAA/nC,GACA,OAAAmnC,EAAAttC,KAAAmG,GAAA,IAGA6lC,EAAA3wB,cAAA,SAAA0xB,EAAA5mC,GACA,0BAAA4mC,EAAA1xB,cACA0xB,EAAA1xB,cAAAlV,GAEAkV,EAAAvZ,KAAAirC,EAAA5mC,IAIA6lC,EAAAprC,UAAAya,gBAkBA2wB,EAAAprC,UAAAutC,WAAA,WACA,OAAAnuC,KAAAmsC,aAAA,EAAAT,EAAA1rC,KAAAksC,SAAA,sBC7YArsC,EAAAD,EAAAC,QAA2BC,EAAQ,KACnCsuC,OAAAvuC,EACAA,EAAAuzB,SAAAvzB,EACAA,EAAAwzB,SAAmBvzB,EAAQ,IAC3BD,EAAAozB,OAAiBnzB,EAAQ,IACzBD,EAAAwuC,UAAoBvuC,EAAQ,IAC5BD,EAAAyuC,YAAsBxuC,EAAQ,oCCN9B,SAAAklB,EAAAupB,EAAA1qC,GA0BA,IAAAkvB,EAAUjzB,EAAQ,IAgBlB,SAAA0uC,EAAAp4B,GACA,IAAA9D,EAAAtS,KAEAA,KAAAyuC,KAAA,KACAzuC,KAAAie,MAAA,KAEAje,KAAA0uC,OAAA,YAukBA,SAAAC,EAAAv4B,EAAA6d,GACA,IAAAhW,EAAA0wB,EAAA1wB,MACA0wB,EAAA1wB,MAAA,KAEA,KAAAA,GAAA,CACA,IAAAiW,EAAAjW,EAAA5G,SACAjB,EAAAw4B,YACA1a,EAAAD,GACAhW,IAAAwwB,KAGAr4B,EAAAy4B,mBACAz4B,EAAAy4B,mBAAAJ,KAAAE,EAEAv4B,EAAAy4B,mBAAAF,EAplBAG,CAAAx8B,EAAA8D,IAnBAxW,EAAAC,QAAAwzB,EA2BA,IAKAJ,EALA8b,GAAA/pB,EAAAqB,SAAA,kBAAAjf,QAAA4d,EAAAwB,QAAA9gB,MAAA,SAAA6oC,EAAAxb,EAAA5M,SAQAkN,EAAA2b,gBAGA,IAAA9b,EAAWpzB,EAAQ,IAEnBozB,EAAAC,SAAgBrzB,EAAQ,IAKxB,IAAAmvC,EAAA,CACAC,UAAapvC,EAAQ,MAMrBsuC,EAAatuC,EAAQ,IAMrBoE,EAAapE,EAAQ,IAAaoE,OAElCirC,EAAAtrC,EAAAU,YAAA,aAYA,IAoHA6qC,EApHAC,EAAkBvvC,EAAQ,IAI1B,SAAAwvC,KAEA,SAAAN,EAAA5gB,EAAAuN,GACA1I,KAAqBnzB,EAAQ,IAC7BsuB,KAAA,GAMA,IAAAmhB,EAAA5T,aAAA1I,EAGAjzB,KAAAwvC,aAAAphB,EAAAohB,WACAD,IAAAvvC,KAAAwvC,WAAAxvC,KAAAwvC,cAAAphB,EAAAqhB,oBAIA,IAAAC,EAAAthB,EAAAyF,cACA8b,EAAAvhB,EAAAwhB,sBACAC,EAAA7vC,KAAAwvC,WAAA,SACAxvC,KAAA6zB,cAAA6b,GAAA,IAAAA,IAAiDH,IAAAI,GAAA,IAAAA,KAA0FE,EAE3I7vC,KAAA6zB,cAAA/pB,KAAA2F,MAAAzP,KAAA6zB,eAEA7zB,KAAA8vC,aAAA,EAEA9vC,KAAA+vC,WAAA,EAEA/vC,KAAAgwC,QAAA,EAEAhwC,KAAA2zB,OAAA,EAEA3zB,KAAAiwC,UAAA,EAEAjwC,KAAA+zB,WAAA,EAIA,IAAAmc,GAAA,IAAA9hB,EAAA+hB,cACAnwC,KAAAmwC,eAAAD,EAIAlwC,KAAAowC,gBAAAhiB,EAAAgiB,iBAAA,OAIApwC,KAAA2B,OAAA,EAEA3B,KAAAqwC,SAAA,EAEArwC,KAAAswC,OAAA,EAKAtwC,KAAAuwC,MAAA,EAIAvwC,KAAAwwC,kBAAA,EAEAxwC,KAAAywC,QAAA,SAAA3C,IAiRA,SAAAnS,EAAAmS,GACA,IAAA13B,EAAAulB,EAAAjI,eACA6c,EAAAn6B,EAAAm6B,KACArc,EAAA9d,EAAAs6B,QAEA,GAZA,SAAAt6B,GACAA,EAAAi6B,SAAA,EACAj6B,EAAAs6B,QAAA,KACAt6B,EAAAzU,QAAAyU,EAAAu6B,SACAv6B,EAAAu6B,SAAA,EAOAC,CAAAx6B,GACA03B,GApCA,SAAAnS,EAAAvlB,EAAAm6B,EAAAzC,EAAA5Z,KACA9d,EAAAw4B,UAEA2B,GAGAxd,EAAA5M,SAAA+N,EAAA4Z,GAGA/a,EAAA5M,SAAA0qB,EAAAlV,EAAAvlB,GACAulB,EAAAjI,eAAAod,cAAA,EACAnV,EAAA3U,KAAA,QAAA8mB,KAIA5Z,EAAA4Z,GACAnS,EAAAjI,eAAAod,cAAA,EACAnV,EAAA3U,KAAA,QAAA8mB,GAGA+C,EAAAlV,EAAAvlB,IAgBA26B,CAAApV,EAAAvlB,EAAAm6B,EAAAzC,EAAA5Z,OAAoD,CAEpD,IAAA+b,EAAAe,EAAA56B,GAEA65B,GAAA75B,EAAAk6B,QAAAl6B,EAAAo6B,mBAAAp6B,EAAA66B,iBACAC,EAAAvV,EAAAvlB,GAGAm6B,EAEAxB,EAAAoC,EAAAxV,EAAAvlB,EAAA65B,EAAA/b,GAGAid,EAAAxV,EAAAvlB,EAAA65B,EAAA/b,IAlSAuc,CAAA9U,EAAAmS,IAIA9tC,KAAA0wC,QAAA,KAEA1wC,KAAA2wC,SAAA,EACA3wC,KAAAixC,gBAAA,KACAjxC,KAAAoxC,oBAAA,KAGApxC,KAAA4uC,UAAA,EAGA5uC,KAAAqxC,aAAA,EAEArxC,KAAA8wC,cAAA,EAEA9wC,KAAAsxC,qBAAA,EAGAtxC,KAAA6uC,mBAAA,IAAAL,EAAAxuC,MA4CA,SAAAqzB,EAAAjF,GAQA,GAPA6E,KAAqBnzB,EAAQ,KAO7BsvC,EAAAttC,KAAAuxB,EAAArzB,yBAAAizB,GACA,WAAAI,EAAAjF,GAGApuB,KAAA0zB,eAAA,IAAAsb,EAAA5gB,EAAApuB,MAEAA,KAAA2R,UAAA,EAEAyc,IACA,oBAAAA,EAAA3oB,QAAAzF,KAAAuxC,OAAAnjB,EAAA3oB,OACA,oBAAA2oB,EAAAojB,SAAAxxC,KAAAyxC,QAAArjB,EAAAojB,QACA,oBAAApjB,EAAAsjB,UAAA1xC,KAAAg0B,SAAA5F,EAAAsjB,SACA,oBAAAtjB,EAAAujB,QAAA3xC,KAAA4xC,OAAAxjB,EAAAujB,QAGAvD,EAAAtsC,KAAA9B,MAgJA,SAAA6xC,EAAAlW,EAAAvlB,EAAAo7B,EAAA1rC,EAAA2hC,EAAAniC,EAAA4uB,GACA9d,EAAAu6B,SAAA7qC,EACAsQ,EAAAs6B,QAAAxc,EACA9d,EAAAi6B,SAAA,EACAj6B,EAAAm6B,MAAA,EACAiB,EAAA7V,EAAA8V,QAAAhK,EAAArxB,EAAAq6B,SAAmD9U,EAAA4V,OAAA9J,EAAAniC,EAAA8Q,EAAAq6B,SACnDr6B,EAAAm6B,MAAA,EAyDA,SAAAY,EAAAxV,EAAAvlB,EAAA65B,EAAA/b,GACA+b,GASA,SAAAtU,EAAAvlB,GACA,IAAAA,EAAAzU,QAAAyU,EAAA25B,YACA35B,EAAA25B,WAAA,EACApU,EAAA3U,KAAA,UAZA8qB,CAAAnW,EAAAvlB,GACAA,EAAAw4B,YACA1a,IACA2c,EAAAlV,EAAAvlB,GAcA,SAAA86B,EAAAvV,EAAAvlB,GACAA,EAAAo6B,kBAAA,EACA,IAAAvyB,EAAA7H,EAAA66B,gBAEA,GAAAtV,EAAA8V,SAAAxzB,KAAAwwB,KAAA,CAEA,IAAAjH,EAAApxB,EAAAk7B,qBACArrC,EAAA,IAAA1F,MAAAinC,GACAuK,EAAA37B,EAAAy4B,mBACAkD,EAAA9zB,QAIA,IAHA,IAAAwR,EAAA,EACAuiB,GAAA,EAEA/zB,GACAhY,EAAAwpB,GAAAxR,EACAA,EAAAg0B,QAAAD,GAAA,GACA/zB,IAAAwwB,KACAhf,GAAA,EAGAxpB,EAAA+rC,aACAH,EAAAlW,EAAAvlB,GAAA,EAAAA,EAAAzU,OAAAsE,EAAA,GAAA8rC,EAAArD,QAGAt4B,EAAAw4B,YACAx4B,EAAAg7B,oBAAA,KAEAW,EAAAtD,MACAr4B,EAAAy4B,mBAAAkD,EAAAtD,KACAsD,EAAAtD,KAAA,MAEAr4B,EAAAy4B,mBAAA,IAAAL,EAAAp4B,GAGAA,EAAAk7B,qBAAA,MACG,CAEH,KAAArzB,GAAA,CACA,IAAAwpB,EAAAxpB,EAAAwpB,MACAniC,EAAA2Y,EAAA3Y,SACA4uB,EAAAjW,EAAA5G,SASA,GAPAw6B,EAAAlW,EAAAvlB,GAAA,EADAA,EAAAo5B,WAAA,EAAA/H,EAAA9lC,OACA8lC,EAAAniC,EAAA4uB,GACAjW,IAAAwwB,KACAr4B,EAAAk7B,uBAKAl7B,EAAAi6B,QACA,MAIA,OAAApyB,IAAA7H,EAAAg7B,oBAAA,MAGAh7B,EAAA66B,gBAAAhzB,EACA7H,EAAAo6B,kBAAA,EAgCA,SAAAQ,EAAA56B,GACA,OAAAA,EAAA45B,QAAA,IAAA55B,EAAAzU,QAAA,OAAAyU,EAAA66B,kBAAA76B,EAAA65B,WAAA75B,EAAAi6B,QAGA,SAAA6B,EAAAvW,EAAAvlB,GACAulB,EAAAiW,OAAA,SAAA3d,GACA7d,EAAAw4B,YAEA3a,GACA0H,EAAA3U,KAAA,QAAAiN,GAGA7d,EAAAi7B,aAAA,EACA1V,EAAA3U,KAAA,aACA6pB,EAAAlV,EAAAvlB,KAiBA,SAAAy6B,EAAAlV,EAAAvlB,GACA,IAAA+7B,EAAAnB,EAAA56B,GAWA,OATA+7B,KAhBA,SAAAxW,EAAAvlB,GACAA,EAAAi7B,aAAAj7B,EAAA05B,cACA,oBAAAnU,EAAAiW,QACAx7B,EAAAw4B,YACAx4B,EAAA05B,aAAA,EACA/c,EAAA5M,SAAA+rB,EAAAvW,EAAAvlB,KAEAA,EAAAi7B,aAAA,EACA1V,EAAA3U,KAAA,eASAorB,CAAAzW,EAAAvlB,GAEA,IAAAA,EAAAw4B,YACAx4B,EAAA65B,UAAA,EACAtU,EAAA3U,KAAA,YAIAmrB,EAhgBAjf,EAAAC,SAAAE,EAAA+a,GA0FAY,EAAApuC,UAAAyxC,UAAA,WAIA,IAHA,IAAAC,EAAAtyC,KAAAixC,gBACA7jC,EAAA,GAEAklC,GACAllC,EAAAtE,KAAAwpC,GACAA,IAAA7D,KAGA,OAAArhC,GAGA,WACA,IACAhN,OAAAU,eAAAkuC,EAAApuC,UAAA,UACAif,IAAAovB,EAAAC,UAAA,WACA,OAAAlvC,KAAAqyC,aACO,0FAEJ,MAAAE,KAPH,GAcA,oBAAAlnC,eAAAmnC,aAAA,oBAAA3tB,SAAAjkB,UAAAyK,OAAAmnC,cACApD,EAAAvqB,SAAAjkB,UAAAyK,OAAAmnC,aACApyC,OAAAU,eAAAuyB,EAAAhoB,OAAAmnC,YAAA,CACAzxC,MAAA,SAAA0xC,GACA,QAAArD,EAAAttC,KAAA9B,KAAAyyC,IACAzyC,OAAAqzB,IACAof,KAAA/e,0BAAAsb,OAIAI,EAAA,SAAAqD,GACA,OAAAA,aAAAzyC,MA+BAqzB,EAAAzyB,UAAA8xC,KAAA,WACA1yC,KAAAgnB,KAAA,YAAAtiB,MAAA,+BAgCA2uB,EAAAzyB,UAAA6E,MAAA,SAAAgiC,EAAAniC,EAAA4uB,GACA,IAxMAtuB,EAwMAwQ,EAAApW,KAAA0zB,eACAvmB,GAAA,EAEA8kC,GAAA77B,EAAAo5B,aA3MA5pC,EA2MA6hC,EA1MAvjC,EAAA2B,SAAAD,iBAAAupC,GA2NA,OAfA8C,IAAA/tC,EAAA2B,SAAA4hC,KACAA,EAlNA,SAAAA,GACA,OAAAvjC,EAAAU,KAAA6iC,GAiNAkL,CAAAlL,IAGA,oBAAAniC,IACA4uB,EAAA5uB,EACAA,EAAA,MAGA2sC,EAAA3sC,EAAA,SAAiCA,MAAA8Q,EAAAg6B,iBACjC,oBAAAlc,MAAAob,GACAl5B,EAAAud,MA9CA,SAAAgI,EAAAzH,GACA,IAAA4Z,EAAA,IAAAppC,MAAA,mBAEAi3B,EAAA3U,KAAA,QAAA8mB,GACA/a,EAAA5M,SAAA+N,EAAA4Z,GA0CA8E,CAAA5yC,KAAAk0B,IAA2C+d,GApC3C,SAAAtW,EAAAvlB,EAAAqxB,EAAAvT,GACA,IAAAsR,GAAA,EACAsI,GAAA,EAcA,OAZA,OAAArG,EACAqG,EAAA,IAAAjpC,UAAA,uCACG,kBAAA4iC,QAAAviC,IAAAuiC,GAAArxB,EAAAo5B,aACH1B,EAAA,IAAAjpC,UAAA,oCAGAipC,IACAnS,EAAA3U,KAAA,QAAA8mB,GACA/a,EAAA5M,SAAA+N,EAAA4Z,GACAtI,GAAA,GAGAA,EAoB2CqN,CAAA7yC,KAAAoW,EAAAqxB,EAAAvT,MAC3C9d,EAAAw4B,YACAzhC,EA+CA,SAAAwuB,EAAAvlB,EAAA67B,EAAAxK,EAAAniC,EAAA4uB,GACA,IAAA+d,EAAA,CACA,IAAAa,EAtBA,SAAA18B,EAAAqxB,EAAAniC,GACA8Q,EAAAo5B,aAAA,IAAAp5B,EAAA+5B,eAAA,kBAAA1I,IACAA,EAAAvjC,EAAAU,KAAA6iC,EAAAniC,IAGA,OAAAmiC,EAiBAsL,CAAA38B,EAAAqxB,EAAAniC,GAEAmiC,IAAAqL,IACAb,GAAA,EACA3sC,EAAA,SACAmiC,EAAAqL,GAIA,IAAAhtC,EAAAsQ,EAAAo5B,WAAA,EAAA/H,EAAA9lC,OACAyU,EAAAzU,QAAAmE,EACA,IAAAqH,EAAAiJ,EAAAzU,OAAAyU,EAAAyd,cAEA1mB,IAAAiJ,EAAA25B,WAAA,GAEA,GAAA35B,EAAAi6B,SAAAj6B,EAAAk6B,OAAA,CACA,IAAAh8B,EAAA8B,EAAAg7B,oBACAh7B,EAAAg7B,oBAAA,CACA3J,QACAniC,WACA2sC,QACA56B,SAAA6c,EACAua,KAAA,MAGAn6B,EACAA,EAAAm6B,KAAAr4B,EAAAg7B,oBAEAh7B,EAAA66B,gBAAA76B,EAAAg7B,oBAGAh7B,EAAAk7B,sBAAA,OAEAO,EAAAlW,EAAAvlB,GAAA,EAAAtQ,EAAA2hC,EAAAniC,EAAA4uB,GAGA,OAAA/mB,EArFA6lC,CAAAhzC,KAAAoW,EAAA67B,EAAAxK,EAAAniC,EAAA4uB,IAEA/mB,GAGAkmB,EAAAzyB,UAAAqyC,KAAA,WACAjzC,KAAA0zB,eACA4c,UAGAjd,EAAAzyB,UAAAsyC,OAAA,WACA,IAAA98B,EAAApW,KAAA0zB,eAEAtd,EAAAk6B,SACAl6B,EAAAk6B,SACAl6B,EAAAi6B,SAAAj6B,EAAAk6B,QAAAl6B,EAAA65B,UAAA75B,EAAAo6B,mBAAAp6B,EAAA66B,iBAAAC,EAAAlxC,KAAAoW,KAIAid,EAAAzyB,UAAAuyC,mBAAA,SAAA7tC,GAGA,GADA,kBAAAA,QAAAsB,iBACA,2FAAAQ,SAAA9B,EAAA,IAAAsB,gBAAA,aAAA/B,UAAA,qBAAAS,GAEA,OADAtF,KAAA0zB,eAAA0c,gBAAA9qC,EACAtF,MAWAI,OAAAU,eAAAuyB,EAAAzyB,UAAA,yBAIA8Q,YAAA,EACAmO,IAAA,WACA,OAAA7f,KAAA0zB,eAAAG,iBA6LAR,EAAAzyB,UAAA2wC,OAAA,SAAA9J,EAAAniC,EAAA4uB,GACAA,EAAA,IAAAxvB,MAAA,iCAGA2uB,EAAAzyB,UAAA6wC,QAAA,KAEApe,EAAAzyB,UAAA+I,IAAA,SAAA89B,EAAAniC,EAAA4uB,GACA,IAAA9d,EAAApW,KAAA0zB,eAEA,oBAAA+T,GACAvT,EAAAuT,EACAA,EAAA,KACAniC,EAAA,MACG,oBAAAA,IACH4uB,EAAA5uB,EACAA,EAAA,MAGA,OAAAmiC,QAAAviC,IAAAuiC,GAAAznC,KAAAyF,MAAAgiC,EAAAniC,GAEA8Q,EAAAk6B,SACAl6B,EAAAk6B,OAAA,EACAtwC,KAAAkzC,UAIA98B,EAAA45B,QAAA55B,EAAA65B,UAiDA,SAAAtU,EAAAvlB,EAAA8d,GACA9d,EAAA45B,QAAA,EACAa,EAAAlV,EAAAvlB,GAEA8d,IACA9d,EAAA65B,SAAAld,EAAA5M,SAAA+N,GAAyCyH,EAAA/U,KAAA,SAAAsN,IAGzC9d,EAAAud,OAAA,EACAgI,EAAAhqB,UAAA,EA1DAyhC,CAAApzC,KAAAoW,EAAA8d,IA+EA9zB,OAAAU,eAAAuyB,EAAAzyB,UAAA,aACAif,IAAA,WACA,YAAA3a,IAAAlF,KAAA0zB,gBAIA1zB,KAAA0zB,eAAAK,WAEAnjB,IAAA,SAAA7P,GAGAf,KAAA0zB,iBAMA1zB,KAAA0zB,eAAAK,UAAAhzB,MAGAsyB,EAAAzyB,UAAA8wC,QAAArC,EAAAqC,QACAre,EAAAzyB,UAAAyyC,WAAAhE,EAAAiE,UAEAjgB,EAAAzyB,UAAAozB,SAAA,SAAAC,EAAAC,GACAl0B,KAAA2J,MACAuqB,EAAAD,+EChqBA,IAAAl0B,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAwyC,EAEA,SAAAtyC,GAGA,SAAAsyC,IACA,cAAAtyC,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAwzC,EAAAtyC,GAMAsyC,EAPA,CARkBzzC,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAmyC,gCChDAnzC,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAwd,EAAeze,EAAQ,IAEvB0zC,EAEA,WACA,SAAAA,KAuGA,OArGAA,EAAAjxC,OAAA,SAAAkxC,EAAAC,GACA,IAAAD,EACA,SAGA,IAAAC,EACA,SAGA,IAAAD,EAAA9xC,OACA,SAGA,IAAA+xC,EAAA/xC,OACA,SAGA,GAAA8xC,EAAA9xC,SAAA+xC,EAAA/xC,OACA,SAGA,QAAAD,EAAA,EAAA2f,EAAAoyB,EAAA9xC,OAA4CD,EAAA2f,EAAc3f,IAC1D,GAAA+xC,EAAA/xC,KAAAgyC,EAAAhyC,GACA,SAIA,UAGA8xC,EAAA9wC,SAAA,SAAAkJ,GACA,UAAAA,EACA,SAKA,IAFA,IAAA8I,EAAA,EAEA8rB,EAAA,EAAAmT,EAAA/nC,EAA6B40B,EAAAmT,EAAAhyC,OAAiB6+B,IAAA,CAE9C9rB,EAAA,GAAAA,EADAi/B,EAAAnT,GAIA,OAAA9rB,GAGA8+B,EAAAI,eAAA,SAAAhoC,EAAA7K,GACA,QAAAW,EAAA,EAAmBA,IAAAkK,EAAAjK,OAAgBD,IACnCkK,EAAAlK,GAAAX,GAIAyyC,EAAAK,OAAA,SAAAC,EAAAC,GACA,IAAA/tC,EAAA,IAAAgZ,WAAA+0B,GAEA,OADAx1B,EAAAnd,QAAAqR,UAAAqhC,EAAA,EAAA9tC,EAAA,EAAA8D,KAAAC,IAAA+pC,EAAAnyC,OAAAoyC,IACA/tC,GAmBAwtC,EAAAQ,aAAA,SAAAC,EAAAC,EAAAC,QACAjvC,IAAAivC,IACAA,EAAAX,EAAAY,kBAMA,IAHA,IAAArtC,EAAA,EACAD,EAAAmtC,EAAAtyC,OAAA,EAEAoF,GAAAD,GAAA,CACA,IAAA6M,EAAA7M,EAAAC,GAAA,EACAstC,EAAAF,EAAAD,EAAAD,EAAAtgC,IAEA,GAAA0gC,EAAA,EACAttC,EAAA4M,EAAA,MACO,MAAA0gC,EAAA,GAGP,OAAA1gC,EAFA7M,EAAA6M,EAAA,GAMA,OAAA5M,EAAA,GAGAysC,EAAAY,iBAAA,SAAAxoC,EAAAzL,GACA,OAAAyL,EAAAzL,GAGAqzC,EAxGA,GA2GA3zC,EAAAuB,QAAAoyC,gCCnHA,IAAAzzC,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAuzC,EAEA,SAAArzC,GAGA,SAAAqzC,IACA,cAAArzC,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAu0C,EAAArzC,GAMAqzC,EAPA,CARkBx0C,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAkzC,gCCjCAl0C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiiC,EAAsBljC,EAAQ,GAE9B0nB,EAAuB1nB,EAAQ,GAE/BmjC,EAAenjC,EAAQ,IAEvB2nB,EAA2B3nB,EAAQ,IAEnCy0C,EAAkBz0C,EAAQ,IAE1B00C,EAAgB10C,EAAQ,KAExB20C,EAA8B30C,EAAQ,IAEtC40C,EAAiB50C,EAAQ,KAEzB4nB,EAA0B5nB,EAAQ,GAYlC60C,EAEA,WACA,SAAAA,IACA30C,KAAA40C,QAAA,IAAAJ,EAAApzC,QA6MA,OA1MAuzC,EAAA/zC,UAAAi0C,WAAA,WACA,OAAA70C,KAAA40C,SAmBAD,EAAA/zC,UAAAgnB,OAAA,SAAA1I,EAAA2I,GACA,IAAAitB,EACAxsB,EAEA,QAAApjB,IAAA2iB,GAAA,OAAAA,QAAA3iB,IAAA2iB,EAAAhI,IAAA2H,EAAApmB,QAAA2zC,cAAA,CACA,IAAAh2B,EAAA41B,EAAAK,gBAAA91B,EAAA+1B,kBACAH,EAAA90C,KAAA40C,QAAAM,gBAAAn2B,EAAA8I,GACAS,EAAAqsB,EAAAQ,cACK,CACL,IAAAC,EAAA,IAAAV,EAAAtzC,QAAA8d,EAAA+1B,kBAAAI,OAAAxtB,GACAitB,EAAA90C,KAAA40C,QAAAM,gBAAAE,EAAA3K,UAAA5iB,GACAS,EAAA8sB,EAAAE,YAIAR,EAAAS,qBAAAd,EAAArzC,SACA0zC,EAAAS,WAAAC,wBAAAltB,GAGA,IAAA5T,EAAA,IAAAuuB,EAAA7hC,QAAA0zC,EAAAlyB,UAAAkyB,EAAAjyB,mBAAA3d,EAAAojB,EAAA0a,EAAA5hC,QAAAq0C,aAAAvwC,GACAwwC,EAAAZ,EAAAa,kBAEA,OAAAD,GACAhhC,EAAAwO,YAAAuE,EAAArmB,QAAAw0C,cAAAF,GAGA,IAAAG,EAAAf,EAAAgB,aAWA,OATA,OAAAD,GACAnhC,EAAAwO,YAAAuE,EAAArmB,QAAA20C,uBAAAF,GAGAf,EAAAkB,wBACAthC,EAAAwO,YAAAuE,EAAArmB,QAAA60C,2BAAAnB,EAAAoB,qCACAxhC,EAAAwO,YAAAuE,EAAArmB,QAAA+0C,yBAAArB,EAAAsB,8BAGA1hC,GAKAigC,EAAA/zC,UAAA2nB,MAAA,aAYAosB,EAAAK,gBAAA,SAAA91B,GACA,IAAAm3B,EAAAn3B,EAAAyC,kBACA20B,EAAAp3B,EAAA2C,sBAEA,UAAAw0B,GAAA,OAAAC,EACA,UAAA5uB,EAAAtmB,QAGA,IAAAm1C,EAAAv2C,KAAAu2C,WAAAF,EAAAn3B,GACA0B,EAAAy1B,EAAA,GACAv1B,EAAAw1B,EAAA,GACA31B,EAAA01B,EAAA,GACAx1B,EAAAy1B,EAAA,GAEA,GAAA31B,GAAAE,GAAAD,GAAAE,EACA,UAAA4G,EAAAtmB,QAGA,GAAA0f,EAAAF,IAAAC,EAAAF,IAGAE,EAAAF,GAAAG,EAAAF,KAEA1B,EAAAgB,WAEA,UAAAwH,EAAAtmB,QAIA,IAAAo1C,EAAA1sC,KAAAuqB,OAAAxT,EAAAF,EAAA,GAAA41B,GACAE,EAAA3sC,KAAAuqB,OAAAvT,EAAAF,EAAA,GAAA21B,GAEA,GAAAC,GAAA,GAAAC,GAAA,EACA,UAAA/uB,EAAAtmB,QAGA,GAAAq1C,IAAAD,EAEA,UAAA9uB,EAAAtmB,QAMA,IAAAs1C,EAEA5sC,KAAA2F,MAAA8mC,EAAA,GACA31B,GAAA81B,EAKA,IAAAC,GAJAh2B,GAAA+1B,GAMA5sC,KAAA2F,OAAA+mC,EAAA,GAAAD,GAAA11B,EAEA,GAAA81B,EAAA,GACA,GAAAA,EAAAD,EAEA,UAAAhvB,EAAAtmB,QAGAuf,GAAAg2B,EAIA,IAAAC,EAAAh2B,EAEA9W,KAAA2F,OAAAgnC,EAAA,GAAAF,GAAAz1B,EAEA,GAAA81B,EAAA,GACA,GAAAA,EAAAF,EAEA,UAAAhvB,EAAAtmB,QAGAwf,GAAAg2B,EAMA,IAFA,IAAA73B,EAAA,IAAAw1B,EAAAnzC,QAAAo1C,EAAAC,GAEAr0C,EAAA,EAAmBA,EAAAq0C,EAAkBr0C,IAKrC,IAJA,IAAAy0C,EAAAj2B,EAEA9W,KAAA2F,MAAArN,EAAAm0C,GAEAp0C,EAAA,EAAqBA,EAAAq0C,EAAiBr0C,IACtC+c,EAAAW,IAAAc,EAEA7W,KAAA2F,MAAAtN,EAAAo0C,GAAAM,IACA93B,EAAAnO,IAAAzO,EAAAC,GAKA,OAAA2c,GAGA41B,EAAA4B,WAAA,SAAAF,EAAAn3B,GAQA,IAPA,IAAAL,EAAAK,EAAAiB,YACAvB,EAAAM,EAAAgB,WACA/d,EAAAk0C,EAAA,GACAj0C,EAAAi0C,EAAA,GACAS,GAAA,EACAC,EAAA,EAEA50C,EAAAyc,GAAAxc,EAAAyc,GAAA,CACA,GAAAi4B,IAAA53B,EAAAW,IAAA1d,EAAAC,GAAA,CACA,SAAA20C,EACA,MAGAD,KAGA30C,IACAC,IAGA,GAAAD,IAAAyc,GAAAxc,IAAAyc,EACA,UAAA6I,EAAAtmB,QAGA,OAAAe,EAAAk0C,EAAA,OAGA1B,EAAAQ,UAAA,IAAA50C,MACAo0C,EA/MA,GAkNA90C,EAAAuB,QAAAuzC,gCCrPAv0C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAonC,EAAkBroC,EAAQ,IAE1B62B,EAAsB72B,EAAQ,IAE9Bk3C,EAA6Bl3C,EAAQ,IAErCm3C,EAA8Bn3C,EAAQ,IAyBtCo3C,EAEA,WACA,SAAAA,EAAA7O,GACAroC,KAAAqoC,QAyKA,OA5JA6O,EAAAt2C,UAAAgnB,OAAA,SAAAuvB,EAAAC,GAQA,IALA,IAAA/O,EAAAroC,KAAAqoC,MACAgP,EAAA,IAAA1gB,EAAAv1B,QAAAinC,EAAA8O,GACAG,EAAA,IAAAt4B,WAAAo4B,GACAG,GAAA,EAEA71C,EAAA,EAAmBA,EAAA01C,EAAU11C,IAAA,CAC7B,IAAA81C,EAAAH,EAAAzO,WAAAP,EAAA1Q,IAAAj2B,EAAA2mC,EAAAtQ,qBACAuf,IAAA31C,OAAA,EAAAD,GAAA81C,EAEA,IAAAA,IACAD,GAAA,GAIA,IAAAA,EAIA,KAAAE,EAAA,IAAA9gB,EAAAv1B,QAAAinC,EAAAiP,GACAI,EAAA13C,KAAA23C,sBAAAtP,EAAA/Q,cAAA8f,EAAA,GAAAK,EAAAL,GACAQ,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAA93C,KAAA+3C,mBAAAH,GACAI,EAAAh4C,KAAAi4C,oBAAAJ,EAAAC,GAEA,IAAAp2C,EAAA,EAAmBA,EAAAo2C,EAAAn2C,OAA2BD,IAAA,CAC9C,IAAAssC,EAAAmJ,EAAAx1C,OAAA,EAAA0mC,EAAAzQ,IAAAkgB,EAAAp2C,IAEA,GAAAssC,EAAA,EACA,UAAAgJ,EAAA51C,QAAA,sBAGA+1C,EAAAnJ,GAAA7F,EAAA/mC,QAAAs2B,cAAAyf,EAAAnJ,GAAAgK,EAAAt2C,OAIAw1C,EAAAt2C,UAAA+2C,sBAAA,SAAA/rC,EAAAzL,EAAAwrC,GAIA,GAAA//B,EAAA68B,YAAAtoC,EAAAsoC,YAAA,CACA,IAAAllC,EAAAqI,EACAA,EAAAzL,EACAA,EAAAoD,EASA,IANA,IAAA8kC,EAAAroC,KAAAqoC,MACA6P,EAAAtsC,EACAusC,EAAAh4C,EACAi4C,EAAA/P,EAAAjR,UACA0H,EAAAuJ,EAAAhR,SAEA8gB,EAAA1P,cAAAkD,EAAA,OACA,IAAA0M,EAAAH,EACAI,EAAAF,EAIA,GAFAA,EAAAtZ,GADAoZ,EAAAC,GAGAzP,SAEA,UAAAsO,EAAA51C,QAAA,oBAGA+2C,EAAAE,EAKA,IAJA,IAAAE,EAAAlQ,EAAAjR,UACAyS,EAAAqO,EAAAvP,eAAAuP,EAAAzP,aACA+P,EAAAnQ,EAAAxQ,QAAAgS,GAEAsO,EAAA1P,aAAAyP,EAAAzP,cAAA0P,EAAAzP,UAAA,CACA,IAAA+P,EAAAN,EAAA1P,YAAAyP,EAAAzP,YACAuB,EAAA3B,EAAAvQ,SAAAqgB,EAAAxP,eAAAwP,EAAA1P,aAAA+P,GACAD,IAAA7gB,cAAA2Q,EAAA/Q,cAAAmhB,EAAAzO,IACAmO,IAAAzgB,cAAAwgB,EAAAzO,mBAAAgP,EAAAzO,IAKA,GAFAlL,EAAAyZ,EAAAzgB,SAAAsgB,GAAA1gB,cAAA4gB,GAEAH,EAAA1P,aAAAyP,EAAAzP,YACA,UAAAwO,EAAA71C,QAAA,mDAIA,IAAAs3C,EAAA5Z,EAAA6J,eAAA,GAEA,OAAA+P,EACA,UAAA1B,EAAA51C,QAAA,0BAGA,IAAAy2B,EAAAwQ,EAAAxQ,QAAA6gB,GAGA,OAFA5Z,EAAAyK,eAAA1R,GACAsgB,EAAA5O,eAAA1R,KAIAqf,EAAAt2C,UAAAm3C,mBAAA,SAAAY,GAEA,IAAAC,EAAAD,EAAAlQ,YAEA,OAAAmQ,EAEA,OAAA55B,WAAApa,KAAA,CAAA+zC,EAAAhQ,eAAA,KAOA,IAJA,IAAAj0B,EAAA,IAAAsK,WAAA45B,GACA3tC,EAAA,EACAo9B,EAAAroC,KAAAqoC,MAEA3mC,EAAA,EAAmBA,EAAA2mC,EAAAtnB,WAAA9V,EAAA2tC,EAAsCl3C,IACzD,IAAAi3C,EAAA/P,WAAAlnC,KACAgT,EAAAzJ,GAAAo9B,EAAAxQ,QAAAn2B,GACAuJ,KAIA,GAAAA,IAAA2tC,EACA,UAAA5B,EAAA51C,QAAA,uDAGA,OAAAsT,GAGAwiC,EAAAt2C,UAAAq3C,oBAAA,SAAAY,EAAAf,GAMA,IAJA,IAAA9nB,EAAA8nB,EAAAn2C,OACA+S,EAAA,IAAAsK,WAAAgR,GACAqY,EAAAroC,KAAAqoC,MAEA3mC,EAAA,EAAmBA,EAAAsuB,EAAOtuB,IAAA,CAI1B,IAHA,IAAAo3C,EAAAzQ,EAAAxQ,QAAAigB,EAAAp2C,IACAq3C,EAAA,EAEA/wC,EAAA,EAAqBA,EAAAgoB,EAAOhoB,IAC5B,GAAAtG,IAAAsG,EAAA,CAKA,IAAAiiC,EAAA5B,EAAAvQ,SAAAggB,EAAA9vC,GAAA8wC,GACAE,EAAA,OAAA/O,GAAA,EAAAA,GAAA,EAAAA,EACA8O,EAAA1Q,EAAAvQ,SAAAihB,EAAAC,GAIAtkC,EAAAhT,GAAA2mC,EAAAvQ,SAAA+gB,EAAAjQ,WAAAkQ,GAAAzQ,EAAAxQ,QAAAkhB,IAEA,IAAA1Q,EAAAtQ,qBACArjB,EAAAhT,GAAA2mC,EAAAvQ,SAAApjB,EAAAhT,GAAAo3C,IAIA,OAAApkC,GAGAwiC,EA3KA,GA8KAr3C,EAAAuB,QAAA81C,gCCpNA92C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAwzC,EAAkBz0C,EAAQ,IAE1Bm5C,EAA0Bn5C,EAAQ,IAElCo5C,EAAiBp5C,EAAQ,KAEzBq5C,EAAYr5C,EAAQ,KAEpBk6B,EAAwBl6B,EAAQ,GAEhC4e,EAAiC5e,EAAQ,GAQzCs5C,EAEA,WACA,SAAAA,EAAAC,EAEAC,GAGA,IAFA,IAAAC,EAAA,GAEA/Y,EAAA,EAAoBA,EAAAr/B,UAAAQ,OAAuB6+B,IAC3C+Y,EAAA/Y,EAAA,GAAAr/B,UAAAq/B,GAGAxgC,KAAAq5C,gBACAr5C,KAAAs5C,0BACAt5C,KAAAu5C,WAKA,IAJA,IAAAlvB,EAAA,EACAmvB,EAAAD,EAAA,GAAAE,yBAGA7Y,EAAA,EAAA8Y,EAFAH,EAAA,GAAAI,cAE2C/Y,EAAA8Y,EAAA/3C,OAAwBi/B,IAAA,CACnE,IAAAgZ,EAAAF,EAAA9Y,GACAvW,GAAAuvB,EAAAC,YAAAD,EAAAE,mBAAAN,GAGAx5C,KAAA+5C,eAAA1vB,EAwJA,OArJA+uB,EAAAx4C,UAAAo5C,iBAAA,WACA,OAAAh6C,KAAAq5C,eAGAD,EAAAx4C,UAAAq5C,2BAAA,WACA,OAAAj6C,KAAAs5C,yBAGAF,EAAAx4C,UAAAs5C,kBAAA,WACA,OAAAl6C,KAAA+5C,gBAGAX,EAAAx4C,UAAAu5C,uBAAA,WACA,YAAAn6C,KAAAq5C,eAGAD,EAAAx4C,UAAAw5C,oBAAA,SAAAvE,GACA,OAAA71C,KAAAu5C,SAAA1D,EAAA5U,aAYAmY,EAAAiB,kCAAA,SAAAC,GAGA,GAAAA,EAAA,MACA,UAAAtgB,EAAA54B,QAGA,IACA,OAAApB,KAAAu6C,qBAAAD,EAAA,OACK,MAAAtxB,GAGL,UAAAgR,EAAA54B,UAIAg4C,EAAAmB,oBAAA,SAAAlB,GAGA,GAAAA,EAAA,GAAAA,EAAA,GACA,UAAA36B,EAAAtd,QAGA,OAAAg4C,EAAAoB,SAAAnB,EAAA,IAGAD,EAAAqB,yBAAA,SAAAC,GAMA,IAHA,IAAAC,EAAAxyC,OAAAqsB,iBACAomB,EAAA,EAEAl5C,EAAA,EAAmBA,EAAA03C,EAAAyB,oBAAAl5C,OAAwCD,IAAA,CAC3D,IAAAo5C,EAAA1B,EAAAyB,oBAAAn5C,GAEA,GAAAo5C,IAAAJ,EACA,OAAAtB,EAAAmB,oBAAA74C,EAAA,GAKA,IAAAq5C,EAAA9B,EAAA73C,QAAA45C,iBAAAN,EAAAI,GAEAC,EAAAJ,IACAC,EAAAl5C,EAAA,EACAi5C,EAAAI,GAMA,OAAAJ,GAAA,EACAvB,EAAAmB,oBAAAK,GAIA,MAOAxB,EAAAx4C,UAAAq6C,qBAAA,WACA,IAAAX,EAAAt6C,KAAAm6C,yBACAe,EAAA,IAAA3G,EAAAnzC,QAAAk5C,GAEAY,EAAAx6B,UAAA,SAEAw6B,EAAAx6B,UAAA45B,EAAA,SAEAY,EAAAx6B,UAAA,EAAA45B,EAAA,OAIA,IAFA,IAAA9tC,EAAAxM,KAAAs5C,wBAAA33C,OAEAQ,EAAA,EAAmBA,EAAAqK,EAASrK,IAG5B,IAFA,IAAAT,EAAA1B,KAAAs5C,wBAAAn3C,GAAA,EAEAC,EAAA,EAAqBA,EAAAoK,EAASpK,IAC9B,IAAAD,IAAA,IAAAC,OAAAoK,EAAA,IAAArK,IAAAqK,EAAA,OAAApK,GAKA84C,EAAAx6B,UAAA1gB,KAAAs5C,wBAAAl3C,GAAA,EAAAV,EAAA,KAgBA,OAXAw5C,EAAAx6B,UAAA,MAAA45B,EAAA,IAEAY,EAAAx6B,UAAA,IAAA45B,EAAA,MAEAt6C,KAAAq5C,cAAA,IAEA6B,EAAAx6B,UAAA45B,EAAA,UAEAY,EAAAx6B,UAAA,EAAA45B,EAAA,SAGAY,GAKA9B,EAAAx4C,UAAAgC,SAAA,WACA,SAAA5C,KAAAq5C,eAQAD,EAAAyB,oBAAA77B,WAAApa,KAAA,gOAKAw0C,EAAAoB,SAAA,KAAApB,EAAA,MAAAp6B,WAAA,OAAAk6B,EAAA93C,QAAA,MAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,YAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,YAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,YAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,YAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,YAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,EAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,eAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,kBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,qBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,qBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,sBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,sBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,sBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,sBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,sBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,yBAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,0BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,0BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,0BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,0BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,aAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,0BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,0BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,8BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,8BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,UAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,8BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,8BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,8BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,WAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,aAAAg4C,EAAA,GAAAp6B,WAAApa,KAAA,8BAAAs0C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,YAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,YAAA83C,EAAA93C,QAAA,OAAA+3C,EAAA/3C,QAAA,WAAA+3C,EAAA/3C,QAAA,UACAg4C,EA9KA,GAiLAv5C,EAAAuB,QAAAg4C,gCC1MAh5C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAA2d,EAAiC5e,EAAQ,GAYzCq7C,EAEA,WAKA,SAAAA,EAAA7tC,GACAtN,KAAAsN,QACAtN,KAAAgF,WAAA,EACAhF,KAAAo2B,UAAA,EAmFA,OA5EA+kB,EAAAv6C,UAAAw6C,aAAA,WACA,OAAAp7C,KAAAo2B,WAOA+kB,EAAAv6C,UAAAy6C,cAAA,WACA,OAAAr7C,KAAAgF,YAUAm2C,EAAAv6C,UAAA06C,SAAA,SAAA/4B,GAGA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAAviB,KAAAu7C,YACA,UAAA78B,EAAAtd,QAAA,GAAAmhB,GAGA,IAAA7N,EAAA,EACA0hB,EAAAp2B,KAAAo2B,UACApxB,EAAAhF,KAAAgF,WACAsI,EAAAtN,KAAAsN,MAEA,GAAA8oB,EAAA,GACA,IAAAolB,EAAA,EAAAplB,EACAqlB,EAAAl5B,EAAAi5B,EAAAj5B,EAAAi5B,EAEAv7B,EAAA,OAAAw7B,IADAC,EAAAF,EAAAC,GAEA/mC,GAAApH,EAAAtI,GAAAib,IAAAy7B,EACAn5B,GAAAk5B,EAGA,KAFArlB,GAAAqlB,KAGArlB,EAAA,EACApxB,KAKA,GAAAud,EAAA,GACA,KAAAA,GAAA,GACA7N,KAAA,MAAApH,EAAAtI,GACAA,IACAud,GAAA,EAIA,GAAAA,EAAA,GACA,IAAAm5B,EACAz7B,EAAA,MADAy7B,EAAA,EAAAn5B,IACAm5B,EACAhnC,KAAA6N,GAAAjV,EAAAtI,GAAAib,IAAAy7B,EACAtlB,GAAA7T,GAMA,OAFAviB,KAAAo2B,YACAp2B,KAAAgF,aACA0P,GAOAymC,EAAAv6C,UAAA26C,UAAA,WACA,UAAAv7C,KAAAsN,MAAA3L,OAAA3B,KAAAgF,YAAAhF,KAAAo2B,WAGA+kB,EA3FA,GA8FAt7C,EAAAuB,QAAA+5C,gCCjHA/6C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAcA,IAAA46C,EAEA,WAOA,SAAAA,EAAAr5B,EAAAD,EAAAqzB,EAAAG,EAAA+F,EAAAC,QACA,IAAAD,IACAA,GAAA,QAGA,IAAAC,IACAA,GAAA,GAGA77C,KAAAsiB,WACAtiB,KAAAqiB,OACAriB,KAAA01C,eACA11C,KAAA61C,UACA71C,KAAA47C,iCACA57C,KAAA67C,yBACA77C,KAAAuiB,aAAArd,IAAAod,GAAA,OAAAA,EAAA,IAAAA,EAAA3gB,OA2GA,OApGAg6C,EAAA/6C,UAAAiiB,YAAA,WACA,OAAA7iB,KAAAsiB,UAQAq5B,EAAA/6C,UAAAkiB,WAAA,WACA,OAAA9iB,KAAAuiB,SAQAo5B,EAAA/6C,UAAAk7C,WAAA,SAAAv5B,GAGAviB,KAAAuiB,WAOAo5B,EAAA/6C,UAAAgiB,QAAA,WACA,OAAA5iB,KAAAqiB,MAOAs5B,EAAA/6C,UAAA+0C,gBAAA,WACA,OAAA31C,KAAA01C,cAOAiG,EAAA/6C,UAAAk1C,WAAA,WACA,OAAA91C,KAAA61C,SAOA8F,EAAA/6C,UAAAm7C,mBAAA,WACA,OAAA/7C,KAAAg8C,iBAGAL,EAAA/6C,UAAAq7C,mBAAA,SAAAD,GAGAh8C,KAAAg8C,mBAOAL,EAAA/6C,UAAAs7C,YAAA,WACA,OAAAl8C,KAAAm8C,UAGAR,EAAA/6C,UAAAw7C,YAAA,SAAAD,GAGAn8C,KAAAm8C,YAOAR,EAAA/6C,UAAA20C,SAAA,WACA,OAAAv1C,KAAAwC,OAGAm5C,EAAA/6C,UAAAy7C,SAAA,SAAA75C,GACAxC,KAAAwC,SAGAm5C,EAAA/6C,UAAAo1C,oBAAA,WACA,OAAAh2C,KAAA67C,wBAAA,GAAA77C,KAAA47C,gCAAA,GAGAD,EAAA/6C,UAAAw1C,0BAAA,WACA,OAAAp2C,KAAA67C,wBAGAF,EAAA/6C,UAAAs1C,kCAAA,WACA,OAAAl2C,KAAA47C,gCAGAD,EAjIA,GAoIA97C,EAAAuB,QAAAu6C,gCCpKAv7C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAg/B,EAAsCjgC,EAAQ,IAE9Cw8C,EAAwBx8C,EAAQ,IAMhCy8C,EAEA,WACA,SAAAA,KA+GA,OAzGAA,EAAA30B,OAAA,SAAAta,EAAAhI,GACA,IAAAk3C,EAAAx8C,KAAAw8C,aAAAl3C,GAEA,2BAAAm3C,YACAz8C,KAAA08C,eAAApvC,EAAAkvC,GAGA,IAAAC,YAAAD,GAAA50B,OAAAta,IASAivC,EAAAI,OAAA,SAAA3sB,EAAA1qB,GAEA,OAAAi3C,EAAAK,YAWA,qBAAAC,YACA78C,KAAA88C,eAAA9sB,IAIA,IAAA6sB,aAAAF,OAAA3sB,GAXA,IADA6sB,YACA78C,KAAAw8C,aAAAl3C,GAAA,CACAy3C,iCAAA,IACOJ,OAAA3sB,IAYPusB,EAAAK,UAAA,WACA,2BAAA1kC,QAA8C,oBAA9C,GAA8CtV,SAAAd,KAAAoW,SAO9CqkC,EAAAC,aAAA,SAAAl3C,GACA,wBAAAA,MAAA07B,WAOAub,EAAAS,qBAAA,SAAA13C,GACA,OAAAg3C,EAAAl7C,QAAAggC,yBAAAphC,KAAAw8C,aAAAl3C,KAOAi3C,EAAAG,eAAA,SAAApvC,EAAAhI,GACA,IAAA67B,EAAAnhC,KAAAg9C,qBAAA13C,GAEA,GAAA67B,EAAA5+B,OAAA+5C,EAAAl7C,QAAAuhC,OAAAxB,EAAA5+B,OAAA+5C,EAAAl7C,QAAAkgC,YAAAH,EAAA5+B,OAAA+5C,EAAAl7C,QAAAwhC,OAAA,CAGA,IAFA,IAAA5S,EAAA,GAEAtuB,EAAA,EAAA2f,EAAA/T,EAAA3L,OAA8CD,EAAA2f,EAAc3f,IAAA,CAC5D,IAAAu7C,EAAA3vC,EAAA5L,GAAAkB,SAAA,IAEAq6C,EAAAt7C,OAAA,IACAs7C,EAAA,IAAAA,GAGAjtB,GAAA,IAAAitB,EAGA,OAAAC,mBAAAltB,GAGA,GAAAmR,EAAA5+B,OAAA+5C,EAAAl7C,QAAAshC,oBACA,OAAAh7B,OAAAgD,aAAAxJ,MAAA,SAAA4lC,YAAAx5B,EAAArH,SAGA,UAAA85B,EAAA3+B,QAAA,YAAApB,KAAAw8C,aAAAl3C,GAAA,gCASAi3C,EAAAO,eAAA,SAAA9sB,GAKA,IAJA,IACAmtB,EADAC,KAAAC,SAAAC,mBAAAttB,KACAhc,MAAA,IACAupC,EAAA,GAEA77C,EAAA,EAAmBA,EAAAy7C,EAAAx7C,OAAqBD,IACxC67C,EAAAz0C,KAAAq0C,EAAAz7C,GAAAqH,WAAA,IAGA,WAAAxE,WAAAg5C,IAGAhB,EAhHA,GAmHA18C,EAAAuB,QAAAm7C,gCClHAn8C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAUA,IAAAy8C,EAEA,WACA,SAAAA,EAAAz+B,EAAAuJ,GACAtoB,KAAA+e,OACA/e,KAAAsoB,SAWA,OARAk1B,EAAA58C,UAAA6pC,QAAA,WACA,OAAAzqC,KAAA+e,MAGAy+B,EAAA58C,UAAA00C,UAAA,WACA,OAAAt1C,KAAAsoB,QAGAk1B,EAdA,GAiBA39C,EAAAuB,QAAAo8C,gCC7CAp9C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA08C,EAA2B39C,EAAQ,IAEnC49C,EAEA,WACA,SAAAA,KAyBA,OAbAA,EAAAC,eAAA,SAAAC,GACAF,EAAAG,YAAAD,GAOAF,EAAAI,YAAA,WACA,OAAAJ,EAAAG,aAGAH,EAAAG,YAAA,IAAAJ,EAAAr8C,QACAs8C,EA1BA,GA6BA79C,EAAAuB,QAAAs8C,gCCtBAt9C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAYA,IAAAg9C,EAEA,WACA,SAAAA,EAAAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,GAGAx+C,KAAAg+C,MACAh+C,KAAAi+C,MACAj+C,KAAAk+C,MACAl+C,KAAAm+C,MACAn+C,KAAAo+C,MACAp+C,KAAAq+C,MACAr+C,KAAAs+C,MACAt+C,KAAAu+C,MACAv+C,KAAAw+C,MAoJA,OAjJAT,EAAAU,6BAAA,SAAAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,GAGA,IAAAC,EAAA3B,EAAA4B,sBAAAjB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,OADAlB,EAAA6B,sBAAAV,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAI,MAAAH,IAGA3B,EAAAn9C,UAAAk/C,gBAAA,SAAAx3B,GAYA,IAXA,IAAA9b,EAAA8b,EAAA3mB,OACAq8C,EAAAh+C,KAAAg+C,IACAG,EAAAn+C,KAAAm+C,IACAG,EAAAt+C,KAAAs+C,IACAL,EAAAj+C,KAAAi+C,IACAG,EAAAp+C,KAAAo+C,IACAG,EAAAv+C,KAAAu+C,IACAL,EAAAl+C,KAAAk+C,IACAG,EAAAr+C,KAAAq+C,IACAG,EAAAx+C,KAAAw+C,IAEA98C,EAAA,EAAmBA,EAAA8K,EAAS9K,GAAA,GAC5B,IAAAS,EAAAmmB,EAAA5mB,GACAU,EAAAkmB,EAAA5mB,EAAA,GACAq3C,EAAAuF,EAAAn8C,EAAAo8C,EAAAn8C,EAAAo8C,EACAl2B,EAAA5mB,IAAAs8C,EAAA77C,EAAA87C,EAAA77C,EAAA87C,GAAAnF,EACAzwB,EAAA5mB,EAAA,IAAAy8C,EAAAh8C,EAAAi8C,EAAAh8C,EAAAi8C,GAAAtF,IAIAgF,EAAAn9C,UAAAm/C,0BAAA,SAAAC,EAAAC,GAYA,IAXA,IAAAjC,EAAAh+C,KAAAg+C,IACAG,EAAAn+C,KAAAm+C,IACAG,EAAAt+C,KAAAs+C,IACAL,EAAAj+C,KAAAi+C,IACAG,EAAAp+C,KAAAo+C,IACAG,EAAAv+C,KAAAu+C,IACAL,EAAAl+C,KAAAk+C,IACAG,EAAAr+C,KAAAq+C,IACAG,EAAAx+C,KAAAw+C,IACA13C,EAAAk5C,EAAAr+C,OAEAD,EAAA,EAAmBA,EAAAoF,EAAOpF,IAAA,CAC1B,IAAAS,EAAA69C,EAAAt+C,GACAU,EAAA69C,EAAAv+C,GACAq3C,EAAAuF,EAAAn8C,EAAAo8C,EAAAn8C,EAAAo8C,EACAwB,EAAAt+C,IAAAs8C,EAAA77C,EAAA87C,EAAA77C,EAAA87C,GAAAnF,EACAkH,EAAAv+C,IAAAy8C,EAAAh8C,EAAAi8C,EAAAh8C,EAAAi8C,GAAAtF,IAIAgF,EAAA6B,sBAAA,SAAAlB,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,GAGA,IAAAiB,EAAAxB,EAAAE,EAAAE,EAAAE,EACAmB,EAAAxB,EAAAE,EAAAE,EAAAE,EAEA,OAAAiB,GAAA,IAAAC,EAEA,WAAApC,EAAAa,EAAAF,EAAAI,EAAAF,EAAAF,EAAAG,EAAAF,EAAAI,EAAAF,EAAAF,EAAA,OAEA,IAAAyB,EAAAxB,EAAAE,EACAuB,EAAArB,EAAAF,EACAwB,EAAAzB,EAAAE,EACAwB,EAAAtB,EAAAF,EACAhG,EAAAqH,EAAAG,EAAAF,EAAAC,EACAhC,GAAA4B,EAAAK,EAAAF,EAAAF,GAAApH,EACAwF,GAAA6B,EAAAD,EAAAD,EAAAI,GAAAvH,EACA,WAAAgF,EAAAa,EAAAF,EAAAJ,EAAAM,EAAAI,EAAAN,EAAAH,EAAAS,EAAAN,EAAAG,EAAAF,EAAAL,EAAAO,EAAAI,EAAAN,EAAAJ,EAAAU,EAAAN,EAAAL,EAAAC,EAAA,IAIAR,EAAA4B,sBAAA,SAAAjB,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,GAIA,OAAAlB,EAAA6B,sBAAAlB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuB,gBAGAzC,EAAAn9C,UAAA4/C,aAAA,WAEA,WAAAzC,EAAA/9C,KAAAo+C,IAAAp+C,KAAAw+C,IAAAx+C,KAAAu+C,IAAAv+C,KAAAq+C,IAAAr+C,KAAAu+C,IAAAv+C,KAAAk+C,IAAAl+C,KAAAi+C,IAAAj+C,KAAAw+C,IAAAx+C,KAAAi+C,IAAAj+C,KAAAq+C,IAAAr+C,KAAAo+C,IAAAp+C,KAAAk+C,IAAAl+C,KAAAs+C,IAAAt+C,KAAAq+C,IAAAr+C,KAAAm+C,IAAAn+C,KAAAw+C,IAAAx+C,KAAAg+C,IAAAh+C,KAAAw+C,IAAAx+C,KAAAs+C,IAAAt+C,KAAAk+C,IAAAl+C,KAAAm+C,IAAAn+C,KAAAk+C,IAAAl+C,KAAAg+C,IAAAh+C,KAAAq+C,IAAAr+C,KAAAm+C,IAAAn+C,KAAAu+C,IAAAv+C,KAAAs+C,IAAAt+C,KAAAo+C,IAAAp+C,KAAAs+C,IAAAt+C,KAAAi+C,IAAAj+C,KAAAg+C,IAAAh+C,KAAAu+C,IAAAv+C,KAAAg+C,IAAAh+C,KAAAo+C,IAAAp+C,KAAAm+C,IAAAn+C,KAAAi+C,MAGAF,EAAAn9C,UAAAi/C,MAAA,SAAAr9C,GACA,WAAAu7C,EAAA/9C,KAAAg+C,IAAAx7C,EAAAw7C,IAAAh+C,KAAAi+C,IAAAz7C,EAAA27C,IAAAn+C,KAAAk+C,IAAA17C,EAAA87C,IAAAt+C,KAAAg+C,IAAAx7C,EAAAy7C,IAAAj+C,KAAAi+C,IAAAz7C,EAAA47C,IAAAp+C,KAAAk+C,IAAA17C,EAAA+7C,IAAAv+C,KAAAg+C,IAAAx7C,EAAA07C,IAAAl+C,KAAAi+C,IAAAz7C,EAAA67C,IAAAr+C,KAAAk+C,IAAA17C,EAAAg8C,IAAAx+C,KAAAm+C,IAAA37C,EAAAw7C,IAAAh+C,KAAAo+C,IAAA57C,EAAA27C,IAAAn+C,KAAAq+C,IAAA77C,EAAA87C,IAAAt+C,KAAAm+C,IAAA37C,EAAAy7C,IAAAj+C,KAAAo+C,IAAA57C,EAAA47C,IAAAp+C,KAAAq+C,IAAA77C,EAAA+7C,IAAAv+C,KAAAm+C,IAAA37C,EAAA07C,IAAAl+C,KAAAo+C,IAAA57C,EAAA67C,IAAAr+C,KAAAq+C,IAAA77C,EAAAg8C,IAAAx+C,KAAAs+C,IAAA97C,EAAAw7C,IAAAh+C,KAAAu+C,IAAA/7C,EAAA27C,IAAAn+C,KAAAw+C,IAAAh8C,EAAA87C,IAAAt+C,KAAAs+C,IAAA97C,EAAAy7C,IAAAj+C,KAAAu+C,IAAA/7C,EAAA47C,IAAAp+C,KAAAw+C,IAAAh8C,EAAA+7C,IAAAv+C,KAAAs+C,IAAA97C,EAAA07C,IAAAl+C,KAAAu+C,IAAA/7C,EAAA67C,IAAAr+C,KAAAw+C,IAAAh8C,EAAAg8C,MAGAT,EAhLA,GAmLAl+C,EAAAuB,QAAA28C,gCCjNA39C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAyzC,EAAgB10C,EAAQ,KAExBmjC,EAAenjC,EAAQ,IAEvBkjC,EAAsBljC,EAAQ,GAE9B0nB,EAAuB1nB,EAAQ,GAE/B2nB,EAA2B3nB,EAAQ,IAEnCy0C,EAAkBz0C,EAAQ,IAE1B40C,EAAiB50C,EAAQ,KAEzBye,EAAeze,EAAQ,IAEvB4nB,EAA0B5nB,EAAQ,GAwBlC2gD,EAEA,WACA,SAAAA,IACAzgD,KAAA40C,QAAA,IAAAJ,EAAApzC,QAkIA,OAjHAq/C,EAAA7/C,UAAAgnB,OAAA,SAAA1I,EAAA2I,GAKA,IAAAitB,EACAxsB,EAEA,QAPA,IAAAT,IACAA,EAAA,MAMA,MAAAA,KAAA64B,IAAAl5B,EAAApmB,QAAA2zC,cAAA,CACA,IAAAh2B,EAAA0hC,EAAAzL,gBAAA91B,EAAA+1B,kBACAH,EAAA90C,KAAA40C,QAAAhtB,OAAA7I,GACAuJ,EAAAm4B,EAAAtL,cACK,CACL,IAAAC,EAAA,IAAAV,EAAAtzC,QAAA8d,EAAA+1B,kBAAAI,SACAP,EAAA90C,KAAA40C,QAAAhtB,OAAAwtB,EAAA3K,WACAniB,EAAA8sB,EAAAE,YAGA,IAAAhzB,EAAAwyB,EAAAjyB,cACAnO,EAAA,IAAAuuB,EAAA7hC,QAAA0zC,EAAAlyB,UAAAN,EAAA,EAAAA,EAAA3gB,OAAA2mB,EAAA0a,EAAA5hC,QAAAu/C,YAAApiC,EAAAnd,QAAAyR,qBACA6iC,EAAAZ,EAAAa,kBAEA,MAAAD,GACAhhC,EAAAwO,YAAAuE,EAAArmB,QAAAw0C,cAAAF,GAGA,IAAAG,EAAAf,EAAAgB,aAMA,OAJA,MAAAD,GACAnhC,EAAAwO,YAAAuE,EAAArmB,QAAA20C,uBAAAF,GAGAnhC,GAIA+rC,EAAA7/C,UAAA2nB,MAAA,aAYAk4B,EAAAzL,gBAAA,SAAA91B,GACA,IAAAm3B,EAAAn3B,EAAAyC,kBACA20B,EAAAp3B,EAAA2C,sBAEA,SAAAw0B,GAAA,MAAAC,EACA,UAAA5uB,EAAAtmB,QAGA,IAAAm1C,EAAAv2C,KAAAu2C,WAAAF,EAAAn3B,GACA0B,EAAAy1B,EAAA,GACAv1B,EAAAw1B,EAAA,GACA31B,EAAA01B,EAAA,GAEAG,GADAF,EAAA,GACA31B,EAAA,GAAA41B,EACAE,GAAA31B,EAAAF,EAAA,GAAA21B,EAEA,GAAAC,GAAA,GAAAC,GAAA,EACA,UAAA/uB,EAAAtmB,QAMA,IAAAs1C,EAAAH,EAAA,EACA31B,GAAA81B,EACA/1B,GAAA+1B,EAIA,IAFA,IAAA33B,EAAA,IAAAw1B,EAAAnzC,QAAAo1C,EAAAC,GAEAr0C,EAAA,EAAmBA,EAAAq0C,EAAkBr0C,IAGrC,IAFA,IAAAy0C,EAAAj2B,EAAAxe,EAAAm0C,EAEAp0C,EAAA,EAAqBA,EAAAq0C,EAAiBr0C,IACtC+c,EAAAW,IAAAc,EAAAxe,EAAAo0C,EAAAM,IACA93B,EAAAnO,IAAAzO,EAAAC,GAKA,OAAA2c,GAGA0hC,EAAAlK,WAAA,SAAAF,EAAAn3B,GAKA,IAJA,IAAAN,EAAAM,EAAAgB,WACA/d,EAAAk0C,EAAA,GACAj0C,EAAAi0C,EAAA,GAEAl0C,EAAAyc,GAAAM,EAAAW,IAAA1d,EAAAC,IACAD,IAGA,GAAAA,IAAAyc,EACA,UAAA8I,EAAAtmB,QAGA,IAAAm1C,EAAAp0C,EAAAk0C,EAAA,GAEA,OAAAE,EACA,UAAA7uB,EAAAtmB,QAGA,OAAAm1C,GAGAkK,EAAAtL,UAAA,GACAsL,EApIA,GAuIA5gD,EAAAuB,QAAAq/C,gCCtKArgD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAA6/C,EAAuB9gD,EAAQ,IAE/Bwe,EAAiBxe,EAAQ,IAEzBw8C,EAAwBx8C,EAAQ,IAEhCqoC,EAAkBroC,EAAQ,IAE1B+gD,EAA2B/gD,EAAQ,KAEnCghD,EAAahhD,EAAQ,IAErBihD,EAAgBjhD,EAAQ,IAExBkhD,EAAiBlhD,EAAQ,KAEzBmhD,EAAmBnhD,EAAQ,KAE3BohD,EAAephD,EAAQ,IAEvBqhD,EAAmBrhD,EAAQ,KAE3BshD,EAAuBthD,EAAQ,IAE/BuhD,EAAkBvhD,EAAQ,KAE1BwhD,EAAwBxhD,EAAQ,IAehCyhD,EAEA,WAEA,SAAAA,KAwnBA,OApnBAA,EAAAC,qBAAA,SAAA5hC,GACA,OAAAohC,EAAA5/C,QAAAqgD,sBAAA7hC,GAAAohC,EAAA5/C,QAAAsgD,sBAAA9hC,GAAAohC,EAAA5/C,QAAAugD,sBAAA/hC,GAAAohC,EAAA5/C,QAAAwgD,sBAAAhiC,IAcA2hC,EAAA5E,OAAA,SAAAkF,EAAAhM,EAAAhuB,QACA,IAAAA,IACAA,EAAA,MAIA,IAAAviB,EAAAi8C,EAAAO,2BACAC,EAAA,OAAAl6B,QAAA3iB,IAAA2iB,EAAAhI,IAAA+gC,EAAAx/C,QAAA4gD,eAEAD,IACAz8C,EAAAuiB,EAAAhI,IAAA+gC,EAAAx/C,QAAA4gD,eAAAp/C,YAKA,IAAAq/C,EAAAjiD,KAAAkiD,WAAAL,EAAAv8C,GAGA68C,EAAA,IAAA7jC,EAAAld,QAEA,GAAA6gD,IAAAnB,EAAA1/C,QAAAghD,OAAAL,GAAAR,EAAAO,6BAAAx8C,GAAA,CACA,IAAA+8C,EAAA/F,EAAAl7C,QAAAggC,yBAAA97B,QAEAJ,IAAAm9C,GACAriD,KAAAsiD,UAAAD,EAAAF,GAKAniD,KAAAuiD,eAAAN,EAAAE,GAGA,IAEA37B,EAFAg8B,EAAA,IAAAlkC,EAAAld,QAIA,GAHApB,KAAAyiD,YAAAZ,EAAAI,EAAAO,EAAAl9C,GAGA,OAAAuiB,QAAA3iB,IAAA2iB,EAAAhI,IAAA+gC,EAAAx/C,QAAAshD,YAAA,CACA,IAAArJ,EAAAlxC,OAAAI,SAAAsf,EAAAhI,IAAA+gC,EAAAx/C,QAAAshD,YAAA9/C,WAAA,IACA4jB,EAAAu6B,EAAA3/C,QAAAm5C,oBAAAlB,GACA,IAAAsJ,EAAA3iD,KAAA4iD,oBAAAX,EAAAE,EAAAK,EAAAh8B,GAEA,IAAAxmB,KAAA6iD,QAAAF,EAAAn8B,EAAAqvB,GACA,UAAAyL,EAAAlgD,QAAA,2CAGAolB,EAAAxmB,KAAA8iD,iBAAAjN,EAAAoM,EAAAE,EAAAK,GAGA,IAAAO,EAAA,IAAAzkC,EAAAld,QACA2hD,EAAA9sB,eAAAksB,GAEA,IAAAa,EAAAf,IAAAnB,EAAA1/C,QAAAghD,KAAAI,EAAArtB,iBAAA0sB,EAAAlgD,OACA3B,KAAAijD,iBAAAD,EAAAx8B,EAAAy7B,EAAAc,GAEAA,EAAA9sB,eAAAusB,GACA,IAAAjJ,EAAA/yB,EAAA4zB,oBAAAvE,GACAqN,EAAA18B,EAAA0zB,oBAAAX,EAAA4J,sBAEAnjD,KAAAojD,cAAAF,EAAAH,GAEA,IAAAM,EAAArjD,KAAAsjD,sBAAAP,EAAAv8B,EAAA0zB,oBAAAgJ,EAAA3J,EAAAgK,gBACAC,EAAA,IAAAtC,EAAA9/C,QACAoiD,EAAAC,WAAA5N,GACA2N,EAAAE,QAAAzB,GACAuB,EAAAG,WAAAn9B,GAEA,IAAA8zB,EAAA9zB,EAAA2zB,yBACAv6B,EAAA,IAAAqhC,EAAA7/C,QAAAk5C,KACAsJ,EAAA5jD,KAAA6jD,kBAAAR,EAAAxN,EAAArvB,EAAA5G,GAKA,OAJA4jC,EAAAM,eAAAF,GAEAzC,EAAA//C,QAAA2iD,YAAAV,EAAAxN,EAAArvB,EAAAo9B,EAAAhkC,GACA4jC,EAAAQ,UAAApkC,GACA4jC,GASAjC,EAAAuB,iBAAA,SAAAjN,EAAAoM,EAAAE,EAAAK,GAIA,IAAAyB,EAAAjkD,KAAA4iD,oBAAAX,EAAAE,EAAAK,EAAAzB,EAAA3/C,QAAAm5C,oBAAA,IACA2J,EAAAlkD,KAAAmkD,cAAAF,EAAApO,GAEA8M,EAAA3iD,KAAA4iD,oBAAAX,EAAAE,EAAAK,EAAA0B,GACA,OAAAlkD,KAAAmkD,cAAAxB,EAAA9M,IAGA0L,EAAAqB,oBAAA,SAAAX,EAAAE,EAAAK,EAAAh8B,GACA,OAAA27B,EAAAphC,UAAAkhC,EAAAmC,sBAAA59B,GAAAg8B,EAAAzhC,WAQAwgC,EAAA8C,oBAAA,SAAAxzC,GAGA,OAAAA,EAAA0wC,EAAA+C,mBAAA3iD,OACA4/C,EAAA+C,mBAAAzzC,IAGA,GAWA0wC,EAAAW,WAAA,SAAAL,EAAAv8C,GAKA,QAJA,IAAAA,IACAA,EAAA,MAGAg3C,EAAAl7C,QAAAihC,KAAArB,YAAA17B,GAAAtF,KAAAukD,sBAAA1C,GAEA,OAAAf,EAAA1/C,QAAAojD,MAMA,IAHA,IAAAC,GAAA,EACAC,GAAA,EAEAhjD,EAAA,EAAA2f,EAAAwgC,EAAAlgD,OAA8CD,EAAA2f,IAAc3f,EAAA,CAC5D,IAAA2H,EAAAw4C,EAAAruC,OAAA9R,GAEA,GAAA6/C,EAAAoD,QAAAt7C,GACAo7C,GAAA,MACO,SAAAzkD,KAAAqkD,oBAAAh7C,EAAAN,WAAA,IAGP,OAAA+3C,EAAA1/C,QAAAghD,KAFAsC,GAAA,GAMA,OAAAA,EACA5D,EAAA1/C,QAAAwjD,aAGAH,EACA3D,EAAA1/C,QAAAyjD,QAGA/D,EAAA1/C,QAAAghD,MAGAb,EAAAgD,sBAAA,SAAA1C,GACA,IAAAv0C,EAEA,IACAA,EAAA8zC,EAAAhgD,QAAAu7C,OAAAkF,EAAAvF,EAAAl7C,QAAAihC,MACK,MAAArZ,GAGL,SAGA,IAAArnB,EAAA2L,EAAA3L,OAEA,GAAAA,EAAA,MACA,SAGA,QAAAD,EAAA,EAAmBA,EAAAC,EAAYD,GAAA,GAC/B,IAAAojD,EAAA,IAAAx3C,EAAA5L,GAEA,IAAAojD,EAAA,KAAAA,EAAA,OAAAA,EAAA,KAAAA,EAAA,KACA,SAIA,UAGAvD,EAAAsC,kBAAA,SAAA9kC,EAAA82B,EAAArvB,EAAA5G,GAKA,IAJA,IAAAmlC,EAAA58C,OAAAqsB,iBAEAwwB,GAAA,EAEApB,EAAA,EAA6BA,EAAA1C,EAAA9/C,QAAA6jD,kBAAkDrB,IAAA,CAC/EzC,EAAA//C,QAAA2iD,YAAAhlC,EAAA82B,EAAArvB,EAAAo9B,EAAAhkC,GACA,IAAAslC,EAAAllD,KAAAwhD,qBAAA5hC,GAEAslC,EAAAH,IACAA,EAAAG,EACAF,EAAApB,GAIA,OAAAoB,GAGAzD,EAAA4C,cAAA,SAAAgB,EAEAtP,GACA,QAAAuP,EAAA,EAA4BA,GAAA,GAAkBA,IAAA,CAC9C,IAAA5+B,EAAAu6B,EAAA3/C,QAAAm5C,oBAAA6K,GAEA,GAAA7D,EAAAsB,QAAAsC,EAAA3+B,EAAAqvB,GACA,OAAArvB,EAIA,UAAA86B,EAAAlgD,QAAA,iBAQAmgD,EAAAsB,QAAA,SAAAsC,EAEA3+B,EAAAqvB,GAUA,OAPArvB,EAAA0zB,oBAEA1zB,EAAA4zB,oBAAAvE,GACAsN,wBAGAgC,EAAA,MAQA5D,EAAA6B,cAAA,SAAAF,EAEAnkC,GACA,IAAAsmC,EAAA,EAAAnC,EAEA,GAAAnkC,EAAAgC,UAAAskC,EACA,UAAA/D,EAAAlgD,QAAA,sCAAA2d,EAAAgC,UAAA,MAAAskC,GAGA,QAAA3jD,EAAA,EAAmBA,EAAA,GAAAqd,EAAAgC,UAAAskC,IAAoC3jD,EACvDqd,EAAA+W,WAAA,GAKA,IAAAwvB,EAAA,EAAAvmC,EAAAgC,UAEA,GAAAukC,EAAA,EACA,IAAA5jD,EAAA4jD,EAAqC5jD,EAAA,EAAOA,IAC5Cqd,EAAA+W,WAAA,GAKA,IAAAyvB,EAAArC,EAAAnkC,EAAAoW,iBAEA,IAAAzzB,EAAA,EAAmBA,EAAA6jD,IAAqB7jD,EACxCqd,EAAAgX,WAAA,OAAAr0B,GAAA,UAGA,GAAAqd,EAAAgC,YAAAskC,EACA,UAAA/D,EAAAlgD,QAAA,sCAUAmgD,EAAAiE,uCAAA,SAAAC,EAEAvC,EAEAwC,EAEAC,EAEAC,EAAAC,GACA,GAAAF,GAAAD,EACA,UAAApE,EAAAlgD,QAAA,sBAIA,IAAA0kD,EAAAL,EAAAC,EAEAK,EAAAL,EAAAI,EAEAE,EAAAl8C,KAAA2F,MAAAg2C,EAAAC,GAEAO,EAAAD,EAAA,EAEAE,EAAAp8C,KAAA2F,MAAAyzC,EAAAwC,GAEAS,EAAAD,EAAA,EAEAE,EAAAJ,EAAAE,EAEAG,EAAAJ,EAAAE,EAGA,GAAAC,IAAAC,EACA,UAAA/E,EAAAlgD,QAAA,qBAIA,GAAAskD,IAAAK,EAAAD,EACA,UAAAxE,EAAAlgD,QAAA,sBAIA,GAAAqkD,KAAAS,EAAAE,GAAAL,GAAAI,EAAAE,GAAAP,EACA,UAAAxE,EAAAlgD,QAAA,wBAGAukD,EAAAI,GACAH,EAAA,GAAAM,EACAL,EAAA,GAAAO,IAEAR,EAAA,GAAAO,EACAN,EAAA,GAAAQ,IASA9E,EAAA+B,sBAAA,SAAAvkC,EAAA0mC,EAEAvC,EAEAwC,GAIA,GAAA3mC,EAAAoW,mBAAA+tB,EACA,UAAA5B,EAAAlgD,QAAA,gDAWA,IANA,IAAAklD,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAA,IAAAlmD,MAEAmB,EAAA,EAAmBA,EAAAgkD,IAAiBhkD,EAAA,CACpC,IAAAkkD,EAAA,IAAA5mC,WAAA,GACA0nC,EAAA,IAAA1nC,WAAA,GACAuiC,EAAAiE,uCAAAC,EAAAvC,EAAAwC,EAAAhkD,EAAAkkD,EAAAc,GACA,IAAAngD,EAAAq/C,EAAA,GACAe,EAAA,IAAApiD,WAAAgC,GACAwY,EAAAoX,QAAA,EAAAmwB,EAAAK,EAAA,EAAApgD,GACA,IAAAqgD,EAAArF,EAAAsF,gBAAAF,EAAAD,EAAA,IACAD,EAAA39C,KAAA,IAAAu4C,EAAAjgD,QAAAulD,EAAAC,IACAL,EAAAz8C,KAAA0C,IAAA+5C,EAAAhgD,GACAigD,EAAA18C,KAAA0C,IAAAg6C,EAAAI,EAAAjlD,QACA2kD,GAAAV,EAAA,GAGA,GAAA1C,IAAAoD,EACA,UAAAhF,EAAAlgD,QAAA,oCAGA,IAAAsT,EAAA,IAAA4J,EAAAld,QAEA,IAAAM,EAAA,EAAmBA,EAAA6kD,IAAqB7kD,EACxC,QAAA8+B,EAAA,EAAAsmB,EAAAL,EAAyCjmB,EAAAsmB,EAAAnlD,OAAsB6+B,IAAA,CAI/D9+B,GAFAilD,EADAG,EAAAtmB,GACAumB,gBAEAplD,QACA+S,EAAAqhB,WAAA4wB,EAAAjlD,GAAA,GAMA,IAAAA,EAAA,EAAmBA,EAAA8kD,IAAmB9kD,EACtC,QAAAk/B,EAAA,EAAAomB,EAAAP,EAAyC7lB,EAAAomB,EAAArlD,OAAsBi/B,IAAA,CAI/Dl/B,GAFAklD,EADAI,EAAApmB,GACAqmB,2BAEAtlD,QACA+S,EAAAqhB,WAAA6wB,EAAAllD,GAAA,GAKA,GAAA+jD,IAAA/wC,EAAAygB,iBAEA,UAAAmsB,EAAAlgD,QAAA,uBAAAqkD,EAAA,QAAA/wC,EAAAygB,iBAAA,YAGA,OAAAzgB,GAGA6sC,EAAAsF,gBAAA,SAAAF,EAAAD,GAMA,IAHA,IAAAxD,EAAAyD,EAAAhlD,OACAulD,EAAA,IAAAloC,WAAAkkC,EAAAwD,GAEAhlD,EAAA,EAAmBA,EAAAwhD,EAAkBxhD,IACrCwlD,EAAAxlD,GAAA,IAAAilD,EAAAjlD,GAGA,IAAAm/C,EAAAz/C,QAAA+mC,EAAA/mC,QAAAi3B,mBAAAskB,OAAAuK,EAAAR,GACA,IAAAE,EAAA,IAAAriD,WAAAmiD,GAEA,IAAAhlD,EAAA,EAAmBA,EAAAglD,EAAuBhlD,IAC1CklD,EAAAllD,GAEAwlD,EAAAhE,EAAAxhD,GAGA,OAAAklD,GAOArF,EAAAgB,eAAA,SAAAN,EAAAljC,GACAA,EAAAgX,WAAAksB,EAAAxX,UAAA,IAOA8W,EAAA0B,iBAAA,SAAAD,EAEAx8B,EAAAy7B,EAAAljC,GACA,IAAAwD,EAAA0/B,EAAAmC,sBAAA59B,GAEA,GAAAw8B,GAAA,GAAAzgC,EACA,UAAA++B,EAAAlgD,QAAA4hD,EAAA,wBAAAzgC,GAAA,IAGAxD,EAAAgX,WAAAitB,EAAAzgC,IAOAg/B,EAAAkB,YAAA,SAAAZ,EAAAI,EAAAljC,EAAAzZ,GACA,OAAA28C,GACA,KAAAnB,EAAA1/C,QAAAyjD,QACAtD,EAAA4F,mBAAAtF,EAAA9iC,GACA,MAEA,KAAA+hC,EAAA1/C,QAAAwjD,aACArD,EAAA6F,wBAAAvF,EAAA9iC,GACA,MAEA,KAAA+hC,EAAA1/C,QAAAghD,KACAb,EAAA8F,gBAAAxF,EAAA9iC,EAAAzZ,GACA,MAEA,KAAAw7C,EAAA1/C,QAAAojD,MACAjD,EAAA+F,iBAAAzF,EAAA9iC,GACA,MAEA,QACA,UAAAuiC,EAAAlgD,QAAA,iBAAA6gD,KAIAV,EAAAgG,SAAA,SAAAC,GACA,OAAAA,EAAAz+C,WAAA,OAGAw4C,EAAAoD,QAAA,SAAA6C,GACA,IAAAC,EAAAlG,EAAAgG,SAAAC,GACA,OAAAC,GAAA,GAAAA,GAAA,GAGAlG,EAAA4F,mBAAA,SAAAtF,EAAA9iC,GAIA,IAHA,IAAApd,EAAAkgD,EAAAlgD,OACAD,EAAA,EAEAA,EAAAC,GAAA,CACA,IAAA+lD,EAAAnG,EAAAgG,SAAA1F,EAAAruC,OAAA9R,IAEA,GAAAA,EAAA,EAAAC,EAAA,CAEA,IAAAgmD,EAAApG,EAAAgG,SAAA1F,EAAAruC,OAAA9R,EAAA,IACAkmD,EAAArG,EAAAgG,SAAA1F,EAAAruC,OAAA9R,EAAA,IACAqd,EAAAgX,WAAA,IAAA2xB,EAAA,GAAAC,EAAAC,EAAA,IACAlmD,GAAA,OACO,GAAAA,EAAA,EAAAC,EAAA,CAEPgmD,EAAApG,EAAAgG,SAAA1F,EAAAruC,OAAA9R,EAAA,IACAqd,EAAAgX,WAAA,GAAA2xB,EAAAC,EAAA,GACAjmD,GAAA,OAGAqd,EAAAgX,WAAA2xB,EAAA,GACAhmD,MAKA6/C,EAAA6F,wBAAA,SAAAvF,EAAA9iC,GAIA,IAHA,IAAApd,EAAAkgD,EAAAlgD,OACAD,EAAA,EAEAA,EAAAC,GAAA,CACA,IAAAkmD,EAAAtG,EAAA8C,oBAAAxC,EAAA94C,WAAArH,IAEA,QAAAmmD,EACA,UAAAvG,EAAAlgD,QAGA,GAAAM,EAAA,EAAAC,EAAA,CACA,IAAAmmD,EAAAvG,EAAA8C,oBAAAxC,EAAA94C,WAAArH,EAAA,IAEA,QAAAomD,EACA,UAAAxG,EAAAlgD,QAIA2d,EAAAgX,WAAA,GAAA8xB,EAAAC,EAAA,IACApmD,GAAA,OAGAqd,EAAAgX,WAAA8xB,EAAA,GACAnmD,MAKA6/C,EAAA8F,gBAAA,SAAAxF,EAAA9iC,EAAAzZ,GACA,IAAAgI,EAEA,IACAA,EAAA8zC,EAAAhgD,QAAAu7C,OAAAkF,EAAAv8C,GACK,MAAAyiD,GAGL,UAAAzG,EAAAlgD,QAAA2mD,GAGA,QAAArmD,EAAA,EAAAsmD,EAAA16C,EAAA3L,OAA4CD,IAAAsmD,EAAgBtmD,IAAA,CAC5D,IAAAvB,EAAAmN,EAAA5L,GACAqd,EAAAgX,WAAA51B,EAAA,KAQAohD,EAAA+F,iBAAA,SAAAzF,EAAA9iC,GACA,IAAAzR,EAEA,IACAA,EAAA8zC,EAAAhgD,QAAAu7C,OAAAkF,EAAAvF,EAAAl7C,QAAAihC,MACK,MAAA0lB,GAGL,UAAAzG,EAAAlgD,QAAA2mD,GAKA,IAFA,IAAApmD,EAAA2L,EAAA3L,OAEAD,EAAA,EAAmBA,EAAAC,EAAYD,GAAA,GAC/B,IAEAmP,GAFA,IAAAvD,EAAA5L,KAEA,aADA,IAAA4L,EAAA5L,EAAA,GAEAumD,GAAA,EAQA,GANAp3C,GAAA,OAAAA,GAAA,MACAo3C,EAAAp3C,EAAA,MACOA,GAAA,OAAAA,GAAA,QACPo3C,EAAAp3C,EAAA,QAGA,IAAAo3C,EACA,UAAA3G,EAAAlgD,QAAA,yBAGA,IAAA8mD,EAAA,KAAAD,GAAA,QAAAA,GACAlpC,EAAAgX,WAAAmyB,EAAA,MAIA3G,EAAAe,UAAA,SAAAD,EAAAtjC,GACAA,EAAAgX,WAAA+qB,EAAA1/C,QAAA+mD,IAAA1d,UAAA,GAEA1rB,EAAAgX,WAAAssB,EAAAphB,WAAA,IAIAsgB,EAAA+C,mBAAAtlC,WAAApa,KAAA,yRACA28C,EAAAO,2BAAAxF,EAAAl7C,QAAAuhC,KAAA3B,UAEAugB,EA1nBA,GA6nBA1hD,EAAAuB,QAAAmgD,gCC7qBAnhD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA0d,EAAsB3e,EAAQ,IAO9BsoD,EAEA,WACA,SAAAA,IACApoD,KAAA4jD,aAAA,EA+EA,OA5EAwE,EAAAxnD,UAAAynD,QAAA,WACA,OAAAroD,KAAAiiD,MAGAmG,EAAAxnD,UAAAk1C,WAAA,WACA,OAAA91C,KAAA61C,SAGAuS,EAAAxnD,UAAA0nD,WAAA,WACA,OAAAtoD,KAAAwmB,SAGA4hC,EAAAxnD,UAAA2nD,eAAA,WACA,OAAAvoD,KAAA4jD,aAGAwE,EAAAxnD,UAAA4+B,UAAA,WACA,OAAAx/B,KAAA4f,QAKAwoC,EAAAxnD,UAAAgC,SAAA,WACA,IAAA8R,EAAA,IAAA+J,EAAArd,QAoBA,OAlBAsT,EAAAuN,OAAA,QACAvN,EAAAuN,OAAA,WACAvN,EAAAuN,OAAAjiB,KAAAiiD,KAAAjiD,KAAAiiD,KAAAr/C,WAAA,QACA8R,EAAAuN,OAAA,gBACAvN,EAAAuN,OAAAjiB,KAAA61C,QAAA71C,KAAA61C,QAAAjzC,WAAA,QACA8R,EAAAuN,OAAA,gBACAvN,EAAAuN,OAAAjiB,KAAAwmB,QAAAxmB,KAAAwmB,QAAA5jB,WAAA,QACA8R,EAAAuN,OAAA,oBACAvN,EAAAuN,OAAAjiB,KAAA4jD,YAAAhhD,YAEA5C,KAAA4f,QACAlL,EAAAuN,OAAA,gBACAvN,EAAAuN,OAAAjiB,KAAA4f,OAAAhd,aAEA8R,EAAAuN,OAAA,qBAGAvN,EAAAuN,OAAA,QACAvN,EAAA9R,YAGAwlD,EAAAxnD,UAAA8iD,QAAA,SAAA3iD,GACAf,KAAAiiD,KAAAlhD,GAGAqnD,EAAAxnD,UAAA6iD,WAAA,SAAA1iD,GACAf,KAAA61C,QAAA90C,GAGAqnD,EAAAxnD,UAAA+iD,WAAA,SAAAn9B,GACAxmB,KAAAwmB,WAGA4hC,EAAAxnD,UAAAkjD,eAAA,SAAA/iD,GAGAf,KAAA4jD,YAAA7iD,GAGAqnD,EAAAxnD,UAAAojD,UAAA,SAAAjjD,GACAf,KAAA4f,OAAA7e,GAIAqnD,EAAAI,mBAAA,SAAA5E,GAGA,OAAAA,GAAA,GAAAA,EAAAwE,EAAAnD,mBAGAmD,EAAAnD,kBAAA,EACAmD,EAjFA,GAoFAvoD,EAAAuB,QAAAgnD,gCChHA,IAAAroD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMA0nD,EAEA,SAAAxnD,GAGA,SAAAwnD,IACA,cAAAxnD,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAA0oD,EAAAxnD,GAMAwnD,EAPA,CARkB3oD,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAqnD,gCCjCA,IAAA1oD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiiC,EAAsBljC,EAAQ,GAE9B4oD,EAAqB5oD,EAAQ,KAE7B6oD,EAAsB7oD,EAAQ,KAE9B8oD,EAAoB9oD,EAAQ,KAE5B0nB,EAAuB1nB,EAAQ,GAE/B+oD,EAAkB/oD,EAAQ,KAE1BgpD,EAAgChpD,EAAQ,KAExC4nB,EAA0B5nB,EAAQ,GASlCipD,EAEA,SAAA9nD,GAGA,SAAA8nD,EAAAlhC,GACA,IAAAvV,EAAArR,EAAAa,KAAA9B,YAEAsS,EAAA02C,QAAA,GACA,IAAAC,EAAAphC,IAAAhI,IAAA2H,EAAApmB,QAAA8nD,kBAAA,KACAC,EAAAthC,QAAA3iB,IAAA2iB,EAAAhI,IAAA2H,EAAApmB,QAAAgoD,4BAuDA,OArDAH,KACAA,EAAAl8C,SAAAi2B,EAAA5hC,QAAAqkC,SAAAwjB,EAAAl8C,SAAAi2B,EAAA5hC,QAAAioD,SACA/2C,EAAA02C,QAAAlgD,KAAA,IAAAggD,EAAA1nD,QAAAymB,IASAohC,EAAAl8C,SAAAi2B,EAAA5hC,QAAAkoD,UACAh3C,EAAA02C,QAAAlgD,KAAA,IAAA4/C,EAAAtnD,QAAA+nD,IAMAF,EAAAl8C,SAAAi2B,EAAA5hC,QAAAmoD,WACAj3C,EAAA02C,QAAAlgD,KAAA,IAAA6/C,EAAAvnD,SAGA6nD,EAAAl8C,SAAAi2B,EAAA5hC,QAAAooD,MACAl3C,EAAA02C,QAAAlgD,KAAA,IAAA+/C,EAAAznD,SAMA6nD,EAAAl8C,SAAAi2B,EAAA5hC,QAAAqoD,SACAn3C,EAAA02C,QAAAlgD,KAAA,IAAA8/C,EAAAxnD,UAOA,IAAAkR,EAAA02C,QAAArnD,SAEA2Q,EAAA02C,QAAAlgD,KAAA,IAAA4/C,EAAAtnD,SAIAkR,EAAA02C,QAAAlgD,KAAA,IAAAggD,EAAA1nD,QAAAymB,IAEAvV,EAAA02C,QAAAlgD,KAAA,IAAA6/C,EAAAvnD,SAEAkR,EAAA02C,QAAAlgD,KAAA,IAAA+/C,EAAAznD,SAEAkR,EAAA02C,QAAAlgD,KAAA,IAAA8/C,EAAAxnD,UAIAkR,EAsBA,OApFAvS,EAAAgpD,EAAA9nD,GAkEA8nD,EAAAnoD,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GACA,QAAAnmB,EAAA,EAAmBA,EAAA1B,KAAAgpD,QAAArnD,OAAyBD,IAC5C,IACA,OAAA1B,KAAAgpD,QAAAtnD,GAAA8nB,UAAAV,EAAAxI,EAAAuH,GACO,MAAA4B,IAIP,UAAA/B,EAAAtmB,SAIA2nD,EAAAnoD,UAAA2nB,MAAA,WACAvoB,KAAAgpD,QAAA72C,QAAA,SAAA+nB,GACA,OAAAA,EAAA3R,WAIAwgC,EArFA,CATmBjpD,EAAQ,IA+F1BsB,SAEDvB,EAAAuB,QAAA2nD,gCC/JA,SAAAW,EAAA3iD,GACA,QAAAvG,KAAAuG,EACAlH,EAAAY,eAAAD,KAAAX,EAAAW,GAAAuG,EAAAvG,IAIAJ,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA2oD,EAAS5pD,EAAQ,MAEjB4pD,EAAS5pD,EAAQ,MAEjB4pD,EAAS5pD,EAAQ,MAEjB4pD,EAAS5pD,EAAQ,MAEjB4pD,EAAS5pD,EAAQ,KAEjB4pD,EAAS5pD,EAAQ,MAEjB4pD,EAAS5pD,EAAQ,KAEjB4pD,EAAS5pD,EAAQ,KAGjB,IAAA6pD,EAAkB7pD,EAAQ,IAE1BD,EAAAuS,UAAAu3C,EAAAvoD,QAEA,IAAA04B,EAA0Bh6B,EAAQ,IAElCD,EAAAy0C,kBAAAxa,EAAA14B,QAEA,IAAAw1B,EAA4B92B,EAAQ,IAEpCD,EAAA+pD,oBAAAhzB,EAAAx1B,QAEA,IAAA24B,EAA0Bj6B,EAAQ,IAElCD,EAAAs0B,kBAAA4F,EAAA34B,QAEA,IAAA44B,EAAwBl6B,EAAQ,GAEhCD,EAAA2R,gBAAAwoB,EAAA54B,QAEA,IAAAsd,EAAiC5e,EAAQ,GAEzCD,EAAAwB,yBAAAqd,EAAAtd,QAEA,IAAA61C,EAA8Bn3C,EAAQ,IAEtCD,EAAAqgC,sBAAA+W,EAAA71C,QAEA,IAAAsmB,EAA0B5nB,EAAQ,GAElCD,EAAAmB,kBAAA0mB,EAAAtmB,QAEA,IAAAyoD,EAAwB/pD,EAAQ,KAEhCD,EAAAiqD,gBAAAD,EAAAzoD,QAEA,IAAA41C,EAA6Bl3C,EAAQ,IAErCD,EAAAkqD,qBAAA/S,EAAA51C,QAEA,IAAA2+B,EAAsCjgC,EAAQ,IAE9CD,EAAA0zC,8BAAAxT,EAAA3+B,QAEA,IAAAkgD,EAAwBxhD,EAAQ,IAEhCD,EAAA4oD,gBAAAnH,EAAAlgD,QAEA,IAAA4hC,EAAsBljC,EAAQ,GAE9BD,EAAAyB,cAAA0hC,EAAA5hC,QAEA,IAAA4oD,EAAkBlqD,EAAQ,IAE1BD,EAAAoqD,UAAAD,EAAA5oD,QAEA,IAAAw4B,EAAqB95B,EAAQ,IAE7BD,EAAAqqD,aAAAtwB,EAAAx4B,QAEA,IAAAomB,EAAuB1nB,EAAQ,GAE/BD,EAAA+D,eAAA4jB,EAAApmB,QAEA,IAAA+oD,EAAgCrqD,EAAQ,IAExCD,EAAAw/B,wBAAA8qB,EAAA/oD,QAEA,IAAAgpD,EAAwBtqD,EAAQ,IAEhCD,EAAAmgC,gBAAAoqB,EAAAhpD,QAEA,IAAAipD,EAA0BvqD,EAAQ,KAElCD,EAAAyqD,kBAAAD,EAAAjpD,QAEA,IAAAmpD,EAA0BzqD,EAAQ,KAElCD,EAAA2qD,kBAAAD,EAAAnpD,QAEA,IAAAqpD,EAAiC3qD,EAAQ,KAEzCD,EAAA6qD,yBAAAD,EAAArpD,QAEA,IAAA6hC,EAAenjC,EAAQ,IAEvBD,EAAAuiB,OAAA6gB,EAAA7hC,QAEA,IAAAqmB,EAA2B3nB,EAAQ,IAEnCD,EAAAk1B,mBAAAtN,EAAArmB,QAEA,IAAAupD,EAA2B7qD,EAAQ,KAEnCD,EAAA+qD,mBAAAD,EAAAvpD,QAEA,IAAAkd,EAAiBxe,EAAQ,IAEzBD,EAAAo1B,SAAA3W,EAAAld,QAEA,IAAAmzC,EAAkBz0C,EAAQ,IAE1BD,EAAA8e,UAAA41B,EAAAnzC,QAEA,IAAAypD,EAAkB/qD,EAAQ,IAE1BD,EAAAs7C,UAAA0P,EAAAzpD,QAEA,IAAAk7C,EAAwBx8C,EAAQ,IAEhCD,EAAAugC,gBAAAkc,EAAAl7C,QAEA,IAAA0pD,EAAsBhrD,EAAQ,IAE9BD,EAAA87C,cAAAmP,EAAA1pD,QAEA,IAAAq8C,EAA2B39C,EAAQ,IAEnCD,EAAAkrD,mBAAAtN,EAAAr8C,QAEA,IAAA4pD,EAAuBlrD,EAAQ,IAE/BD,EAAA29C,eAAAwN,EAAA5pD,QAEA,IAAAw/C,EAAuB9gD,EAAQ,IAE/BD,EAAAkrC,eAAA6V,EAAAx/C,QAEA,IAAA6pD,EAAiCnrD,EAAQ,IAEzCD,EAAAqrD,yBAAAD,EAAA7pD,QAEA,IAAA+pD,EAAoBrrD,EAAQ,KAE5BD,EAAAurD,YAAAD,EAAA/pD,QAEA,IAAAiqD,EAA4BvrD,EAAQ,IAEpCD,EAAA69C,oBAAA2N,EAAAjqD,QAEA,IAAAy4B,EAAwB/5B,EAAQ,IAEhCD,EAAAyrD,gBAAAzxB,EAAAz4B,QAEA,IAAAmqD,EAA6BzrD,EAAQ,IAErCD,EAAAk+C,qBAAAwN,EAAAnqD,QAEA,IAAAoqD,EAAoB1rD,EAAQ,IAE5BD,EAAA4rD,YAAAD,EAAApqD,QAEA,IAAAY,EAAkBlC,EAAQ,IAE1BD,EAAAu0B,UAAApyB,EAAAZ,QAEA,IAAAsqD,EAA+B5rD,EAAQ,KAEvCD,EAAA8rD,uBAAAD,EAAAtqD,QAEA,IAAA+mC,EAAkBroC,EAAQ,IAE1BD,EAAAg3B,UAAAsR,EAAA/mC,QAEA,IAAAu1B,EAAsB72B,EAAQ,IAE9BD,EAAAuoC,cAAAzR,EAAAv1B,QAEA,IAAAwqD,EAA2B9rD,EAAQ,IAEnCD,EAAAq3C,mBAAA0U,EAAAxqD,QAEA,IAAAy/C,EAA2B/gD,EAAQ,KAEnCD,EAAAgsD,mBAAAhL,EAAAz/C,QAEA,IAAA0qD,EAAyBhsD,EAAQ,IAEjCD,EAAA4gD,iBAAAqL,EAAA1qD,QAEA,IAAA2qD,EAAqBjsD,EAAQ,IAE7BD,EAAA80C,aAAAoX,EAAA3qD,QAEA,IAAA4qD,EAAqBlsD,EAAQ,KAE7BD,EAAAosD,aAAAD,EAAA5qD,QAEA,IAAA8qD,EAA6BpsD,EAAQ,IAErCD,EAAAssD,kCAAAD,EAAA9qD,QAEA,IAAAgrD,EAAgBtsD,EAAQ,IAExBD,EAAAwsD,cAAAD,EAAAhrD,QAEA,IAAA8/C,EAAephD,EAAQ,IAEvBD,EAAAysD,oBAAApL,EAAA9/C,QAEA,IAAA8hC,GAAmBpjC,EAAQ,IAE3BD,EAAA8nB,WAAAub,GAAA9hC,QAEA,IAAAmrD,GAAoBzsD,EAAQ,KAE5BD,EAAA2sD,YAAAD,GAAAnrD,QAEA,IAAAunD,GAAsB7oD,EAAQ,KAE9BD,EAAA4sD,cAAA9D,GAAAvnD,QAEA,IAAAynD,GAAkB/oD,EAAQ,KAE1BD,EAAA6sD,UAAA7D,GAAAznD,QAEA,IAAAsnD,GAAqB5oD,EAAQ,KAE7BD,EAAA8sD,aAAAjE,GAAAtnD,QAEA,IAAAwnD,GAAoB9oD,EAAQ,KAE5BD,EAAA+sD,YAAAhE,GAAAxnD,QAEA,IAAAyrD,GAA8B/sD,EAAQ,IAEtCD,EAAAitD,kBAAAD,GAAAzrD,yBC/PA,IAAA2rD,EAAcjtD,EAAQ,KAMtBF,EAAAC,QAAAmtD,EACAptD,EAAAC,QAAAotD,QACArtD,EAAAC,QAAA4tB,QAiGA,SAAA7kB,EAAAwlB,GACA,OAAA8+B,EAAAD,EAAArkD,EAAAwlB,KAjGAxuB,EAAAC,QAAAqtD,mBACAttD,EAAAC,QAAAstD,iBAOA,IAAAC,EAAA,IAAAz3C,OAAA,CAEA,UAMA,0GAAAjJ,KAAA,UASA,SAAAugD,EAAArkD,EAAAwlB,GAQA,IAPA,IAKApkB,EALAqjD,EAAA,GACAxrD,EAAA,EACA6R,EAAA,EACA8B,EAAA,GACA83C,EAAAl/B,KAAAm/B,WAAA,IAGA,OAAAvjD,EAAAojD,EAAAj+B,KAAAvmB,KAAA,CACA,IAAA7B,EAAAiD,EAAA,GACAwjD,EAAAxjD,EAAA,GACA9B,EAAA8B,EAAA0J,MAIA,GAHA8B,GAAA5M,EAAAlD,MAAAgO,EAAAxL,GACAwL,EAAAxL,EAAAnB,EAAApF,OAEA6rD,EACAh4C,GAAAg4C,EAAA,OADA,CAKA,IAAA/e,EAAA7lC,EAAA8K,GACAT,EAAAjJ,EAAA,GACAmd,EAAAnd,EAAA,GACAyjD,EAAAzjD,EAAA,GACA0jD,EAAA1jD,EAAA,GACA2jD,EAAA3jD,EAAA,GACA4jD,EAAA5jD,EAAA,GAEAwL,IACA63C,EAAAvkD,KAAA0M,GACAA,EAAA,IAGA,IAAAq4C,EAAA,MAAA56C,GAAA,MAAAw7B,OAAAx7B,EACA66C,EAAA,MAAAH,GAAA,MAAAA,EACAI,EAAA,MAAAJ,GAAA,MAAAA,EACAJ,EAAAvjD,EAAA,IAAAsjD,EACAnjC,EAAAsjC,GAAAC,EACAL,EAAAvkD,KAAA,CACAqe,QAAAtlB,IACAoR,UAAA,GACAs6C,YACAQ,WACAD,SACAD,UACAD,aACAzjC,UAAA6jC,EAAA7jC,GAAAyjC,EAAA,UAAAK,EAAAV,GAAA,SAcA,OATA75C,EAAA9K,EAAAjH,SACA6T,GAAA5M,EAAAJ,OAAAkL,IAIA8B,GACA63C,EAAAvkD,KAAA0M,GAGA63C,EAsBA,SAAAa,EAAAtlD,GACA,OAAAulD,UAAAvlD,GAAAuI,QAAA,mBAAA9H,GACA,UAAAA,EAAAN,WAAA,GAAAnG,SAAA,IAAAwrD,gBAqBA,SAAAlB,EAAAG,GAIA,IAFA,IAAAgB,EAAA,IAAA9tD,MAAA8sD,EAAA1rD,QAEAD,EAAA,EAAiBA,EAAA2rD,EAAA1rD,OAAmBD,IACpC,kBAAA2rD,EAAA3rD,KACA2sD,EAAA3sD,GAAA,IAAAiU,OAAA,OAAA03C,EAAA3rD,GAAAyoB,QAAA,OAIA,gBAAAvkB,EAAA0oD,GAMA,IALA,IAAA94C,EAAA,GACApP,EAAAR,GAAA,GAEA+2C,GADA2R,GAAA,IACA3gC,OAAAugC,EAAA5Q,mBAEA57C,EAAA,EAAmBA,EAAA2rD,EAAA1rD,OAAmBD,IAAA,CACtC,IAAA6sD,EAAAlB,EAAA3rD,GAEA,qBAAA6sD,EAAA,CAKA,IACAC,EADAztD,EAAAqF,EAAAmoD,EAAApnC,MAGA,SAAApmB,EAAA,CACA,GAAAwtD,EAAAR,SAAA,CAEAQ,EAAAV,UACAr4C,GAAA+4C,EAAAt7C,QAGA,SAEA,UAAApO,UAAA,aAAA0pD,EAAApnC,KAAA,mBAIA,GAAA4lC,EAAAhsD,GAAA,CACA,IAAAwtD,EAAAT,OACA,UAAAjpD,UAAA,aAAA0pD,EAAApnC,KAAA,kCAAAsnC,KAAAC,UAAA3tD,GAAA,KAGA,OAAAA,EAAAY,OAAA,CACA,GAAA4sD,EAAAR,SACA,SAEA,UAAAlpD,UAAA,aAAA0pD,EAAApnC,KAAA,qBAIA,QAAAnf,EAAA,EAAuBA,EAAAjH,EAAAY,OAAkBqG,IAAA,CAGzC,GAFAwmD,EAAA7R,EAAA57C,EAAAiH,KAEAqmD,EAAA3sD,GAAAkU,KAAA44C,GACA,UAAA3pD,UAAA,iBAAA0pD,EAAApnC,KAAA,eAAAonC,EAAApkC,QAAA,oBAAAskC,KAAAC,UAAAF,GAAA,KAGAh5C,IAAA,IAAAxN,EAAAumD,EAAAt7C,OAAAs7C,EAAAhB,WAAAiB,OApBA,CA4BA,GAFAA,EAAAD,EAAAX,SA3EAO,UA2EAptD,GA3EAoQ,QAAA,iBAAA9H,GACA,UAAAA,EAAAN,WAAA,GAAAnG,SAAA,IAAAwrD,gBA0EAzR,EAAA57C,IAEAstD,EAAA3sD,GAAAkU,KAAA44C,GACA,UAAA3pD,UAAA,aAAA0pD,EAAApnC,KAAA,eAAAonC,EAAApkC,QAAA,oBAAAqkC,EAAA,KAGAh5C,GAAA+4C,EAAAt7C,OAAAu7C,QApDAh5C,GAAA+4C,EAuDA,OAAA/4C,GAWA,SAAAy4C,EAAArlD,GACA,OAAAA,EAAAuI,QAAA,6BAAmC,QAUnC,SAAA68C,EAAAN,GACA,OAAAA,EAAAv8C,QAAA,wBAWA,SAAAw9C,EAAAllC,EAAA3X,GAEA,OADA2X,EAAA3X,OACA2X,EAUA,SAAAmlC,EAAAxgC,GACA,OAAAA,EAAAO,UAAA,OA2EA,SAAAw+B,EAAAE,EAAAv7C,EAAAsc,GACA2+B,EAAAj7C,KACAsc,EAEAtc,GAAAsc,EACAtc,EAAA,IAQA,IAJA,IAAA2c,GADAL,KAAA,IACAK,OACA9kB,GAAA,IAAAykB,EAAAzkB,IACAklD,EAAA,GAEAntD,EAAA,EAAiBA,EAAA2rD,EAAA1rD,OAAmBD,IAAA,CACpC,IAAA6sD,EAAAlB,EAAA3rD,GAEA,qBAAA6sD,EACAM,GAAAZ,EAAAM,OACK,CACL,IAAAt7C,EAAAg7C,EAAAM,EAAAt7C,QACAw6C,EAAA,MAAAc,EAAApkC,QAAA,IACArY,EAAAhJ,KAAAylD,GAEAA,EAAAT,SACAL,GAAA,MAAAx6C,EAAAw6C,EAAA,MAaAoB,GANApB,EAJAc,EAAAR,SACAQ,EAAAV,QAGA56C,EAAA,IAAAw6C,EAAA,KAFA,MAAAx6C,EAAA,IAAAw6C,EAAA,MAKAx6C,EAAA,IAAAw6C,EAAA,KAOA,IAAAF,EAAAU,EAAA7/B,EAAAm/B,WAAA,KACAuB,EAAAD,EAAAnpD,OAAA6nD,EAAA5rD,UAAA4rD,EAiBA,OAZA9+B,IACAogC,GAAAC,EAAAD,EAAAnpD,MAAA,GAAA6nD,EAAA5rD,QAAAktD,GAAA,MAAAtB,EAAA,WAIAsB,GADAllD,EACA,IAIA8kB,GAAAqgC,EAAA,SAAAvB,EAAA,MAGAoB,EAAA,IAAAh5C,OAAA,IAAAk5C,EAAAD,EAAAxgC,IAAAtc,GAgBA,SAAAk7C,EAAAx3C,EAAA1D,EAAAsc,GAUA,OATA2+B,EAAAj7C,KACAsc,EAEAtc,GAAAsc,EACAtc,EAAA,IAGAsc,KAAA,GAEA5Y,aAAAG,OArJA,SAAAH,EAAA1D,GAEA,IAAAi9C,EAAAv5C,EAAA5T,OAAA6K,MAAA,aAEA,GAAAsiD,EACA,QAAArtD,EAAA,EAAmBA,EAAAqtD,EAAAptD,OAAmBD,IACtCoQ,EAAAhJ,KAAA,CACAqe,KAAAzlB,EACAuR,OAAA,KACAs6C,UAAA,KACAQ,UAAA,EACAD,QAAA,EACAD,SAAA,EACAD,UAAA,EACAzjC,QAAA,OAKA,OAAAwkC,EAAAn5C,EAAA1D,GAmIAk9C,CAAAx5C,EAEA1D,GAGAi7C,EAAAv3C,GA5HA,SAAAA,EAAA1D,EAAAsc,GAGA,IAFA,IAAA6gC,EAAA,GAEAvtD,EAAA,EAAiBA,EAAA8T,EAAA7T,OAAiBD,IAClCutD,EAAAnmD,KAAAkkD,EAAAx3C,EAAA9T,GAAAoQ,EAAAsc,GAAAxsB,QAIA,OAAA+sD,EADA,IAAAh5C,OAAA,MAAAs5C,EAAAviD,KAAA,SAAAkiD,EAAAxgC,IACAtc,GAqHAo9C,CAEA15C,EAEA1D,EAAAsc,GA7GA,SAAA5Y,EAAA1D,EAAAsc,GACA,OAAA++B,EAAAF,EAAAz3C,EAAA4Y,GAAAtc,EAAAsc,GA+GA+gC,CAEA35C,EAEA1D,EAAAsc,mCCpbAxuB,EAAAC,QAAmBC,EAAQ,oBCH3B,IAAA8C,EAAA,GAAiBA,SAEjBhD,EAAAC,QAAAU,MAAAyD,SAAA,SAAAsD,GACA,wBAAA1E,EAAAd,KAAAwF,qBCiBA1H,EAAAC,QAAAuuC,EAEA,IAAAghB,EAAStvD,EAAQ,IAAQksC,aAczB,SAAAoC,IACAghB,EAAAttD,KAAA9B,MAbeF,EAAQ,GAEvBqzB,CAAAib,EAAAghB,GACAhhB,EAAAhb,SAAkBtzB,EAAQ,IAC1BsuC,EAAA/a,SAAkBvzB,EAAQ,KAC1BsuC,EAAAnb,OAAgBnzB,EAAQ,KACxBsuC,EAAAC,UAAmBvuC,EAAQ,KAC3BsuC,EAAAE,YAAqBxuC,EAAQ,KAE7BsuC,WAOAA,EAAAxtC,UAAA8xC,KAAA,SAAA//B,EAAAyb,GACA,IAAAxsB,EAAA5B,KAEA,SAAAqvD,EAAA5nB,GACA90B,EAAAhB,WACA,IAAAgB,EAAAlN,MAAAgiC,IAAA7lC,EAAA0tD,OACA1tD,EAAA0tD,QAOA,SAAAC,IACA3tD,EAAA2xB,UAAA3xB,EAAA4tD,QACA5tD,EAAA4tD,SAJA5tD,EAAA8kB,GAAA,OAAA2oC,GAQA18C,EAAA+T,GAAA,QAAA6oC,GAGA58C,EAAA88C,UAAArhC,IAAA,IAAAA,EAAAzkB,MACA/H,EAAA8kB,GAAA,MAAA+M,GACA7xB,EAAA8kB,GAAA,QAAAgpC,IAGA,IAAAC,GAAA,EAEA,SAAAl8B,IACAk8B,IACAA,GAAA,EACAh9C,EAAAhJ,OAGA,SAAA+lD,IACAC,IACAA,GAAA,EACA,oBAAAh9C,EAAA++B,SAAA/+B,EAAA++B,WAIA,SAAAke,EAAA9hB,GAGA,GAFA+hB,IAEA,IAAAT,EAAA/zC,cAAArb,KAAA,SACA,MAAA8tC,EAOA,SAAA+hB,IACAjuD,EAAAklB,eAAA,OAAAuoC,GACA18C,EAAAmU,eAAA,QAAAyoC,GACA3tD,EAAAklB,eAAA,MAAA2M,GACA7xB,EAAAklB,eAAA,QAAA4oC,GACA9tD,EAAAklB,eAAA,QAAA8oC,GACAj9C,EAAAmU,eAAA,QAAA8oC,GACAhuD,EAAAklB,eAAA,MAAA+oC,GACAjuD,EAAAklB,eAAA,QAAA+oC,GACAl9C,EAAAmU,eAAA,QAAA+oC,GAQA,OApBAjuD,EAAA8kB,GAAA,QAAAkpC,GACAj9C,EAAA+T,GAAA,QAAAkpC,GAcAhuD,EAAA8kB,GAAA,MAAAmpC,GACAjuD,EAAA8kB,GAAA,QAAAmpC,GACAl9C,EAAA+T,GAAA,QAAAmpC,GACAl9C,EAAAqU,KAAA,OAAAplB,GAEA+Q,kCC9GA,SAAA9O,EAAAmhB,GAuBA,IAAA+N,EAAUjzB,EAAQ,IAIlBF,EAAAC,QAAAuzB,EAGA,IAMAH,EANAjvB,EAAclE,EAAQ,IAStBszB,EAAA08B,gBAGShwD,EAAQ,IAAQksC,aAAzB,IAEA+jB,EAAA,SAAAhjB,EAAA5mC,GACA,OAAA4mC,EAAAh2B,UAAA5Q,GAAAxE,QAOAysC,EAAatuC,EAAQ,IAMrBoE,EAAapE,EAAQ,IAAaoE,OAElCirC,EAAAtrC,EAAAU,YAAA,aAcA,IAAA2uB,EAAWpzB,EAAQ,IAEnBozB,EAAAC,SAAgBrzB,EAAQ,IAKxB,IAAAkwD,EAAgBlwD,EAAQ,KAExBmwD,OAAA,EAGAA,EADAD,KAAAE,SACAF,EAAAE,SAAA,UAEA,aAKA,IAIAC,EAJAC,EAAiBtwD,EAAQ,KAEzBuvC,EAAkBvvC,EAAQ,IAG1BozB,EAAAC,SAAAC,EAAAgb,GACA,IAAAiiB,EAAA,6CAaA,SAAAP,EAAA1hC,EAAAuN,GAEAvN,KAAA,GAMA,IAAAmhB,EAAA5T,aAPA1I,KAAqBnzB,EAAQ,KAU7BE,KAAAwvC,aAAAphB,EAAAohB,WACAD,IAAAvvC,KAAAwvC,WAAAxvC,KAAAwvC,cAAAphB,EAAAkiC,oBAGA,IAAA5gB,EAAAthB,EAAAyF,cACA08B,EAAAniC,EAAAoiC,sBACA3gB,EAAA7vC,KAAAwvC,WAAA,SACAxvC,KAAA6zB,cAAA6b,GAAA,IAAAA,IAAiDH,IAAAghB,GAAA,IAAAA,KAA0F1gB,EAE3I7vC,KAAA6zB,cAAA/pB,KAAA2F,MAAAzP,KAAA6zB,eAIA7zB,KAAAiG,OAAA,IAAAmqD,EACApwD,KAAA2B,OAAA,EACA3B,KAAAywD,MAAA,KACAzwD,KAAA0wD,WAAA,EACA1wD,KAAA2wD,QAAA,KACA3wD,KAAA2zB,OAAA,EACA3zB,KAAA4wD,YAAA,EACA5wD,KAAA6wD,SAAA,EAKA7wD,KAAAuwC,MAAA,EAGAvwC,KAAA8wD,cAAA,EACA9wD,KAAA+wD,iBAAA,EACA/wD,KAAAgxD,mBAAA,EACAhxD,KAAAixD,iBAAA,EAEAjxD,KAAA+zB,WAAA,EAIA/zB,KAAAowC,gBAAAhiB,EAAAgiB,iBAAA,OAEApwC,KAAAkxD,WAAA,EAEAlxD,KAAAmxD,aAAA,EACAnxD,KAAA40C,QAAA,KACA50C,KAAAsF,SAAA,KAEA8oB,EAAA9oB,WACA6qD,MAAwCrwD,EAAQ,IAAiBqwD,eACjEnwD,KAAA40C,QAAA,IAAAub,EAAA/hC,EAAA9oB,UACAtF,KAAAsF,SAAA8oB,EAAA9oB,UAIA,SAAA8tB,EAAAhF,GAEA,GADA6E,KAAqBnzB,EAAQ,MAC7BE,gBAAAozB,GAAA,WAAAA,EAAAhF,GACApuB,KAAA8zB,eAAA,IAAAg8B,EAAA1hC,EAAApuB,MAEAA,KAAAuzB,UAAA,EAEAnF,IACA,oBAAAA,EAAAzmB,OAAA3H,KAAAoxD,MAAAhjC,EAAAzmB,MACA,oBAAAymB,EAAAsjB,UAAA1xC,KAAAg0B,SAAA5F,EAAAsjB,UAGAtD,EAAAtsC,KAAA9B,MA8DA,SAAAqxD,EAAA11B,EAAA8L,EAAAniC,EAAAgsD,EAAAC,GACA,IAMAzjB,EANA13B,EAAAulB,EAAA7H,eAEA,OAAA2T,GACArxB,EAAAy6C,SAAA,EA6NA,SAAAl1B,EAAAvlB,GACA,GAAAA,EAAAud,MAAA,OAEA,GAAAvd,EAAAw+B,QAAA,CACA,IAAAnN,EAAArxB,EAAAw+B,QAAAjrC,MAEA89B,KAAA9lC,SACAyU,EAAAnQ,OAAA6C,KAAA2+B,GACArxB,EAAAzU,QAAAyU,EAAAo5B,WAAA,EAAA/H,EAAA9lC,QAIAyU,EAAAud,OAAA,EAEA69B,EAAA71B,GA1OA81B,CAAA91B,EAAAvlB,KAGAm7C,IAAAzjB,EA6CA,SAAA13B,EAAAqxB,GACA,IAAAqG,EA7OAloC,EA+OA6hC,EA9OAvjC,EAAA2B,SAAAD,iBAAAupC,GA8OA,kBAAA1H,QAAAviC,IAAAuiC,GAAArxB,EAAAo5B,aACA1B,EAAA,IAAAjpC,UAAA,oCAhPA,IAAAe,EAmPA,OAAAkoC,EApDA4jB,CAAAt7C,EAAAqxB,IAEAqG,EACAnS,EAAA3U,KAAA,QAAA8mB,GACK13B,EAAAo5B,YAAA/H,KAAA9lC,OAAA,GACL,kBAAA8lC,GAAArxB,EAAAo5B,YAAApvC,OAAAgkB,eAAAqjB,KAAAvjC,EAAAtD,YACA6mC,EAzMA,SAAAA,GACA,OAAAvjC,EAAAU,KAAA6iC,GAwMAkL,CAAAlL,IAGA6pB,EACAl7C,EAAAw6C,WAAAj1B,EAAA3U,KAAA,YAAAtiB,MAAA,qCAAkGitD,EAAAh2B,EAAAvlB,EAAAqxB,GAAA,GAC3FrxB,EAAAud,MACPgI,EAAA3U,KAAA,YAAAtiB,MAAA,6BAEA0R,EAAAy6C,SAAA,EAEAz6C,EAAAw+B,UAAAtvC,GACAmiC,EAAArxB,EAAAw+B,QAAAnvC,MAAAgiC,GACArxB,EAAAo5B,YAAA,IAAA/H,EAAA9lC,OAAAgwD,EAAAh2B,EAAAvlB,EAAAqxB,GAAA,GAA4FmqB,EAAAj2B,EAAAvlB,IAE5Fu7C,EAAAh2B,EAAAvlB,EAAAqxB,GAAA,KAGK6pB,IACLl7C,EAAAy6C,SAAA,IAIA,OAkCA,SAAAz6C,GACA,OAAAA,EAAAud,QAAAvd,EAAA06C,cAAA16C,EAAAzU,OAAAyU,EAAAyd,eAAA,IAAAzd,EAAAzU,QAnCAkwD,CAAAz7C,GAGA,SAAAu7C,EAAAh2B,EAAAvlB,EAAAqxB,EAAA6pB,GACAl7C,EAAAu6C,SAAA,IAAAv6C,EAAAzU,SAAAyU,EAAAm6B,MACA5U,EAAA3U,KAAA,OAAAygB,GACA9L,EAAAh0B,KAAA,KAGAyO,EAAAzU,QAAAyU,EAAAo5B,WAAA,EAAA/H,EAAA9lC,OACA2vD,EAAAl7C,EAAAnQ,OAAAwO,QAAAgzB,GAAgDrxB,EAAAnQ,OAAA6C,KAAA2+B,GAChDrxB,EAAA06C,cAAAU,EAAA71B,IAGAi2B,EAAAj2B,EAAAvlB,GA7GAhW,OAAAU,eAAAsyB,EAAAxyB,UAAA,aACAif,IAAA,WACA,YAAA3a,IAAAlF,KAAA8zB,gBAIA9zB,KAAA8zB,eAAAC,WAEAnjB,IAAA,SAAA7P,GAGAf,KAAA8zB,iBAMA9zB,KAAA8zB,eAAAC,UAAAhzB,MAGAqyB,EAAAxyB,UAAA8wC,QAAArC,EAAAqC,QACAte,EAAAxyB,UAAAyyC,WAAAhE,EAAAiE,UAEAlgB,EAAAxyB,UAAAozB,SAAA,SAAAC,EAAAC,GACAl0B,KAAA8I,KAAA,MACAorB,EAAAD,IAOAb,EAAAxyB,UAAAkI,KAAA,SAAA2+B,EAAAniC,GACA,IACAisD,EADAn7C,EAAApW,KAAA8zB,eAkBA,OAfA1d,EAAAo5B,WAYA+hB,GAAA,EAXA,kBAAA9pB,KACAniC,KAAA8Q,EAAAg6B,mBAEAh6B,EAAA9Q,WACAmiC,EAAAvjC,EAAAU,KAAA6iC,EAAAniC,GACAA,EAAA,IAGAisD,GAAA,GAMAF,EAAArxD,KAAAynC,EAAAniC,GAAA,EAAAisD,IAIAn+B,EAAAxyB,UAAA6T,QAAA,SAAAgzB,GACA,OAAA4pB,EAAArxD,KAAAynC,EAAA,aA6EArU,EAAAxyB,UAAAkxD,SAAA,WACA,WAAA9xD,KAAA8zB,eAAA68B,SAIAv9B,EAAAxyB,UAAAmxD,YAAA,SAAAC,GAIA,OAHA7B,MAAsCrwD,EAAQ,IAAiBqwD,eAC/DnwD,KAAA8zB,eAAA8gB,QAAA,IAAAub,EAAA6B,GACAhyD,KAAA8zB,eAAAxuB,SAAA0sD,EACAhyD,MAIA,IAAAiyD,EAAA,QAsBA,SAAAC,EAAAprD,EAAAsP,GACA,OAAAtP,GAAA,OAAAsP,EAAAzU,QAAAyU,EAAAud,MAAA,EACAvd,EAAAo5B,WAAA,EAEA1oC,MAEAsP,EAAAu6C,SAAAv6C,EAAAzU,OAAAyU,EAAAnQ,OAAAksD,KAAA/rD,KAAAzE,OAA4EyU,EAAAzU,QAI5EmF,EAAAsP,EAAAyd,gBAAAzd,EAAAyd,cA9BA,SAAA/sB,GAeA,OAdAA,GAAAmrD,EACAnrD,EAAAmrD,GAIAnrD,IACAA,OAAA,EACAA,OAAA,EACAA,OAAA,EACAA,OAAA,EACAA,OAAA,GACAA,KAGAA,EAeAsrD,CAAAtrD,IACAA,GAAAsP,EAAAzU,OAAAmF,EAEAsP,EAAAud,MAKAvd,EAAAzU,QAJAyU,EAAA06C,cAAA,EACA,IAyHA,SAAAU,EAAA71B,GACA,IAAAvlB,EAAAulB,EAAA7H,eACA1d,EAAA06C,cAAA,EAEA16C,EAAA26C,kBACAd,EAAA,eAAA75C,EAAAu6C,SACAv6C,EAAA26C,iBAAA,EACA36C,EAAAm6B,KAAAxd,EAAA5M,SAAAksC,EAAA12B,GAAwD02B,EAAA12B,IAIxD,SAAA02B,EAAA12B,GACAs0B,EAAA,iBACAt0B,EAAA3U,KAAA,YACAsrC,EAAA32B,GASA,SAAAi2B,EAAAj2B,EAAAvlB,GACAA,EAAA+6C,cACA/6C,EAAA+6C,aAAA,EACAp+B,EAAA5M,SAAAosC,EAAA52B,EAAAvlB,IAIA,SAAAm8C,EAAA52B,EAAAvlB,GAGA,IAFA,IAAAtQ,EAAAsQ,EAAAzU,QAEAyU,EAAAy6C,UAAAz6C,EAAAu6C,UAAAv6C,EAAAud,OAAAvd,EAAAzU,OAAAyU,EAAAyd,gBACAo8B,EAAA,wBACAt0B,EAAAh0B,KAAA,GACA7B,IAAAsQ,EAAAzU,SACYmE,EAAAsQ,EAAAzU,OAGZyU,EAAA+6C,aAAA,EA6OA,SAAAqB,EAAAjuC,GACA0rC,EAAA,4BACA1rC,EAAA5c,KAAA,GAwBA,SAAA8qD,EAAA92B,EAAAvlB,GACAA,EAAAy6C,UACAZ,EAAA,iBACAt0B,EAAAh0B,KAAA,IAGAyO,EAAA66C,iBAAA,EACA76C,EAAA86C,WAAA,EACAv1B,EAAA3U,KAAA,UACAsrC,EAAA32B,GACAvlB,EAAAu6C,UAAAv6C,EAAAy6C,SAAAl1B,EAAAh0B,KAAA,GAeA,SAAA2qD,EAAA32B,GACA,IAAAvlB,EAAAulB,EAAA7H,eAGA,IAFAm8B,EAAA,OAAA75C,EAAAu6C,SAEAv6C,EAAAu6C,SAAA,OAAAh1B,EAAAh0B,UAgFA,SAAA+qD,EAAA5rD,EAAAsP,GAEA,WAAAA,EAAAzU,OAAA,MAEAyU,EAAAo5B,WAAAriC,EAAAiJ,EAAAnQ,OAAA+gC,SAAmDlgC,MAAAsP,EAAAzU,QAEnDwL,EAAAiJ,EAAAw+B,QAAAx+B,EAAAnQ,OAAAyG,KAAA,IAAmD,IAAA0J,EAAAnQ,OAAAtE,OAAAyU,EAAAnQ,OAAAksD,KAAA/rD,KAAiEgQ,EAAAnQ,OAAA4F,OAAAuK,EAAAzU,QACpHyU,EAAAnQ,OAAAwa,SAGAtT,EAQA,SAAArG,EAAAgF,EAAA6mD,GACA,IAAAxlD,EAEArG,EAAAgF,EAAAqmD,KAAA/rD,KAAAzE,QAEAwL,EAAArB,EAAAqmD,KAAA/rD,KAAAV,MAAA,EAAAoB,GACAgF,EAAAqmD,KAAA/rD,KAAA0F,EAAAqmD,KAAA/rD,KAAAV,MAAAoB,IAGAqG,EAFGrG,IAAAgF,EAAAqmD,KAAA/rD,KAAAzE,OAEHmK,EAAAk7B,QAGA2rB,EAUA,SAAA7rD,EAAAgF,GACA,IAAAtL,EAAAsL,EAAAqmD,KACA9oD,EAAA,EACA8D,EAAA3M,EAAA4F,KACAU,GAAAqG,EAAAxL,OAEA,KAAAnB,IAAAiuC,MAAA,CACA,IAAA7lC,EAAApI,EAAA4F,KACAwsD,EAAA9rD,EAAA8B,EAAAjH,OAAAiH,EAAAjH,OAAAmF,EAIA,GAHA8rD,IAAAhqD,EAAAjH,OAAAwL,GAAAvE,EAAsCuE,GAAAvE,EAAAlD,MAAA,EAAAoB,GAGtC,KAFAA,GAAA8rD,GAEA,CACAA,IAAAhqD,EAAAjH,UACA0H,EACA7I,EAAAiuC,KAAA3iC,EAAAqmD,KAAA3xD,EAAAiuC,KAAuC3iC,EAAAqmD,KAAArmD,EAAA+mD,KAAA,OAEvC/mD,EAAAqmD,KAAA3xD,EACAA,EAAA4F,KAAAwC,EAAAlD,MAAAktD,IAGA,QAGAvpD,EAIA,OADAyC,EAAAnK,QAAA0H,EACA8D,EAtCA2lD,CAAAhsD,EAAAgF,GA4CA,SAAAhF,EAAAgF,GACA,IAAAqB,EAAAjJ,EAAAS,YAAAmC,GACAtG,EAAAsL,EAAAqmD,KACA9oD,EAAA,EACA7I,EAAA4F,KAAAJ,KAAAmH,GACArG,GAAAtG,EAAA4F,KAAAzE,OAEA,KAAAnB,IAAAiuC,MAAA,CACA,IAAA7mC,EAAApH,EAAA4F,KACAwsD,EAAA9rD,EAAAc,EAAAjG,OAAAiG,EAAAjG,OAAAmF,EAIA,GAHAc,EAAA5B,KAAAmH,IAAAxL,OAAAmF,EAAA,EAAA8rD,GAGA,KAFA9rD,GAAA8rD,GAEA,CACAA,IAAAhrD,EAAAjG,UACA0H,EACA7I,EAAAiuC,KAAA3iC,EAAAqmD,KAAA3xD,EAAAiuC,KAAuC3iC,EAAAqmD,KAAArmD,EAAA+mD,KAAA,OAEvC/mD,EAAAqmD,KAAA3xD,EACAA,EAAA4F,KAAAwB,EAAAlC,MAAAktD,IAGA,QAGAvpD,EAIA,OADAyC,EAAAnK,QAAA0H,EACA8D,EAzEA4lD,CAAAjsD,EAAAgF,GAGA,OAAAqB,EAvBA6lD,CAAAlsD,EAAAsP,EAAAnQ,OAAAmQ,EAAAw+B,SAEAznC,GATA,IAAAA,EAuGA,SAAA8lD,EAAAt3B,GACA,IAAAvlB,EAAAulB,EAAA7H,eAGA,GAAA1d,EAAAzU,OAAA,YAAA+C,MAAA,8CAEA0R,EAAAw6C,aACAx6C,EAAAud,OAAA,EACAZ,EAAA5M,SAAA+sC,EAAA98C,EAAAulB,IAIA,SAAAu3B,EAAA98C,EAAAulB,GAEAvlB,EAAAw6C,YAAA,IAAAx6C,EAAAzU,SACAyU,EAAAw6C,YAAA,EACAj1B,EAAApI,UAAA,EACAoI,EAAA3U,KAAA,QAIA,SAAA5f,EAAA+rD,EAAAhxD,GACA,QAAAT,EAAA,EAAA8lC,EAAA2rB,EAAAxxD,OAAgCD,EAAA8lC,EAAO9lC,IACvC,GAAAyxD,EAAAzxD,KAAAS,EAAA,OAAAT,EAGA,SAlpBA0xB,EAAAxyB,UAAA+G,KAAA,SAAAb,GACAmpD,EAAA,OAAAnpD,GACAA,EAAAyB,SAAAzB,EAAA,IACA,IAAAsP,EAAApW,KAAA8zB,eACAs/B,EAAAtsD,EAKA,GAJA,IAAAA,IAAAsP,EAAA26C,iBAAA,GAIA,IAAAjqD,GAAAsP,EAAA06C,eAAA16C,EAAAzU,QAAAyU,EAAAyd,eAAAzd,EAAAud,OAGA,OAFAs8B,EAAA,qBAAA75C,EAAAzU,OAAAyU,EAAAud,OACA,IAAAvd,EAAAzU,QAAAyU,EAAAud,MAAAs/B,EAAAjzD,MAA6DwxD,EAAAxxD,MAC7D,KAKA,QAFA8G,EAAAorD,EAAAprD,EAAAsP,KAEAA,EAAAud,MAEA,OADA,IAAAvd,EAAAzU,QAAAsxD,EAAAjzD,MACA,KAyBA,IA4BAmN,EA5BAkmD,EAAAj9C,EAAA06C,aA+CA,OA9CAb,EAAA,gBAAAoD,IAEA,IAAAj9C,EAAAzU,QAAAyU,EAAAzU,OAAAmF,EAAAsP,EAAAyd,gBAEAo8B,EAAA,6BADAoD,GAAA,GAMAj9C,EAAAud,OAAAvd,EAAAy6C,QAEAZ,EAAA,mBADAoD,GAAA,GAEGA,IACHpD,EAAA,WACA75C,EAAAy6C,SAAA,EACAz6C,EAAAm6B,MAAA,EAEA,IAAAn6B,EAAAzU,SAAAyU,EAAA06C,cAAA,GAEA9wD,KAAAoxD,MAAAh7C,EAAAyd,eAEAzd,EAAAm6B,MAAA,EAGAn6B,EAAAy6C,UAAA/pD,EAAAorD,EAAAkB,EAAAh9C,KAMA,QAFAjJ,EAAArG,EAAA,EAAA4rD,EAAA5rD,EAAAsP,GAAsC,OAGtCA,EAAA06C,cAAA,EACAhqD,EAAA,GAEAsP,EAAAzU,QAAAmF,EAGA,IAAAsP,EAAAzU,SAGAyU,EAAAud,QAAAvd,EAAA06C,cAAA,GAEAsC,IAAAtsD,GAAAsP,EAAAud,OAAAs/B,EAAAjzD,OAGA,OAAAmN,GAAAnN,KAAAgnB,KAAA,OAAA7Z,GACAA,GAsEAimB,EAAAxyB,UAAAwwD,MAAA,SAAAtqD,GACA9G,KAAAgnB,KAAA,YAAAtiB,MAAA,gCAGA0uB,EAAAxyB,UAAA8xC,KAAA,SAAA//B,EAAA2gD,GACA,IAAAhiD,EAAAtR,KACAoW,EAAApW,KAAA8zB,eAEA,OAAA1d,EAAAs6C,YACA,OACAt6C,EAAAq6C,MAAA99C,EACA,MAEA,OACAyD,EAAAq6C,MAAA,CAAAr6C,EAAAq6C,MAAA99C,GACA,MAEA,QACAyD,EAAAq6C,MAAA3nD,KAAA6J,GAIAyD,EAAAs6C,YAAA,EACAT,EAAA,wBAAA75C,EAAAs6C,WAAA4C,GACA,IACAC,IADAD,IAAA,IAAAA,EAAA3pD,MAAAgJ,IAAAqS,EAAAwuC,QAAA7gD,IAAAqS,EAAAyuC,OACAhgC,EAAAigC,EAIA,SAAAC,EAAApgC,EAAAqgC,GACA3D,EAAA,YAEA18B,IAAAjiB,GACAsiD,IAAA,IAAAA,EAAAC,aACAD,EAAAC,YAAA,EAoBA5D,EAAA,WAEAt9C,EAAAmU,eAAA,QAAA4oC,GACA/8C,EAAAmU,eAAA,SAAAgtC,GACAnhD,EAAAmU,eAAA,QAAAyoC,GACA58C,EAAAmU,eAAA,QAAA8oC,GACAj9C,EAAAmU,eAAA,SAAA6sC,GACAriD,EAAAwV,eAAA,MAAA2M,GACAniB,EAAAwV,eAAA,MAAA4sC,GACApiD,EAAAwV,eAAA,OAAAuoC,GACA0E,GAAA,GAMA39C,EAAA86C,YAAAv+C,EAAA+gB,iBAAA/gB,EAAA+gB,eAAAqc,WAAAwf,KA9BA,SAAA97B,IACAw8B,EAAA,SACAt9C,EAAAhJ,MAhBAyM,EAAAw6C,WAAA79B,EAAA5M,SAAAotC,GAA4CjiD,EAAAsV,KAAA,MAAA2sC,GAC5C5gD,EAAA+T,GAAA,SAAAitC,GAsBA,IAAApE,EA8FA,SAAAj+C,GACA,kBACA,IAAA8E,EAAA9E,EAAAwiB,eACAm8B,EAAA,cAAA75C,EAAA86C,YACA96C,EAAA86C,YAAA96C,EAAA86C,aAEA,IAAA96C,EAAA86C,YAAAnB,EAAAz+C,EAAA,UACA8E,EAAAu6C,SAAA,EACA2B,EAAAhhD,KAtGA0iD,CAAA1iD,GACAqB,EAAA+T,GAAA,QAAA6oC,GACA,IAAAwE,GAAA,EA0BA,IAAAE,GAAA,EAGA,SAAA5E,EAAA5nB,GACAwoB,EAAA,UACAgE,GAAA,GAGA,IAFAthD,EAAAlN,MAAAgiC,IAEAwsB,KAKA,IAAA79C,EAAAs6C,YAAAt6C,EAAAq6C,QAAA99C,GAAAyD,EAAAs6C,WAAA,QAAAtpD,EAAAgP,EAAAq6C,MAAA99C,MAAAohD,IACA9D,EAAA,8BAAA3+C,EAAAwiB,eAAAo9B,YACA5/C,EAAAwiB,eAAAo9B,aACA+C,GAAA,GAGA3iD,EAAAg+C,SAMA,SAAAM,EAAA9hB,GACAmiB,EAAA,UAAAniB,GACA4lB,IACA/gD,EAAAmU,eAAA,QAAA8oC,GACA,IAAAG,EAAAp9C,EAAA,UAAAA,EAAAqU,KAAA,QAAA8mB,GAMA,SAAA4hB,IACA/8C,EAAAmU,eAAA,SAAAgtC,GACAJ,IAKA,SAAAI,IACA7D,EAAA,YACAt9C,EAAAmU,eAAA,QAAA4oC,GACAgE,IAKA,SAAAA,IACAzD,EAAA,UACA3+C,EAAAoiD,OAAA/gD,GAWA,OA9DArB,EAAAoV,GAAA,OAAA2oC,GAtgBA,SAAAtiB,EAAA1yB,EAAA9C,GAGA,uBAAAw1B,EAAA9lB,gBAAA,OAAA8lB,EAAA9lB,gBAAA5M,EAAA9C,GAKAw1B,EAAAb,SAAAa,EAAAb,QAAA7xB,GAAyErW,EAAA+oC,EAAAb,QAAA7xB,IAAA0yB,EAAAb,QAAA7xB,GAAA5F,QAAA8C,GAA6Ew1B,EAAAb,QAAA7xB,GAAA,CAAA9C,EAAAw1B,EAAAb,QAAA7xB,IAAtJ0yB,EAAArmB,GAAArM,EAAA9C,GA8hBA0P,CAAAtU,EAAA,QAAAi9C,GAOAj9C,EAAAiU,KAAA,QAAA8oC,GAQA/8C,EAAAiU,KAAA,SAAAktC,GAQAnhD,EAAAqU,KAAA,OAAA1V,GAEA8E,EAAAu6C,UACAV,EAAA,eACA3+C,EAAAk+C,UAGA78C,GAgBAygB,EAAAxyB,UAAA8yD,OAAA,SAAA/gD,GACA,IAAAyD,EAAApW,KAAA8zB,eACA8/B,EAAA,CACAC,YAAA,GAGA,OAAAz9C,EAAAs6C,WAAA,OAAA1wD,KAEA,OAAAoW,EAAAs6C,WAEA,OAAA/9C,OAAAyD,EAAAq6C,MAAAzwD,MACA2S,MAAAyD,EAAAq6C,OAEAr6C,EAAAq6C,MAAA,KACAr6C,EAAAs6C,WAAA,EACAt6C,EAAAu6C,SAAA,EACAh+C,KAAAqU,KAAA,SAAAhnB,KAAA4zD,GACA5zD,MAIA,IAAA2S,EAAA,CAEA,IAAAuhD,EAAA99C,EAAAq6C,MACA3qD,EAAAsQ,EAAAs6C,WACAt6C,EAAAq6C,MAAA,KACAr6C,EAAAs6C,WAAA,EACAt6C,EAAAu6C,SAAA,EAEA,QAAAjvD,EAAA,EAAmBA,EAAAoE,EAASpE,IAC5BwyD,EAAAxyD,GAAAslB,KAAA,SAAAhnB,KAAA4zD,GAGA,OAAA5zD,KAIA,IAAA0T,EAAAtM,EAAAgP,EAAAq6C,MAAA99C,GACA,WAAAe,EAAA1T,MACAoW,EAAAq6C,MAAAryC,OAAA1K,EAAA,GACA0C,EAAAs6C,YAAA,EACA,IAAAt6C,EAAAs6C,aAAAt6C,EAAAq6C,MAAAr6C,EAAAq6C,MAAA,IACA99C,EAAAqU,KAAA,SAAAhnB,KAAA4zD,GACA5zD,OAKAozB,EAAAxyB,UAAA8lB,GAAA,SAAAytC,EAAA58C,GACA,IAAAvN,EAAAokC,EAAAxtC,UAAA8lB,GAAA5kB,KAAA9B,KAAAm0D,EAAA58C,GAEA,YAAA48C,GAEA,IAAAn0D,KAAA8zB,eAAA68B,SAAA3wD,KAAAwvD,cACG,gBAAA2E,EAAA,CACH,IAAA/9C,EAAApW,KAAA8zB,eAEA1d,EAAAw6C,YAAAx6C,EAAA46C,oBACA56C,EAAA46C,kBAAA56C,EAAA06C,cAAA,EACA16C,EAAA26C,iBAAA,EAEA36C,EAAAy6C,QAEOz6C,EAAAzU,QACP6vD,EAAAxxD,MAFA+yB,EAAA5M,SAAAqsC,EAAAxyD,OAOA,OAAAgK,GAGAopB,EAAAxyB,UAAA+lB,YAAAyM,EAAAxyB,UAAA8lB,GASA0M,EAAAxyB,UAAA4uD,OAAA,WACA,IAAAp5C,EAAApW,KAAA8zB,eAQA,OANA1d,EAAAu6C,UACAV,EAAA,UACA75C,EAAAu6C,SAAA,EAOA,SAAAh1B,EAAAvlB,GACAA,EAAA66C,kBACA76C,EAAA66C,iBAAA,EACAl+B,EAAA5M,SAAAssC,EAAA92B,EAAAvlB,IATAo5C,CAAAxvD,KAAAoW,IAGApW,MAuBAozB,EAAAxyB,UAAA0uD,MAAA,WASA,OARAW,EAAA,wBAAAjwD,KAAA8zB,eAAA68B,UAEA,IAAA3wD,KAAA8zB,eAAA68B,UACAV,EAAA,SACAjwD,KAAA8zB,eAAA68B,SAAA,EACA3wD,KAAAgnB,KAAA,UAGAhnB,MAaAozB,EAAAxyB,UAAAwzD,KAAA,SAAAz4B,GACA,IAAArpB,EAAAtS,KAEAoW,EAAApW,KAAA8zB,eACAugC,GAAA,EA0BA,QAAA3yD,KAzBAi6B,EAAAjV,GAAA,iBAGA,GAFAupC,EAAA,eAEA75C,EAAAw+B,UAAAx+B,EAAAud,MAAA,CACA,IAAA8T,EAAArxB,EAAAw+B,QAAAjrC,MACA89B,KAAA9lC,QAAA2Q,EAAAxJ,KAAA2+B,GAGAn1B,EAAAxJ,KAAA,QAEA6yB,EAAAjV,GAAA,gBAAA+gB,IACAwoB,EAAA,gBACA75C,EAAAw+B,UAAAnN,EAAArxB,EAAAw+B,QAAAnvC,MAAAgiC,KAEArxB,EAAAo5B,YAAA,OAAA/H,QAAAviC,IAAAuiC,MAA4ErxB,EAAAo5B,YAAA/H,KAAA9lC,UAE5E2Q,EAAAxJ,KAAA2+B,KAGA4sB,GAAA,EACA14B,EAAA2zB,aAKA3zB,OACAz2B,IAAAlF,KAAA0B,IAAA,oBAAAi6B,EAAAj6B,KACA1B,KAAA0B,GAAA,SAAAqsB,GACA,kBACA,OAAA4N,EAAA5N,GAAA7sB,MAAAy6B,EAAAx6B,YAFA,CAIOO,IAKP,QAAAoF,EAAA,EAAiBA,EAAAupD,EAAA1uD,OAAyBmF,IAC1C60B,EAAAjV,GAAA2pC,EAAAvpD,GAAA9G,KAAAgnB,KAAA0W,KAAA19B,KAAAqwD,EAAAvpD,KAcA,OATA9G,KAAAoxD,MAAA,SAAAtqD,GACAmpD,EAAA,gBAAAnpD,GAEAutD,IACAA,GAAA,EACA14B,EAAA6zB,WAIAxvD,MAGAI,OAAAU,eAAAsyB,EAAAxyB,UAAA,yBAIA8Q,YAAA,EACAmO,IAAA,WACA,OAAA7f,KAAA8zB,eAAAD,iBAIAT,EAAAkhC,UAAA5B,4CCr4BA9yD,EAAAC,QAAiBC,EAAQ,IAAQksC,2CCGjC,IAAAjZ,EAAUjzB,EAAQ,IAgElB,SAAAy0D,EAAAhwC,EAAA0P,GACA1P,EAAAyC,KAAA,QAAAiN,GAGAr0B,EAAAC,QAAA,CACA6xC,QAhEA,SAAAzd,EAAAC,GACA,IAAA5hB,EAAAtS,KAEAw0D,EAAAx0D,KAAA8zB,gBAAA9zB,KAAA8zB,eAAAC,UACA0gC,EAAAz0D,KAAA0zB,gBAAA1zB,KAAA0zB,eAAAK,UAEA,OAAAygC,GAAAC,GACAvgC,EACAA,EAAAD,IACKA,GAAAj0B,KAAA0zB,gBAAA1zB,KAAA0zB,eAAAod,cACL/d,EAAA5M,SAAAouC,EAAAv0D,KAAAi0B,GAGAj0B,OAKAA,KAAA8zB,iBACA9zB,KAAA8zB,eAAAC,WAAA,GAIA/zB,KAAA0zB,iBACA1zB,KAAA0zB,eAAAK,WAAA,GAGA/zB,KAAAg0B,SAAAC,GAAA,cAAAA,IACAC,GAAAD,GACAlB,EAAA5M,SAAAouC,EAAAjiD,EAAA2hB,GAEA3hB,EAAAohB,iBACAphB,EAAAohB,eAAAod,cAAA,IAEK5c,GACLA,EAAAD,KAIAj0B,OA0BAszC,UAvBA,WACAtzC,KAAA8zB,iBACA9zB,KAAA8zB,eAAAC,WAAA,EACA/zB,KAAA8zB,eAAA+8B,SAAA,EACA7wD,KAAA8zB,eAAAH,OAAA,EACA3zB,KAAA8zB,eAAA88B,YAAA,GAGA5wD,KAAA0zB,iBACA1zB,KAAA0zB,eAAAK,WAAA,EACA/zB,KAAA0zB,eAAAC,OAAA,EACA3zB,KAAA0zB,eAAAsc,QAAA,EACAhwC,KAAA0zB,eAAAuc,UAAA,EACAjwC,KAAA0zB,eAAAod,cAAA,mCCxCA,IAAA5sC,EAAapE,EAAQ,IAAaoE,OAIlCqB,EAAArB,EAAAqB,YAAA,SAAAD,GAGA,QAFAA,EAAA,GAAAA,IAEAA,EAAAsB,eACA,UACA,WACA,YACA,YACA,aACA,aACA,WACA,YACA,cACA,eACA,UACA,SAEA,QACA,WAqDA,SAAAupD,EAAA7qD,GAEA,IAAAstD,EAEA,OAHA5yD,KAAAsF,SAbA,SAAA0sD,GACA,IAAA0C,EAtCA,SAAA1C,GACA,IAAAA,EAAA,aAGA,IAFA,IAAA2C,IAGA,OAAA3C,GACA,WACA,YACA,aAEA,WACA,YACA,cACA,eACA,gBAEA,aACA,aACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,GAAA2C,EAAA,OAEA3C,GAAA,GAAAA,GAAAprD,cACA+tD,GAAA,GASAC,CAAA5C,GAEA,qBAAA0C,IAAAxwD,EAAAqB,mBAAAysD,IAAA,UAAAttD,MAAA,qBAAAstD,GACA,OAAA0C,GAAA1C,EASA6C,CAAAvvD,GAGAtF,KAAAsF,UACA,cACAtF,KAAAqiB,KAAAyyC,EACA90D,KAAA2J,IAAAorD,EACAnC,EAAA,EACA,MAEA,WACA5yD,KAAAg1D,SAAAC,EACArC,EAAA,EACA,MAEA,aACA5yD,KAAAqiB,KAAA6yC,EACAl1D,KAAA2J,IAAAwrD,EACAvC,EAAA,EACA,MAEA,QAGA,OAFA5yD,KAAAyF,MAAA2vD,OACAp1D,KAAA2J,IAAA0rD,GAIAr1D,KAAAs1D,SAAA,EACAt1D,KAAAu1D,UAAA,EACAv1D,KAAAw1D,SAAAtxD,EAAAS,YAAAiuD,GAqCA,SAAA6C,EAAAC,GACA,OAAAA,GAAA,MAA8BA,GAAA,QAAuCA,GAAA,SAAuCA,GAAA,SAC5GA,GAAA,YAoEA,SAAAT,EAAArtD,GACA,IAAApH,EAAAR,KAAAu1D,UAAAv1D,KAAAs1D,SACAnd,EAxBA,SAAA5zB,EAAA3c,EAAApH,GACA,cAAAoH,EAAA,IAEA,OADA2c,EAAA+wC,SAAA,EACA,SAGA,GAAA/wC,EAAA+wC,SAAA,GAAA1tD,EAAAjG,OAAA,GACA,cAAAiG,EAAA,IAEA,OADA2c,EAAA+wC,SAAA,EACA,SAGA,GAAA/wC,EAAA+wC,SAAA,GAAA1tD,EAAAjG,OAAA,GACA,WAAAiG,EAAA,IAEA,OADA2c,EAAA+wC,SAAA,EACA,UASAK,CAAA31D,KAAA4H,GACA,YAAA1C,IAAAizC,IAEAn4C,KAAAs1D,UAAA1tD,EAAAjG,QACAiG,EAAA5B,KAAAhG,KAAAw1D,SAAAh1D,EAAA,EAAAR,KAAAs1D,UACAt1D,KAAAw1D,SAAA5yD,SAAA5C,KAAAsF,SAAA,EAAAtF,KAAAu1D,aAGA3tD,EAAA5B,KAAAhG,KAAAw1D,SAAAh1D,EAAA,EAAAoH,EAAAjG,aACA3B,KAAAs1D,UAAA1tD,EAAAjG,SA2BA,SAAAmzD,EAAAltD,EAAAlG,GACA,IAAAkG,EAAAjG,OAAAD,GAAA,OACA,IAAAy2C,EAAAvwC,EAAAhF,SAAA,UAAAlB,GAEA,GAAAy2C,EAAA,CACA,IAAA9uC,EAAA8uC,EAAApvC,WAAAovC,EAAAx2C,OAAA,GAEA,GAAA0H,GAAA,OAAAA,GAAA,MAKA,OAJArJ,KAAAs1D,SAAA,EACAt1D,KAAAu1D,UAAA,EACAv1D,KAAAw1D,SAAA,GAAA5tD,IAAAjG,OAAA,GACA3B,KAAAw1D,SAAA,GAAA5tD,IAAAjG,OAAA,GACAw2C,EAAAzyC,MAAA,MAIA,OAAAyyC,EAMA,OAHAn4C,KAAAs1D,SAAA,EACAt1D,KAAAu1D,UAAA,EACAv1D,KAAAw1D,SAAA,GAAA5tD,IAAAjG,OAAA,GACAiG,EAAAhF,SAAA,UAAAlB,EAAAkG,EAAAjG,OAAA,GAKA,SAAAozD,EAAAntD,GACA,IAAAuwC,EAAAvwC,KAAAjG,OAAA3B,KAAAyF,MAAAmC,GAAA,GAEA,GAAA5H,KAAAs1D,SAAA,CACA,IAAA3rD,EAAA3J,KAAAu1D,UAAAv1D,KAAAs1D,SACA,OAAAnd,EAAAn4C,KAAAw1D,SAAA5yD,SAAA,YAAA+G,GAGA,OAAAwuC,EAGA,SAAA+c,EAAAttD,EAAAlG,GACA,IAAAoF,GAAAc,EAAAjG,OAAAD,GAAA,EACA,WAAAoF,EAAAc,EAAAhF,SAAA,SAAAlB,IACA1B,KAAAs1D,SAAA,EAAAxuD,EACA9G,KAAAu1D,UAAA,EAEA,IAAAzuD,EACA9G,KAAAw1D,SAAA,GAAA5tD,IAAAjG,OAAA,IAEA3B,KAAAw1D,SAAA,GAAA5tD,IAAAjG,OAAA,GACA3B,KAAAw1D,SAAA,GAAA5tD,IAAAjG,OAAA,IAGAiG,EAAAhF,SAAA,SAAAlB,EAAAkG,EAAAjG,OAAAmF,IAGA,SAAAquD,EAAAvtD,GACA,IAAAuwC,EAAAvwC,KAAAjG,OAAA3B,KAAAyF,MAAAmC,GAAA,GACA,OAAA5H,KAAAs1D,SAAAnd,EAAAn4C,KAAAw1D,SAAA5yD,SAAA,aAAA5C,KAAAs1D,UACAnd,EAIA,SAAAid,EAAAxtD,GACA,OAAAA,EAAAhF,SAAA5C,KAAAsF,UAGA,SAAA+vD,EAAAztD,GACA,OAAAA,KAAAjG,OAAA3B,KAAAyF,MAAAmC,GAAA,GAnPA/H,EAAAswD,gBAmCAA,EAAAvvD,UAAA6E,MAAA,SAAAmC,GACA,OAAAA,EAAAjG,OAAA,SACA,IAAAw2C,EACAz2C,EAEA,GAAA1B,KAAAs1D,SAAA,CAEA,QAAApwD,KADAizC,EAAAn4C,KAAAg1D,SAAAptD,IACA,SACAlG,EAAA1B,KAAAs1D,SACAt1D,KAAAs1D,SAAA,OAEA5zD,EAAA,EAGA,OAAAA,EAAAkG,EAAAjG,OAAAw2C,IAAAn4C,KAAAqiB,KAAAza,EAAAlG,GAAA1B,KAAAqiB,KAAAza,EAAAlG,GACAy2C,GAAA,IAGAgY,EAAAvvD,UAAA+I,IAkHA,SAAA/B,GACA,IAAAuwC,EAAAvwC,KAAAjG,OAAA3B,KAAAyF,MAAAmC,GAAA,GACA,OAAA5H,KAAAs1D,SAAAnd,EAAA,SACAA,GAnHAgY,EAAAvvD,UAAAyhB,KAqGA,SAAAza,EAAAlG,GACA,IAAA2oB,EAhFA,SAAA9F,EAAA3c,EAAAlG,GACA,IAAAsG,EAAAJ,EAAAjG,OAAA,EACA,GAAAqG,EAAAtG,EAAA,SACA,IAAAkxD,EAAA6C,EAAA7tD,EAAAI,IAEA,GAAA4qD,GAAA,EAEA,OADAA,EAAA,IAAAruC,EAAA+wC,SAAA1C,EAAA,GACAA,EAGA,KAAA5qD,EAAAtG,IAAA,IAAAkxD,EAAA,SAGA,IAFAA,EAAA6C,EAAA7tD,EAAAI,MAEA,EAEA,OADA4qD,EAAA,IAAAruC,EAAA+wC,SAAA1C,EAAA,GACAA,EAGA,KAAA5qD,EAAAtG,IAAA,IAAAkxD,EAAA,SAGA,IAFAA,EAAA6C,EAAA7tD,EAAAI,MAEA,EAKA,OAJA4qD,EAAA,IACA,IAAAA,IAAA,EAA2BruC,EAAA+wC,SAAA1C,EAAA,GAG3BA,EAGA,SAmDAgD,CAAA51D,KAAA4H,EAAAlG,GACA,IAAA1B,KAAAs1D,SAAA,OAAA1tD,EAAAhF,SAAA,OAAAlB,GACA1B,KAAAu1D,UAAAlrC,EACA,IAAA1gB,EAAA/B,EAAAjG,QAAA0oB,EAAArqB,KAAAs1D,UAEA,OADA1tD,EAAA5B,KAAAhG,KAAAw1D,SAAA,EAAA7rD,GACA/B,EAAAhF,SAAA,OAAAlB,EAAAiI,IAzGAwmD,EAAAvvD,UAAAo0D,SAAA,SAAAptD,GACA,GAAA5H,KAAAs1D,UAAA1tD,EAAAjG,OAEA,OADAiG,EAAA5B,KAAAhG,KAAAw1D,SAAAx1D,KAAAu1D,UAAAv1D,KAAAs1D,SAAA,EAAAt1D,KAAAs1D,UACAt1D,KAAAw1D,SAAA5yD,SAAA5C,KAAAsF,SAAA,EAAAtF,KAAAu1D,WAGA3tD,EAAA5B,KAAAhG,KAAAw1D,SAAAx1D,KAAAu1D,UAAAv1D,KAAAs1D,SAAA,EAAA1tD,EAAAjG,QACA3B,KAAAs1D,UAAA1tD,EAAAjG,sCCjGA/B,EAAAC,QAAAwuC,EAEA,IAAApb,EAAanzB,EAAQ,IAIrBozB,EAAWpzB,EAAQ,IAOnB,SAAA+1D,EAAA/nB,EAAA1nC,GACA,IAAA0vD,EAAA91D,KAAA+1D,gBACAD,EAAAE,cAAA,EACA,IAAA9hC,EAAA4hC,EAAAplB,QAEA,IAAAxc,EACA,OAAAl0B,KAAAgnB,KAAA,YAAAtiB,MAAA,yCAGAoxD,EAAAG,WAAA,KACAH,EAAAplB,QAAA,KACA,MAAAtqC,GACApG,KAAA8I,KAAA1C,GACA8tB,EAAA4Z,GACA,IAAAooB,EAAAl2D,KAAA8zB,eACAoiC,EAAArF,SAAA,GAEAqF,EAAApF,cAAAoF,EAAAv0D,OAAAu0D,EAAAriC,gBACA7zB,KAAAoxD,MAAA8E,EAAAriC,eAIA,SAAAwa,EAAAjgB,GACA,KAAApuB,gBAAAquC,GAAA,WAAAA,EAAAjgB,GACA6E,EAAAnxB,KAAA9B,KAAAouB,GACApuB,KAAA+1D,gBAAA,CACAF,iBAAAn4B,KAAA19B,MACAm2D,eAAA,EACAH,cAAA,EACAtlB,QAAA,KACAulB,WAAA,KACAG,cAAA,MAGAp2D,KAAA8zB,eAAAg9B,cAAA,EAIA9wD,KAAA8zB,eAAAyc,MAAA,EAEAniB,IACA,oBAAAA,EAAAioC,YAAAr2D,KAAAs2D,WAAAloC,EAAAioC,WACA,oBAAAjoC,EAAAmoC,QAAAv2D,KAAAw2D,OAAApoC,EAAAmoC,QAIAv2D,KAAA0mB,GAAA,YAAA0rB,GAGA,SAAAA,IACA,IAAA9/B,EAAAtS,KAEA,oBAAAA,KAAAw2D,OACAx2D,KAAAw2D,OAAA,SAAA1oB,EAAA1nC,GACAqwD,EAAAnkD,EAAAw7B,EAAA1nC,KAGAqwD,EAAAz2D,KAAA,WA8DA,SAAAy2D,EAAA96B,EAAAmS,EAAA1nC,GACA,GAAA0nC,EAAA,OAAAnS,EAAA3U,KAAA,QAAA8mB,GAKA,GAJA,MAAA1nC,GACAu1B,EAAA7yB,KAAA1C,GAGAu1B,EAAAjI,eAAA/xB,OAAA,UAAA+C,MAAA,8CACA,GAAAi3B,EAAAo6B,gBAAAC,aAAA,UAAAtxD,MAAA,kDACA,OAAAi3B,EAAA7yB,KAAA,MApIAoqB,EAAAC,SAAgBrzB,EAAQ,IAGxBozB,EAAAC,SAAAkb,EAAApb,GA+DAob,EAAAztC,UAAAkI,KAAA,SAAA2+B,EAAAniC,GAEA,OADAtF,KAAA+1D,gBAAAI,eAAA,EACAljC,EAAAryB,UAAAkI,KAAAhH,KAAA9B,KAAAynC,EAAAniC,IAaA+oC,EAAAztC,UAAA01D,WAAA,SAAA7uB,EAAAniC,EAAA4uB,GACA,UAAAxvB,MAAA,oCAGA2pC,EAAAztC,UAAA2wC,OAAA,SAAA9J,EAAAniC,EAAA4uB,GACA,IAAA4hC,EAAA91D,KAAA+1D,gBAKA,GAJAD,EAAAplB,QAAAxc,EACA4hC,EAAAG,WAAAxuB,EACAquB,EAAAM,cAAA9wD,GAEAwwD,EAAAE,aAAA,CACA,IAAAE,EAAAl2D,KAAA8zB,gBACAgiC,EAAAK,eAAAD,EAAApF,cAAAoF,EAAAv0D,OAAAu0D,EAAAriC,gBAAA7zB,KAAAoxD,MAAA8E,EAAAriC,iBAOAwa,EAAAztC,UAAAwwD,MAAA,SAAAtqD,GACA,IAAAgvD,EAAA91D,KAAA+1D,gBAEA,OAAAD,EAAAG,YAAAH,EAAAplB,UAAAolB,EAAAE,cACAF,EAAAE,cAAA,EAEAh2D,KAAAs2D,WAAAR,EAAAG,WAAAH,EAAAM,cAAAN,EAAAD,iBAIAC,EAAAK,eAAA,GAIA9nB,EAAAztC,UAAAozB,SAAA,SAAAC,EAAAC,GACA,IAAAwiC,EAAA12D,KAEAizB,EAAAryB,UAAAozB,SAAAlyB,KAAA9B,KAAAi0B,EAAA,SAAA0iC,GACAziC,EAAAyiC,GAEAD,EAAA1vC,KAAA,2CC/LA,SAAAnjB,GAEA,IAAA+yD,EAAmB92D,EAAQ,IAW3B,SAAA6L,EAAAC,EAAAzL,GACA,GAAAyL,IAAAzL,EACA,SAMA,IAHA,IAAAgC,EAAAyJ,EAAAjK,OACAS,EAAAjC,EAAAwB,OAEAD,EAAA,EAAAoE,EAAAgE,KAAAC,IAAA5H,EAAAC,GAAuCV,EAAAoE,IAASpE,EAChD,GAAAkK,EAAAlK,KAAAvB,EAAAuB,GAAA,CACAS,EAAAyJ,EAAAlK,GACAU,EAAAjC,EAAAuB,GACA,MAIA,OAAAS,EAAAC,GACA,EAGAA,EAAAD,EACA,EAGA,EAGA,SAAA0D,EAAA1F,GACA,OAAA0D,EAAAK,QAAA,oBAAAL,EAAAK,OAAA2B,SACAhC,EAAAK,OAAA2B,SAAA1F,KAGA,MAAAA,MAAAuL,WA6BA,IAAAwnB,EAAWpzB,EAAQ,IAEnB+2D,EAAAz2D,OAAAQ,UAAAH,eACAq2D,EAAAv2D,MAAAK,UAAA8E,MAEAqxD,EAC0B,QAA1B,aAA0B5vC,KAG1B,SAAA6vC,EAAApxD,GACA,OAAAxF,OAAAQ,UAAAgC,SAAAd,KAAA8D,GAGA,SAAAY,EAAAywD,GACA,OAAApxD,EAAAoxD,KAIA,oBAAApzD,EAAAiB,cAIA,oBAAAA,YAAA0B,OACA1B,YAAA0B,OAAAywD,KAGAA,IAIAA,aAAAC,aAIAD,EAAAhxD,QAAAgxD,EAAAhxD,kBAAAnB,gBAUA,IAAAqyD,EAAAv3D,EAAAC,QAAA6a,EAKA08C,EAAA,8BAEA,SAAAp2B,EAAAq2B,GACA,GAAAnkC,EAAAsG,WAAA69B,GAAA,CAIA,GAAAN,EACA,OAAAM,EAAAlwC,KAGA,IACA1a,EADA4qD,EAAAz0D,WACA6J,MAAA2qD,GACA,OAAA3qD,KAAA,IA8CA,SAAA6qD,EAAAtnC,EAAAlpB,GACA,wBAAAkpB,EACAA,EAAAruB,OAAAmF,EAAAkpB,IAAAtqB,MAAA,EAAAoB,GAEAkpB,EAIA,SAAAzjB,EAAAgrD,GACA,GAAAR,IAAA7jC,EAAAsG,WAAA+9B,GACA,OAAArkC,EAAA3mB,QAAAgrD,GAGA,IAAAC,EAAAx2B,EAAAu2B,GAEA,mBADAC,EAAA,KAAAA,EAAA,IACA,IAgBA,SAAAC,EAAAjyD,EAAAkyD,EAAArlD,EAAAslD,EAAAC,GACA,UAAAT,EAAAU,eAAA,CACAxlD,UACA7M,SACAkyD,WACAC,WACAC,uBAYA,SAAAl9C,EAAA3Z,EAAAsR,GACAtR,GAAA02D,EAAA12D,GAAA,EAAAsR,EAAA,KAAA8kD,EAAAz8C,IAiCA,SAAAo9C,EAAAtyD,EAAAkyD,EAAAjpC,EAAAspC,GAEA,GAAAvyD,IAAAkyD,EACA,SACG,GAAA7xD,EAAAL,IAAAK,EAAA6xD,GACH,WAAA/rD,EAAAnG,EAAAkyD,GAEG,GAAAxkC,EAAAoG,OAAA9zB,IAAA0tB,EAAAoG,OAAAo+B,GACH,OAAAlyD,EAAA0/B,YAAAwyB,EAAAxyB,UAGG,GAAAhS,EAAAkG,SAAA5zB,IAAA0tB,EAAAkG,SAAAs+B,GACH,OAAAlyD,EAAA5D,SAAA81D,EAAA91D,QAAA4D,EAAA3B,SAAA6zD,EAAA7zD,QAAA2B,EAAAwyD,YAAAN,EAAAM,WAAAxyD,EAAAyyD,YAAAP,EAAAO,WAAAzyD,EAAA0yD,aAAAR,EAAAQ,WAEG,UAAA1yD,GAAA,kBAAAA,GAAA,OAAAkyD,GAAA,kBAAAA,EAOA,IAAAlxD,EAAAhB,IAAAgB,EAAAkxD,IAAAV,EAAAxxD,KAAAwxD,EAAAU,MAAAlyD,aAAA2yD,cAAA3yD,aAAA4yD,cACH,WAAAzsD,EAAA,IAAApH,WAAAiB,EAAAS,QAAA,IAAA1B,WAAAmzD,EAAAzxD,SAMG,GAAAJ,EAAAL,KAAAK,EAAA6xD,GACH,SAMA,IAAAW,GAJAN,KAAA,CACAvyD,OAAA,GACAkyD,SAAA,KAEAlyD,OAAA4B,QAAA5B,GAEA,WAAA6yD,GACAA,IAAAN,EAAAL,SAAAtwD,QAAAswD,KAKAK,EAAAvyD,OAAAsD,KAAAtD,GACAuyD,EAAAL,SAAA5uD,KAAA4uD,GASA,SAAA9rD,EAAAzL,EAAAsuB,EAAA6pC,GACA,UAAA1sD,QAAA1G,IAAA0G,GAAA,OAAAzL,QAAA+E,IAAA/E,EAAA,SAEA,GAAA+yB,EAAAuG,YAAA7tB,IAAAsnB,EAAAuG,YAAAt5B,GAAA,OAAAyL,IAAAzL,EACA,GAAAsuB,GAAAruB,OAAAgkB,eAAAxY,KAAAxL,OAAAgkB,eAAAjkB,GAAA,SACA,IAAAo4D,EAAAC,EAAA5sD,GACA6sD,EAAAD,EAAAr4D,GACA,GAAAo4D,IAAAE,IAAAF,GAAAE,EAAA,SAEA,GAAAF,EAGA,OAFA3sD,EAAAkrD,EAAAh1D,KAAA8J,GACAzL,EAAA22D,EAAAh1D,KAAA3B,GACA23D,EAAAlsD,EAAAzL,EAAAsuB,GAGA,IAEA5sB,EAAAH,EAFAg3D,EAAA1lC,EAAApnB,GACA+sD,EAAA3lC,EAAA7yB,GAIA,GAAAu4D,EAAA/2D,SAAAg3D,EAAAh3D,OAAA,SAKA,IAHA+2D,EAAAE,OACAD,EAAAC,OAEAl3D,EAAAg3D,EAAA/2D,OAAA,EAAyBD,GAAA,EAAQA,IACjC,GAAAg3D,EAAAh3D,KAAAi3D,EAAAj3D,GAAA,SAKA,IAAAA,EAAAg3D,EAAA/2D,OAAA,EAAyBD,GAAA,EAAQA,IAEjC,GADAG,EAAA62D,EAAAh3D,IACAo2D,EAAAlsD,EAAA/J,GAAA1B,EAAA0B,GAAA4sB,EAAA6pC,GAAA,SAGA,SA5CAO,CAAArzD,EAAAkyD,EAAAjpC,EAAAspC,IA9BA,OAAAtpC,EAAAjpB,IAAAkyD,EAAAlyD,GAAAkyD,EAkCA,SAAAc,EAAA/lB,GACA,4BAAAryC,OAAAQ,UAAAgC,SAAAd,KAAA2wC,GA0EA,SAAAqmB,EAAAtzD,EAAAkyD,GACA,IAAAlyD,IAAAkyD,EACA,SAGA,sBAAAt3D,OAAAQ,UAAAgC,SAAAd,KAAA41D,GACA,OAAAA,EAAA9hD,KAAApQ,GAGA,IACA,GAAAA,aAAAkyD,EACA,SAEG,MAAAzsD,IAGH,OAAAvG,MAAAq0D,cAAArB,KAIyB,IAAzBA,EAAA51D,KAAA,GAAyB0D,GAezB,SAAAwzD,EAAAC,EAAAh9C,EAAAy7C,EAAArlD,GACA,IAAA7M,EAEA,uBAAAyW,EACA,UAAApX,UAAA,uCAGA,kBAAA6yD,IACArlD,EAAAqlD,EACAA,EAAA,MAGAlyD,EAxBA,SAAAyW,GACA,IAAA4f,EAEA,IACA5f,IACG,MAAAhR,GACH4wB,EAAA5wB,EAGA,OAAA4wB,EAeAq9B,CAAAj9C,GACA5J,GAAAqlD,KAAAvwC,KAAA,KAAAuwC,EAAAvwC,KAAA,WAAA9U,EAAA,IAAAA,EAAA,KAEA4mD,IAAAzzD,GACAiyD,EAAAjyD,EAAAkyD,EAAA,6BAAArlD,GAGA,IAAA8mD,EAAA,kBAAA9mD,EAEA+mD,GAAAH,GAAAzzD,IAAAkyD,EAMA,KAPAuB,GAAA/lC,EAAAqG,QAAA/zB,IAGA2zD,GAAAL,EAAAtzD,EAAAkyD,IAAA0B,IACA3B,EAAAjyD,EAAAkyD,EAAA,yBAAArlD,GAGA4mD,GAAAzzD,GAAAkyD,IAAAoB,EAAAtzD,EAAAkyD,KAAAuB,GAAAzzD,EACA,MAAAA,EAzTA2xD,EAAAU,eAAA,SAAAzpC,GA6DA,IAAA7J,EA5DAvkB,KAAAmnB,KAAA,iBACAnnB,KAAAwF,OAAA4oB,EAAA5oB,OACAxF,KAAA03D,SAAAtpC,EAAAspC,SACA13D,KAAA23D,SAAAvpC,EAAAupC,SAEAvpC,EAAA/b,SACArS,KAAAqS,QAAA+b,EAAA/b,QACArS,KAAAq5D,kBAAA,IAEAr5D,KAAAqS,QAoDAilD,EAAA/qD,GADAgY,EAnDAvkB,MAoDAwF,QAAA,SAAA+e,EAAAozC,SAAA,IAAAL,EAAA/qD,EAAAgY,EAAAmzC,UAAA,KAnDA13D,KAAAq5D,kBAAA,GAGA,IAAAzB,EAAAxpC,EAAAwpC,oBAAAH,EAEA,GAAA/yD,MAAA40D,kBACA50D,MAAA40D,kBAAAt5D,KAAA43D,OACG,CAEH,IAAA3jC,EAAA,IAAAvvB,MAEA,GAAAuvB,EAAAslC,MAAA,CACA,IAAAnsD,EAAA6mB,EAAAslC,MAEAC,EAAAx4B,EAAA42B,GACA6B,EAAArsD,EAAAhG,QAAA,KAAAoyD,GAEA,GAAAC,GAAA,GAGA,IAAAC,EAAAtsD,EAAAhG,QAAA,KAAAqyD,EAAA,GACArsD,IAAAyP,UAAA68C,EAAA,GAGA15D,KAAAu5D,MAAAnsD,KAMA8lB,EAAAC,SAAAgkC,EAAAU,eAAAnzD,OA4CAyyD,EAAAM,OAWAN,EAAAz8C,KAIAy8C,EAAAwC,MAAA,SAAAn0D,EAAAkyD,EAAArlD,GACA7M,GAAAkyD,GAAAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,KAAA8kD,EAAAwC,QAKAxC,EAAAyC,SAAA,SAAAp0D,EAAAkyD,EAAArlD,GACA7M,GAAAkyD,GACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,KAAA8kD,EAAAyC,WAMAzC,EAAA0C,UAAA,SAAAr0D,EAAAkyD,EAAArlD,GACAylD,EAAAtyD,EAAAkyD,GAAA,IACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,YAAA8kD,EAAA0C,YAIA1C,EAAA2C,gBAAA,SAAAt0D,EAAAkyD,EAAArlD,GACAylD,EAAAtyD,EAAAkyD,GAAA,IACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,kBAAA8kD,EAAA2C,kBAkGA3C,EAAA4C,aAAA,SAAAv0D,EAAAkyD,EAAArlD,GACAylD,EAAAtyD,EAAAkyD,GAAA,IACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,eAAA8kD,EAAA4C,eAIA5C,EAAA6C,mBAEA,SAAAA,EAAAx0D,EAAAkyD,EAAArlD,GACAylD,EAAAtyD,EAAAkyD,GAAA,IACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,qBAAA2nD,IAMA7C,EAAA8C,YAAA,SAAAz0D,EAAAkyD,EAAArlD,GACA7M,IAAAkyD,GACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,MAAA8kD,EAAA8C,cAMA9C,EAAA+C,eAAA,SAAA10D,EAAAkyD,EAAArlD,GACA7M,IAAAkyD,GACAD,EAAAjyD,EAAAkyD,EAAArlD,EAAA,MAAA8kD,EAAA+C,iBAyEA/C,EAAAgD,OAAA,SAAAl+C,EAEA4f,EAEAxpB,GACA2mD,GAAA,EAAA/8C,EAAA4f,EAAAxpB,IAIA8kD,EAAAiD,aAAA,SAAAn+C,EAEA4f,EAEAxpB,GACA2mD,GAAA,EAAA/8C,EAAA4f,EAAAxpB,IAGA8kD,EAAAkD,QAAA,SAAApmC,GACA,GAAAA,EAAA,MAAAA,GAQAkjC,EAAA1oC,OAAAmoC,EAJA,SAAAnoC,EAAA1tB,EAAAsR,GACAtR,GAAA02D,EAAA12D,GAAA,EAAAsR,EAAA,KAAAoc,IAGA0oC,EAAA,CACAwC,MAAAxC,EAAA8C,YACAJ,UAAA1C,EAAA2C,gBACAF,SAAAzC,EAAA+C,eACAH,aAAA5C,EAAA6C,qBAEA7C,EAAA1oC,cAAA0oC,EAAA1oC,OAEA,IAAAuE,EAAA5yB,OAAA0R,MAAA,SAAAlM,GACA,IAAAkM,EAAA,GAEA,QAAAjQ,KAAA+D,EACAixD,EAAA/0D,KAAA8D,EAAA/D,IAAAiQ,EAAAhJ,KAAAjH,GAGA,OAAAiQ,wCCnfA,SAAAkT,GAoBA,IAAAs1C,EAAAl6D,OAAAk6D,2BAAA,SAAA10D,GAIA,IAHA,IAAAkM,EAAA1R,OAAA0R,KAAAlM,GACA20D,EAAA,GAEA74D,EAAA,EAAiBA,EAAAoQ,EAAAnQ,OAAiBD,IAClC64D,EAAAzoD,EAAApQ,IAAAtB,OAAA8R,yBAAAtM,EAAAkM,EAAApQ,IAGA,OAAA64D,GAGAC,EAAA,WAEA36D,EAAA4iB,OAAA,SAAAg4C,GACA,IAAAxhC,EAAAwhC,GAAA,CAGA,IAFA,IAAAC,EAAA,GAEAh5D,EAAA,EAAmBA,EAAAP,UAAAQ,OAAsBD,IACzCg5D,EAAA5xD,KAAAyD,EAAApL,UAAAO,KAGA,OAAAg5D,EAAAhuD,KAAA,KAGAhL,EAAA,EA0BA,IA1BA,IACAkW,EAAAzW,UACA2E,EAAA8R,EAAAjW,OACAiH,EAAAlB,OAAA+yD,GAAAtpD,QAAAqpD,EAAA,SAAAr4D,GACA,UAAAA,EAAA,UACA,GAAAT,GAAAoE,EAAA,OAAA3D,EAEA,OAAAA,GACA,SACA,OAAAuF,OAAAkQ,EAAAlW,MAEA,SACA,OAAAyG,OAAAyP,EAAAlW,MAEA,SACA,IACA,OAAA+sD,KAAAC,UAAA92C,EAAAlW,MACS,MAAA6wC,GACT,mBAGA,QACA,OAAApwC,KAIAA,EAAAyV,EAAAlW,GAAuBA,EAAAoE,EAAS3D,EAAAyV,IAAAlW,GAChCo3B,EAAA32B,KAAAk3B,EAAAl3B,GACAyG,GAAA,IAAAzG,EAEAyG,GAAA,IAAA2D,EAAApK,GAIA,OAAAyG,GAMA/I,EAAAqvC,UAAA,SAAA33B,EAAAojD,GACA,wBAAA31C,IAAA,IAAAA,EAAA41C,cACA,OAAArjD,EAIA,wBAAAyN,EACA,kBACA,OAAAnlB,EAAAqvC,UAAA33B,EAAAojD,GAAAz5D,MAAAlB,KAAAmB,YAIA,IAAA0rC,GAAA,EAkBA,OAhBA,WACA,IAAAA,EAAA,CACA,GAAA7nB,EAAA61C,iBACA,UAAAn2D,MAAAi2D,GACO31C,EAAA81C,iBACP9tB,QAAA+tB,MAAAJ,GAEA3tB,QAAAnR,MAAA8+B,GAGA9tB,GAAA,EAGA,OAAAt1B,EAAArW,MAAAlB,KAAAmB,aAMA,IACA65D,EADAC,EAAA,GAiCA,SAAA1uD,EAAA3G,EAAA0oD,GAEA,IAAA4M,EAAA,CACAC,KAAA,GACAC,QAAAC,GAoBA,OAjBAl6D,UAAAQ,QAAA,IAAAu5D,EAAAI,MAAAn6D,UAAA,IACAA,UAAAQ,QAAA,IAAAu5D,EAAAK,OAAAp6D,UAAA,IAEA03B,EAAAy1B,GAEA4M,EAAAM,WAAAlN,EACGA,GAEHzuD,EAAA47D,QAAAP,EAAA5M,GAIAn1B,EAAA+hC,EAAAM,cAAAN,EAAAM,YAAA,GACAriC,EAAA+hC,EAAAI,SAAAJ,EAAAI,MAAA,GACAniC,EAAA+hC,EAAAK,UAAAL,EAAAK,QAAA,GACApiC,EAAA+hC,EAAAQ,iBAAAR,EAAAQ,eAAA,GACAR,EAAAK,SAAAL,EAAAE,QAAAO,GACAC,EAAAV,EAAAt1D,EAAAs1D,EAAAI,OAiCA,SAAAK,EAAA/yD,EAAAizD,GACA,IAAAxpC,EAAA9lB,EAAAuvD,OAAAD,GAEA,OAAAxpC,EACA,QAAA9lB,EAAAgvD,OAAAlpC,GAAA,OAAAzpB,EAAA,QAAA2D,EAAAgvD,OAAAlpC,GAAA,OAEAzpB,EAIA,SAAAyyD,EAAAzyD,EAAAizD,GACA,OAAAjzD,EAWA,SAAAgzD,EAAAV,EAAAn6D,EAAAg7D,GAGA,GAAAb,EAAAQ,eAAA36D,GAAAy4B,EAAAz4B,EAAAwL,UACAxL,EAAAwL,UAAA1M,EAAA0M,WACAxL,EAAAJ,aAAAI,EAAAJ,YAAAC,YAAAG,GAAA,CACA,IAAAoM,EAAApM,EAAAwL,QAAAwvD,EAAAb,GAMA,OAJAjiC,EAAA9rB,KACAA,EAAAyuD,EAAAV,EAAA/tD,EAAA4uD,IAGA5uD,EAIA,IAAA2pB,EAiGA,SAAAokC,EAAAn6D,GACA,GAAAo4B,EAAAp4B,GAAA,OAAAm6D,EAAAE,QAAA,yBAEA,GAAAniC,EAAAl4B,GAAA,CACA,IAAAi7D,EAAA,IAAAvN,KAAAC,UAAA3tD,GAAAoQ,QAAA,aAAAA,QAAA,YAAAA,QAAA,gBACA,OAAA+pD,EAAAE,QAAAY,EAAA,UAGA,GAAAhjC,EAAAj4B,GAAA,OAAAm6D,EAAAE,QAAA,GAAAr6D,EAAA,UACA,GAAA83B,EAAA93B,GAAA,OAAAm6D,EAAAE,QAAA,GAAAr6D,EAAA,WAEA,GAAA+3B,EAAA/3B,GAAA,OAAAm6D,EAAAE,QAAA,eA5GAa,CAAAf,EAAAn6D,GAEA,GAAA+1B,EACA,OAAAA,EAIA,IAAAhlB,EAAA1R,OAAA0R,KAAA/Q,GACAm7D,EAhCA,SAAAn3D,GACA,IAAAmR,EAAA,GAIA,OAHAnR,EAAAoN,QAAA,SAAAjM,EAAAuzD,GACAvjD,EAAAhQ,IAAA,IAEAgQ,EA2BAimD,CAAArqD,GAQA,GANAopD,EAAAM,aACA1pD,EAAA1R,OAAA+qC,oBAAApqC,IAKAw4B,EAAAx4B,KAAA+Q,EAAA1K,QAAA,eAAA0K,EAAA1K,QAAA,mBACA,OAAAg1D,EAAAr7D,GAIA,OAAA+Q,EAAAnQ,OAAA,CACA,GAAA63B,EAAAz4B,GAAA,CACA,IAAAomB,EAAApmB,EAAAomB,KAAA,KAAApmB,EAAAomB,KAAA,GACA,OAAA+zC,EAAAE,QAAA,YAAAj0C,EAAA,eAGA,GAAAiS,EAAAr4B,GACA,OAAAm6D,EAAAE,QAAAzlD,OAAA/U,UAAAgC,SAAAd,KAAAf,GAAA,UAGA,GAAAu4B,EAAAv4B,GACA,OAAAm6D,EAAAE,QAAAtoD,KAAAlS,UAAAgC,SAAAd,KAAAf,GAAA,QAGA,GAAAw4B,EAAAx4B,GACA,OAAAq7D,EAAAr7D,GAIA,IA2CAs7D,EA3CA1sC,EAAA,GACA5qB,GAAA,EACAu3D,EAAA,KAAkB,MAElBt4D,EAAAjD,KACAgE,GAAA,EACAu3D,EAAA,WAIA9iC,EAAAz4B,MAEA4uB,EAAA,cADA5uB,EAAAomB,KAAA,KAAApmB,EAAAomB,KAAA,IACA,KAkBA,OAdAiS,EAAAr4B,KACA4uB,EAAA,IAAAha,OAAA/U,UAAAgC,SAAAd,KAAAf,IAIAu4B,EAAAv4B,KACA4uB,EAAA,IAAA7c,KAAAlS,UAAA27D,YAAAz6D,KAAAf,IAIAw4B,EAAAx4B,KACA4uB,EAAA,IAAAysC,EAAAr7D,IAGA,IAAA+Q,EAAAnQ,QAAAoD,GAAA,GAAAhE,EAAAY,OAIAo6D,EAAA,EACA3iC,EAAAr4B,GACAm6D,EAAAE,QAAAzlD,OAAA/U,UAAAgC,SAAAd,KAAAf,GAAA,UAEAm6D,EAAAE,QAAA,uBAIAF,EAAAC,KAAAryD,KAAA/H,GAIAs7D,EADAt3D,EA8BA,SAAAm2D,EAAAn6D,EAAAg7D,EAAAG,EAAApqD,GAGA,IAFA,IAAAuqD,EAAA,GAEA36D,EAAA,EAAA8lC,EAAAzmC,EAAAY,OAAmCD,EAAA8lC,IAAO9lC,EAC1CjB,EAAAM,EAAA2G,OAAAhG,IACA26D,EAAAvzD,KAAA0zD,EAAAtB,EAAAn6D,EAAAg7D,EAAAG,EAAAx0D,OAAAhG,IAAA,IAEA26D,EAAAvzD,KAAA,IASA,OALAgJ,EAAAK,QAAA,SAAAtQ,GACAA,EAAA4K,MAAA,UACA4vD,EAAAvzD,KAAA0zD,EAAAtB,EAAAn6D,EAAAg7D,EAAAG,EAAAr6D,GAAA,MAGAw6D,EA7CAI,CAAAvB,EAAAn6D,EAAAg7D,EAAAG,EAAApqD,GAEAA,EAAAkM,IAAA,SAAAnc,GACA,OAAA26D,EAAAtB,EAAAn6D,EAAAg7D,EAAAG,EAAAr6D,EAAAkD,KAIAm2D,EAAAC,KAAAvnD,MA0GA,SAAAyoD,EAAA1sC,EAAA2sC,GAQA,GANAD,EAAAztC,OAAA,SAAA8tC,EAAAC,GAGA,OAFAC,EACAD,EAAAv1D,QAAA,UAAAw1D,EACAF,EAAAC,EAAAxrD,QAAA,sBAAAxP,OAAA,GACG,GAEH,GACA,OAAA26D,EAAA,SAAA3sC,EAAA,GAAAA,EAAA,WAAA0sC,EAAA3vD,KAAA,aAAA4vD,EAAA,GAGA,OAAAA,EAAA,GAAA3sC,EAAA,IAAA0sC,EAAA3vD,KAAA,UAAA4vD,EAAA,GArHAO,CAAAR,EAAA1sC,EAAA2sC,IAvBAA,EAAA,GAAA3sC,EAAA2sC,EAAA,GAwCA,SAAAF,EAAAr7D,GACA,UAAA2D,MAAA9D,UAAAgC,SAAAd,KAAAf,GAAA,IAsBA,SAAAy7D,EAAAtB,EAAAn6D,EAAAg7D,EAAAG,EAAAr6D,EAAAkD,GACA,IAAAoiB,EAAAve,EAAAk0D,EA6CA,IA5CAA,EAAA18D,OAAA8R,yBAAAnR,EAAAc,IAAA,CACAd,QAAAc,KAGAge,IAEAjX,EADAk0D,EAAAlsD,IACAsqD,EAAAE,QAAA,6BAEAF,EAAAE,QAAA,sBAGA0B,EAAAlsD,MACAhI,EAAAsyD,EAAAE,QAAA,uBAIA36D,EAAAy7D,EAAAr6D,KACAslB,EAAA,IAAAtlB,EAAA,KAGA+G,IACAsyD,EAAAC,KAAA/zD,QAAA01D,EAAA/7D,OAAA,GAEA6H,EADAkwB,EAAAijC,GACAH,EAAAV,EAAA4B,EAAA/7D,MAAA,MAEA66D,EAAAV,EAAA4B,EAAA/7D,MAAAg7D,EAAA,IAGA30D,QAAA,WAEAwB,EADA7D,EACA6D,EAAAoL,MAAA,MAAAgK,IAAA,SAAA++C,GACA,WAAAA,IACWrwD,KAAA,MAAAlE,OAAA,GAEX,KAAAI,EAAAoL,MAAA,MAAAgK,IAAA,SAAA++C,GACA,YAAAA,IACWrwD,KAAA,OAIX9D,EAAAsyD,EAAAE,QAAA,yBAIAjiC,EAAAhS,GAAA,CACA,GAAApiB,GAAAlD,EAAA4K,MAAA,SACA,OAAA7D,GAGAue,EAAAsnC,KAAAC,UAAA,GAAA7sD,IAEA4K,MAAA,iCACA0a,IAAA3e,OAAA,EAAA2e,EAAAxlB,OAAA,GACAwlB,EAAA+zC,EAAAE,QAAAj0C,EAAA,UAEAA,IAAAhW,QAAA,YAAAA,QAAA,YAAAA,QAAA,gBACAgW,EAAA+zC,EAAAE,QAAAj0C,EAAA,WAIA,OAAAA,EAAA,KAAAve,EAoBA,SAAA5E,EAAAiwC,GACA,OAAA1zC,MAAAyD,QAAAiwC,GAKA,SAAApb,EAAAr0B,GACA,yBAAAA,EAKA,SAAAs0B,EAAAt0B,GACA,cAAAA,EAWA,SAAAw0B,EAAAx0B,GACA,wBAAAA,EAKA,SAAAy0B,EAAAz0B,GACA,wBAAAA,EAWA,SAAA20B,EAAA30B,GACA,gBAAAA,EAKA,SAAA40B,EAAA3P,GACA,OAAA4P,EAAA5P,IAAA,oBAAAmP,EAAAnP,GAKA,SAAA4P,EAAA70B,GACA,wBAAAA,GAAA,OAAAA,EAKA,SAAA80B,EAAAp5B,GACA,OAAAm5B,EAAAn5B,IAAA,kBAAA04B,EAAA14B,GAKA,SAAAq5B,EAAAtuB,GACA,OAAAouB,EAAApuB,KAAA,mBAAA2tB,EAAA3tB,iBAAAvG,OAKA,SAAA80B,EAAAh1B,GACA,0BAAAA,EAaA,SAAAo0B,EAAA9W,GACA,OAAA1hB,OAAAQ,UAAAgC,SAAAd,KAAAggB,GAGA,SAAAk7C,EAAAl2D,GACA,OAAAA,EAAA,OAAAA,EAAAlE,SAAA,IAAAkE,EAAAlE,SAAA,IAhbA/C,EAAAqwD,SAAA,SAAAt/C,GAIA,GAHAuoB,EAAA6hC,OAAgD56D,OAAA,CAAA68D,SAAA,aAAAC,WAAA,kBAAWC,YAAA,IAC3DvsD,IAAAw9C,eAEA6M,EAAArqD,GACA,OAAA+E,OAAA,MAAA/E,EAAA,WAAAgF,KAAAolD,GAAA,CACA,IAAAoC,EAAAp4C,EAAAo4C,IAEAnC,EAAArqD,GAAA,WACA,IAAA+pD,EAAA96D,EAAA4iB,OAAAvhB,MAAArB,EAAAsB,WACA6rC,QAAAnR,MAAA,YAAAjrB,EAAAwsD,EAAAzC,SAGAM,EAAArqD,GAAA,aAIA,OAAAqqD,EAAArqD,IAwCA/Q,EAAA0M,UAEAA,EAAAgvD,OAAA,CACA8B,KAAA,OACAC,OAAA,OACAC,UAAA,OACA1lC,QAAA,OACA2lC,MAAA,QACAC,KAAA,QACAC,MAAA,QACAC,KAAA,QACAC,KAAA,QACAC,MAAA,QACAC,QAAA,QACAC,IAAA,QACAC,OAAA,SAGAzxD,EAAAuvD,OAAA,CACAmC,QAAA,OACAC,OAAA,SACAC,QAAA,SACAj5D,UAAA,OACAk5D,KAAA,OACA/4D,OAAA,QACAg5D,KAAA,UAEApvC,OAAA,OAqQApvB,EAAAmE,UAMAnE,EAAAg5B,YAMAh5B,EAAAi5B,SAMAj5B,EAAAk5B,kBAJA,SAAAv0B,GACA,aAAAA,GASA3E,EAAAm5B,WAMAn5B,EAAAo5B,WAMAp5B,EAAAq5B,SAJA,SAAA10B,GACA,wBAAAA,GASA3E,EAAAs5B,cAMAt5B,EAAAu5B,WAMAv5B,EAAAw5B,WAMAx5B,EAAAy5B,SAMAz5B,EAAA05B,UAMA15B,EAAA25B,aAOA35B,EAAA45B,YALA,SAAAj1B,GACA,cAAAA,GAAA,mBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GACA,qBAAAA,GAIA3E,EAAAgG,SAAmB/F,EAAQ,KAU3B,IAAAw+D,EAAA,0EA0CA,SAAA79D,EAAAmF,EAAA24D,GACA,OAAAn+D,OAAAQ,UAAAH,eAAAqB,KAAA8D,EAAA24D,GAlCA1+D,EAAA+3B,IAAA,WACAoV,QAAApV,IAAA,UARA,WACA,IAAA13B,EAAA,IAAA4S,KACA0rD,EAAA,CAAAxB,EAAA98D,EAAAu+D,YAAAzB,EAAA98D,EAAAw+D,cAAA1B,EAAA98D,EAAAy+D,eAAAjyD,KAAA,KACA,OAAAxM,EAAA0+D,UAAAN,EAAAp+D,EAAA2+D,YAAAL,GAAA9xD,KAAA,KAKAgW,GAAA7iB,EAAA4iB,OAAAvhB,MAAArB,EAAAsB,aAiBAtB,EAAAszB,SAAmBrzB,EAAQ,IAE3BD,EAAA47D,QAAA,SAAAqD,EAAAC,GAEA,IAAAA,IAAA1lC,EAAA0lC,GAAA,OAAAD,EAIA,IAHA,IAAAhtD,EAAA1R,OAAA0R,KAAAitD,GACAr9D,EAAAoQ,EAAAnQ,OAEAD,KACAo9D,EAAAhtD,EAAApQ,IAAAq9D,EAAAjtD,EAAApQ,IAGA,OAAAo9D,GAOA,IAAAE,EAAA,qBAAA3zD,cAAA,8BAAAnG,EA8DA,SAAA+5D,EAAAC,EAAAhrC,GAKA,IAAAgrC,EAAA,CACA,IAAAC,EAAA,IAAAz6D,MAAA,2CACAy6D,EAAAD,SACAA,EAAAC,EAGA,OAAAjrC,EAAAgrC,GAvEAr/D,EAAAu/D,UAAA,SAAAtrB,GACA,uBAAAA,EAAA,UAAAjvC,UAAA,oDAEA,GAAAm6D,GAAAlrB,EAAAkrB,GAAA,CACA,IAAAznD,EAEA,uBAFAA,EAAAu8B,EAAAkrB,IAGA,UAAAn6D,UAAA,iEASA,OANAzE,OAAAU,eAAAyW,EAAAynD,EAAA,CACAj+D,MAAAwW,EACA7F,YAAA,EACAC,UAAA,EACApG,cAAA,IAEAgM,EAGA,SAAAA,IAQA,IAPA,IAAA8nD,EAAAC,EACAC,EAAA,IAAAllC,QAAA,SAAAC,EAAAC,GACA8kC,EAAA/kC,EACAglC,EAAA/kC,IAEA3iB,EAAA,GAEAlW,EAAA,EAAmBA,EAAAP,UAAAQ,OAAsBD,IACzCkW,EAAA9O,KAAA3H,UAAAO,IAGAkW,EAAA9O,KAAA,SAAAmrB,EAAAlzB,GACAkzB,EACAqrC,EAAArrC,GAEAorC,EAAAt+D,KAIA,IACA+yC,EAAA5yC,MAAAlB,KAAA4X,GACK,MAAAqc,GACLqrC,EAAArrC,GAGA,OAAAsrC,EAUA,OAPAn/D,OAAAC,eAAAkX,EAAAnX,OAAAgkB,eAAA0vB,IACAkrB,GAAA5+D,OAAAU,eAAAyW,EAAAynD,EAAA,CACAj+D,MAAAwW,EACA7F,YAAA,EACAC,UAAA,EACApG,cAAA,IAEAnL,OAAAo/D,iBAAAjoD,EAAA+iD,EAAAxmB,KAGAj0C,EAAAu/D,UAAAK,OAAAT,EAyDAn/D,EAAA6/D,YAzCA,SAAA5rB,GACA,uBAAAA,EACA,UAAAjvC,UAAA,oDAMA,SAAA86D,IAGA,IAFA,IAAA/nD,EAAA,GAEAlW,EAAA,EAAmBA,EAAAP,UAAAQ,OAAsBD,IACzCkW,EAAA9O,KAAA3H,UAAAO,IAGA,IAAAk+D,EAAAhoD,EAAAhE,MAEA,uBAAAgsD,EACA,UAAA/6D,UAAA,8CAGA,IAAA0f,EAAAvkB,KAEAk0B,EAAA,WACA,OAAA0rC,EAAA1+D,MAAAqjB,EAAApjB,YAKA2yC,EAAA5yC,MAAAlB,KAAA4X,GAAA8iB,KAAA,SAAAvtB,GACA6X,EAAAmB,SAAA+N,EAAA,KAAA/mB,IACK,SAAA0yD,GACL76C,EAAAmB,SAAA84C,EAAAY,EAAA3rC,KAMA,OAFA9zB,OAAAC,eAAAs/D,EAAAv/D,OAAAgkB,eAAA0vB,IACA1zC,OAAAo/D,iBAAAG,EAAArF,EAAAxmB,IACA6rB,oDC7pBA//D,EAAAC,QAxBA,SAAAigE,EAAAl4D,EAAA9B,EAAAiG,GAKA,IAJA,IAAAg0D,EAAA,MAAAD,EAAA,EACAE,EAAAF,IAAA,WACAh5D,EAAA,EAEA,IAAAhB,GAAA,CAKAA,GADAgB,EAAAhB,EAAA,QAAAA,EAGA,GAEAk6D,KADAD,IAAAn4D,EAAAmE,KAAA,GACA,UACKjF,GAELi5D,GAAA,MACAC,GAAA,MAGA,OAAAD,EAAAC,GAAA,oCCFA,IAAAC,EAlBA,WAIA,IAHA,IAAA52D,EACA62D,EAAA,GAEAp5D,EAAA,EAAiBA,EAAA,IAASA,IAAA,CAC1BuC,EAAAvC,EAEA,QAAA6M,EAAA,EAAmBA,EAAA,EAAOA,IAC1BtK,EAAA,EAAAA,EAAA,WAAAA,IAAA,EAAAA,IAAA,EAGA62D,EAAAp5D,GAAAuC,EAGA,OAAA62D,EAIAC,GAcAvgE,EAAAC,QAZA,SAAAugE,EAAAx4D,EAAA9B,EAAAiG,GACA,IAAA+yB,EAAAmhC,EACAt2D,EAAAoC,EAAAjG,EACAs6D,IAAA,EAEA,QAAA1+D,EAAAqK,EAAmBrK,EAAAiI,EAASjI,IAC5B0+D,MAAA,EAAAthC,EAAA,KAAAshC,EAAAx4D,EAAAlG,KAGA,SAAA0+D,iCClDA,IAAArgE,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAopD,EAAgCrqD,EAAQ,IAExCsqD,EAAwBtqD,EAAQ,IAEhC4e,EAAiC5e,EAAQ,GAMzCs+B,EAEA,SAAAn9B,GAGA,SAAAm9B,EAAAiiC,GACA,IAAA/tD,EAAArR,EAAAa,KAAA9B,KAAAqgE,EAAAzhD,MAAAyhD,EAAAxhD,SAAA7e,KAKA,OAHAsS,EAAA+tD,SACA/tD,EAAAguD,kBAAA,KACAhuD,EAAArM,OAAAm4B,EAAAmiC,8BAAAF,GACA/tD,EAwIA,OAhJAvS,EAAAq+B,EAAAn9B,GAWAm9B,EAAAmiC,8BAAA,SAAAF,GACA,IAAAG,EAAAH,EAAAzhC,WAAA,MAAA6hC,aAAA,IAAAJ,EAAAzhD,MAAAyhD,EAAAxhD,QACA,OAAAuf,EAAAsiC,kBAAAF,EAAAp6D,KAAAi6D,EAAAzhD,MAAAyhD,EAAAxhD,SAGAuf,EAAAsiC,kBAAA,SAAAC,EAAA/hD,EAAAC,GAGA,IAFA,IAAA+hD,EAAA,IAAAlhC,kBAAA9gB,EAAAC,GAEAnd,EAAA,EAAAsG,EAAA,EAAAqZ,EAAAs/C,EAAAh/D,OAAyDD,EAAA2f,EAAc3f,GAAA,EAAAsG,IAAA,CACvE,IAAA64D,OAAA,EAKA,OAJAF,EAAAj/D,EAAA,GAKAm/D,EAAA,SAQAA,EAAA,IANAF,EAAAj/D,GAMA,IALAi/D,EAAAj/D,EAAA,GAKA,IAJAi/D,EAAAj/D,EAAA,GAIA,QAGAk/D,EAAA54D,GAAA64D,EAGA,OAAAD,GAGAxiC,EAAAx9B,UAAA2f,OAAA,SAAAne,EAEAke,GACA,GAAAle,EAAA,GAAAA,GAAApC,KAAAmgB,YACA,UAAAzB,EAAAtd,QAAA,uCAAAgB,GAGA,IAAAwc,EAAA5e,KAAAkgB,WACAxW,EAAAtH,EAAAwc,EAcA,OAZA,OAAA0B,EACAA,EAAAtgB,KAAAiG,OAAAP,MAAAgE,IAAAkV,IAEA0B,EAAA3e,OAAAid,IACA0B,EAAA,IAAAof,kBAAA9gB,IAKA0B,EAAA1P,IAAA5Q,KAAAiG,OAAAP,MAAAgE,IAAAkV,KAGA0B,GAGA8d,EAAAx9B,UAAA4+B,UAAA,WACA,OAAAx/B,KAAAiG,QAGAm4B,EAAAx9B,UAAA++B,gBAAA,WACA,UAGAvB,EAAAx9B,UAAAg/B,KAAA,SAAAjf,EAEAC,EAEAhC,EAEAC,GAIA,OADA7e,KAAA4/B,KAAAjf,EAAAC,EAAAhC,EAAAC,GACA7e,MASAo+B,EAAAx9B,UAAAqnB,kBAAA,WACA,UAGAmW,EAAAx9B,UAAAunB,uBAAA,WAEA,OADAnoB,KAAA8gE,QAAA,IACA9gE,MAGAo+B,EAAAx9B,UAAAk/B,yBAAA,WAEA,OADA9/B,KAAA8gE,QAAA,IACA9gE,MAGAo+B,EAAAx9B,UAAAmgE,qBAAA,WACA,UAAA/gE,KAAAsgE,kBAAA,CACA,IAAAA,EAAAtgE,KAAAqgE,OAAAW,cAAA5oD,cAAA,UACAkoD,EAAA1hD,MAAA5e,KAAAqgE,OAAAzhD,MACA0hD,EAAAzhD,OAAA7e,KAAAqgE,OAAAxhD,OACA7e,KAAAsgE,oBAGA,OAAAtgE,KAAAsgE,mBAGAliC,EAAAx9B,UAAAkgE,OAAA,SAAAG,GACA,IAAAX,EAAAtgE,KAAA+gE,uBACAG,EAAAZ,EAAA1hC,WAAA,MACAuiC,EAAAF,EAAA7iC,EAAAgjC,kBAEAxiD,EAAA5e,KAAAqgE,OAAAzhD,MACAC,EAAA7e,KAAAqgE,OAAAxhD,OACAwiD,EAAAv3D,KAAAw3D,KAAAx3D,KAAAy3D,IAAAz3D,KAAA03D,IAAAL,IAAAviD,EAAA9U,KAAAy3D,IAAAz3D,KAAA23D,IAAAN,IAAAtiD,GACA6iD,EAAA53D,KAAAw3D,KAAAx3D,KAAAy3D,IAAAz3D,KAAA23D,IAAAN,IAAAviD,EAAA9U,KAAAy3D,IAAAz3D,KAAA03D,IAAAL,IAAAtiD,GAQA,OAPAyhD,EAAA1hD,MAAAyiD,EACAf,EAAAzhD,OAAA6iD,EAEAR,EAAAS,UAAAN,EAAA,EAAAK,EAAA,GACAR,EAAAJ,OAAAK,GACAD,EAAA1iC,UAAAx+B,KAAAqgE,OAAAzhD,GAAA,EAAAC,GAAA,GACA7e,KAAAiG,OAAAm4B,EAAAmiC,8BAAAD,GACAtgE,MAGAo+B,EAAAx9B,UAAAi/B,OAAA,WACA,WAAAsqB,EAAA/oD,QAAApB,OAGAo+B,EAAAgjC,kBAAAt3D,KAAA83D,GAAA,IACAxjC,EAjJA,CAkJCgsB,EAAAhpD,SAEDvB,EAAAu+B,iEC9LAh+B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAQA,IAAAg6B,EAEA,WAWA,OALA,SAAAC,EAAAC,GACAj7B,KAAAg7B,WACAh7B,KAAAi7B,SARA,GAcAp7B,EAAAk7B,iDCVA36B,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA2d,EAAiC5e,EAAQ,GAEzCoqD,EAEA,WACA,SAAAA,EAAA2X,GAGA,GAFA7hE,KAAA6hE,YAEA,OAAAA,EACA,UAAAnjD,EAAAtd,QAAA,+BAyIA,OAjIA8oD,EAAAtpD,UAAAsf,SAAA,WACA,OAAAlgB,KAAA6hE,UAAA3hD,YAOAgqC,EAAAtpD,UAAAuf,UAAA,WACA,OAAAngB,KAAA6hE,UAAA1hD,aAeA+pC,EAAAtpD,UAAAmoB,YAAA,SAAA3mB,EAEAke,GACA,OAAAtgB,KAAA6hE,UAAA94C,YAAA3mB,EAAAke,IAaA4pC,EAAAtpD,UAAAq0C,eAAA,WAUA,OAJA,OAAAj1C,KAAA4f,aAAA1a,IAAAlF,KAAA4f,SACA5f,KAAA4f,OAAA5f,KAAA6hE,UAAA5sB,kBAGAj1C,KAAA4f,QAOAsqC,EAAAtpD,UAAA++B,gBAAA,WACA,OAAA3/B,KAAA6hE,UAAAC,qBAAAniC,mBAcAuqB,EAAAtpD,UAAAg/B,KAAA,SAAAjf,EAEAC,EAEAhC,EAEAC,GAGA,IAAAkjD,EAAA/hE,KAAA6hE,UAAAC,qBAAAliC,KAAAjf,EAAAC,EAAAhC,EAAAC,GACA,WAAAqrC,EAAAlqD,KAAA6hE,UAAAG,gBAAAD,KAOA7X,EAAAtpD,UAAAqnB,kBAAA,WACA,OAAAjoB,KAAA6hE,UAAAC,qBAAA75C,qBAUAiiC,EAAAtpD,UAAAunB,uBAAA,WACA,IAAA45C,EAAA/hE,KAAA6hE,UAAAC,qBAAA35C,yBACA,WAAA+hC,EAAAlqD,KAAA6hE,UAAAG,gBAAAD,KAUA7X,EAAAtpD,UAAAk/B,yBAAA,WACA,IAAAiiC,EAAA/hE,KAAA6hE,UAAAC,qBAAAhiC,2BACA,WAAAoqB,EAAAlqD,KAAA6hE,UAAAG,gBAAAD,KAKA7X,EAAAtpD,UAAAgC,SAAA,WACA,IACA,OAAA5C,KAAAi1C,iBAAAryC,WACK,MAAAqI,GAGL,WAIAi/C,EA9IA,GAiJArqD,EAAAuB,QAAA8oD,gCCzJA,IAAAnqD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAkqD,EAAiCnrD,EAAQ,IAEzCy0C,EAAkBz0C,EAAQ,IAoB1BwrD,EAEA,SAAArqD,GAGA,SAAAqqD,EAAA1pD,GACA,IAAA0Q,EAAArR,EAAAa,KAAA9B,KAAA4B,IAAA5B,KAGA,OADAsS,EAAAsN,OAAA,KACAtN,EAgPA,OAtPAvS,EAAAurD,EAAArqD,GAiBAqqD,EAAA1qD,UAAAq0C,eAAA,WACA,UAAAj1C,KAAA4f,OACA,OAAA5f,KAAA4f,OAGA,IAAAhe,EAAA5B,KAAA8hE,qBACAljD,EAAAhd,EAAAse,WACArB,EAAAjd,EAAAue,YAEA,GAAAvB,GAAA0sC,EAAA2W,mBAAApjD,GAAAysC,EAAA2W,kBAAA,CACA,IAAAC,EAAAtgE,EAAA49B,YACA2iC,EAAAvjD,GAAA0sC,EAAA8W,iBAEA,KAAAxjD,EAAA0sC,EAAA+W,kBACAF,IAGA,IAAAG,EAAAzjD,GAAAysC,EAAA8W,iBAEA,KAAAvjD,EAAAysC,EAAA+W,kBACAC,IAGA,IAAAC,EAAAjX,EAAAkX,qBAAAN,EAAAC,EAAAG,EAAA1jD,EAAAC,GACA4jD,EAAA,IAAAluB,EAAAnzC,QAAAwd,EAAAC,GACAysC,EAAAoX,2BAAAR,EAAAC,EAAAG,EAAA1jD,EAAAC,EAAA0jD,EAAAE,GACAziE,KAAA4f,OAAA6iD,OAGAziE,KAAA4f,OAAA3e,EAAAL,UAAAq0C,eAAAnzC,KAAA9B,MAGA,OAAAA,KAAA4f,QAKA0rC,EAAA1qD,UAAAohE,gBAAA,SAAApgE,GACA,WAAA0pD,EAAA1pD,IASA0pD,EAAAoX,2BAAA,SAAAR,EAAAC,EAEAG,EAEA1jD,EAEAC,EAEA0jD,EAAA3iD,GAIA,IAHA,IAAA+iD,EAAA9jD,EAAAysC,EAAAsX,WACAC,EAAAjkD,EAAA0sC,EAAAsX,WAEAxgE,EAAA,EAAmBA,EAAAkgE,EAAelgE,IAAA,CAClC,IAAA0gE,EAAA1gE,GAAAkpD,EAAA8W,iBAEAU,EAAAH,IACAG,EAAAH,GAKA,IAFA,IAAAI,EAAAzX,EAAA0X,IAAA5gE,EAAA,EAAAkgE,EAAA,GAEAngE,EAAA,EAAqBA,EAAAggE,EAAchgE,IAAA,CACnC,IAAA8gE,EAAA9gE,GAAAmpD,EAAA8W,iBAEAa,EAAAJ,IACAI,EAAAJ,GAMA,IAHA,IAAAliD,EAAA2qC,EAAA0X,IAAA7gE,EAAA,EAAAggE,EAAA,GACArtC,EAAA,EAEAouC,GAAA,EAAwBA,GAAA,EAAQA,IAAA,CAChC,IAAAC,EAAAZ,EAAAQ,EAAAG,GACApuC,GAAAquC,EAAAxiD,EAAA,GAAAwiD,EAAAxiD,EAAA,GAAAwiD,EAAAxiD,GAAAwiD,EAAAxiD,EAAA,GAAAwiD,EAAAxiD,EAAA,GAGA,IAAAyiD,EAAAtuC,EAAA,GACAw2B,EAAA+X,eAAAnB,EAAAe,EAAAH,EAAAM,EAAAxkD,EAAAgB,MAKA0rC,EAAA0X,IAAA,SAAAjiE,EAEAgJ,EAEAyC,GAGA,OAAAzL,EAAAgJ,IAAAhJ,EAAAyL,IAAAzL,GAOAuqD,EAAA+X,eAAA,SAAAnB,EAAAe,EAEAH,EAEAQ,EAEAC,EAEA3jD,GACA,QAAAxd,EAAA,EAAA8F,EAAA46D,EAAAS,EAAAN,EAAwD7gE,EAAAkpD,EAAAsX,WAAgCxgE,IAAA8F,GAAAq7D,EACxF,QAAAphE,EAAA,EAAqBA,EAAAmpD,EAAAsX,WAAgCzgE,KAErD,IAAA+/D,EAAAh6D,EAAA/F,KAAAmhE,GACA1jD,EAAAhP,IAAAqyD,EAAA9gE,EAAA2gE,EAAA1gE,IAYAkpD,EAAAkX,qBAAA,SAAAN,EAAAC,EAEAG,EAEA1jD,EAEAC,GAQA,IALA,IAAA8jD,EAAA9jD,EAAAysC,EAAAsX,WACAC,EAAAjkD,EAAA0sC,EAAAsX,WAEAL,EAAA,IAAAhiE,MAAA+hE,GAEAlgE,EAAA,EAAmBA,EAAAkgE,EAAelgE,IAAA,CAClCmgE,EAAAngE,GAAA,IAAA4c,WAAAmjD,GACA,IAAAW,EAAA1gE,GAAAkpD,EAAA8W,iBAEAU,EAAAH,IACAG,EAAAH,GAGA,QAAAxgE,EAAA,EAAqBA,EAAAggE,EAAchgE,IAAA,CACnC,IAAA8gE,EAAA9gE,GAAAmpD,EAAA8W,iBAEAa,EAAAJ,IACAI,EAAAJ,GAOA,IAJA,IAAA/tC,EAAA,EACA/qB,EAAA,IACAyC,EAAA,EAEAg3D,EAAA,EAAAt7D,EAAA46D,EAAAlkD,EAAAqkD,EAA4DO,EAAAlY,EAAAsX,WAAiCY,IAAAt7D,GAAA0W,EAAA,CAC7F,QAAA6kD,EAAA,EAA0BA,EAAAnY,EAAAsX,WAAiCa,IAAA,CAC3D,IAAAC,EAAA,IAAAxB,EAAAh6D,EAAAu7D,GACA3uC,GAAA4uC,EAEAA,EAAA35D,IACAA,EAAA25D,GAGAA,EAAAl3D,IACAA,EAAAk3D,GAKA,GAAAl3D,EAAAzC,EAAAuhD,EAAAqY,kBAEA,IAAAH,IAAAt7D,GAAA0W,EAAuC4kD,EAAAlY,EAAAsX,WAAiCY,IAAAt7D,GAAA0W,EACxE,IAAA6kD,EAAA,EAA8BA,EAAAnY,EAAAsX,WAAiCa,IAC/D3uC,GAAA,IAAAotC,EAAAh6D,EAAAu7D,GAOA,IAAAL,EAAAtuC,GAAA,EAAAw2B,EAAA8W,iBAEA,GAAA51D,EAAAzC,GAAAuhD,EAAAqY,oBAOAP,EAAAr5D,EAAA,EAEA3H,EAAA,GAAAD,EAAA,IAOA,IAAAyhE,GAAArB,EAAAngE,EAAA,GAAAD,GAAA,EAAAogE,EAAAngE,GAAAD,EAAA,GAAAogE,EAAAngE,EAAA,GAAAD,EAAA,MAEA4H,EAAA65D,IACAR,EAAAQ,GAKArB,EAAAngE,GAAAD,GAAAihE,GAIA,OAAAb,GAKAjX,EAAA8W,iBAAA,EACA9W,EAAAsX,WAAA,GAAAtX,EAAA8W,iBAEA9W,EAAA+W,gBAAA/W,EAAAsX,WAAA,EAEAtX,EAAA2W,kBAAA,EAAA3W,EAAAsX,WACAtX,EAAAqY,kBAAA,GACArY,EAvPA,CAwPCL,EAAA7pD,SAEDvB,EAAAuB,QAAAkqD,gCChTA,IAAAvrD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAipD,EAAkBlqD,EAAQ,IAE1Bwe,EAAiBxe,EAAQ,IAEzBy0C,EAAkBz0C,EAAQ,IAE1B4nB,EAA0B5nB,EAAQ,GAclCorD,EAEA,SAAAjqD,GAGA,SAAAiqD,EAAAtpD,GACA,IAAA0Q,EAAArR,EAAAa,KAAA9B,KAAA4B,IAAA5B,KAIA,OAFAsS,EAAA4vD,WAAAhX,EAAA2Y,MACAvxD,EAAAwxD,QAAA,IAAA9kD,WAAAksC,EAAA6Y,mBACAzxD,EA0LA,OAjMAvS,EAAAmrD,EAAAjqD,GAaAiqD,EAAAtqD,UAAAmoB,YAAA,SAAA3mB,EAEAke,GACA,IAAA1e,EAAA5B,KAAA8hE,qBACAljD,EAAAhd,EAAAse,gBAEAhb,IAAAob,GAAA,OAAAA,KAAAS,UAAAnC,EACA0B,EAAA,IAAAhC,EAAAld,QAAAwd,GAEA0B,EAAAG,QAGAzgB,KAAAgkE,WAAAplD,GAIA,IAHA,IAAAqlD,EAAAriE,EAAA2e,OAAAne,EAAApC,KAAAkiE,YACAgC,EAAAlkE,KAAA8jE,QAEA3hE,EAAA,EAAmBA,EAAAyc,EAAWzc,IAC9B+hE,GAAA,IAAAD,EAAA9hE,KAAA+oD,EAAAiZ,mBAGA,IAAAC,EAAAlZ,EAAAmZ,mBAAAH,GAEA,GAAAtlD,EAAA,EAEA,IAAAzc,EAAA,EAAqBA,EAAAyc,EAAWzc,KAChC,IAAA8hE,EAAA9hE,IAAAiiE,GACA9jD,EAAA1P,IAAAzO,OAIA,KAAAwe,EAAA,IAAAsjD,EAAA,GACAK,EAAA,IAAAL,EAAA,GAEA,IAAA9hE,EAAA,EAAqBA,EAAAyc,EAAA,EAAezc,IAAA,CACpC,IAAA0e,EAAA,IAAAojD,EAAA9hE,EAAA,IAEA,EAAAmiE,EAAA3jD,EAAAE,GAAA,EAAAujD,GACA9jD,EAAA1P,IAAAzO,GAGAwe,EAAA2jD,EACAA,EAAAzjD,GAIA,OAAAP,GAMA4qC,EAAAtqD,UAAAq0C,eAAA,WACA,IAAArzC,EAAA5B,KAAA8hE,qBACAljD,EAAAhd,EAAAse,WACArB,EAAAjd,EAAAue,YACAP,EAAA,IAAA20B,EAAAnzC,QAAAwd,EAAAC,GAGA7e,KAAAgkE,WAAAplD,GAGA,IAFA,IAAAslD,EAAAlkE,KAAA8jE,QAEA1hE,EAAA,EAAmBA,EAAA,EAAOA,IAK1B,IAJA,IAAAke,EAAAzB,EAAAzc,EAAA,EACAmiE,EAAA3iE,EAAA2e,OAAAD,EAAAtgB,KAAAkiE,YACArhD,EAAA/W,KAAA2F,MAAA,EAAAmP,EAAA,GAEAzc,EAAA2H,KAAA2F,MAAAmP,EAAA,GAAyCzc,EAAA0e,EAAW1e,IAAA,CAEpD+hE,GADA,IAAAK,EAAApiE,KACA+oD,EAAAiZ,mBAIA,IAAAC,EAAAlZ,EAAAmZ,mBAAAH,GAIAD,EAAAriE,EAAA49B,YAEA,IAAAp9B,EAAA,EAAmBA,EAAAyc,EAAYzc,IAC/B,KAAA8F,EAAA9F,EAAAwc,EAEA,IAAAzc,EAAA,EAAqBA,EAAAyc,EAAWzc,IAAA,EAChC,IAAA8hE,EAAA/7D,EAAA/F,IAEAiiE,GACAxkD,EAAAhP,IAAAzO,EAAAC,IAKA,OAAAwd,GAKAsrC,EAAAtqD,UAAAohE,gBAAA,SAAApgE,GACA,WAAAspD,EAAAtpD,IAGAspD,EAAAtqD,UAAAojE,WAAA,SAAAQ,GAGAxkE,KAAAkiE,WAAAvgE,OAAA6iE,IACAxkE,KAAAkiE,WAAA,IAAAxiC,kBAAA8kC,IAKA,IAFA,IAAAV,EAAA9jE,KAAA8jE,QAEA3hE,EAAA,EAAmBA,EAAA+oD,EAAA6Y,kBAAgD5hE,IACnE2hE,EAAA3hE,GAAA,GAIA+oD,EAAAmZ,mBAAA,SAAAP,GAOA,IALA,IAAAW,EAAAX,EAAAniE,OACA+iE,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAziE,EAAA,EAAmBA,EAAAsiE,EAAgBtiE,IACnC2hE,EAAA3hE,GAAAyiE,IACAD,EAAAxiE,EACAyiE,EAAAd,EAAA3hE,IAGA2hE,EAAA3hE,GAAAuiE,IACAA,EAAAZ,EAAA3hE,IAKA,IAAA0iE,EAAA,EACAC,EAAA,EAEA,IAAA3iE,EAAA,EAAmBA,EAAAsiE,EAAgBtiE,IAAA,CACnC,IAAA4iE,EAAA5iE,EAAAwiE,GAEAK,EAAAlB,EAAA3hE,GAAA4iE,KAEAD,IACAD,EAAA1iE,EACA2iE,EAAAE,GAKA,GAAAL,EAAAE,EAAA,CACA,IAAAthE,EAAAohE,EACAA,EAAAE,EACAA,EAAAthE,EAKA,GAAAshE,EAAAF,GAAAF,EAAA,GACA,UAAA/8C,EAAAtmB,QAIA,IAAA6jE,EAAAJ,EAAA,EACAK,GAAA,EAEA,IAAA/iE,EAAA0iE,EAAA,EAAgC1iE,EAAAwiE,EAAexiE,IAAA,CAC/C,IACA6iE,EADAG,EAAAhjE,EAAAwiE,GACAK,EAAAG,KAAAN,EAAA1iE,IAAAuiE,EAAAZ,EAAA3hE,KAEA+iE,IACAD,EAAA9iE,EACA+iE,EAAAF,GAIA,OAAAC,GAAA/Z,EAAAiZ,iBAGAjZ,EAAAka,eAAA,EACAla,EAAAiZ,gBAAA,EAAAjZ,EAAAka,eACAla,EAAA6Y,kBAAA,GAAA7Y,EAAAka,eACAla,EAAA2Y,MAAAnkC,kBAAA96B,KAAA,KACAsmD,EAlMA,CAmMClB,EAAA5oD,SAEDvB,EAAAuB,QAAA8pD,gCC1PA9qD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAWA,IAAAkpD,EAEA,WACA,SAAAA,EAAAroD,GACA5B,KAAA4B,SAeA,OAZAqoD,EAAArpD,UAAAkhE,mBAAA,WACA,OAAA9hE,KAAA4B,QAGAqoD,EAAArpD,UAAAsf,SAAA,WACA,OAAAlgB,KAAA4B,OAAAse,YAGA+pC,EAAArpD,UAAAuf,UAAA,WACA,OAAAngB,KAAA4B,OAAAue,aAGA8pC,EAjBA,GAoBApqD,EAAAuB,QAAA6oD,gCCjDA,IAAAlqD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMA6oD,EAEA,SAAA3oD,GAGA,SAAA2oD,IACA,cAAA3oD,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAA6pD,EAAA3oD,GAMA2oD,EAPA,CARkB9pD,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAAwoD,gCChDA,IAAA7pD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMAgpD,EAEA,SAAA9oD,GAGA,SAAA8oD,IACA,cAAA9oD,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAAgqD,EAAA9oD,GAMA8oD,EAPA,CARkBjqD,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAA2oD,gCCjCA3pD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAmrD,EAA6BpsD,EAAQ,IAErCk1B,EAAgBl1B,EAAQ,IAWxBulE,EAEA,WACA,SAAAA,EAAAC,GAIAtlE,KAAAulE,qBAAArZ,EAAA9qD,QAAA0pC,QAAAw6B,GAAA,KAEAtlE,KAAAwlE,SAEA,EAAAF,EAgHA,OA7GAD,EAAArqB,iBAAA,SAAApvC,EAEAzL,GAGA,OAAA60B,EAAA5zB,QAAA6mC,SAAAr8B,EAAAzL,IAWAklE,EAAAI,wBAAA,SAAAC,EAEAC,GAGA,IAAAL,EAAAD,EAAAO,0BAAAF,EAAAC,GAEA,cAAAL,EACAA,EAMAD,EAAAO,0BAAAF,EAAAL,EAAAQ,oBAAAF,EAAAN,EAAAQ,sBAGAR,EAAAO,0BAAA,SAAAF,EAEAC,GAOA,IAHA,IAAAhrB,EAAAxyC,OAAAqsB,iBACAsxC,EAAA,EAEAtlC,EAAA,EAAAI,EAAAykC,EAAAU,0BAAsEvlC,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACtF,IAAAwlC,EAAAplC,EAAAJ,GACAylC,EAAAD,EAAA,GAEA,GAAAC,IAAAP,GAAAO,IAAAN,EAEA,WAAAN,EAAAW,EAAA,IAGA,IAAAjrB,EAAAsqB,EAAArqB,iBAAA0qB,EAAAO,GAEAlrB,EAAAJ,IACAmrB,EAAAE,EAAA,GACArrB,EAAAI,GAGA2qB,IAAAC,IAEA5qB,EAAAsqB,EAAArqB,iBAAA2qB,EAAAM,IAEAtrB,IACAmrB,EAAAE,EAAA,GACArrB,EAAAI,GAOA,OAAAJ,GAAA,EACA,IAAA0qB,EAAAS,GAGA,MAGAT,EAAAzkE,UAAAslE,wBAAA,WACA,OAAAlmE,KAAAulE,sBAGAF,EAAAzkE,UAAAulE,YAAA,WACA,OAAAnmE,KAAAwlE,UAKAH,EAAAzkE,UAAA8B,SAAA,WACA,OAAA1C,KAAAulE,qBAAA96B,WAAA,EAAAzqC,KAAAwlE,UAKAH,EAAAzkE,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAujD,GACA,SAGA,IAAA7iE,EAAAsf,EACA,OAAA9hB,KAAAulE,uBAAA/iE,EAAA+iE,sBAAAvlE,KAAAwlE,WAAAhjE,EAAAgjE,UAGAH,EAAAQ,oBAAA,MAKAR,EAAAU,0BAAA,CAAA/mD,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,UAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,WAAAoa,WAAApa,KAAA,YAAAoa,WAAApa,KAAA,aACAygE,EAzHA,GA4HAxlE,EAAAuB,QAAAikE,gCChJAjlE,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IASA,IAAAqlE,EAEA,WACA,SAAAA,EAAAC,GACArmE,KAAAqmE,WA2BA,OApBAD,EAAAxlE,UAAA0lE,WAAA,WACA,OAAAtmE,KAAAqmE,UASAD,EAAAxlE,UAAA40C,wBAAA,SAAAltB,GACA,GAAAtoB,KAAAqmE,UAAA,OAAA/9C,OAAA3mB,OAAA,IAIA,IAAA4kE,EAAAj+C,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAi+C,IAGAH,EA7BA,GAgCAvmE,EAAAuB,QAAAglE,gCC5CAhmE,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAQA,IAAAymB,EAAuB1nB,EAAQ,GAE/Bw8C,EAAwBx8C,EAAQ,IAShC2rD,EAEA,WACA,SAAAA,KAoMA,OAhMAA,EAAA7qD,UAAA6qD,YAAA,aAUAA,EAAA+a,cAAA,SAAAl5D,EAAAua,GACA,UAAAA,QAAA3iB,IAAA2iB,QAAA3iB,IAAA2iB,EAAAhI,IAAA2H,EAAApmB,QAAA4gD,eACA,OAAAn6B,EAAAhI,IAAA2H,EAAApmB,QAAA4gD,eAAAp/C,WAiCA,IA5BA,IAAAjB,EAAA2L,EAAA3L,OACA8kE,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EAEAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAA,EAEAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAGAC,EAAA,EACAC,EAAAj6D,EAAA3L,OAAA,GAEA,MAFA2L,EAAA,IAIA,MAFAA,EAAA,IAIA,MAFAA,EAAA,GAIA5L,EAAA,EAAmBA,EAAAC,IAAA8kE,GAAAC,GAAAC,GAA6DjlE,IAAA,CAChF,IAAAX,EAAA,IAAAuM,EAAA5L,GAEAilE,IACAC,EAAA,EACA,SAAA7lE,GACA4lE,GAAA,EAEAC,IAES,SAAA7lE,KACT,QAAAA,GACA4lE,GAAA,GAEAC,IAEA,QAAA7lE,GACA8lE,KAEAD,IAEA,QAAA7lE,GACA+lE,KAEAF,IAEA,OAAA7lE,GACAgmE,IAEAJ,GAAA,OAYAF,IACA1lE,EAAA,KAAAA,EAAA,IACA0lE,GAAA,EACS1lE,EAAA,MACTA,EAAA,WAAAA,GAAA,MAAAA,IACAumE,KAYAZ,IACAM,EAAA,EACAjmE,EAAA,UAAAA,KAAA,IACA2lE,GAAA,EAEAM,IAES,MAAAjmE,GAAA,MAAAA,KAAA,IACT2lE,GAAA,EACS3lE,EAAA,KAAAA,EAAA,KACTkmE,IACAE,EAAA,IACAD,EAEAE,IACAA,EAAAF,IAESnmE,EAAA,KACTimE,IAEAE,EAAA,IACAC,EAEAE,IACAA,EAAAF,KAIAD,EAAA,EACAC,EAAA,IAcA,OATAR,GAAAC,EAAA,IACAD,GAAA,GAGAD,GAAAM,EAAA,IACAN,GAAA,GAIAC,IAAAY,GAAAV,EAAAC,EAAAC,EAAA,GACAtb,EAAA9oB,KAIA+jC,IAAAjb,EAAA+b,kBAAAJ,GAAA,GAAAC,GAAA,GACA5b,EAAAgc,UAQAhB,GAAAC,EACA,IAAAU,GAAA,IAAAH,GAAA,GAAAK,GAAA3lE,EAAA8pD,EAAAgc,UAAAhc,EAAAic,SAIAjB,EACAhb,EAAAic,SAGAhB,EACAjb,EAAAgc,UAGAd,EACAlb,EAAA9oB,KAIA8oB,EAAAkc,2BAGAlc,EAAAgc,UAAAnrB,EAAAl7C,QAAAihC,KAAArB,UAEAyqB,EAAAmc,OAAA,SACAnc,EAAAic,SAAAprB,EAAAl7C,QAAAkgC,UAAAN,UAEAyqB,EAAAoc,OAAA,SACApc,EAAA9oB,KAAA2Z,EAAAl7C,QAAAuhC,KAAA3B,UAEAyqB,EAAAkc,0BAAAlc,EAAA9oB,KAEA8oB,EAAA+b,kBAAA,EACA/b,EArMA,GAwMA5rD,EAAAuB,QAAAqqD,gCC9NArrD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAEA+mE,EAFAppD,EAAiC5e,EAAQ,IAIzC,SAAAgoE,GACAA,IAAA,2BACAA,IAAA,qBACAA,IAAA,+BACAA,IAAA,yCACAA,IAAA,eACAA,IAAA,aACAA,IAAA,iBACAA,IAAA,6CACAA,IAAA,+CAGAA,IAAA,iBAZA,CAaCA,EAAAjoE,EAAAioE,aAAAjoE,EAAAioE,WAAA,KASD,IAAAC,EAEA,WACA,SAAAA,EAAAhnE,EAAAupC,EAAA09B,EAAAjpD,GAGA/e,KAAAe,QACAf,KAAAsqC,cACAtqC,KAAAgoE,gCACAhoE,KAAA+e,OACAgpD,EAAAx9B,SAAA35B,IAAAmO,EAAA/e,MACA+nE,EAAAv9B,UAAA55B,IAAA7P,EAAAf,MAgFA,OAvEA+nE,EAAAj9B,QAAA,SAAA/rB,GAGA,IAAAkjC,EAAA8lB,EAAAx9B,SAAA1qB,IAAAd,GAEA,QAAA7Z,IAAA+8C,EACA,UAAAvjC,EAAAtd,QAGA,OAAA6gD,GASA8lB,EAAAnnE,UAAAwjD,sBAAA,SAAA59B,GACA,IACAte,EADAmxC,EAAA7yB,EAAAwzB,mBAWA,OAPA9xC,EADAmxC,GAAA,EACA,EACKA,GAAA,GACL,EAEA,EAGAr5C,KAAAgoE,8BAAA9/D,IAGA6/D,EAAAnnE,UAAAqgC,SAAA,WACA,OAAAjhC,KAAAe,OAGAgnE,EAAAnnE,UAAA6pC,QAAA,WACA,OAAAzqC,KAAA+e,MAGAgpD,EAAAnnE,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAimD,GACA,SAGA,IAAAvlE,EAAAsf,EACA,OAAA9hB,KAAAe,QAAAyB,EAAAzB,OAGAgnE,EAAAnnE,UAAAgC,SAAA,WACA,OAAA5C,KAAAsqC,aAGAy9B,EAAAx9B,SAAA,IAAApnB,IACA4kD,EAAAv9B,UAAA,IAAArnB,IACA4kD,EAAAE,WAAA,IAAAF,EAAAD,EAAAG,WAAA,aAAAjpD,WAAApa,KAAA,YAEAmjE,EAAAljB,QAAA,IAAAkjB,EAAAD,EAAAjjB,QAAA,UAAA7lC,WAAApa,KAAA,eACAmjE,EAAAnjB,aAAA,IAAAmjB,EAAAD,EAAAljB,aAAA,eAAA5lC,WAAApa,KAAA,cACAmjE,EAAAG,kBAAA,IAAAH,EAAAD,EAAAI,kBAAA,oBAAAlpD,WAAApa,KAAA,YAEAmjE,EAAA3lB,KAAA,IAAA2lB,EAAAD,EAAA1lB,KAAA,OAAApjC,WAAApa,KAAA,cACAmjE,EAAA5f,IAAA,IAAA4f,EAAAD,EAAA3f,IAAA,MAAAnpC,WAAApa,KAAA,YAEAmjE,EAAAvjB,MAAA,IAAAujB,EAAAD,EAAAtjB,MAAA,QAAAxlC,WAAApa,KAAA,cACAmjE,EAAAI,oBAAA,IAAAJ,EAAAD,EAAAK,oBAAA,sBAAAnpD,WAAApa,KAAA,YACAmjE,EAAAK,qBAAA,IAAAL,EAAAD,EAAAM,qBAAA,uBAAAppD,WAAApa,KAAA,YAGAmjE,EAAAM,MAAA,IAAAN,EAAAD,EAAAO,MAAA,QAAArpD,WAAApa,KAAA,eACAmjE,EAzFA,GA4FAloE,EAAAuB,QAAA2mE,gCC5HA,IAAAhoE,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAoqD,EAAoBrrD,EAAQ,KAE5By0C,EAAkBz0C,EAAQ,IAE1ByrD,EAA6BzrD,EAAQ,IAErC4nB,EAA0B5nB,EAAQ,GAMlCirD,EAEA,SAAA9pD,GAGA,SAAA8pD,IACA,cAAA9pD,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAoGA,OAvGAD,EAAAgrD,EAAA9pD,GAQA8pD,EAAAnqD,UAAA0nE,WAAA,SAAAppD,EAAAqpD,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,EAEAC,GAGA,IAAAnT,EAAA9K,EAAAnqD,QAAAq9C,6BAAAgqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAxpE,KAAAypE,wBAAAvqD,EAAAqpD,EAAAC,EAAAnS,IAKAtL,EAAAnqD,UAAA6oE,wBAAA,SAAAvqD,EAAAqpD,EAEAC,EAEAnS,GACA,GAAAkS,GAAA,GAAAC,GAAA,EACA,UAAA9gD,EAAAtmB,QAMA,IAHA,IAAA2d,EAAA,IAAAw1B,EAAAnzC,QAAAmnE,EAAAC,GACAlgD,EAAA,IAAA6vC,aAAA,EAAAoQ,GAEAnmE,EAAA,EAAmBA,EAAAomE,EAAgBpmE,IAAA,CAInC,IAHA,IAAAoK,EAAA8b,EAAA3mB,OACA+nE,EAAAtnE,EAAA,GAEAD,EAAA,EAAqBA,EAAAqK,EAASrK,GAAA,EAC9BmmB,EAAAnmB,GAEAA,EAAA,KACAmmB,EAAAnmB,EAAA,GAAAunE,EAGArT,EAAAvW,gBAAAx3B,GAGA6iC,EAAA/pD,QAAAuoE,oBAAAzqD,EAAAoJ,GAEA,IACA,IAAAnmB,EAAA,EAAuBA,EAAAqK,EAASrK,GAAA,EAChC+c,EAAAW,IAAA/V,KAAA2F,MAAA6Y,EAAAnmB,IAAA2H,KAAA2F,MAAA6Y,EAAAnmB,EAAA,MAEA4c,EAAAnO,IAAAzO,EAAA,EAAAC,GAGO,MAAAwnE,GAUP,UAAAliD,EAAAtmB,SAIA,OAAA2d,GAGAgsC,EAxGA,CAyGCI,EAAA/pD,SAEDvB,EAAAuB,QAAA2pD,gCCxJA3qD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA2mB,EAA0B5nB,EAAQ,GAgBlCsrD,EAEA,WACA,SAAAA,KAkFA,OAhEAA,EAAAue,oBAAA,SAAAzqD,EAAAoJ,GAMA,IALA,IAAA1J,EAAAM,EAAAgB,WACArB,EAAAK,EAAAiB,YAEA0pD,GAAA,EAEA3hE,EAAA,EAAwBA,EAAAogB,EAAA3mB,QAAAkoE,EAAkC3hE,GAAA,GAC1D,IAAA/F,EAAA2H,KAAA2F,MAAA6Y,EAAApgB,IACA9F,EAAA0H,KAAA2F,MAAA6Y,EAAApgB,EAAA,IAEA,GAAA/F,GAAA,GAAAA,EAAAyc,GAAAxc,GAAA,GAAAA,EAAAyc,EACA,UAAA6I,EAAAtmB,QAGAyoE,GAAA,GAEA,IAAA1nE,GACAmmB,EAAApgB,GAAA,EACA2hE,GAAA,GACO1nE,IAAAyc,IACP0J,EAAApgB,GAAA0W,EAAA,EACAirD,GAAA,IAGA,IAAAznE,GACAkmB,EAAApgB,EAAA,KACA2hE,GAAA,GACOznE,IAAAyc,IACPyJ,EAAApgB,EAAA,GAAA2W,EAAA,EACAgrD,GAAA,GAKAA,GAAA,EAEA,IAAA3hE,EAAAogB,EAAA3mB,OAAA,EAAwCuG,GAAA,GAAA2hE,EAAuB3hE,GAAA,GAC/D/F,EAAA2H,KAAA2F,MAAA6Y,EAAApgB,IACA9F,EAAA0H,KAAA2F,MAAA6Y,EAAApgB,EAAA,IAEA,GAAA/F,GAAA,GAAAA,EAAAyc,GAAAxc,GAAA,GAAAA,EAAAyc,EACA,UAAA6I,EAAAtmB,QAGAyoE,GAAA,GAEA,IAAA1nE,GACAmmB,EAAApgB,GAAA,EACA2hE,GAAA,GACO1nE,IAAAyc,IACP0J,EAAApgB,GAAA0W,EAAA,EACAirD,GAAA,IAGA,IAAAznE,GACAkmB,EAAApgB,EAAA,KACA2hE,GAAA,GACOznE,IAAAyc,IACPyJ,EAAApgB,EAAA,GAAA2W,EAAA,EACAgrD,GAAA,KAKAze,EAnFA,GAsFAvrD,EAAAuB,QAAAgqD,gCC5GAhrD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAohB,EAAoBriB,EAAQ,GAE5BkC,EAAkBlC,EAAQ,IAE1B4nB,EAA0B5nB,EAAQ,GAalC6rD,EAEA,WAYA,SAAAA,EAAAzsC,EAAA4qD,EAEA3nE,EAEAC,GAGApC,KAAAkf,QACAlf,KAAA6e,OAAAK,EAAAiB,YACAngB,KAAA4e,MAAAM,EAAAgB,gBAEAhb,IAAA4kE,GAAA,OAAAA,IACAA,EAAAne,EAAAoe,gBAGA7kE,IAAA/C,GAAA,OAAAA,IACAA,EAAA+c,EAAAgB,WAAA,UAGAhb,IAAA9C,GAAA,OAAAA,IACAA,EAAA8c,EAAAiB,YAAA,KAGA,IAAA6pD,EAAAF,EAAA,IAMA,GALA9pE,KAAAiqE,SAAA9nE,EAAA6nE,EACAhqE,KAAAkqE,UAAA/nE,EAAA6nE,EACAhqE,KAAAmqE,OAAA/nE,EAAA4nE,EACAhqE,KAAAoqE,SAAAhoE,EAAA4nE,EAEAhqE,KAAAmqE,OAAA,GAAAnqE,KAAAiqE,SAAA,GAAAjqE,KAAAoqE,UAAApqE,KAAA6e,QAAA7e,KAAAkqE,WAAAlqE,KAAA4e,MACA,UAAA8I,EAAAtmB,QAuRA,OApQAuqD,EAAA/qD,UAAAy0C,OAAA,WAeA,IAdA,IAAA10B,EAAA3gB,KAAAiqE,SACAppD,EAAA7gB,KAAAkqE,UACA31D,EAAAvU,KAAAmqE,OACAE,EAAArqE,KAAAoqE,SACAE,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAhsD,EAAA5e,KAAA4e,MACAC,EAAA7e,KAAA6e,OAEA0rD,GAAA,CACAA,GAAA,EAMA,IAFA,IAAAM,GAAA,GAEAA,IAAAJ,IAAA5pD,EAAAjC,IACAisD,EAAA7qE,KAAA8qE,mBAAAv2D,EAAA81D,EAAAxpD,GAAA,KAGAA,IACA0pD,GAAA,EACAE,GAAA,GACSA,GACT5pD,IAIA,GAAAA,GAAAjC,EAAA,CACA0rD,GAAA,EACA,MAQA,IAFA,IAAAS,GAAA,GAEAA,IAAAL,IAAAL,EAAAxrD,IACAksD,EAAA/qE,KAAA8qE,mBAAAnqD,EAAAE,EAAAwpD,GAAA,KAGAA,IACAE,GAAA,EACAG,GAAA,GACSA,GACTL,IAIA,GAAAA,GAAAxrD,EAAA,CACAyrD,GAAA,EACA,MAQA,IAFA,IAAAU,GAAA,GAEAA,IAAAL,IAAAhqD,GAAA,IACAqqD,EAAAhrE,KAAA8qE,mBAAAv2D,EAAA81D,EAAA1pD,GAAA,KAGAA,IACA4pD,GAAA,EACAI,GAAA,GACSA,GACThqD,IAIA,GAAAA,EAAA,GACA2pD,GAAA,EACA,MAQA,IAFA,IAAAW,GAAA,GAEAA,IAAAL,IAAAr2D,GAAA,IACA02D,EAAAjrE,KAAA8qE,mBAAAnqD,EAAAE,EAAAtM,GAAA,KAGAA,IACAg2D,GAAA,EACAK,GAAA,GACSA,GACTr2D,IAIA,GAAAA,EAAA,GACA+1D,GAAA,EACA,MAGAC,IACAC,GAAA,GAIA,IAAAF,GAAAE,EAAA,CAIA,IAHA,IAAAU,EAAArqD,EAAAF,EACAuiD,EAAA,KAEAxhE,EAAA,EAAqB,OAAAwhE,GAAAxhE,EAAAwpE,EAA2BxpE,IAChDwhE,EAAAljE,KAAAmrE,uBAAAxqD,EAAA0pD,EAAA3oE,EAAAif,EAAAjf,EAAA2oE,GAGA,SAAAnH,EACA,UAAAx7C,EAAAtmB,QAGA,IAAA09B,EAAA,KAEA,IAAAp9B,EAAA,EAAqB,OAAAo9B,GAAAp9B,EAAAwpE,EAA2BxpE,IAChDo9B,EAAA9+B,KAAAmrE,uBAAAxqD,EAAApM,EAAA7S,EAAAif,EAAAjf,EAAA6S,GAGA,SAAAuqB,EACA,UAAApX,EAAAtmB,QAGA,IAAAe,EAAA,KAEA,IAAAT,EAAA,EAAqB,OAAAS,GAAAT,EAAAwpE,EAA2BxpE,IAChDS,EAAAnC,KAAAmrE,uBAAAtqD,EAAAtM,EAAA7S,EAAAmf,EAAAnf,EAAA6S,GAGA,SAAApS,EACA,UAAAulB,EAAAtmB,QAGA,IAAAgB,EAAA,KAEA,IAAAV,EAAA,EAAqB,OAAAU,GAAAV,EAAAwpE,EAA2BxpE,IAChDU,EAAApC,KAAAmrE,uBAAAtqD,EAAAwpD,EAAA3oE,EAAAmf,EAAAnf,EAAA2oE,GAGA,SAAAjoE,EACA,UAAAslB,EAAAtmB,QAGA,OAAApB,KAAAorE,YAAAhpE,EAAA8gE,EAAA/gE,EAAA28B,GAEA,UAAApX,EAAAtmB,SAIAuqD,EAAA/qD,UAAAuqE,uBAAA,SAAA12C,EAEAC,EAEAhxB,EAEAC,GAQA,IALA,IAAA0nE,EAAArpE,EAAAZ,QAAAizB,MAAAryB,EAAAZ,QAAA+B,SAAAsxB,EAAAC,EAAAhxB,EAAAC,IACA2nE,GAAA5nE,EAAA+wB,GAAA42C,EACAE,GAAA5nE,EAAA+wB,GAAA22C,EACAnsD,EAAAlf,KAAAkf,MAEAxd,EAAA,EAAmBA,EAAA2pE,EAAU3pE,IAAA,CAC7B,IAAAS,EAAAH,EAAAZ,QAAAizB,MAAAI,EAAA/yB,EAAA4pE,GACAlpE,EAAAJ,EAAAZ,QAAAizB,MAAAK,EAAAhzB,EAAA6pE,GAEA,GAAArsD,EAAAW,IAAA1d,EAAAC,GACA,WAAA+f,EAAA/gB,QAAAe,EAAAC,GAIA,aAiBAupD,EAAA/qD,UAAAwqE,YAAA,SAAAhpE,EAAA8gE,EAAA/gE,EAAA28B,GAOA,IAAA0sC,EAAAppE,EAAAC,OACAopE,EAAArpE,EAAAE,OACAopE,EAAAxI,EAAA7gE,OACAspE,EAAAzI,EAAA5gE,OACAspE,EAAAzpE,EAAAE,OACAwpE,EAAA1pE,EAAAG,OACAwpE,EAAAhtC,EAAAz8B,OACA0pE,EAAAjtC,EAAAx8B,OACA0pE,EAAArgB,EAAAqgB,KAEA,OAAAR,EAAAxrE,KAAA4e,MAAA,EACA,KAAAuD,EAAA/gB,QAAA0qE,EAAAE,EAAAD,EAAAC,GAAA,IAAA7pD,EAAA/gB,QAAAsqE,EAAAM,EAAAL,EAAAK,GAAA,IAAA7pD,EAAA/gB,QAAAwqE,EAAAI,EAAAH,EAAAG,GAAA,IAAA7pD,EAAA/gB,QAAAoqE,EAAAQ,EAAAP,EAAAO,IAEA,KAAA7pD,EAAA/gB,QAAA0qE,EAAAE,EAAAD,EAAAC,GAAA,IAAA7pD,EAAA/gB,QAAAsqE,EAAAM,EAAAL,EAAAK,GAAA,IAAA7pD,EAAA/gB,QAAAwqE,EAAAI,EAAAH,EAAAG,GAAA,IAAA7pD,EAAA/gB,QAAAoqE,EAAAQ,EAAAP,EAAAO,KAcArgB,EAAA/qD,UAAAkqE,mBAAA,SAAAl/D,EAEAzL,EAEA8rE,EAEAC,GACA,IAAAhtD,EAAAlf,KAAAkf,MAEA,GAAAgtD,GACA,QAAA/pE,EAAAyJ,EAAqBzJ,GAAAhC,EAAQgC,IAC7B,GAAA+c,EAAAW,IAAA1d,EAAA8pE,GACA,cAIA,QAAA7pE,EAAAwJ,EAAqBxJ,GAAAjC,EAAQiC,IAC7B,GAAA8c,EAAAW,IAAAosD,EAAA7pE,GACA,SAKA,UAGAupD,EAAAoe,UAAA,GACApe,EAAAqgB,KAAA,EACArgB,EAjUA,GAoUA9rD,EAAAuB,QAAAuqD,gCC5VAvrD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA41B,EAAsB72B,EAAQ,IAE9Bye,EAAeze,EAAQ,IAEvB4e,EAAiC5e,EAAQ,GASzC+rD,EAEA,WASA,SAAAA,EAAAxjB,GACAroC,KAAAqoC,QACAroC,KAAAmsE,iBAAA,GACAnsE,KAAAmsE,iBAAArjE,KAAA,IAAA6tB,EAAAv1B,QAAAinC,EAAArpB,WAAApa,KAAA,OAuEA,OApEAinD,EAAAjrD,UAAAwrE,eAAA,SAAA70C,GAGA,IAAA40C,EAAAnsE,KAAAmsE,iBAEA,GAAA50C,GAAA40C,EAAAxqE,OAIA,IAHA,IAAA0qE,EAAAF,IAAAxqE,OAAA,GACA0mC,EAAAroC,KAAAqoC,MAEAnoC,EAAAisE,EAAAxqE,OAA2CzB,GAAAq3B,EAAar3B,IAAA,CACxD,IAAAosE,EAAAD,EAAAv0C,SAAA,IAAAnB,EAAAv1B,QAAAinC,EAAArpB,WAAApa,KAAA,GAAAyjC,EAAA1Q,IAAAz3B,EAAA,EAAAmoC,EAAAtQ,wBACAo0C,EAAArjE,KAAAwjE,GACAD,EAAAC,EAIA,OAAAH,EAAA50C,IAuBAs0B,EAAAjrD,UAAA+7C,OAAA,SAAAuK,EAAAN,GAGA,OAAAA,EACA,UAAAloC,EAAAtd,QAAA,6BAGA,IAAAulD,EAAAO,EAAAvlD,OAAAilD,EAEA,GAAAD,GAAA,EACA,UAAAjoC,EAAAtd,QAAA,0BAGA,IAAAosB,EAAAxtB,KAAAosE,eAAAxlB,GACA2lB,EAAA,IAAAvtD,WAAA2nC,GACApoC,EAAAnd,QAAAqR,UAAAy0C,EAAA,EAAAqlB,EAAA,EAAA5lB,GAOA,IANA,IAAA6lB,EAAA,IAAA71C,EAAAv1B,QAAApB,KAAAqoC,MAAAkkC,GAGA90C,GAFA+0C,IAAA/iC,mBAAAmd,EAAA,IACAld,OAAAlc,GAAA,GACAgb,kBACAikC,EAAA7lB,EAAAnvB,EAAA91B,OAEAD,EAAA,EAAmBA,EAAA+qE,EAAyB/qE,IAC5CwlD,EAAAP,EAAAjlD,GAAA,EAGA6c,EAAAnd,QAAAqR,UAAAglB,EAAA,EAAAyvB,EAAAP,EAAA8lB,EAAAh1C,EAAA91B,SAGAkqD,EAnFA,GAsFAhsD,EAAAuB,QAAAyqD,gCCzGAzrD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA2d,EAAiC5e,EAAQ,GAQzC4sE,EAEA,WACA,SAAAA,KA2OA,OAnOAA,EAAAjrB,sBAAA,SAAA7hC,GACA,OAAA8sD,EAAAC,8BAAA/sD,GAAA,GAAA8sD,EAAAC,8BAAA/sD,GAAA,IASA8sD,EAAAhrB,sBAAA,SAAA9hC,GAMA,IALA,IAAAslC,EAAA,EACAngD,EAAA6a,EAAAgtD,WACAhuD,EAAAgB,EAAAM,WACArB,EAAAe,EAAAO,YAEA/d,EAAA,EAAmBA,EAAAyc,EAAA,EAAgBzc,IAGnC,IAFA,IAAAyqE,EAAA9nE,EAAA3C,GAEAD,EAAA,EAAqBA,EAAAyc,EAAA,EAAezc,IAAA,CACpC,IAAApB,EAAA8rE,EAAA1qE,GAEApB,IAAA8rE,EAAA1qE,EAAA,IAAApB,IAAAgE,EAAA3C,EAAA,GAAAD,IAAApB,IAAAgE,EAAA3C,EAAA,GAAAD,EAAA,IACA+iD,IAKA,OAAAwnB,EAAAI,GAAA5nB,GASAwnB,EAAA/qB,sBAAA,SAAA/hC,GAMA,IALA,IAAAmtD,EAAA,EACAhoE,EAAA6a,EAAAgtD,WACAhuD,EAAAgB,EAAAM,WACArB,EAAAe,EAAAO,YAEA/d,EAAA,EAAmBA,EAAAyc,EAAYzc,IAC/B,QAAAD,EAAA,EAAqBA,EAAAyc,EAAWzc,IAAA,CAChC,IAAA0qE,EAAA9nE,EAAA3C,GAEAD,EAAA,EAAAyc,GAAA,IAAAiuD,EAAA1qE,IAAA,IAAA0qE,EAAA1qE,EAAA,QAAA0qE,EAAA1qE,EAAA,QAAA0qE,EAAA1qE,EAAA,QAAA0qE,EAAA1qE,EAAA,QAAA0qE,EAAA1qE,EAAA,QAAA0qE,EAAA1qE,EAAA,KAAAuqE,EAAAM,kBAAAH,EAAA1qE,EAAA,EAAAA,IAAAuqE,EAAAM,kBAAAH,EAAA1qE,EAAA,EAAAA,EAAA,MACA4qE,IAGA3qE,EAAA,EAAAyc,GAAA,IAAA9Z,EAAA3C,GAAAD,IAAA,IAAA4C,EAAA3C,EAAA,GAAAD,IAAA,IAAA4C,EAAA3C,EAAA,GAAAD,IAAA,IAAA4C,EAAA3C,EAAA,GAAAD,IAAA,IAAA4C,EAAA3C,EAAA,GAAAD,IAAA,IAAA4C,EAAA3C,EAAA,GAAAD,IAAA,IAAA4C,EAAA3C,EAAA,GAAAD,KAAAuqE,EAAAO,gBAAAloE,EAAA5C,EAAAC,EAAA,EAAAA,IAAAsqE,EAAAO,gBAAAloE,EAAA5C,EAAAC,EAAA,EAAAA,EAAA,MACA2qE,IAKA,OAAAA,EAAAL,EAAAQ,IAGAR,EAAAM,kBAAA,SAAA3sD,EAAAzb,EAEAkP,GAGAlP,EAAAkF,KAAA0C,IAAA5H,EAAA,GACAkP,EAAAhK,KAAAC,IAAA+J,EAAAuM,EAAA1e,QAEA,QAAAD,EAAAkD,EAAsBlD,EAAAoS,EAAQpS,IAC9B,OAAA2e,EAAA3e,GACA,SAIA,UAGAgrE,EAAAO,gBAAA,SAAAloE,EAAAooE,EAEAvoE,EAEAkP,GAGAlP,EAAAkF,KAAA0C,IAAA5H,EAAA,GACAkP,EAAAhK,KAAAC,IAAA+J,EAAA/O,EAAApD,QAEA,QAAAD,EAAAkD,EAAsBlD,EAAAoS,EAAQpS,IAC9B,OAAAqD,EAAArD,GAAAyrE,GACA,SAIA,UAQAT,EAAA9qB,sBAAA,SAAAhiC,GAMA,IALA,IAAAwtD,EAAA,EACAroE,EAAA6a,EAAAgtD,WACAhuD,EAAAgB,EAAAM,WACArB,EAAAe,EAAAO,YAEA/d,EAAA,EAAmBA,EAAAyc,EAAYzc,IAG/B,IAFA,IAAAyqE,EAAA9nE,EAAA3C,GAEAD,EAAA,EAAqBA,EAAAyc,EAAWzc,IAChC,IAAA0qE,EAAA1qE,IACAirE,IAKA,IAAAC,EAAAztD,EAAAO,YAAAP,EAAAM,WAEA,OADApW,KAAA2F,MAAA,GAAA3F,KAAAy3D,IAAA,EAAA6L,EAAAC,MACAX,EAAAY,IAQAZ,EAAAa,eAAA,SAAA3pB,EAEAzhD,EAEAC,GAGA,IAAAorE,EAGAjqE,EAGA,OAAAqgD,GACA,OACA4pB,EAAAprE,EAAAD,EAAA,EACA,MAEA,OACAqrE,EAAA,EAAAprE,EACA,MAEA,OACAorE,EAAArrE,EAAA,EACA,MAEA,OACAqrE,GAAAprE,EAAAD,GAAA,EACA,MAEA,OACAqrE,EAAA1jE,KAAA2F,MAAArN,EAAA,GAAA0H,KAAA2F,MAAAtN,EAAA,KACA,MAEA,OAEAqrE,GAAA,GADAjqE,EAAAnB,EAAAD,IACAoB,EAAA,EACA,MAEA,OAEAiqE,GAAA,GADAjqE,EAAAnB,EAAAD,IACAoB,EAAA,IACA,MAEA,OAEAiqE,GADAjqE,EAAAnB,EAAAD,GACA,GAAAC,EAAAD,EAAA,KACA,MAEA,QACA,UAAAuc,EAAAtd,QAAA,yBAAAwiD,GAGA,WAAA4pB,GAQAd,EAAAC,8BAAA,SAAA/sD,EAAA6tD,GAMA,IALA,IAAAvoB,EAAA,EACAwoB,EAAAD,EAAA7tD,EAAAO,YAAAP,EAAAM,WACAytD,EAAAF,EAAA7tD,EAAAM,WAAAN,EAAAO,YACApb,EAAA6a,EAAAgtD,WAEAlrE,EAAA,EAAmBA,EAAAgsE,EAAYhsE,IAAA,CAI/B,IAHA,IAAAksE,EAAA,EACAC,GAAA,EAEA7lE,EAAA,EAAqBA,EAAA2lE,EAAY3lE,IAAA,CACjC,IAAA0Z,EAAA+rD,EAAA1oE,EAAArD,GAAAsG,GAAAjD,EAAAiD,GAAAtG,GAEAggB,IAAAmsD,EACAD,KAEAA,GAAA,IACA1oB,GAAAwnB,EAAAoB,IAAAF,EAAA,IAGAA,EAAA,EAEAC,EAAAnsD,GAIAksD,GAAA,IACA1oB,GAAAwnB,EAAAoB,IAAAF,EAAA,IAIA,OAAA1oB,GAIAwnB,EAAAoB,GAAA,EACApB,EAAAI,GAAA,EACAJ,EAAAQ,GAAA,GACAR,EAAAY,GAAA,GACAZ,EA5OA,GA+OA7sE,EAAAuB,QAAAsrE,gCC7PA,IAAA3sE,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiiC,EAAsBljC,EAAQ,GAE9Bi6B,EAA0Bj6B,EAAQ,IAElCk6B,EAAwBl6B,EAAQ,GAEhC4nB,EAA0B5nB,EAAQ,GAElCojC,EAAmBpjC,EAAQ,IAE3BmjC,EAAenjC,EAAQ,IAEvBqiB,EAAoBriB,EAAQ,GAS5B6sD,EAEA,SAAA1rD,GAiCA,SAAA0rD,EAAAohB,EAAAC,QACA,IAAAD,IACAA,GAAA,QAGA,IAAAC,IACAA,GAAA,GAGA,IAAA17D,EAAArR,EAAAa,KAAA9B,YAMA,OAJAsS,EAAAy7D,kBACAz7D,EAAA07D,eACA17D,EAAA27D,gBAAA,GACA37D,EAAAsX,SAAA,IAAArpB,MAAA,GACA+R,EAwRA,OAvUAvS,EAAA4sD,EAAA1rD,GAkDA0rD,EAAA/rD,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GACA,IAAAqmD,EAAAluE,KAAA4pB,SACAskD,EAAA1iE,KAAA,GACAxL,KAAAiuE,gBAAA,GACA,IAIAE,EACAC,EA4DA3pC,EAjEA/6B,EAAAijD,EAAA0hB,oBAAA/tD,EAAA4tD,GAEArqC,EAAAvjB,EAAAgV,WAAA5rB,EAAA,IACAC,EAAA2W,EAAAS,UAIA,GACA4rC,EAAAhjC,cAAArJ,EAAAujB,EAAAqqC,GACA,IAAA/jD,EAAAwiC,EAAA2hB,oBAAAJ,GAEA,GAAA/jD,EAAA,EACA,UAAAzC,EAAAtmB,QAGA+sE,EAAAxhB,EAAA4hB,cAAApkD,GACAnqB,KAAAiuE,iBAAAE,EACAC,EAAAvqC,EAEA,QAAArD,EAAA,EAAAguC,EAAAN,EAAmD1tC,EAAAguC,EAAA7sE,OAA2B6+B,IAAA,CAE9EqD,GADA2qC,EAAAhuC,GAKAqD,EAAAvjB,EAAAgV,WAAAuO,SACK,MAAAsqC,GAELnuE,KAAAiuE,gBAAAjuE,KAAAiuE,gBAAApxD,UAAA,EAAA7c,KAAAiuE,gBAAAtsE,OAAA,GAKA,IAFA,IAAA8sE,EAAA,EAEA7tC,EAAA,EAAA8tC,EAAAR,EAAiDttC,EAAA8tC,EAAA/sE,OAA2Bi/B,IAAA,CAE5E6tC,GADAC,EAAA9tC,GAOA,GAAAiD,IAAAl6B,GAAA,GAHAk6B,EAAAuqC,EAAAK,GAGAA,EACA,UAAA/mD,EAAAtmB,QAGA,GAAApB,KAAA+tE,gBAAA,CAIA,IAHA,IAAAvhE,EAAAxM,KAAAiuE,gBAAAtsE,OAAA,EACA0oB,EAAA,EAEA3oB,EAAA,EAAqBA,EAAA8K,EAAS9K,IAC9B2oB,GAAAsiC,EAAAgiB,gBAAAvnE,QAAApH,KAAAiuE,gBAAAz6D,OAAA9R,IAGA,GAAA1B,KAAAiuE,gBAAAz6D,OAAAhH,KAAAmgD,EAAAgiB,gBAAAn7D,OAAA6W,EAAA,IACA,UAAA0P,EAAA34B,QAGApB,KAAAiuE,gBAAAjuE,KAAAiuE,gBAAApxD,UAAA,EAAArQ,GAGA,OAAAxM,KAAAiuE,gBAAAtsE,OAEA,UAAA+lB,EAAAtmB,QAMAqjC,EADAzkC,KAAAguE,aACArhB,EAAAiiB,eAAA5uE,KAAAiuE,iBAEAjuE,KAAAiuE,gBAGA,IAAAttD,GAAAjX,EAAA,GAAAA,EAAA,MACAmX,EAAAutD,EAAAK,EAAA,EACA,WAAAxrC,EAAA7hC,QAAAqjC,EAAA,YAAAtiB,EAAA/gB,QAAAuf,EAAAmI,GAAA,IAAA3G,EAAA/gB,QAAAyf,EAAAiI,IAAAka,EAAA5hC,QAAAkoD,SAAA,IAAAx2C,MAAAoyB,YAGAynB,EAAA0hB,oBAAA,SAAA/tD,EAAAsJ,GAQA,IAPA,IAAAhL,EAAA0B,EAAAS,UACAyjB,EAAAlkB,EAAAgV,WAAA,GACAvL,EAAA,EACAic,EAAAxB,EACA1a,GAAA,EACAQ,EAAAV,EAAAjoB,OAEAD,EAAA8iC,EAA2B9iC,EAAAkd,EAAWld,IACtC,GAAA4e,EAAAT,IAAAne,KAAAooB,EACAF,EAAAG,SACO,CACP,GAAAA,IAAAO,EAAA,GAEA,GAAAtqB,KAAAsuE,oBAAA1kD,KAAA+iC,EAAAkiB,mBAAAvuD,EAAAuV,QAAA/rB,KAAA0C,IAAA,EAAAw5B,EAAAl8B,KAAA2F,OAAA/N,EAAAskC,GAAA,IAAAA,GAAA,GACA,OAAAA,EAAAtkC,GAGAskC,GAAApc,EAAA,GAAAA,EAAA,GACAA,EAAAklD,WAAA,MAAA/kD,EAAA,GACAH,EAAAG,EAAA,KACAH,EAAAG,GAAA,EACAA,SAEAA,IAGAH,EAAAG,GAAA,EACAD,KAIA,UAAApC,EAAAtmB,SAKAurD,EAAA2hB,oBAAA,SAAA1kD,GACA,IAEAmlD,EAFAllD,EAAAD,EAAAjoB,OACAqtE,EAAA,EAGA,GAGA,IAFA,IAAAC,EAAA,WAEAzuC,EAAA,EAAA0uC,EAAAtlD,EAA6C4W,EAAA0uC,EAAAvtE,OAAwB6+B,IAAA,EACrE9V,EAAAwkD,EAAA1uC,IAEAyuC,GAAAvkD,EAAAskD,IACAC,EAAAvkD,GAIAskD,EAAAC,EACAF,EAAA,EAIA,IAHA,IAAAI,EAAA,EACAhlD,EAAA,EAEAzoB,EAAA,EAAqBA,EAAAmoB,EAAiBnoB,IAAA,EACtCgpB,EAAAd,EAAAloB,IAEAstE,IACA7kD,GAAA,GAAAN,EAAA,EAAAnoB,EACAqtE,IACAI,GAAAzkD,GAIA,OAAAqkD,EAAA,CAIA,IAAArtE,EAAA,EAAuBA,EAAAmoB,GAAAklD,EAAA,EAAqCrtE,IAAA,CAC5D,IAAAgpB,EAEA,IAFAA,EAAAd,EAAAloB,IAEAstE,IACAD,IAEA,EAAArkD,GAAAykD,GACA,SAKA,OAAAhlD,SAEK4kD,EAAA,GAEL,UAGApiB,EAAA4hB,cAAA,SAAApkD,GACA,QAAAzoB,EAAA,EAAmBA,EAAAirD,EAAAyiB,oBAAAztE,OAA6CD,IAChE,GAAAirD,EAAAyiB,oBAAA1tE,KAAAyoB,EACA,OAAAwiC,EAAAgiB,gBAAAn7D,OAAA9R,GAIA,GAAAyoB,IAAAwiC,EAAAkiB,kBACA,UAGA,UAAAnnD,EAAAtmB,SAGAurD,EAAAiiB,eAAA,SAAA1mB,GAIA,IAHA,IAAAvmD,EAAAumD,EAAAvmD,OACA0tE,EAAA,GAEA3tE,EAAA,EAAmBA,EAAAC,EAAYD,IAAA,CAC/B,IAAA2H,EAAA6+C,EAAA10C,OAAA9R,GAEA,SAAA2H,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CACA,IAAAolC,EAAAyZ,EAAA10C,OAAA9R,EAAA,GACAysE,EAAA,KAEA,OAAA9kE,GACA,QAEA,KAAAolC,GAAA,KAAAA,GAAA,KAGA,UAAAzU,EAAA54B,QAFA+sE,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,OAKA,MAEA,QAEA,KAAA0lC,GAAA,KAAAA,GAAA,KAGA,UAAAzU,EAAA54B,QAFA+sE,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,OAKA,MAEA,QAEA,GAAA0lC,GAAA,KAAAA,GAAA,IACA0/B,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,YACa,GAAA0lC,GAAA,KAAAA,GAAA,IACb0/B,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,YACa,GAAA0lC,GAAA,KAAAA,GAAA,IACb0/B,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,YACa,GAAA0lC,GAAA,KAAAA,GAAA,IACb0/B,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,YACa,SAAA0lC,EACb0/B,EAAA,UACa,SAAA1/B,EACb0/B,EAAA,SACa,SAAA1/B,EACb0/B,EAAA,QACa,UAAA1/B,GAAA,MAAAA,GAAA,MAAAA,EAGb,UAAAzU,EAAA54B,QAFA+sE,EAAA,OAKA,MAEA,QAEA,GAAA1/B,GAAA,KAAAA,GAAA,IACA0/B,EAAAzmE,OAAAgD,aAAA+jC,EAAA1lC,WAAA,WACa,UAAA0lC,EAGb,UAAAzU,EAAA54B,QAFA+sE,EAAA,KAQAkB,GAAAlB,EAEAzsE,SAEA2tE,GAAAhmE,EAIA,OAAAgmE,GAGA1iB,EAAAgiB,gBAAA,8CAOAhiB,EAAAyiB,oBAAA,4JAEAziB,EAAAkiB,kBAAA,IACAliB,EAxUA,CAyUCzpB,EAAA9hC,SAEDvB,EAAAuB,QAAAurD,gCCjYA,IAAA5sD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiiC,EAAsBljC,EAAQ,GAE9B0nB,EAAuB1nB,EAAQ,GAE/BmjC,EAAenjC,EAAQ,IAEvBqiB,EAAoBriB,EAAQ,GAE5BojC,EAAmBpjC,EAAQ,IAE3B4nB,EAA0B5nB,EAAQ,GAElCk6B,EAAwBl6B,EAAQ,GAEhCi6B,EAA0Bj6B,EAAQ,IAQlC2sD,EAEA,SAAAxrD,GAGA,SAAAwrD,IACA,cAAAxrD,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAwZA,OA3ZAD,EAAA0sD,EAAAxrD,GAMAwrD,EAAA6iB,iBAAA,SAAAhvD,GASA,IARA,IAAA1B,EAAA0B,EAAAS,UACAyjB,EAAAlkB,EAAAgV,WAAA,GACAvL,EAAA,EACAH,EAAA,cACAoc,EAAAxB,EACA1a,GAAA,EAGApoB,EAAA8iC,EAA2B9iC,EAAAkd,EAAWld,IACtC,GAAA4e,EAAAT,IAAAne,KAAAooB,EACAF,EAAAG,SACO,CACP,GAAAO,IAAAP,EAAA,CAIA,IAHA,IAAAqc,EAAAqmB,EAAAvmB,iBACAG,GAAA,EAEAkpC,EAAA9iB,EAAA+iB,aAA0DD,GAAA9iB,EAAAgjB,aAAyCF,IAAA,CACnG,IAAA3kD,EAAAsY,EAAA9hC,QAAA8oB,qBAAAN,EAAA6iC,EAAAijB,cAAAH,GAAA9iB,EAAAxmB,yBAEArb,EAAAwb,IACAA,EAAAxb,EACAyb,EAAAkpC,GAKA,GAAAlpC,GAAA,GAAA/lB,EAAAuV,QAAA/rB,KAAA0C,IAAA,EAAAw5B,GAAAtkC,EAAAskC,GAAA,GAAAA,GAAA,GACA,OAAAA,EAAAtkC,EAAA2kC,GAGAL,GAAApc,EAAA,GAAAA,EAAA,GACAA,EAAAxL,OAAA,KACAwL,EAAAG,EAAA,KACAH,EAAAG,GAAA,EACAA,SAEAA,IAGAH,EAAAG,GAAA,EACAD,KAIA,UAAApC,EAAAtmB,SAGAqrD,EAAAkjB,WAAA,SAAArvD,EAAAsJ,EAAA4a,GACAtB,EAAA9hC,QAAAuoB,cAAArJ,EAAAkkB,EAAA5a,GAKA,IAJA,IAAAwc,EAAAqmB,EAAAvmB,iBAEAG,GAAA,EAEAnmC,EAAA,EAAmBA,EAAAusD,EAAAijB,cAAA/tE,OAAwCzB,IAAA,CAC3D,IAAAiqB,EAAAsiC,EAAAijB,cAAAxvE,GACA0qB,EAAA5qB,KAAAkqB,qBAAAN,EAAAO,EAAAsiC,EAAAxmB,yBAEArb,EAAAwb,IACAA,EAAAxb,EACAyb,EAAAnmC,GAKA,GAAAmmC,GAAA,EACA,OAAAA,EAEA,UAAA3e,EAAAtmB,SAIAqrD,EAAA7rD,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GACA,IAMA+nD,EANAC,EAAAhoD,IAAA,IAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA0uE,YACAC,EAAAtjB,EAAA6iB,iBAAAhvD,GACAivD,EAAAQ,EAAA,GACAC,EAAA,EACAC,EAAA,IAAA1rE,WAAA,IAIA,OAHA0rE,EAAAD,KAAAT,EAGAA,GACA,KAAA9iB,EAAA+iB,aACAI,EAAAnjB,EAAAyjB,YACA,MAEA,KAAAzjB,EAAA0jB,aACAP,EAAAnjB,EAAA2jB,YACA,MAEA,KAAA3jB,EAAAgjB,aACAG,EAAAnjB,EAAA4jB,YACA,MAEA,QACA,UAAAr2C,EAAA54B,QAiBA,IAdA,IAAAq1D,GAAA,EACA6Z,GAAA,EACA57D,EAAA,GACA05D,EAAA2B,EAAA,GACAlsC,EAAAksC,EAAA,GACAnmD,EAAA,cACA2mD,EAAA,EACA1/D,EAAA,EACA2/D,EAAAjB,EACAkB,EAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEAna,GAAA,CACA,IAAAhiD,EAAA67D,EAwBA,OAvBAA,GAAA,EAEAC,EAAA1/D,EAEAA,EAAA47C,EAAAkjB,WAAArvD,EAAAsJ,EAAAia,GACAosC,EAAAD,KAAAn/D,EAEAA,IAAA47C,EAAAokB,YACAH,GAAA,GAIA7/D,IAAA47C,EAAAokB,YAEAL,KADAC,EACA5/D,GAIAu9D,EAAAvqC,EACAA,GAAAja,EAAAgF,OAAA,SAAAkiD,EAAAx+B,GACA,OAAAw+B,EAAAx+B,GACO,GAEPzhC,GACA,KAAA47C,EAAA+iB,aACA,KAAA/iB,EAAA0jB,aACA,KAAA1jB,EAAAgjB,aACA,UAAAz1C,EAAA54B,QAGA,OAAAwuE,GACA,KAAAnjB,EAAAyjB,YACA,GAAAr/D,EAAA,GAEA6D,GADAk8D,IAAAD,EACAjpE,OAAAgD,aAAA,IAAA3B,WAAA,GAAA8H,GAEAnJ,OAAAgD,aAAA,IAAA3B,WAAA,GAAA8H,EAAA,KAGA+/D,GAAA,OACW,GAAA//D,EAAA,GAEX6D,GADAk8D,IAAAD,EACAjpE,OAAAgD,aAAAmG,EAAA,IAEAnJ,OAAAgD,aAAAmG,EAAA,IAGA+/D,GAAA,OAQA,OAJA//D,IAAA47C,EAAAokB,YACAH,GAAA,GAGA7/D,GACA,KAAA47C,EAAAskB,WACAlB,IACA,IAAAn7D,EAAA/S,OAGA+S,GAAA,MAGAA,GAAAhN,OAAAgD,aAAA,KAIA,MAEA,KAAA+hD,EAAAukB,WACA,KAAAvkB,EAAAwkB,WAEA,MAEA,KAAAxkB,EAAAykB,cACAP,GAAAC,GACAD,GAAA,EACAC,GAAA,GACiBD,GAAAC,GACjBD,GAAA,EACAC,GAAA,GAEAA,GAAA,EAGA,MAEA,KAAAnkB,EAAA0kB,WACAb,GAAA,EACAV,EAAAnjB,EAAA2jB,YACA,MAEA,KAAA3jB,EAAA2jB,YACAR,EAAAnjB,EAAA2jB,YACA,MAEA,KAAA3jB,EAAA4jB,YACAT,EAAAnjB,EAAA4jB,YACA,MAEA,KAAA5jB,EAAAokB,UACApa,GAAA,EAKA,MAEA,KAAAhK,EAAA2jB,YACA,GAAAv/D,EAAA,GAEA6D,GADAk8D,IAAAD,EACAjpE,OAAAgD,aAAA,IAAA3B,WAAA,GAAA8H,GAEAnJ,OAAAgD,aAAA,IAAA3B,WAAA,GAAA8H,EAAA,KAGA+/D,GAAA,OAMA,OAJA//D,IAAA47C,EAAAokB,YACAH,GAAA,GAGA7/D,GACA,KAAA47C,EAAAskB,WACAlB,IACA,IAAAn7D,EAAA/S,OAGA+S,GAAA,MAGAA,GAAAhN,OAAAgD,aAAA,KAIA,MAEA,KAAA+hD,EAAAukB,WACA,KAAAvkB,EAAAwkB,WAEA,MAEA,KAAAxkB,EAAA2kB,cACAT,GAAAC,GACAD,GAAA,EACAC,GAAA,GACiBD,GAAAC,GACjBD,GAAA,EACAC,GAAA,GAEAA,GAAA,EAGA,MAEA,KAAAnkB,EAAA0kB,WACAb,GAAA,EACAV,EAAAnjB,EAAAyjB,YACA,MAEA,KAAAzjB,EAAAyjB,YACAN,EAAAnjB,EAAAyjB,YACA,MAEA,KAAAzjB,EAAA4jB,YACAT,EAAAnjB,EAAA4jB,YACA,MAEA,KAAA5jB,EAAAokB,UACApa,GAAA,EAKA,MAEA,KAAAhK,EAAA4jB,YACA,GAAAx/D,EAAA,IACAA,EAAA,KACA6D,GAAA,KAGAA,GAAA7D,OAMA,OAJAA,IAAA47C,EAAAokB,YACAH,GAAA,GAGA7/D,GACA,KAAA47C,EAAAskB,WACAlB,IACA,IAAAn7D,EAAA/S,OAGA+S,GAAA,MAGAA,GAAAhN,OAAAgD,aAAA,KAIA,MAEA,KAAA+hD,EAAAyjB,YACAN,EAAAnjB,EAAAyjB,YACA,MAEA,KAAAzjB,EAAA2jB,YACAR,EAAAnjB,EAAA2jB,YACA,MAEA,KAAA3jB,EAAAokB,UACApa,GAAA,GASAhiD,IACAm7D,MAAAnjB,EAAAyjB,YAAAzjB,EAAA2jB,YAAA3jB,EAAAyjB,aAIA,IAAAzB,EAAA5qC,EAAAuqC,EAMA,GAFAvqC,EAAAvjB,EAAAmV,aAAAoO,IAEAvjB,EAAAuV,QAAAgO,EAAA/5B,KAAAC,IAAAuW,EAAAS,UAAA8iB,KAAAuqC,GAAA,OACA,UAAA1mD,EAAAtmB,QAMA,IAFAovE,GAAAC,EAAAF,GAEA,MAAAA,EACA,UAAAx2C,EAAA34B,QAIA,IAAAiwE,EAAA38D,EAAA/S,OAEA,OAAA0vE,EAEA,UAAA3pD,EAAAtmB,QAKAiwE,EAAA,GAAAX,IAEAh8D,EADAk7D,IAAAnjB,EAAA4jB,YACA37D,EAAAmI,UAAA,EAAAw0D,EAAA,GAEA38D,EAAAmI,UAAA,EAAAw0D,EAAA,IASA,IALA,IAAA1wD,GAAAovD,EAAA,GAAAA,EAAA,MACAlvD,EAAAutD,EAAAK,EAAA,EACA6C,EAAArB,EAAAtuE,OACA2gB,EAAA,IAAA/d,WAAA+sE,GAEA5vE,EAAA,EAAmBA,EAAA4vE,EAAkB5vE,IACrC4gB,EAAA5gB,GAAAuuE,EAAAvuE,GAGA,IAAA4mB,EAAA,KAAAnG,EAAA/gB,QAAAuf,EAAAmI,GAAA,IAAA3G,EAAA/gB,QAAAyf,EAAAiI,IACA,WAAAma,EAAA7hC,QAAAsT,EAAA4N,EAAA,EAAAgG,EAAA0a,EAAA5hC,QAAAmoD,UAAA,IAAAz2C,MAAAoyB,YAGAunB,EAAAijB,cAAA,89CACAjjB,EAAAvmB,iBAAA,IACAumB,EAAAxmB,wBAAA,GACAwmB,EAAA0kB,WAAA,GACA1kB,EAAA4jB,YAAA,GACA5jB,EAAA2jB,YAAA,IACA3jB,EAAAyjB,YAAA,IACAzjB,EAAAskB,WAAA,IACAtkB,EAAAukB,WAAA,GACAvkB,EAAAwkB,WAAA,GACAxkB,EAAAykB,aAAA,IACAzkB,EAAA2kB,aAAA,IACA3kB,EAAA+iB,aAAA,IACA/iB,EAAA0jB,aAAA,IACA1jB,EAAAgjB,aAAA,IACAhjB,EAAAokB,UAAA,IACApkB,EA5ZA,CA6ZCvpB,EAAA9hC,SAEDvB,EAAAuB,QAAAqrD,gCCreA,IAAA1sD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAwwE,EAA0BzxE,EAAQ,KAElC0xE,EAAa1xE,EAAQ,KAErBmjC,EAAenjC,EAAQ,IAEvB0nB,EAAuB1nB,EAAQ,GAE/B4nB,EAA0B5nB,EAAQ,GAElC2e,EAAsB3e,EAAQ,IAE9BkjC,EAAsBljC,EAAQ,GAE9BqiB,EAAoBriB,EAAQ,GAE5B2xE,EAAsB3xE,EAAQ,KAE9B4xE,EAAsB5xE,EAAQ,KAE9BkC,EAAkBlC,EAAQ,IAE1B6xE,EAAiB7xE,EAAQ,KAEzBye,EAAeze,EAAQ,IAEvBojC,EAAmBpjC,EAAQ,IAE3B8sD,EAEA,SAAA3rD,GAGA,SAAA2rD,IACA,IAAAt6C,EAAA,OAAArR,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAIA,OAFAsS,EAAAs/D,kBAAA,GACAt/D,EAAAu/D,mBAAA,GACAv/D,EAuaA,OA9aAvS,EAAA6sD,EAAA3rD,GAUA2rD,EAAAhsD,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GACA,IAAAiqD,EAAA9xE,KAAA+xE,WAAAzxD,GAAA,EAAAwI,EAAAjB,GACA+kC,EAAAolB,WAAAhyE,KAAA4xE,kBAAAE,GACAxxD,EAAAgB,UACA,IAAA2wD,EAAAjyE,KAAA+xE,WAAAzxD,GAAA,EAAAwI,EAAAjB,GACA+kC,EAAAolB,WAAAhyE,KAAA6xE,mBAAAI,GACA3xD,EAAAgB,UAEA,QAAAkf,EAAA,EAAAI,EAAA5gC,KAAA4xE,kBAAiDpxC,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACjE,IAAA7f,EAAAigB,EAAAJ,GAEA,GAAA7f,EAAAk5B,WAAA,EACA,QAAAq4B,EAAA,EAAAC,EAAAnyE,KAAA6xE,mBAAsDK,EAAAC,EAAAxwE,OAAgBuwE,IAAA,CACtE,IAAArxD,EAAAsxD,EAAAD,GAEA,GAAArxD,EAAAg5B,WAAA,GAAA+S,EAAA7nB,cAAApkB,EAAAE,GACA,OAAA+rC,EAAAwlB,gBAAAzxD,EAAAE,IAMA,UAAA6G,EAAAtmB,SAGAwrD,EAAAolB,WAAA,SAAAK,EAAAC,GACA,SAAAA,EAAA,CAMA,IAFA,IAAAvqE,GAAA,EAEAy4B,EAAA,EAAA+xC,EAAAF,EAAqD7xC,EAAA+xC,EAAA5wE,OAA6B6+B,IAAA,CAClF,IAAAh+B,EAAA+vE,EAAA/xC,GAEA,GAAAh+B,EAAAy+B,aAAAqxC,EAAArxC,WAAA,CACAz+B,EAAAgwE,iBACAzqE,GAAA,EACA,OAIAA,GACAsqE,EAAAvpE,KAAAwpE,KAIA1lB,EAAAhsD,UAAA2nB,MAAA,WACAvoB,KAAA4xE,kBAAAjwE,OAAA,EACA3B,KAAA6xE,mBAAAlwE,OAAA,GAGAirD,EAAAwlB,gBAAA,SAAAN,EAAAG,GAKA,IAJA,IAAAQ,EAAA,QAAAX,EAAA7wC,WAAAgxC,EAAAhxC,WACA5e,EAAA,IAAA3a,OAAA+qE,GAAA7vE,WACAqD,EAAA,IAAAwY,EAAArd,QAEAM,EAAA,GAAA2gB,EAAA1gB,OAAkCD,EAAA,EAAOA,IACzCuE,EAAAgc,OAAA,KAGAhc,EAAAgc,OAAAI,GACA,IAAAqwD,EAAA,EAEA,IAAAhxE,EAAA,EAAmBA,EAAA,GAAQA,IAAA,CAC3B,IAAAokC,EAAA7/B,EAAAuN,OAAA9R,GAAAqH,WAAA,OAAAA,WAAA,GACA2pE,GAAA,OAAAhxE,GAAA,EAAAokC,IAKA,MAFA4sC,EAAA,GAAAA,EAAA,MAGAA,EAAA,GAGAzsE,EAAAgc,OAAAywD,EAAA9vE,YACA,IAAA+vE,EAAAb,EAAAc,mBAAA7vD,kBACA8vD,EAAAZ,EAAAW,mBAAA7vD,kBACA,WAAAkgB,EAAA7hC,QAAA6E,EAAArD,WAAA,QAAA+vE,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,IAAA7vC,EAAA5hC,QAAAqoD,QAAA,IAAA32C,MAAAoyB,YAGA0nB,EAAA7nB,cAAA,SAAA+sC,EAAAG,GACA,IAAAa,GAAAhB,EAAAiB,qBAAA,GAAAd,EAAAc,sBAAA,GACAC,EAAA,EAAAlB,EAAAc,mBAAA3xC,WAAAgxC,EAAAW,mBAAA3xC,WAUA,OARA+xC,EAAA,IACAA,IAGAA,EAAA,GACAA,IAGAF,IAAAE,GAGApmB,EAAAhsD,UAAAmxE,WAAA,SAAAzxD,EAAAO,EAAAiI,EAAAjB,GACA,IACA,IAAAorD,EAAAjzE,KAAAkzE,kBAAA5yD,EAAAO,GACAsJ,EAAAnqB,KAAAmzE,wBAAA7yD,EAAAwI,EAAAjI,EAAAoyD,GACA/uC,EAAA,MAAArc,EAAA,KAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA+nB,4BAEA,SAAA+a,EAAA,CACA,IAAAogC,GAAA2O,EAAA,GAAAA,EAAA,MAEApyD,IAEAyjD,EAAAhkD,EAAAS,UAAA,EAAAujD,GAGApgC,EAAAE,yBAAA,IAAAjiB,EAAA/gB,QAAAkjE,EAAAx7C,IAGA,IAAAsqD,EAAApzE,KAAAqzE,oBAAA/yD,EAAA6J,GAAA,GACAmpD,EAAAtzE,KAAAqzE,oBAAA/yD,EAAA6J,GAAA,GACA,WAAAqnD,EAAApwE,QAAA,KAAAgyE,EAAAnyC,WAAAqyC,EAAAryC,WAAAmyC,EAAAL,qBAAA,EAAAO,EAAAP,qBAAA5oD,GACK,MAAA8J,GACL,cAIA24B,EAAAhsD,UAAAyyE,oBAAA,SAAA/yD,EAAA6J,EAAAopD,GAGA,IAFA,IAAA3pD,EAAA5pB,KAAAwzE,2BAEArxE,EAAA,EAAmBA,EAAAynB,EAAAjoB,OAAqBQ,IACxCynB,EAAAznB,GAAA,EAGA,GAAAoxE,EACArwC,EAAA9hC,QAAA4oB,uBAAA1J,EAAA6J,EAAAspD,cAAA,GAAA7pD,OACK,CACLsZ,EAAA9hC,QAAAuoB,cAAArJ,EAAA6J,EAAAspD,cAAA,KAAA7pD,GAEA,QAAAloB,EAAA,EAAAsG,EAAA4hB,EAAAjoB,OAAA,EAA8CD,EAAAsG,EAAOtG,IAAAsG,IAAA,CACrD,IAAAzE,EAAAqmB,EAAAloB,GACAkoB,EAAAloB,GAAAkoB,EAAA5hB,GACA4hB,EAAA5hB,GAAAzE,GAIA,IAAAmwE,EAAAH,EAAA,MACAI,EAAA3xE,EAAAZ,QAAA0zB,IAAA,IAAA9V,WAAA4K,IAAA8pD,EACAE,EAAA5zE,KAAA6zE,eACAC,EAAA9zE,KAAA+zE,gBACAC,EAAAh0E,KAAAi0E,uBACAC,EAAAl0E,KAAAm0E,wBAEA,IAAAzyE,EAAA,EAAmBA,EAAAkoB,EAAAjoB,OAAqBD,IAAA,CACxC,IAAAX,EAAA6oB,EAAAloB,GAAAiyE,EACAlkD,EAAA3lB,KAAA2F,MAAA1O,EAAA,IAEA0uB,EAAA,EACAA,EAAA,EACOA,EAAA,IACPA,EAAA,GAGA,IAAAvnB,EAAA4B,KAAA2F,MAAA/N,EAAA,GAEA,OAAAA,IACAkyE,EAAA1rE,GAAAunB,EACAukD,EAAA9rE,GAAAnH,EAAA0uB,IAEAqkD,EAAA5rE,GAAAunB,EACAykD,EAAAhsE,GAAAnH,EAAA0uB,GAIAzvB,KAAAo0E,oBAAAb,EAAAG,GACA,IAAAW,EAAA,EACAC,EAAA,EAEA,IAAA5yE,EAAAkyE,EAAAjyE,OAAA,EAAsCD,GAAA,EAAQA,IAC9C4yE,GAAA,EACAA,GAAAV,EAAAlyE,GACA2yE,GAAAT,EAAAlyE,GAGA,IAAA6yE,EAAA,EACAC,EAAA,EAEA,IAAA9yE,EAAAoyE,EAAAnyE,OAAA,EAAuCD,GAAA,EAAQA,IAC/C6yE,GAAA,EACAA,GAAAT,EAAApyE,GACA8yE,GAAAV,EAAApyE,GAGA,IAAA+yE,EAAAH,EAAA,EAAAC,EAEA,GAAAhB,EAAA,CACA,UAAAc,MAAA,IAAAA,EAAA,EACA,UAAA3sD,EAAAtmB,QAGA,IAAAssD,GAAA,GAAA2mB,GAAA,EAEAK,EAAA,GADAC,EAAA/nB,EAAAgoB,mBAAAlnB,IAEAmnB,EAAAlD,EAAAvwE,QAAA0zE,YAAAlB,EAAAe,GAAA,GACAI,EAAApD,EAAAvwE,QAAA0zE,YAAAhB,EAAAY,GAAA,GACAM,EAAApoB,EAAAqoB,0BAAAvnB,GACAwnB,EAAAtoB,EAAAuoB,aAAAznB,GACA,WAAAgkB,EAAAtwE,QAAAyzE,EAAAG,EAAAD,EAAAG,EAAAT,GAEA,UAAAD,MAAA,IAAAA,EAAA,EACA,UAAA9sD,EAAAtmB,QAGAssD,GAAA,GAAA8mB,GAAA,EAEAE,EAAA,GADAC,EAAA/nB,EAAAwoB,kBAAA1nB,IAEAmnB,EAAAlD,EAAAvwE,QAAA0zE,YAAAlB,EAAAe,GAAA,GACAI,EAAApD,EAAAvwE,QAAA0zE,YAAAhB,EAAAY,GAAA,GAJA,IACAC,EAIAU,EAAAzoB,EAAA0oB,wBAAA5nB,GACAwnB,EAAAtoB,EAAA2oB,YAAA7nB,GACA,WAAAgkB,EAAAtwE,QAAA2zE,EAAAM,EAAAR,EAAAK,EAAAT,IAIA7nB,EAAAhsD,UAAAsyE,kBAAA,SAAA5yD,EAAAk1D,GACA,IAAA5rD,EAAA5pB,KAAAy1E,0BACA7rD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAKA,IAJA,IAAAhL,EAAA0B,EAAAS,UACA+I,GAAA,EACA0a,EAAA,EAEAA,EAAA5lB,GAGA42D,KAFA1rD,GAAAxJ,EAAAT,IAAA2kB,KAOAA,IAMA,IAHA,IAAAza,EAAA,EACAic,EAAAxB,EAEAriC,EAAAqiC,EAA2BriC,EAAAyc,EAAWzc,IACtC,GAAAme,EAAAT,IAAA1d,KAAA2nB,EACAF,EAAAG,SACO,CACP,OAAAA,EAAA,CACA,GAAAwnD,EAAAnwE,QAAAs0E,gBAAA9rD,GACA,OAAAoc,EAAA7jC,GAGA6jC,GAAApc,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,KACAA,EAAA,KACAG,SAEAA,IAGAH,EAAAG,GAAA,EACAD,KAIA,UAAApC,EAAAtmB,SAGAwrD,EAAAhsD,UAAAuyE,wBAAA,SAAA7yD,EAAAwI,EAAAjI,EAAAoyD,GAKA,IAHA,IAAA0C,EAAAr1D,EAAAT,IAAAozD,EAAA,IACA2C,EAAA3C,EAAA,KAEA2C,GAAA,GAAAD,IAAAr1D,EAAAT,IAAA+1D,IACAA,IAGAA,IACA,IAAAC,EAAA5C,EAAA,GAAA2C,EAEAhsD,EAAA5pB,KAAAy1E,0BACAzvE,EAAA,IAAAzF,MAAAqpB,EAAAjoB,QACA4c,EAAAnd,QAAAqR,UAAAmX,EAAA,EAAA5jB,EAAA,EAAA4jB,EAAAjoB,OAAA,GACAqE,EAAA,GAAA6vE,EACA,IAAA90E,EAAAf,KAAA81E,iBAAA9vE,EAAA4mD,EAAAmpB,iBACArsE,EAAAksE,EACAjsE,EAAAspE,EAAA,GAQA,OANApyD,IAEAnX,EAAA4W,EAAAS,UAAA,EAAArX,EACAC,EAAA2W,EAAAS,UAAA,EAAApX,GAGA,IAAA8nE,EAAArwE,QAAAL,EAAA,CAAA60E,EAAA3C,EAAA,IAAAvpE,EAAAC,EAAAmf,IAGA8jC,EAAAhsD,UAAAwzE,oBAAA,SAAAb,EAAAG,GACA,IAAAW,EAAAryE,EAAAZ,QAAA0zB,IAAA,IAAA9V,WAAAhf,KAAA6zE,iBACAW,EAAAxyE,EAAAZ,QAAA0zB,IAAA,IAAA9V,WAAAhf,KAAA+zE,kBACAiC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEA5C,GACAc,EAAA,GACA4B,GAAA,EACO5B,EAAA,IACP2B,GAAA,GAGAxB,EAAA,GACA2B,GAAA,EACO3B,EAAA,IACP0B,GAAA,KAGA7B,EAAA,GACA4B,GAAA,EACO5B,EAAA,IACP2B,GAAA,GAGAxB,EAAA,GACA2B,GAAA,EACO3B,EAAA,IACP0B,GAAA,IAIA,IAAAE,EAAA/B,EAAAG,EAAAd,EACA2C,GAAA,EAAAhC,MAAAd,EAAA,KACA+C,EAAA,OAAA9B,GAEA,OAAA4B,EACA,GAAAC,EAAA,CACA,GAAAC,EACA,UAAA5uD,EAAAtmB,QAGA60E,GAAA,MACO,CACP,IAAAK,EACA,UAAA5uD,EAAAtmB,QAGA+0E,GAAA,OAEK,QAAAC,EACL,GAAAC,EAAA,CACA,GAAAC,EACA,UAAA5uD,EAAAtmB,QAGA40E,GAAA,MACO,CACP,IAAAM,EACA,UAAA5uD,EAAAtmB,QAGA80E,GAAA,MAEK,QAAAE,EAqBL,UAAA1uD,EAAAtmB,QApBA,GAAAi1E,EAAA,CACA,IAAAC,EACA,UAAA5uD,EAAAtmB,QAIAizE,EAAAG,GACAwB,GAAA,EACAG,GAAA,IAEAF,GAAA,EACAC,GAAA,QAGA,GAAAI,EACA,UAAA5uD,EAAAtmB,QAQA,GAAA40E,EAAA,CACA,GAAAC,EACA,UAAAvuD,EAAAtmB,QAGAmwE,EAAAnwE,QAAAm1E,UAAAv2E,KAAA6zE,eAAA7zE,KAAAi0E,wBAOA,GAJAgC,GACA1E,EAAAnwE,QAAAo1E,UAAAx2E,KAAA6zE,eAAA7zE,KAAAi0E,wBAGAiC,EAAA,CACA,GAAAC,EACA,UAAAzuD,EAAAtmB,QAGAmwE,EAAAnwE,QAAAm1E,UAAAv2E,KAAA+zE,gBAAA/zE,KAAAi0E,wBAGAkC,GACA5E,EAAAnwE,QAAAo1E,UAAAx2E,KAAA+zE,gBAAA/zE,KAAAm0E,0BAIAvnB,EAAAqoB,0BAAA,iBACAroB,EAAA0oB,wBAAA,aACA1oB,EAAAuoB,aAAA,sBACAvoB,EAAA2oB,YAAA,kBACA3oB,EAAAgoB,mBAAA,YACAhoB,EAAAwoB,kBAAA,UACAxoB,EAAAmpB,gBAAA,4FACAnpB,EA/aA,CAgbC2kB,EAAAnwE,SAEDvB,EAAAuB,QAAAwrD,gCC9eAxsD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA01E,EAEA,WACA,SAAAA,EAAA11E,EAAA0zE,GACAz0E,KAAAe,QACAf,KAAAy0E,kBA4BA,OAzBAgC,EAAA71E,UAAAqgC,SAAA,WACA,OAAAjhC,KAAAe,OAGA01E,EAAA71E,UAAAmyE,mBAAA,WACA,OAAA/yE,KAAAy0E,iBAGAgC,EAAA71E,UAAAgC,SAAA,WACA,OAAA5C,KAAAe,MAAA,IAAAf,KAAAy0E,gBAAA,KAGAgC,EAAA71E,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAA20D,GACA,SAGA,IAAApyE,EAAAyd,EACA,OAAA9hB,KAAAe,QAAAsD,EAAAtD,OAAAf,KAAAy0E,kBAAApwE,EAAAowE,iBAGAgC,EAAA71E,UAAA8B,SAAA,WACA,OAAA1C,KAAAe,MAAAf,KAAAy0E,iBAGAgC,EA/BA,GAkCA52E,EAAAuB,QAAAq1E,gCCzBA,IAAA12E,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiiC,EAAsBljC,EAAQ,GAE9B0nB,EAAuB1nB,EAAQ,GAE/BmjC,EAAenjC,EAAQ,IAEvBqiB,EAAoBriB,EAAQ,GAE5BojC,EAAmBpjC,EAAQ,IAE3B2e,EAAsB3e,EAAQ,IAE9Bye,EAAeze,EAAQ,IAEvBk6B,EAAwBl6B,EAAQ,GAEhC4nB,EAA0B5nB,EAAQ,GAQlC4sD,EAEA,SAAAzrD,GAGA,SAAAyrD,IACA,IAAAp6C,EAAA,OAAArR,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAIA,OADAsS,EAAAokE,iBAAA,EACApkE,EAmUA,OA1UAvS,EAAA2sD,EAAAzrD,GAiBAyrD,EAAA9rD,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GAEA,IAAA+b,EAAA5jC,KAAA22E,YAAAr2D,GACAqkB,EAAA3kC,KAAA4kC,UAAAtkB,GACA5L,EAAA,IAAA+J,EAAArd,QACAsrD,EAAApoB,aAAAhkB,EAAAsjB,EAAA,GAAAe,EAAA,GAAAjwB,GACA,IAAA+vB,EAAA/vB,EAAA9R,WACAg0E,EAAA,KAEA,MAAA/uD,IACA+uD,EAAA/uD,EAAAhI,IAAA2H,EAAApmB,QAAAy1E,kBAGA,MAAAD,IACAA,EAAAlqB,EAAAoqB,yBASA,IAJA,IAAAn1E,EAAA8iC,EAAA9iC,OACAo1E,GAAA,EACAC,EAAA,EAEAx2C,EAAA,EAAAy2C,EAAAL,EAAuDp2C,EAAAy2C,EAAAt1E,OAA8B6+B,IAAA,CACrF,IAAAz/B,EAAAk2E,EAAAz2C,GAEA,GAAA7+B,IAAAZ,EAAA,CACAg2E,GAAA,EACA,MAGAh2E,EAAAi2E,IACAA,EAAAj2E,GAQA,IAJAg2E,GAAAp1E,EAAAq1E,IACAD,GAAA,IAGAA,EACA,UAAA/8C,EAAA54B,QAGA,IAAAknB,EAAA,KAAAnG,EAAA/gB,QAAAwiC,EAAA,GAAA9a,GAAA,IAAA3G,EAAA/gB,QAAAujC,EAAA,GAAA7b,IAGA,OAFA,IAAAma,EAAA7hC,QAAAqjC,EAAA,KACA,EAAAnc,EAAA0a,EAAA5hC,QAAAooD,KAAA,IAAA12C,MAAAoyB,YAYAwnB,EAAApoB,aAAA,SAAAhkB,EAAA42D,EAAAC,EAAA1yC,GAMA,IAAA2yC,EAAA,IAAA72E,MAAA,IAEA82E,EAAA,IAAA92E,MAAA,GAEA+2E,EAAA,IAAA/2E,MAAA,GAMA,IAJA62E,EAAA5rE,KAAA,GACA6rE,EAAA7rE,KAAA,GACA8rE,EAAA9rE,KAAA,GAEA0rE,EAAAC,GAAA,CAEAj0C,EAAA9hC,QAAAuoB,cAAArJ,EAAA42D,EAAAE,GAEA,QAAAzjE,EAAA,EAAqBA,EAAA,EAAOA,IAAA,CAC5B,IAAA4jE,EAAA,EAAA5jE,EACA0jE,EAAA1jE,GAAAyjE,EAAAG,GACAD,EAAA3jE,GAAAyjE,EAAAG,EAAA,GAGA,IAAAlxC,EAAAqmB,EAAAvmB,YAAAkxC,GACA5yC,EAAAxiB,OAAAokB,EAAAzjC,YACAyjC,EAAArmC,KAAAmmC,YAAAmxC,GACA7yC,EAAAxiB,OAAAokB,EAAAzjC,YACAw0E,EAAAjlE,QAAA,SAAAqlE,GACAN,GAAAM,MAaA9qB,EAAA9rD,UAAA+1E,YAAA,SAAAr2D,GACA,IAAAikB,EAAAmoB,EAAA+qB,eAAAn3D,GACAo3D,EAAAhrB,EAAA5oB,iBAAAxjB,EAAAikB,EAAAmoB,EAAAirB,eAMA,OAFA33E,KAAA02E,iBAAAgB,EAAA,GAAAA,EAAA,MACA13E,KAAA43E,kBAAAt3D,EAAAo3D,EAAA,IACAA,GAmBAhrB,EAAA9rD,UAAAg3E,kBAAA,SAAAt3D,EAAAo3D,GACA,IAAAG,EAAA,GAAA73E,KAAA02E,gBAGAmB,IAAAH,EAAAG,EAAAH,EAEA,QAAAh2E,EAAAg2E,EAAA,EAAkCG,EAAA,GAAAn2E,GAAA,IAClC4e,EAAAT,IAAAne,GAD4DA,IAK5Dm2E,IAGA,OAAAA,EAEA,UAAAnwD,EAAAtmB,SAaAsrD,EAAA+qB,eAAA,SAAAn3D,GACA,IAAA1B,EAAA0B,EAAAS,UACAwjB,EAAAjkB,EAAAgV,WAAA,GAEA,GAAAiP,IAAA3lB,EACA,UAAA8I,EAAAtmB,QAGA,OAAAmjC,GAWAmoB,EAAA9rD,UAAAgkC,UAAA,SAAAtkB,GAGAA,EAAAgB,UAEA,IACA,IAAAijB,EAAAmoB,EAAA+qB,eAAAn3D,GACAw3D,OAAA,EAEA,IACAA,EAAAprB,EAAA5oB,iBAAAxjB,EAAAikB,EAAAmoB,EAAAqrB,qBAAA,IACO,MAAA/2E,GACP82E,EAAAprB,EAAA5oB,iBAAAxjB,EAAAikB,EAAAmoB,EAAAqrB,qBAAA,IAMA/3E,KAAA43E,kBAAAt3D,EAAAw3D,EAAA,IAIA,IAAAv0E,EAAAu0E,EAAA,GAGA,OAFAA,EAAA,GAAAx3D,EAAAS,UAAA+2D,EAAA,GACAA,EAAA,GAAAx3D,EAAAS,UAAAxd,EACAu0E,EACK,QAELx3D,EAAAgB,YAeAorC,EAAA5oB,iBAAA,SAAAxjB,EAAAkkB,EAAAra,GACA,IAAAG,EAAAH,EAAAxoB,OACAioB,EAAA,IAAArpB,MAAA+pB,GACA1L,EAAA0B,EAAAS,UACA+I,GAAA,EACAC,EAAA,EACAic,EAAAxB,EACA5a,EAAApe,KAAA,GAEA,QAAArJ,EAAAqiC,EAA2BriC,EAAAyc,EAAWzc,IACtC,GAAAme,EAAAT,IAAA1d,KAAA2nB,EACAF,EAAAG,SACO,CACP,GAAAA,IAAAO,EAAA,GACA,GAAA4Y,EAAA9hC,QAAA8oB,qBAAAN,EAAAO,EAAAuiC,EAAAzmB,yBAAAymB,EAAAxmB,iBACA,OAAAF,EAAA7jC,GAGA6jC,GAAApc,EAAA,GAAAA,EAAA,GACArL,EAAAnd,QAAAqR,UAAAmX,EAAA,EAAAA,EAAA,EAAAG,EAAA,GACAH,EAAAG,EAAA,KACAH,EAAAG,GAAA,EACAA,SAEAA,IAGAH,EAAAG,GAAA,EACAD,KAIA,UAAApC,EAAAtmB,SAYAsrD,EAAAvmB,YAAA,SAAAvc,GAMA,IALA,IAAAwc,EAAAsmB,EAAAxmB,iBAEAG,GAAA,EACA75B,EAAAkgD,EAAAsrB,SAAAr2E,OAEAD,EAAA,EAAmBA,EAAA8K,EAAS9K,IAAA,CAC5B,IAAAyoB,EAAAuiC,EAAAsrB,SAAAt2E,GACAkpB,EAAAsY,EAAA9hC,QAAA8oB,qBAAAN,EAAAO,EAAAuiC,EAAAzmB,yBAEArb,EAAAwb,GACAA,EAAAxb,EACAyb,EAAA3kC,GACOkpB,IAAAwb,IAEPC,GAAA,GAIA,GAAAA,GAAA,EACA,OAAAA,EAAA,GAEA,UAAA3e,EAAAtmB,SAIAsrD,EAAAurB,EAAA,EAEAvrB,EAAA5f,EAAA,EAEA4f,EAAAwrB,EAAA,EAEAxrB,EAAAsrB,SAAA,kPAEAtrB,EAAAxmB,iBAAA,IACAwmB,EAAAzmB,wBAAA,GAGAymB,EAAAoqB,wBAAA,eAQApqB,EAAAirB,cAAA,UACAjrB,EAAAqrB,qBAAA,kBAEArrB,EA3UA,CA4UCxpB,EAAA9hC,SAEDvB,EAAAuB,QAAAsrD,gCCvYA,IAAA3sD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAiiC,EAAsBljC,EAAQ,GAE9Bq4E,EAAqBr4E,EAAQ,IAE7B4nB,EAA0B5nB,EAAQ,GAUlC0sD,EAEA,SAAAvrD,GAGA,SAAAurD,IACA,IAAAl6C,EAAArR,EAAAa,KAAA9B,YAGA,OADAsS,EAAA8lE,qBAAA,UACA9lE,EA+DA,OArEAvS,EAAAysD,EAAAvrD,GASAurD,EAAA5rD,UAAA0jC,aAAA,SAAAhkB,EAAAsjB,EAAAa,GACA,IAAA7a,EAAA5pB,KAAAo4E,qBACAxuD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAKA,IAJA,IAAAjgB,EAAA2W,EAAAS,UACAyjB,EAAAZ,EAAA,GACAy0C,EAAA,EAEAl2E,EAAA,EAAmBA,EAAA,GAAAqiC,EAAA76B,EAA0BxH,IAAA,CAC7C,IAAAkkC,EAAA8xC,EAAA/2E,QAAA+kC,YAAA7lB,EAAAsJ,EAAA4a,EAAA2zC,EAAA/2E,QAAAkiC,kBACAmB,GAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAAs9B,EAAA,IAEA,QAAA7F,EAAA,EAAA0uC,EAAAtlD,EAA6C4W,EAAA0uC,EAAAvtE,OAAwB6+B,IAAA,CAErEgE,GADA0qC,EAAA1uC,GAIA6F,GAAA,KACAgyC,GAAA,KAAAl2E,GAIAsiC,EAAA+nB,EAAA8rB,oBAAA7zC,EAAA4zC,GAEA7zC,EADA2zC,EAAA/2E,QAAA0iC,iBAAAxjB,EAAAkkB,GAAA,EAAA2zC,EAAA/2E,QAAAklC,eAAA,IAAA/lC,MAAA43E,EAAA/2E,QAAAklC,eAAA3kC,QAAA6J,KAAA,IACA,GAEA,IAAArJ,EAAA,EAAmBA,EAAA,GAAAqiC,EAAA76B,EAA0BxH,IAAA,CAC7CkkC,EAAA8xC,EAAA/2E,QAAA+kC,YAAA7lB,EAAAsJ,EAAA4a,EAAA2zC,EAAA/2E,QAAAmiC,YACAkB,GAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAAs9B,GAEA,QAAAzF,EAAA,EAAA23C,EAAA3uD,EAA6CgX,EAAA23C,EAAA52E,OAAwBi/B,IAAA,CAErE4D,GADA+zC,EAAA33C,IAKA,OACA4D,YACAC,iBAIA+nB,EAAA5rD,UAAAoiB,iBAAA,WACA,OAAAggB,EAAA5hC,QAAAqkC,QAGA+mB,EAAA8rB,oBAAA,SAAA7zC,EAAA4zC,GACA,QAAAn4E,EAAA,EAAmBA,EAAA,GAAQA,IAC3B,GAAAm4E,IAAAr4E,KAAAw4E,sBAAAt4E,GAEA,OADAukC,EAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAA7I,GAAAukC,EAKA,UAAA/c,EAAAtmB,SAGAorD,EAAAgsB,sBAAA,+BACAhsB,EAtEA,CAuEC2rB,EAAA/2E,SAEDvB,EAAAuB,QAAAorD,gCCvHApsD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAymB,EAAuB1nB,EAAQ,GAE/BkjC,EAAsBljC,EAAQ,GAE9BisD,EAAqBjsD,EAAQ,IAE7B+sD,EAA8B/sD,EAAQ,IAEtCgsD,EAAyBhsD,EAAQ,IAEjC4nB,EAA0B5nB,EAAQ,GAElC+pD,EAAwB/pD,EAAQ,KAahCwqD,EAEA,WACA,SAAAA,KA8JA,OA/HAA,EAAA1pD,UAAAgnB,OAAA,SAAA1I,EAAA2I,GAEA,OADA7nB,KAAAy4E,SAAA5wD,GACA7nB,KAAA04E,eAAAx5D,IAaAorC,EAAA1pD,UAAA+3E,gBAAA,SAAAz5D,GAMA,OAJA,OAAAlf,KAAAgpD,cAAA9jD,IAAAlF,KAAAgpD,SACAhpD,KAAAy4E,SAAA,MAGAz4E,KAAA04E,eAAAx5D,IAWAorC,EAAA1pD,UAAA63E,SAAA,SAAA5wD,GACA7nB,KAAA6nB,QACA,IAAAY,EAAA,OAAAZ,QAAA3iB,IAAA2iB,QAAA3iB,IAAA2iB,EAAAhI,IAAA2H,EAAApmB,QAAA4mB,YAGA4wD,EAAA,OAAA/wD,QAAA3iB,IAAA2iB,EAAA,KAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA8nD,kBACAF,EAAA,IAAAzoD,MAEA,UAAAq4E,QAAA1zE,IAAA0zE,EAAA,CACA,IAAAC,EAAAD,EAAAE,KAAA,SAAAre,GACA,OAAAA,IAAAz3B,EAAA5hC,QAAAskC,OAAA+0B,IAAAz3B,EAAA5hC,QAAA23E,OAAAte,IAAAz3B,EAAA5hC,QAAAqkC,QAAAg1B,IAAAz3B,EAAA5hC,QAAAioD,OAAAoR,IAAAz3B,EAAA5hC,QAAA43E,SAAAve,IAAAz3B,EAAA5hC,QAAAkoD,SAAAmR,IAAAz3B,EAAA5hC,QAAA63E,SAAAxe,IAAAz3B,EAAA5hC,QAAAmoD,UAAAkR,IAAAz3B,EAAA5hC,QAAAooD,KAAAiR,IAAAz3B,EAAA5hC,QAAAqoD,QAAAgR,IAAAz3B,EAAA5hC,QAAA83E,eAIAL,IAAApwD,GACAugC,EAAAlgD,KAAA,IAAA+jD,EAAAzrD,QAAAymB,IAGA+wD,EAAA7rE,SAAAi2B,EAAA5hC,QAAAq0C,UACAuT,EAAAlgD,KAAA,IAAAijD,EAAA3qD,SAGAw3E,EAAA7rE,SAAAi2B,EAAA5hC,QAAAu/C,cACAqI,EAAAlgD,KAAA,IAAAgjD,EAAA1qD,SAaAy3E,GAAApwD,GACAugC,EAAAlgD,KAAA,IAAA+jD,EAAAzrD,QAAAymB,IAIA,IAAAmhC,EAAArnD,SACA8mB,GACAugC,EAAAlgD,KAAA,IAAA+jD,EAAAzrD,QAAAymB,IAGAmhC,EAAAlgD,KAAA,IAAAijD,EAAA3qD,SACA4nD,EAAAlgD,KAAA,IAAAgjD,EAAA1qD,SAIAqnB,GACAugC,EAAAlgD,KAAA,IAAA+jD,EAAAzrD,QAAAymB,KAIA7nB,KAAAgpD,WAKAsB,EAAA1pD,UAAA2nB,MAAA,WACA,UAAAvoB,KAAAgpD,QACA,QAAAxoB,EAAA,EAAAI,EAAA5gC,KAAAgpD,QAAyCxoB,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACzDI,EAAAJ,GACAjY,UASA+hC,EAAA1pD,UAAA83E,eAAA,SAAAx5D,GACA,UAAAlf,KAAAgpD,QACA,UAAAa,EAAAzoD,QAAA,mDAGA,QAAAo/B,EAAA,EAAAI,EAAA5gC,KAAAgpD,QAAuCxoB,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACvD,IAAAtG,EAAA0G,EAAAJ,GAEA,IACA,OAAAtG,EAAAtS,OAAA1I,EAAAlf,KAAA6nB,OACO,MAAAsxD,GACP,GAAAA,aAAAtvB,EAAAzoD,QACA,UAMA,UAAAsmB,EAAAtmB,QAAA,yDAGAkpD,EA/JA,GAkKAzqD,EAAAuB,QAAAkpD,gCChNA,IAAAvqD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAMA+oD,EAEA,SAAA7oD,GAGA,SAAA6oD,IACA,cAAA7oD,KAAAC,MAAAlB,KAAAmB,YAAAnB,KAGA,OANAD,EAAA+pD,EAAA7oD,GAMA6oD,EAPA,CARkBhqD,EAAQ,IAgBzBsB,SAEDvB,EAAAuB,QAAA0oD,gCCjCA1pD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAiiC,EAAsBljC,EAAQ,GAE9B8gD,EAAuB9gD,EAAQ,IAE/By0C,EAAkBz0C,EAAQ,IAE1BosD,EAA6BpsD,EAAQ,IAErCssD,EAAgBtsD,EAAQ,IAExB4e,EAAiC5e,EAAQ,GAEzCm3C,EAA8Bn3C,EAAQ,IAUtCmsD,EAEA,WACA,SAAAA,KAuFA,OA7EAA,EAAArrD,UAAA+7C,OAAA,SAAAy8B,EAAA32D,EAAA7D,EAEAC,EAEAgJ,GACA,OAAAuxD,EAAAz3E,OACA,UAAA+c,EAAAtd,QAAA,wBAGA,GAAAqhB,IAAAugB,EAAA5hC,QAAAq0C,QACA,UAAA/2B,EAAAtd,QAAA,oCAAAqhB,GAGA,GAAA7D,EAAA,GAAAC,EAAA,EACA,UAAAH,EAAAtd,QAAA,uCAAAwd,EAAA,IAAAC,GAGA,IAAA0mD,EAAArZ,EAAA9qD,QAAAspC,EACA2uC,EAAAptB,EAAAqtB,gBAEA,OAAAzxD,SACA3iB,IAAA2iB,EAAAhI,IAAA+gC,EAAAx/C,QAAAm4E,oBACAhU,EAAArZ,EAAA9qD,QAAAuE,WAAAkiB,EAAAhI,IAAA+gC,EAAAx/C,QAAAm4E,kBAAA32E,kBAGAsC,IAAA2iB,EAAAhI,IAAA+gC,EAAAx/C,QAAAo4E,UACAH,EAAAlxE,OAAAI,SAAAsf,EAAAhI,IAAA+gC,EAAAx/C,QAAAo4E,QAAA52E,WAAA,MAIA,IAAAiO,EAAAu7C,EAAAhrD,QAAAu7C,OAAAy8B,EAAA7T,EAAA19C,GACA,OAAAokC,EAAAwtB,aAAA5oE,EAAA+N,EAAAC,EAAAw6D,IAKAptB,EAAAwtB,aAAA,SAAA5oE,EAAA+N,EAEAC,EAEAw6D,GAGA,IAAAK,EAAA7oE,EAAA2uB,YAEA,UAAAk6C,EACA,UAAAziC,EAAA71C,QAkBA,IAfA,IAAAu4E,EAAAD,EAAAx5D,WACA05D,EAAAF,EAAAv5D,YACA05D,EAAAF,EAAA,EAAAN,EACAS,EAAAF,EAAA,EAAAP,EACAU,EAAAjwE,KAAA0C,IAAAoS,EAAAi7D,GACAG,EAAAlwE,KAAA0C,IAAAqS,EAAAi7D,GACAG,EAAAnwE,KAAAC,IAAAD,KAAA2F,MAAAsqE,EAAAF,GAAA/vE,KAAA2F,MAAAuqE,EAAAF,IAKAI,EAAApwE,KAAA2F,OAAAsqE,EAAAJ,EAAAM,GAAA,GACAE,EAAArwE,KAAA2F,OAAAuqE,EAAAJ,EAAAK,GAAA,GACA5d,EAAA,IAAA9nB,EAAAnzC,QAAA24E,EAAAC,GAEAI,EAAA,EAAAC,EAAAF,EAA8CC,EAAAR,EAAsBQ,IAAAC,GAAAJ,EAEpE,QAAAK,EAAA,EAAAC,EAAAL,EAAiDI,EAAAX,EAAqBW,IAAAC,GAAAN,EACtE,IAAAP,EAAA75D,IAAAy6D,EAAAF,IACA/d,EAAA37C,UAAA65D,EAAAF,EAAAJ,KAKA,OAAA5d,GAGApQ,EAAAqtB,gBAAA,EACArtB,EAxFA,GA2FApsD,EAAAuB,QAAA6qD,iCCvIA,SAAAuuB,IAEA,wBAAAC,gCAAA,oBAAAA,+BAAAD,SAeA,IAEAC,+BAAAD,YACG,MAAAvmD,GAGH+Y,QAAAnR,MAAA5H,IAOAumD,GACA56E,EAAAC,QAAmBC,EAAQ,mCC/B3BD,EAAA66E,YAAA,EAEA,IAEAC,EAAAC,EAFa96E,EAAQ,IAMrB+6E,EAAAD,EAFsB96E,EAAQ,MAI9B,SAAA86E,EAAAh1E,GACA,OAAAA,KAAA80E,WAAA90E,EAAA,CACAxE,QAAAwE,GAIA/F,EAAAuB,QAAAu5E,EAAAv5E,QAAA05E,eAAAD,EAAAz5E,QACAxB,EAAAC,UAAA,sCCbA,IAAAk7E,EAAcj7E,EAAQ,IAEtBk7E,EAAA,CACAC,mBAAA,EACAC,aAAA,EACAC,cAAA,EACAC,cAAA,EACAvvD,aAAA,EACAwvD,iBAAA,EACAC,0BAAA,EACAC,0BAAA,EACAC,QAAA,EACAC,WAAA,EACAt1E,MAAA,GAEAu1E,EAAA,CACAv0D,MAAA,EACAxlB,QAAA,EACAf,WAAA,EACA+6E,QAAA,EACAC,QAAA,EACAz6E,WAAA,EACA06E,OAAA,GASAC,EAAA,CACAC,UAAA,EACApwE,SAAA,EACAyvE,cAAA,EACAvvD,aAAA,EACA4vD,WAAA,EACAt1E,MAAA,GAEA61E,EAAA,GAGA,SAAAC,EAAA1sD,GACA,OAAAwrD,EAAAmB,OAAA3sD,GACAusD,EAGAE,EAAAzsD,EAAA,WAAAyrD,EAPAgB,EAAAjB,EAAAoB,YAhBA,CACAJ,UAAA,EACApvD,QAAA,EACAyuD,cAAA,EACAvvD,aAAA,EACA4vD,WAAA,GAqBA,IAAA36E,EAAAV,OAAAU,eACAqqC,EAAA/qC,OAAA+qC,oBACAp5B,EAAA3R,OAAA2R,sBACAG,EAAA9R,OAAA8R,yBACAkS,EAAAhkB,OAAAgkB,eACAg4D,EAAAh8E,OAAAQ,UAyCAhB,EAAAC,QAvCA,SAAAw8E,EAAAC,EAAAC,EAAAC,GACA,qBAAAD,EAAA,CAEA,GAAAH,EAAA,CACA,IAAAK,EAAAr4D,EAAAm4D,GAEAE,OAAAL,GACAC,EAAAC,EAAAG,EAAAD,GAIA,IAAA1qE,EAAAq5B,EAAAoxC,GAEAxqE,IACAD,IAAAjG,OAAAkG,EAAAwqE,KAMA,IAHA,IAAAG,EAAAT,EAAAK,GACAK,EAAAV,EAAAM,GAEA76E,EAAA,EAAmBA,EAAAoQ,EAAAnQ,SAAiBD,EAAA,CACpC,IAAAG,EAAAiQ,EAAApQ,GAEA,IAAAg6E,EAAA75E,MAAA26E,MAAA36E,OAAA86E,MAAA96E,OAAA66E,MAAA76E,IAAA,CACA,IAAAkiB,EAAA7R,EAAAqqE,EAAA16E,GAEA,IAEAf,EAAAw7E,EAAAz6E,EAAAkiB,GACS,MAAA9Y,MAIT,OAAAqxE,EAGA,OAAAA,kCCzFA,IAAA3oE,EAAQ7T,EAAQ,IAChBgH,EAAA,oBAAAuE,eAAAuxE,IACAp8E,EAAAsG,EAAAuE,OAAAuxE,IAAA,uBACArkC,EAAAzxC,EAAAuE,OAAAuxE,IAAA,sBACAzkC,EAAArxC,EAAAuE,OAAAuxE,IAAA,wBACA99C,EAAAh4B,EAAAuE,OAAAuxE,IAAA,2BACAC,EAAA/1E,EAAAuE,OAAAuxE,IAAA,wBACAtpD,EAAAxsB,EAAAuE,OAAAuxE,IAAA,wBACA9vC,EAAAhmC,EAAAuE,OAAAuxE,IAAA,uBACAz6E,EAAA2E,EAAAuE,OAAAuxE,IAAA,+BACAx6E,EAAA0E,EAAAuE,OAAAuxE,IAAA,2BACA1Z,EAAAp8D,EAAAuE,OAAAuxE,IAAA,wBACAE,EAAAh2E,EAAAuE,OAAAuxE,IAAA,oBACAG,EAAAj2E,EAAAuE,OAAAuxE,IAAA,oBACAI,EAAA,oBAAA3xE,eAAAuJ,SAkBA,SAAAqoE,EAAArxE,GACA,QAAAzL,EAAAgB,UAAAQ,OAAA,EAAAzB,EAAA,yDAAA0L,EAAAvC,EAAA,EAA6GA,EAAAlJ,EAAOkJ,IACpHnJ,GAAA,WAAAo9C,mBAAAn8C,UAAAkI,EAAA,KAlBA,SAAAuC,EAAAzL,EAAAD,EAAAmJ,EAAA4B,EAAA2Z,EAAAq4B,EAAAwd,GACA,IAAA7uD,EAAA,CAEA,GADAA,OAAA,OACA,IAAAzL,EAAAyL,EAAAlH,MAAA,qIAAiK,CACjK,IAAA8iC,EAAA,CAAAtnC,EAAAmJ,EAAA4B,EAAA2Z,EAAAq4B,EAAAwd,GACA1zD,EAAA,GACA6E,EAAAlH,MAAAvE,EAAAgR,QAAA,iBACA,OAAAq2B,EAAAzgC,SAEAogB,KAAA,sBAGA,MADAvb,EAAAsxE,YAAA,EACAtxE,GASAuxE,EAAA,2BAAAvxE,EAAA,4HAA0C1L,GAG1C,IAAAk9E,EAAA,CACAC,UAAA,WACA,UAEAC,mBAAA,aACAC,oBAAA,aACAC,gBAAA,cAEAC,EAAA,GAEA,SAAAC,EAAA9xE,EAAAzL,EAAAD,GACAF,KAAA2Y,MAAA/M,EACA5L,KAAAgrB,QAAA7qB,EACAH,KAAA29E,KAAAF,EACAz9E,KAAA49E,QAAA19E,GAAAk9E,EAcA,SAAAS,KAIA,SAAAC,EAAAlyE,EAAAzL,EAAAD,GACAF,KAAA2Y,MAAA/M,EACA5L,KAAAgrB,QAAA7qB,EACAH,KAAA29E,KAAAF,EACAz9E,KAAA49E,QAAA19E,GAAAk9E,EAnBAM,EAAA98E,UAAAm9E,iBAAA,GAEAL,EAAA98E,UAAAsZ,SAAA,SAAAtO,EAAAzL,GACA,kBAAAyL,GAAA,oBAAAA,GAAA,MAAAA,GAAAqxE,EAAA,MACAj9E,KAAA49E,QAAAJ,gBAAAx9E,KAAA4L,EAAAzL,EAAA,aAGAu9E,EAAA98E,UAAAo9E,YAAA,SAAApyE,GACA5L,KAAA49E,QAAAN,mBAAAt9E,KAAA4L,EAAA,gBAKAiyE,EAAAj9E,UAAA88E,EAAA98E,UASA,IAAAiqC,EAAAizC,EAAAl9E,UAAA,IAAAi9E,EACAhzC,EAAAlqC,YAAAm9E,EACAnqE,EAAAk3B,EAAA6yC,EAAA98E,WACAiqC,EAAAozC,sBAAA,EACA,IAAAC,EAAA,CACA5rC,QAAA,MAEA6rC,EAAA,CACA7rC,QAAA,MAEA8rC,EAAAh+E,OAAAQ,UAAAH,eACAiqC,EAAA,CACA7oC,KAAA,EACA8vB,KAAA,EACA0sD,QAAA,EACAC,UAAA,GAGA,SAAA3zC,EAAA/+B,EAAAzL,EAAAD,GACA,IAAAmJ,OAAA,EACA4B,EAAA,GACA2Z,EAAA,KACAq4B,EAAA,KACA,SAAA98C,EAAA,IAAAkJ,UAAA,IAAAlJ,EAAAwxB,MAAAsrB,EAAA98C,EAAAwxB,UAAA,IAAAxxB,EAAA0B,MAAA+iB,EAAA,GAAAzkB,EAAA0B,KAAA1B,EACAi+E,EAAAt8E,KAAA3B,EAAAkJ,KAAAqhC,EAAAjqC,eAAA4I,KAAA4B,EAAA5B,GAAAlJ,EAAAkJ,IAEA,IAAAoxD,EAAAt5D,UAAAQ,OAAA,EACA,OAAA84D,EAAAxvD,EAAA2hB,SAAA1sB,OAA8B,KAAAu6D,EAAA,CAC9B,QAAAjzB,EAAAjnC,MAAAk6D,GAAA1zD,EAAA,EAAiCA,EAAA0zD,EAAO1zD,IACxCygC,EAAAzgC,GAAA5F,UAAA4F,EAAA,GAGAkE,EAAA2hB,SAAA4a,EAEA,GAAA57B,KAAAwvE,aAAA,IAAA/xE,KAAAoxD,EAAA7uD,EAAAwvE,kBACA,IAAAnwE,EAAA5B,KAAA4B,EAAA5B,GAAAoxD,EAAApxD,IAEA,OACA0yE,SAAAv7E,EACA2F,KAAAyF,EACA/J,IAAA+iB,EACA+M,IAAAsrB,EACAtkC,MAAA1N,EACAszE,OAAAJ,EAAA7rC,SAeA,SAAA4lC,EAAAtsE,GACA,wBAAAA,GAAA,OAAAA,KAAAmwE,WAAAv7E,EAaA,IAAAg+E,EAAA,OACAC,EAAA,GAEA,SAAA7zC,EAAAh/B,EAAAzL,EAAAD,EAAAmJ,GACA,GAAAo1E,EAAA98E,OAAA,CACA,IAAAsJ,EAAAwzE,EAAA7qE,MAMA,OALA3I,EAAAyJ,OAAA9I,EACAX,EAAAyzE,UAAAv+E,EACA8K,EAAAosD,KAAAn3D,EACA+K,EAAA+f,QAAA3hB,EACA4B,EAAAwkB,MAAA,EACAxkB,EAGA,OACAyJ,OAAA9I,EACA8yE,UAAAv+E,EACAk3D,KAAAn3D,EACA8qB,QAAA3hB,EACAomB,MAAA,GAIA,SAAAkc,EAAA//B,GACAA,EAAA8I,OAAA,KACA9I,EAAA8yE,UAAA,KACA9yE,EAAAyrD,KAAA,KACAzrD,EAAAof,QAAA,KACApf,EAAA6jB,MAAA,EACA,GAAAgvD,EAAA98E,QAAA88E,EAAA31E,KAAA8C,GAkCA,SAAA+yE,EAAA/yE,EAAAzL,EAAAD,GACA,aAAA0L,EAAA,EAhCA,SAAAgzE,EAAAhzE,EAAAzL,EAAAD,EAAAmJ,GACA,IAAA4B,SAAAW,EACA,cAAAX,GAAA,YAAAA,IAAAW,EAAA,MACA,IAAAgZ,GAAA,EACA,UAAAhZ,EAAAgZ,GAAA,OAAyB,OAAA3Z,GACzB,aACA,aACA2Z,GAAA,EACA,MAEA,aACA,OAAAhZ,EAAAmwE,UACA,KAAAv7E,EACA,KAAA+3C,EACA3zB,GAAA,GAIA,GAAAA,EAAA,OAAA1kB,EAAAmJ,EAAAuC,EAAA,KAAAzL,EAAA,IAAA0+E,EAAAjzE,EAAA,GAAAzL,GAAA,EAGA,GAFAykB,EAAA,EACAzkB,EAAA,KAAAA,EAAA,IAAAA,EAAA,IACAI,MAAAyD,QAAA4H,GAAA,QAAAqxC,EAAA,EAAuCA,EAAArxC,EAAAjK,OAAcs7C,IAAA,CAErD,IAAAwd,EAAAt6D,EAAA0+E,EADA5zE,EAAAW,EAAAqxC,GACAA,GACAr4B,GAAAg6D,EAAA3zE,EAAAwvD,EAAAv6D,EAAAmJ,QACG,GAAAoxD,EAAA,OAAA7uD,GAAA,kBAAAA,EAAA,yBAAA6uD,EAAAuiB,GAAApxE,EAAAoxE,IAAApxE,EAAA,eAAA6uD,EAAA,yBAAAA,EAAA,IAAA7uD,EAAA6uD,EAAA34D,KAAA8J,GAAAqxC,EAAA,IAA0LhyC,EAAAW,EAAA6iC,QAAAgoB,MAC7L7xC,GAAAg6D,EAAA3zE,IAAAlK,MAAA05D,EAAAt6D,EAAA0+E,EAAA5zE,EAAAgyC,KAAA/8C,EAAAmJ,OACG,WAAA4B,GAAAgyE,EAAA,0BAAA/8E,EAAA,GAAA0L,GAAA,qBAA0FxL,OAAA0R,KAAAlG,GAAAc,KAAA,UAAkCxM,EAAA,IAC/H,OAAA0kB,EAIAg6D,CAAAhzE,EAAA,GAAAzL,EAAAD,GAGA,SAAA2+E,EAAAjzE,EAAAzL,GACA,wBAAAyL,GAAA,OAAAA,GAAA,MAAAA,EAAA/J,IA9EA,SAAA+J,GACA,IAAAzL,EAAA,CACA2+E,IAAA,KACAC,IAAA,MAEA,cAAAnzE,GAAAuF,QAAA,iBAAAvF,GACA,OAAAzL,EAAAyL,KAwEAozE,CAAApzE,EAAA/J,KAAA1B,EAAAyC,SAAA,IAGA,SAAAq8E,EAAArzE,EAAAzL,GACAyL,EAAAyrD,KAAAv1D,KAAA8J,EAAAof,QAAA7qB,EAAAyL,EAAA6jB,SAGA,SAAAyvD,EAAAtzE,EAAAzL,EAAAD,GACA,IAAAmJ,EAAAuC,EAAA8I,OACAzJ,EAAAW,EAAA8yE,UACA9yE,IAAAyrD,KAAAv1D,KAAA8J,EAAAof,QAAA7qB,EAAAyL,EAAA6jB,SACAlvB,MAAAyD,QAAA4H,GAAAuzE,EAAAvzE,EAAAvC,EAAAnJ,EAAA,SAAA0L,GACA,OAAAA,IACG,MAAAA,IAAAssE,EAAAtsE,OA1GH,SAAAA,EAAAzL,GACA,OACA47E,SAAAv7E,EACA2F,KAAAyF,EAAAzF,KACAtE,IAAA1B,EACAwxB,IAAA/lB,EAAA+lB,IACAhZ,MAAA/M,EAAA+M,MACA4lE,OAAA3yE,EAAA2yE,QAmGGa,CAAAxzE,EAAAX,IAAAW,EAAA/J,KAAA1B,KAAA0B,MAAA+J,EAAA/J,IAAA,OAAA+J,EAAA/J,KAAAsP,QAAAqtE,EAAA,YAAAt+E,IAAAmJ,EAAAP,KAAA8C,IAGH,SAAAuzE,EAAAvzE,EAAAzL,EAAAD,EAAAmJ,EAAA4B,GACA,IAAA2Z,EAAA,GACA,MAAA1kB,IAAA0kB,GAAA,GAAA1kB,GAAAiR,QAAAqtE,EAAA,YAEAG,EAAA/yE,EAAAszE,EADA/+E,EAAAyqC,EAAAzqC,EAAAykB,EAAAvb,EAAA4B,IAEA0gC,EAAAxrC,GAGA,SAAA83E,IACA,IAAArsE,EAAAsyE,EAAA5rC,QAEA,OADA,OAAA1mC,GAAAqxE,EAAA,OACArxE,EAGA,IAAAyzE,EAAA,CACA7vD,SAAA,CACAxR,IAAA,SAAApS,EAAAzL,EAAAD,GACA,SAAA0L,EAAA,OAAAA,EACA,IAAAvC,EAAA,GAEA,OADA81E,EAAAvzE,EAAAvC,EAAA,KAAAlJ,EAAAD,GACAmJ,GAEA8I,QAAA,SAAAvG,EAAAzL,EAAAD,GACA,SAAA0L,EAAA,OAAAA,EAEA+yE,EAAA/yE,EAAAqzE,EADA9+E,EAAAyqC,EAAA,UAAAzqC,EAAAD,IAEAyrC,EAAAxrC,IAEAsvB,MAAA,SAAA7jB,GACA,OAAA+yE,EAAA/yE,EAAA,WACA,aACO,OAEP0zE,QAAA,SAAA1zE,GACA,IAAAzL,EAAA,GAIA,OAHAg/E,EAAAvzE,EAAAzL,EAAA,cAAAyL,GACA,OAAAA,IAEAzL,GAEAo/E,KAAA,SAAA3zE,GAEA,OADAssE,EAAAtsE,IAAAqxE,EAAA,OACArxE,IAGA4zE,UAAA,WACA,OACAltC,QAAA,OAGAzlB,UAAA6wD,EACA+B,cAAA3B,EACAhD,cAAA,SAAAlvE,EAAAzL,GAeA,YAdA,IAAAA,MAAA,OACAyL,EAAA,CACAmwE,SAAAjvC,EACA4yC,sBAAAv/E,EACAw/E,cAAA/zE,EACAg0E,eAAAh0E,EACAi0E,aAAA,EACAj0D,SAAA,KACAE,SAAA,OAEAF,SAAA,CACAmwD,SAAAzoD,EACAwsD,SAAAl0E,GAEAA,EAAAkgB,SAAAlgB,GAEAm0E,WAAA,SAAAn0E,GACA,OACAmwE,SAAA35E,EACAuqB,OAAA/gB,IAGAo0E,KAAA,SAAAp0E,GACA,OACAmwE,SAAAgB,EACAkD,MAAAr0E,EACAs0E,SAAA,EACAC,QAAA,OAGA9wD,KAAA,SAAAzjB,EAAAzL,GACA,OACA47E,SAAAe,EACA32E,KAAAyF,EACAD,aAAA,IAAAxL,EAAA,KAAAA,IAGAigF,YAAA,SAAAx0E,EAAAzL,GACA,OAAA83E,IAAAmI,YAAAx0E,EAAAzL,IAEAkgF,WAAA,SAAAz0E,EAAAzL,GACA,OAAA83E,IAAAoI,WAAAz0E,EAAAzL,IAEAmgF,UAAA,SAAA10E,EAAAzL,GACA,OAAA83E,IAAAqI,UAAA10E,EAAAzL,IAEAogF,oBAAA,SAAA30E,EAAAzL,EAAAD,GACA,OAAA+3E,IAAAsI,oBAAA30E,EAAAzL,EAAAD,IAEAsgF,cAAA,aACAC,gBAAA,SAAA70E,EAAAzL,GACA,OAAA83E,IAAAwI,gBAAA70E,EAAAzL,IAEAugF,QAAA,SAAA90E,EAAAzL,GACA,OAAA83E,IAAAyI,QAAA90E,EAAAzL,IAEAwgF,WAAA,SAAA/0E,EAAAzL,EAAAD,GACA,OAAA+3E,IAAA0I,WAAA/0E,EAAAzL,EAAAD,IAEA0gF,OAAA,SAAAh1E,GACA,OAAAqsE,IAAA2I,OAAAh1E,IAEAi1E,SAAA,SAAAj1E,GACA,OAAAqsE,IAAA4I,SAAAj1E,IAEAk1E,SAAA3oC,EACA4oC,WAAAjiD,EACAkiD,SAAA9d,EACA9qD,cAAAuyB,EACAs2C,aAAA,SAAAr1E,EAAAzL,EAAAD,IACA,OAAA0L,QAAA,IAAAA,IAAAqxE,EAAA,MAAArxE,GACA,IAAAvC,OAAA,EACA4B,EAAA0I,EAAA,GAAgB/H,EAAA+M,OAChBiM,EAAAhZ,EAAA/J,IACAo7C,EAAArxC,EAAA+lB,IACA8oC,EAAA7uD,EAAA2yE,OAEA,SAAAp+E,EAAA,MACA,IAAAA,EAAAwxB,MAAAsrB,EAAA98C,EAAAwxB,IAAA8oC,EAAA0jB,EAAA7rC,cACA,IAAAnyC,EAAA0B,MAAA+iB,EAAA,GAAAzkB,EAAA0B,KACA,IAAA2lC,OAAA,EAGA,IAAAn+B,KAFAuC,EAAAzF,MAAAyF,EAAAzF,KAAAi1E,eAAA5zC,EAAA57B,EAAAzF,KAAAi1E,cAEAj7E,EACAi+E,EAAAt8E,KAAA3B,EAAAkJ,KAAAqhC,EAAAjqC,eAAA4I,KAAA4B,EAAA5B,QAAA,IAAAlJ,EAAAkJ,SAAA,IAAAm+B,IAAAn+B,GAAAlJ,EAAAkJ,IAKA,QADAA,EAAAlI,UAAAQ,OAAA,GACAsJ,EAAA2hB,SAAA1sB,OAAgC,KAAAmJ,EAAA,CAChCm+B,EAAAjnC,MAAA8I,GAEA,QAAAtC,EAAA,EAAqBA,EAAAsC,EAAOtC,IAC5BygC,EAAAzgC,GAAA5F,UAAA4F,EAAA,GAGAkE,EAAA2hB,SAAA4a,EAEA,OACAu0C,SAAAv7E,EACA2F,KAAAyF,EAAAzF,KACAtE,IAAA+iB,EACA+M,IAAAsrB,EACAtkC,MAAA1N,EACAszE,OAAA9jB,IAGAymB,cAAA,SAAAt1E,GACA,IAAAzL,EAAAwqC,EAAAjN,KAAA,KAAA9xB,GAEA,OADAzL,EAAAgG,KAAAyF,EACAzL,GAEAghF,eAAAjJ,EACA1xD,QAAA,SACA46D,wBAAAj/E,EACAk/E,kBAAAxE,EACAyE,mDAAA,CACAC,uBAAArD,EACAsD,kBAAArD,EACA38E,OAAAmS,IAGA8tE,EAAA,CACArgF,QAAAi+E,GAEAqC,EAAAD,GAAApC,GAAAoC,EACA7hF,EAAAC,QAAA6hF,EAAAtgF,SAAAsgF,gCC1ZA,IAAA5E,EAASh9E,EAAQ,GACjBgH,EAAQhH,EAAQ,IAChBq4C,EAAQr4C,EAAQ,KAkBhB,SAAAqC,EAAAyJ,GACA,QAAAzL,EAAAgB,UAAAQ,OAAA,EAAA0H,EAAA,yDAAAuC,EAAA1L,EAAA,EAA6GA,EAAAC,EAAOD,IACpHmJ,GAAA,WAAAi0C,mBAAAn8C,UAAAjB,EAAA,KAlBA,SAAA0L,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,EAAA71C,EAAAq4B,GACA,IAAArxC,EAAA,CAEA,GADAA,OAAA,OACA,IAAAzL,EAAAyL,EAAAlH,MAAA,qIAAiK,CACjK,IAAA8iC,EAAA,CAAAn+B,EAAAnJ,EAAA+K,EAAAwvD,EAAA71C,EAAAq4B,GACAtpC,EAAA,GACA/H,EAAAlH,MAAAvE,EAAAgR,QAAA,iBACA,OAAAq2B,EAAA7zB,SAEAwT,KAAA,sBAGA,MADAvb,EAAAsxE,YAAA,EACAtxE,GASAmxE,EAAA,2BAAAnxE,EAAA,4HAA0CvC,GAG1CyzE,GAAA36E,EAAA,OAYA,IAAAi9E,GAAA,EACAH,EAAA,KACAC,GAAA,EACAyC,EAAA,KACAC,EAAA,CACAC,QAAA,SAAAj2E,GACAwzE,GAAA,EACAH,EAAArzE,IAIA,SAAAk2E,EAAAl2E,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,EAAA71C,EAAAq4B,EAAAzV,GACA43C,GAAA,EACAH,EAAA,KAvBA,SAAArzE,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,EAAA71C,EAAAq4B,EAAAzV,GACA,IAAA7zB,EAAApT,MAAAK,UAAA8E,MAAA5D,KAAAX,UAAA,GAEA,IACAhB,EAAAe,MAAAmI,EAAAsK,GACG,MAAA5M,GACH/G,KAAA6hF,QAAA96E,KAkBA7F,MAAA0gF,EAAAzgF,WAiBA,IAAA4gF,EAAA,KACAC,EAAA,GAEA,SAAAC,IACA,GAAAF,EAAA,QAAAn2E,KAAAo2E,EAAA,CACA,IAAA7hF,EAAA6hF,EAAAp2E,GACAvC,EAAA04E,EAAA36E,QAAAwE,GAGA,IAFA,EAAAvC,GAAAlH,EAAA,KAAAyJ,IAEAs2E,EAAA74E,GAKA,QAAAnJ,KAJAC,EAAAgiF,eAAAhgF,EAAA,KAAAyJ,GACAs2E,EAAA74E,GAAAlJ,EACAkJ,EAAAlJ,EAAAiiF,WAEA,CACA,IAAAn3E,OAAA,EACAwvD,EAAApxD,EAAAnJ,GACA0kB,EAAAzkB,EACA88C,EAAA/8C,EACAmiF,EAAA5hF,eAAAw8C,IAAA96C,EAAA,KAAA86C,GACAolC,EAAAplC,GAAAwd,EACA,IAAAjzB,EAAAizB,EAAA6nB,wBAEA,GAAA96C,EAAA,CACA,IAAAv8B,KAAAu8B,EACAA,EAAA/mC,eAAAwK,IAAAs3E,EAAA/6C,EAAAv8B,GAAA2Z,EAAAq4B,GAGAhyC,GAAA,OACSwvD,EAAA+nB,kBAAAD,EAAA9nB,EAAA+nB,iBAAA59D,EAAAq4B,GAAAhyC,GAAA,GAAAA,GAAA,EAETA,GAAA9I,EAAA,KAAAjC,EAAA0L,KAMA,SAAA22E,EAAA32E,EAAAzL,EAAAkJ,GACAo5E,EAAA72E,IAAAzJ,EAAA,MAAAyJ,GACA62E,EAAA72E,GAAAzL,EACAuiF,EAAA92E,GAAAzL,EAAAiiF,WAAA/4E,GAAAs5E,aAGA,IAAAT,EAAA,GACAG,EAAA,GACAI,EAAA,GACAC,EAAA,GACAE,EAAA,KACA7pE,EAAA,KACA8pE,EAAA,KAEA,SAAAC,EAAAl3E,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAA0L,EAAAzF,MAAA,gBACAyF,EAAAm3E,cAAAF,EAAAx5E,GAnEA,SAAAuC,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,EAAA71C,EAAAq4B,EAAAzV,GAGA,GAFAs6C,EAAA5gF,MAAAlB,KAAAmB,WAEAi+E,EAAA,CACA,GAAAA,EAAA,CACA,IAAAzrE,EAAAsrE,EACAG,GAAA,EACAH,EAAA,UACK98E,EAAA,OAAAwR,OAAA,EAELurE,OAAA,EAAAyC,EAAAhuE,IA0DA+kD,CAAAx4D,EAAAC,OAAA,EAAAyL,GACAA,EAAAm3E,cAAA,KAGA,SAAAC,EAAAp3E,EAAAzL,GAEA,OADA,MAAAA,GAAAgC,EAAA,MACA,MAAAyJ,EAAAzL,EAEAI,MAAAyD,QAAA4H,GACArL,MAAAyD,QAAA7D,IAAAyL,EAAA9C,KAAA5H,MAAA0K,EAAAzL,GAAAyL,IACAA,EAAA9C,KAAA3I,GACAyL,GAGArL,MAAAyD,QAAA7D,GAAA,CAAAyL,GAAAC,OAAA1L,GAAA,CAAAyL,EAAAzL,GAGA,SAAA8iF,EAAAr3E,EAAAzL,EAAAkJ,GACA9I,MAAAyD,QAAA4H,KAAAuG,QAAAhS,EAAAkJ,GAAAuC,GAAAzL,EAAA2B,KAAAuH,EAAAuC,GAGA,IAAAs3E,EAAA,KAEA,SAAAC,EAAAv3E,GACA,GAAAA,EAAA,CACA,IAAAzL,EAAAyL,EAAAw3E,mBACA/5E,EAAAuC,EAAAy3E,mBACA,GAAA9iF,MAAAyD,QAAA7D,GAAA,QAAAD,EAAA,EAAyCA,EAAAC,EAAAwB,SAAAiK,EAAA03E,uBAA2CpjF,IACpF4iF,EAAAl3E,EAAAzL,EAAAD,GAAAmJ,EAAAnJ,SACKC,GAAA2iF,EAAAl3E,EAAAzL,EAAAkJ,GACLuC,EAAAw3E,mBAAA,KACAx3E,EAAAy3E,mBAAA,KACAz3E,EAAA23E,gBAAA33E,EAAAjL,YAAA6iF,QAAA53E,IAIA,IAAA63E,EAAA,CACAC,uBAAA,SAAA93E,GACAm2E,GAAA5/E,EAAA,OACA4/E,EAAAxhF,MAAAK,UAAA8E,MAAA5D,KAAA8J,GACAq2E,KAEA0B,yBAAA,SAAA/3E,GACA,IACAvC,EADAlJ,GAAA,EAGA,IAAAkJ,KAAAuC,EACA,GAAAA,EAAAnL,eAAA4I,GAAA,CACA,IAAAnJ,EAAA0L,EAAAvC,GACA24E,EAAAvhF,eAAA4I,IAAA24E,EAAA34E,KAAAnJ,IAAA8hF,EAAA34E,IAAAlH,EAAA,MAAAkH,GAAA24E,EAAA34E,GAAAnJ,EAAAC,GAAA,GAIAA,GAAA8hF,MAIA,SAAA2B,EAAAh4E,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAAi4E,UACA,IAAAx6E,EAAA,YACA,IAAAnJ,EAAA0iF,EAAAv5E,GACA,IAAAnJ,EAAA,YACAmJ,EAAAnJ,EAAAC,GAEAyL,EAAA,OAAAzL,GACA,cACA,qBACA,oBACA,2BACA,kBACA,yBACA,kBACA,yBACA,gBACA,wBACAD,KAAA4jF,YAAA5jF,IAAA,YAAA0L,IAAAzF,OAAA,UAAAyF,GAAA,WAAAA,GAAA,aAAAA,IACAA,GAAA1L,EACA,MAAA0L,EAEA,QACAA,GAAA,EAGA,OAAAA,EAAA,MACAvC,GAAA,oBAAAA,GAAAlH,EAAA,MAAAhC,SAAAkJ,GACAA,GAGA,SAAA06E,EAAAn4E,GAIA,GAHA,OAAAA,IAAAs3E,EAAAF,EAAAE,EAAAt3E,IACAA,EAAAs3E,EACAA,EAAA,KACAt3E,IAAAq3E,EAAAr3E,EAAAu3E,GAAAD,GAAA/gF,EAAA,MAAA+8E,GAAA,MAAAtzE,EAAA+1E,EAAAzC,GAAA,EAAAyC,EAAA,KAAA/1E,EAGA,IAAAo4E,EAAAl6E,KAAAkQ,SAAApX,SAAA,IAAA8C,MAAA,GACAu+E,EAAA,2BAAAD,EACAE,EAAA,wBAAAF,EAEA,SAAAG,EAAAv4E,GACA,GAAAA,EAAAq4E,GAAA,OAAAr4E,EAAAq4E,GAEA,MAAQr4E,EAAAq4E,IAAQ,CAChB,IAAAr4E,EAAAw4E,WAAuC,YAAvCx4E,IAAAw4E,WAIA,YADAx4E,IAAAq4E,IACAI,KAAA,IAAAz4E,EAAAy4E,IAAAz4E,EAAA,KAGA,SAAA04E,EAAA14E,GAEA,QADAA,IAAAq4E,KACA,IAAAr4E,EAAAy4E,KAAA,IAAAz4E,EAAAy4E,IAAA,KAAAz4E,EAGA,SAAA24E,EAAA34E,GACA,OAAAA,EAAAy4E,KAAA,IAAAz4E,EAAAy4E,IAAA,OAAAz4E,EAAAi4E,UACA1hF,EAAA,MAGA,SAAAqiF,EAAA54E,GACA,OAAAA,EAAAs4E,IAAA,KAGA,SAAAO,EAAA74E,GACA,GACAA,IAAA84E,aACG94E,GAAA,IAAAA,EAAAy4E,KAEH,OAAAz4E,GAAA,KAGA,SAAA+4E,EAAA/4E,EAAAzL,EAAAkJ,IACAlJ,EAAAyjF,EAAAh4E,EAAAvC,EAAAu7E,eAAAtC,wBAAAniF,OAAAkJ,EAAA+5E,mBAAAJ,EAAA35E,EAAA+5E,mBAAAjjF,GAAAkJ,EAAAg6E,mBAAAL,EAAA35E,EAAAg6E,mBAAAz3E,IAGA,SAAAi5E,EAAAj5E,GACA,GAAAA,KAAAg5E,eAAAtC,wBAAA,CACA,QAAAniF,EAAAyL,EAAAk5E,YAAAz7E,EAAA,GAAuClJ,GACvCkJ,EAAAP,KAAA3I,KAAAskF,EAAAtkF,GAGA,IAAAA,EAAAkJ,EAAA1H,OAAsB,EAAAxB,KACtBwkF,EAAAt7E,EAAAlJ,GAAA,WAAAyL,GAGA,IAAAzL,EAAA,EAAeA,EAAAkJ,EAAA1H,OAAcxB,IAC7BwkF,EAAAt7E,EAAAlJ,GAAA,UAAAyL,IAKA,SAAAm5E,EAAAn5E,EAAAzL,EAAAkJ,GACAuC,GAAAvC,KAAAu7E,eAAApC,mBAAAriF,EAAAyjF,EAAAh4E,EAAAvC,EAAAu7E,eAAApC,qBAAAn5E,EAAA+5E,mBAAAJ,EAAA35E,EAAA+5E,mBAAAjjF,GAAAkJ,EAAAg6E,mBAAAL,EAAA35E,EAAAg6E,mBAAAz3E,IAGA,SAAAo5E,EAAAp5E,GACAA,KAAAg5E,eAAApC,kBAAAuC,EAAAn5E,EAAAk5E,YAAA,KAAAl5E,GAGA,SAAAq5E,EAAAr5E,GACAq3E,EAAAr3E,EAAAi5E,GAGA,IAAAK,IAAA,qBAAAhtE,gBAAAC,WAAAD,OAAAC,SAAAC,eAEA,SAAA+sE,EAAAv5E,EAAAzL,GACA,IAAAkJ,EAAA,GAIA,OAHAA,EAAAuC,EAAAhF,eAAAzG,EAAAyG,cACAyC,EAAA,SAAAuC,GAAA,SAAAzL,EACAkJ,EAAA,MAAAuC,GAAA,MAAAzL,EACAkJ,EAGA,IAAA+7E,EAAA,CACAC,aAAAF,EAAA,4BACAG,mBAAAH,EAAA,kCACAI,eAAAJ,EAAA,8BACAK,cAAAL,EAAA,+BAEAM,EAAA,GACAC,EAAA,GAGA,SAAAC,EAAA/5E,GACA,GAAA65E,EAAA75E,GAAA,OAAA65E,EAAA75E,GACA,IAAAw5E,EAAAx5E,GAAA,OAAAA,EACA,IACAvC,EADAlJ,EAAAilF,EAAAx5E,GAGA,IAAAvC,KAAAlJ,EACA,GAAAA,EAAAM,eAAA4I,SAAAq8E,EAAA,OAAAD,EAAA75E,GAAAzL,EAAAkJ,GAGA,OAAAuC,EAZAs5E,IAAAQ,EAAAvtE,SAAAC,cAAA,OAAAia,MAAA,mBAAAna,gBAAAktE,EAAAC,aAAAO,iBAAAR,EAAAE,mBAAAM,iBAAAR,EAAAG,eAAAK,WAAA,oBAAA1tE,eAAAktE,EAAAI,cAAAK,YAeA,IAAAC,EAAAH,EAAA,gBACAI,EAAAJ,EAAA,sBACAK,EAAAL,EAAA,kBACAM,GAAAN,EAAA,iBACAO,GAAA,sNAAAlyE,MAAA,KACAmyE,GAAA,KACAjyD,GAAA,KACAkyD,GAAA,KAEA,SAAAC,KACA,GAAAD,GAAA,OAAAA,GACA,IAAAx6E,EAGA1L,EAFAC,EAAA+zB,GACA7qB,EAAAlJ,EAAAwB,OAEAsJ,EAAA,UAAAk7E,MAAAplF,MAAAolF,GAAAG,YACA7rB,EAAAxvD,EAAAtJ,OAEA,IAAAiK,EAAA,EAAaA,EAAAvC,GAAAlJ,EAAAyL,KAAAX,EAAAW,GAAwBA,KAIrC,IAAAgZ,EAAAvb,EAAAuC,EAEA,IAAA1L,EAAA,EAAaA,GAAA0kB,GAAAzkB,EAAAkJ,EAAAnJ,KAAA+K,EAAAwvD,EAAAv6D,GAAiCA,KAI9C,OAAAkmF,GAAAn7E,EAAAvF,MAAAkG,EAAA,EAAA1L,EAAA,EAAAA,OAAA,GAGA,SAAAqmF,KACA,SAGA,SAAAC,KACA,SAGA,SAAApkF,GAAAwJ,EAAAzL,EAAAkJ,EAAAnJ,GAMA,QAAA+K,KALAjL,KAAA4kF,eAAAh5E,EACA5L,KAAA8kF,YAAA3kF,EACAH,KAAAymF,YAAAp9E,EACAuC,EAAA5L,KAAAW,YAAA+lF,UAGA96E,EAAAnL,eAAAwK,MAAA9K,EAAAyL,EAAAX,IAAAjL,KAAAiL,GAAA9K,EAAAkJ,GAAA,WAAA4B,EAAAjL,KAAAyB,OAAAvB,EAAAF,KAAAiL,GAAA5B,EAAA4B,IAKA,OAFAjL,KAAA2mF,oBAAA,MAAAt9E,EAAA4nB,iBAAA5nB,EAAA4nB,kBAAA,IAAA5nB,EAAAu9E,aAAAL,GAAAC,GACAxmF,KAAAsjF,qBAAAkD,GACAxmF,KAmEA,SAAA6mF,GAAAj7E,EAAAzL,EAAAkJ,EAAAnJ,GACA,GAAAF,KAAA8mF,UAAAnlF,OAAA,CACA,IAAAsJ,EAAAjL,KAAA8mF,UAAAlzE,MAEA,OADA5T,KAAA8B,KAAAmJ,EAAAW,EAAAzL,EAAAkJ,EAAAnJ,GACA+K,EAGA,WAAAjL,KAAA4L,EAAAzL,EAAAkJ,EAAAnJ,GAGA,SAAA6mF,GAAAn7E,GACAA,aAAA5L,MAAAmC,EAAA,OACAyJ,EAAAo7E,aACA,GAAAhnF,KAAA8mF,UAAAnlF,QAAA3B,KAAA8mF,UAAAh+E,KAAA8C,GAGA,SAAAq7E,GAAAr7E,GACAA,EAAAk7E,UAAA,GACAl7E,EAAAs7E,UAAAL,GACAj7E,EAAA43E,QAAAuD,GAnFAjgF,EAAA1E,GAAAxB,UAAA,CACA4wB,eAAA,WACAxxB,KAAAixB,kBAAA,EACA,IAAArlB,EAAA5L,KAAAymF,YACA76E,MAAA4lB,eAAA5lB,EAAA4lB,iBAAA,mBAAA5lB,EAAAg7E,cAAAh7E,EAAAg7E,aAAA,GAAA5mF,KAAA2mF,mBAAAJ,KAEAY,gBAAA,WACA,IAAAv7E,EAAA5L,KAAAymF,YACA76E,MAAAu7E,gBAAAv7E,EAAAu7E,kBAAA,mBAAAv7E,EAAAw7E,eAAAx7E,EAAAw7E,cAAA,GAAApnF,KAAAsjF,qBAAAiD,KAEAc,QAAA,WACArnF,KAAAujF,aAAAgD,IAEAhD,aAAAiD,GACAQ,WAAA,WACA,IACA7mF,EADAyL,EAAA5L,KAAAW,YAAA+lF,UAGA,IAAAvmF,KAAAyL,EACA5L,KAAAG,GAAA,KAGAH,KAAAymF,YAAAzmF,KAAA8kF,YAAA9kF,KAAA4kF,eAAA,KACA5kF,KAAAsjF,qBAAAtjF,KAAA2mF,mBAAAH,GACAxmF,KAAAqjF,mBAAArjF,KAAAojF,mBAAA,QAGAhhF,GAAAskF,UAAA,CACAvgF,KAAA,KACA1E,OAAA,KACAshF,cAAA,WACA,aAEAuE,WAAA,KACAC,QAAA,KACAC,WAAA,KACAC,UAAA,SAAA77E,GACA,OAAAA,EAAA67E,WAAA30E,KAAAC,OAEAke,iBAAA,KACAy2D,UAAA,MAGAtlF,GAAAulF,OAAA,SAAA/7E,GACA,SAAAzL,KAEA,SAAAkJ,IACA,OAAAnJ,EAAAgB,MAAAlB,KAAAmB,WAGA,IAAAjB,EAAAF,KACAG,EAAAS,UAAAV,EAAAU,UACA,IAAAqK,EAAA,IAAA9K,EAOA,OANA2G,EAAAmE,EAAA5B,EAAAzI,WACAyI,EAAAzI,UAAAqK,EACA5B,EAAAzI,UAAAD,YAAA0I,EACAA,EAAAq9E,UAAA5/E,EAAA,GAAoB5G,EAAAwmF,UAAA96E,GACpBvC,EAAAs+E,OAAAznF,EAAAynF,OACAV,GAAA59E,GACAA,GAGA49E,GAAA7kF,IAwBA,IAAAu2D,GAAAv2D,GAAAulF,OAAA,CACAvhF,KAAA,OAEAwhF,GAAAxlF,GAAAulF,OAAA,CACAvhF,KAAA,OAEAyhF,GAAA,aACAj1B,GAAAsyB,GAAA,qBAAAhtE,OACA4vE,GAAA,KACA5C,GAAA,iBAAA/sE,WAAA2vE,GAAA3vE,SAAA4vE,cACA,IAAAC,GAAA9C,GAAA,cAAAhtE,SAAA4vE,GACAG,GAAA/C,KAAAtyB,IAAAk1B,IAAA,EAAAA,IAAA,IAAAA,IACAI,GAAAxgF,OAAAgD,aAAA,IACAy9E,GAAA,CACAC,YAAA,CACA9F,wBAAA,CACA+F,QAAA,gBACAC,SAAA,wBAEA3F,aAAA,mDAEA4F,eAAA,CACAjG,wBAAA,CACA+F,QAAA,mBACAC,SAAA,2BAEA3F,aAAA,uDAAA3uE,MAAA,MAEAw0E,iBAAA,CACAlG,wBAAA,CACA+F,QAAA,qBACAC,SAAA,6BAEA3F,aAAA,yDAAA3uE,MAAA,MAEAy0E,kBAAA,CACAnG,wBAAA,CACA+F,QAAA,sBACAC,SAAA,8BAEA3F,aAAA,0DAAA3uE,MAAA,OAGA00E,IAAA,EAEA,SAAAC,GAAA/8E,EAAAzL,GACA,OAAAyL,GACA,YACA,WAAAi8E,GAAAzgF,QAAAjH,EAAAyoF,SAEA,cACA,aAAAzoF,EAAAyoF,QAEA,eACA,gBACA,WACA,SAEA,QACA,UAIA,SAAAC,GAAAj9E,GAEA,wBADAA,IAAAk9E,SACA,SAAAl9E,IAAAxF,KAAA,KAGA,IAAA2iF,IAAA,EA2CA,IAAAC,GAAA,CACA5G,WAAA+F,GACAhG,cAAA,SAAAv2E,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,OAAA,EACAwvD,OAAA,EACA,GAAA7H,GAAAzyD,EAAA,CACA,OAAAyL,GACA,uBACAX,EAAAk9E,GAAAK,iBACA,MAAAroF,EAEA,qBACA8K,EAAAk9E,GAAAI,eACA,MAAApoF,EAEA,wBACA8K,EAAAk9E,GAAAM,kBACA,MAAAtoF,EAGA8K,OAAA,OACK89E,GAAAJ,GAAA/8E,EAAAvC,KAAA4B,EAAAk9E,GAAAI,gBAAA,YAAA38E,GAAA,MAAAvC,EAAAu/E,UAAA39E,EAAAk9E,GAAAK,kBAGL,OAFAv9E,GAAAg9E,IAAA,OAAA5+E,EAAA4/E,SAAAF,IAAA99E,IAAAk9E,GAAAK,iBAAAv9E,IAAAk9E,GAAAI,gBAAAQ,KAAAtuB,EAAA4rB,OAAAnyD,GAAA,UAAAiyD,GAAAjmF,GAAAimF,GAAAplF,MAAAolF,GAAAG,YAAAyC,IAAA,IAAA99E,EAAA0tD,GAAAuuB,UAAAj8E,EAAA9K,EAAAkJ,EAAAnJ,GAAAu6D,EAAAxvD,EAAA7E,KAAAq0D,EAAA,QAAAA,EAAAouB,GAAAx/E,MAAA4B,EAAA7E,KAAAq0D,GAAAwqB,EAAAh6E,GAAAwvD,EAAAxvD,GAAAwvD,EAAA,MACA7uD,EAAAo8E,GAhEA,SAAAp8E,EAAAzL,GACA,OAAAyL,GACA,qBACA,OAAAi9E,GAAA1oF,GAEA,eACA,YAAAA,EAAA+oF,MAAA,MACAR,IAAA,EACAR,IAEA,gBACA,OAAAt8E,EAAAzL,EAAAiG,QAAA8hF,IAAAQ,GAAA,KAAA98E,EAEA,QACA,aAkDAu9E,CAAAv9E,EAAAvC,GA9CA,SAAAuC,EAAAzL,GACA,GAAA4oF,GAAA,yBAAAn9E,IAAAgnD,IAAA+1B,GAAA/8E,EAAAzL,IAAAyL,EAAAy6E,KAAAD,GAAAlyD,GAAAiyD,GAAA,KAAA4C,IAAA,EAAAn9E,GAAA,KAEA,OAAAA,GACA,YACA,YAEA,eACA,KAAAzL,EAAAkxB,SAAAlxB,EAAAixB,QAAAjxB,EAAAgxB,UAAAhxB,EAAAkxB,SAAAlxB,EAAAixB,OAAA,CACA,GAAAjxB,EAAAipF,MAAA,EAAAjpF,EAAAipF,KAAAznF,OAAA,OAAAxB,EAAAipF,KACA,GAAAjpF,EAAA+oF,MAAA,OAAAxhF,OAAAgD,aAAAvK,EAAA+oF,OAGA,YAEA,qBACA,OAAAjB,IAAA,OAAA9nF,EAAA8oF,OAAA,KAAA9oF,EAAAiG,KAEA,QACA,aA2BAijF,CAAAz9E,EAAAvC,MAAAlJ,EAAAynF,GAAAV,UAAAiB,GAAAC,YAAAjoF,EAAAkJ,EAAAnJ,IAAAkG,KAAAwF,EAAAq5E,EAAA9kF,MAAA,KACA,OAAAs6D,EAAAt6D,EAAA,OAAAA,EAAAs6D,EAAA,CAAAA,EAAAt6D,KAGAmpF,GAAA,KACAC,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAA79E,GACA,GAAAA,EAAAmN,EAAAnN,GAAA,CACA,oBAAA09E,IAAAnnF,EAAA,OACA,IAAAhC,EAAAyiF,EAAAh3E,EAAAi4E,WACAyF,GAAA19E,EAAAi4E,UAAAj4E,EAAAzF,KAAAhG,IAIA,SAAAupF,GAAA99E,GACA29E,GAAAC,MAAA1gF,KAAA8C,GAAA49E,GAAA,CAAA59E,GAAA29E,GAAA39E,EAGA,SAAA+9E,KACA,GAAAJ,GAAA,CACA,IAAA39E,EAAA29E,GACAppF,EAAAqpF,GAGA,GAFAA,GAAAD,GAAA,KACAE,GAAA79E,GACAzL,EAAA,IAAAyL,EAAA,EAAsBA,EAAAzL,EAAAwB,OAAciK,IACpC69E,GAAAtpF,EAAAyL,KAKA,SAAAg+E,GAAAh+E,EAAAzL,GACA,OAAAyL,EAAAzL,GAGA,SAAA0pF,GAAAj+E,EAAAzL,EAAAkJ,GACA,OAAAuC,EAAAzL,EAAAkJ,GAGA,SAAAygF,MAEA,IAAAC,IAAA,EAEA,SAAAC,GAAAp+E,EAAAzL,GACA,GAAA4pF,GAAA,OAAAn+E,EAAAzL,GACA4pF,IAAA,EAEA,IACA,OAAAH,GAAAh+E,EAAAzL,GACG,QACH4pF,IAAA,UAAAR,IAAA,OAAAC,MAAAM,KAAAH,OAIA,IAAAM,GAAA,CACAC,OAAA,EACA7rB,MAAA,EACA8rB,UAAA,EACAC,kBAAA,EACAC,OAAA,EACAC,OAAA,EACApsB,QAAA,EACAqsB,UAAA,EACAC,OAAA,EACAv0E,QAAA,EACAw0E,KAAA,EACApoE,MAAA,EACAm8C,MAAA,EACAnyC,KAAA,EACAq+D,MAAA,GAGA,SAAAC,GAAA/+E,GACA,IAAAzL,EAAAyL,KAAAkxB,UAAAlxB,EAAAkxB,SAAAl2B,cACA,gBAAAzG,IAAA8pF,GAAAr+E,EAAAzF,MAAA,aAAAhG,EAGA,SAAAyqF,GAAAh/E,GAGA,OAFAA,IAAAnK,QAAAmK,EAAA2yB,YAAArmB,QACA2yE,0BAAAj/E,IAAAi/E,yBACA,IAAAj/E,EAAAk/E,SAAAl/E,EAAAw4E,WAAAx4E,EAGA,SAAAm/E,GAAAn/E,GACA,IAAAs5E,EAAA,SAEA,IAAA/kF,GADAyL,EAAA,KAAAA,KACAuM,SAEA,OADAhY,OAAAgY,SAAAC,cAAA,QAAAqkB,aAAA7wB,EAAA,WAAqEzL,EAAA,oBAAAA,EAAAyL,IACrEzL,EAGA,SAAA6qF,GAAAp/E,GACA,IAAAzL,EAAAyL,EAAAzF,KACA,OAAAyF,IAAAkxB,WAAA,UAAAlxB,EAAAhF,gBAAA,aAAAzG,GAAA,UAAAA,GAuCA,SAAA8qF,GAAAr/E,GACAA,EAAAs/E,gBAAAt/E,EAAAs/E,cArCA,SAAAt/E,GACA,IAAAzL,EAAA6qF,GAAAp/E,GAAA,kBACAvC,EAAAjJ,OAAA8R,yBAAAtG,EAAAjL,YAAAC,UAAAT,GACAD,EAAA,GAAA0L,EAAAzL,GAEA,IAAAyL,EAAAnL,eAAAN,IAAA,qBAAAkJ,GAAA,oBAAAA,EAAAwW,KAAA,oBAAAxW,EAAAuH,IAAA,CACA,IAAA3F,EAAA5B,EAAAwW,IACA46C,EAAApxD,EAAAuH,IAcA,OAbAxQ,OAAAU,eAAA8K,EAAAzL,EAAA,CACAoL,cAAA,EACAsU,IAAA,WACA,OAAA5U,EAAAnJ,KAAA9B,OAEA4Q,IAAA,SAAAhF,GACA1L,EAAA,GAAA0L,EACA6uD,EAAA34D,KAAA9B,KAAA4L,MAGAxL,OAAAU,eAAA8K,EAAAzL,EAAA,CACAuR,WAAArI,EAAAqI,aAEA,CACAuvB,SAAA,WACA,OAAA/gC,GAEAirF,SAAA,SAAAv/E,GACA1L,EAAA,GAAA0L,GAEAw/E,aAAA,WACAx/E,EAAAs/E,cAAA,YACAt/E,EAAAzL,MAOAkrF,CAAAz/E,IAGA,SAAA0/E,GAAA1/E,GACA,IAAAA,EAAA,SACA,IAAAzL,EAAAyL,EAAAs/E,cACA,IAAA/qF,EAAA,SACA,IAAAkJ,EAAAlJ,EAAA8gC,WACA/gC,EAAA,GAGA,OAFA0L,IAAA1L,EAAA8qF,GAAAp/E,KAAA7F,QAAA,eAAA6F,EAAA7K,QACA6K,EAAA1L,KACAmJ,IAAAlJ,EAAAgrF,SAAAv/E,IAAA,GAGA,IAAA2/E,GAAAzO,EAAAwE,mDACAiK,GAAA9qF,eAAA,4BAAA8qF,GAAAhK,uBAAA,CACAjvC,QAAA,OAEA,IAAAk5C,GAAA,cACAtoB,GAAA,oBAAA73D,eAAAuxE,IACA6O,GAAAvoB,GAAA73D,OAAAuxE,IAAA,uBACA8O,GAAAxoB,GAAA73D,OAAAuxE,IAAA,sBACA+O,GAAAzoB,GAAA73D,OAAAuxE,IAAA,wBACAgP,GAAA1oB,GAAA73D,OAAAuxE,IAAA,2BACAiP,GAAA3oB,GAAA73D,OAAAuxE,IAAA,wBACAkP,GAAA5oB,GAAA73D,OAAAuxE,IAAA,wBACAmP,GAAA7oB,GAAA73D,OAAAuxE,IAAA,uBACAoP,GAAA9oB,GAAA73D,OAAAuxE,IAAA,+BACAqP,GAAA/oB,GAAA73D,OAAAuxE,IAAA,2BACAsP,GAAAhpB,GAAA73D,OAAAuxE,IAAA,wBACAuP,GAAAjpB,GAAA73D,OAAAuxE,IAAA,oBACAwP,GAAAlpB,GAAA73D,OAAAuxE,IAAA,oBACAyP,GAAA,oBAAAhhF,eAAAuJ,SAEA,SAAA03E,GAAA1gF,GACA,cAAAA,GAAA,kBAAAA,EAAA,KAEA,oBADAA,EAAAygF,IAAAzgF,EAAAygF,KAAAzgF,EAAA,eACAA,EAAA,KAGA,SAAA2gF,GAAA3gF,GACA,SAAAA,EAAA,YACA,uBAAAA,EAAA,OAAAA,EAAAigB,aAAAjgB,EAAAub,MAAA,KACA,qBAAAvb,EAAA,OAAAA,EAEA,OAAAA,GACA,KAAAogF,GACA,uBAEA,KAAAL,GACA,iBAEA,KAAAD,GACA,eAEA,KAAAG,GACA,iBAEA,KAAAD,GACA,mBAEA,KAAAM,GACA,iBAGA,qBAAAtgF,EAAA,OAAAA,EAAAmwE,UACA,KAAAgQ,GACA,yBAEA,KAAAD,GACA,yBAEA,KAAAG,GACA,IAAA9rF,EAAAyL,EAAA+gB,OAEA,OADAxsB,IAAA0rB,aAAA1rB,EAAAgnB,MAAA,GACAvb,EAAAigB,cAAA,KAAA1rB,EAAA,cAAAA,EAAA,kBAEA,KAAAgsF,GACA,OAAAI,GAAA3gF,EAAAzF,MAEA,KAAAimF,GACA,GAAAxgF,EAAA,IAAAA,EAAAs0E,QAAAt0E,EAAAu0E,QAAA,YAAAoM,GAAA3gF,GAEA,YAGA,SAAA4gF,GAAA5gF,GACA,IAAAzL,EAAA,GAEA,GACAyL,EAAA,OAAAA,EAAAy4E,KACA,OACA,OACA,OACA,OACA,QACA,OACA,IAAAh7E,EAAA,GACA,MAAAuC,EAEA,QACA,IAAA1L,EAAA0L,EAAA6gF,YACAxhF,EAAAW,EAAA8gF,aACAjyB,EAAA8xB,GAAA3gF,EAAAzF,MACAkD,EAAA,KACAnJ,IAAAmJ,EAAAkjF,GAAArsF,EAAAiG,OACAjG,EAAAu6D,EACAA,EAAA,GACAxvD,EAAAwvD,EAAA,QAAAxvD,EAAA0hF,SAAAx7E,QAAAq6E,GAAA,QAAAvgF,EAAA2hF,WAAA,IAAAvjF,IAAAoxD,EAAA,gBAAApxD,EAAA,KACAA,EAAA,aAAAnJ,GAAA,WAAAu6D,EAGAt6D,GAAAkJ,EACAuC,IAAA84E,aACG94E,GAEH,OAAAzL,EAGA,IAAA0sF,GAAA,8VACAC,GAAA1sF,OAAAQ,UAAAH,eACAssF,GAAA,GACAC,GAAA,GAgDA,SAAA5P,GAAAxxE,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACAjL,KAAAitF,gBAAA,IAAA9sF,GAAA,IAAAA,GAAA,IAAAA,EACAH,KAAAktF,cAAAhtF,EACAF,KAAAmtF,mBAAAliF,EACAjL,KAAAotF,gBAAA/jF,EACArJ,KAAAqtF,aAAAzhF,EACA5L,KAAAmG,KAAAhG,EAGA,IAAAs9E,GAAA,GACA,uIAAAzpE,MAAA,KAAA7B,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAA,QAEA,wGAAAuG,QAAA,SAAAvG,GACA,IAAAzL,EAAAyL,EAAA,GACA6xE,GAAAt9E,GAAA,IAAAi9E,GAAAj9E,EAAA,KAAAyL,EAAA,WAEA,qDAAAuG,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAAhF,cAAA,QAEA,wEAAAuL,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAA,QAEA,gMAAAoI,MAAA,KAAA7B,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAAhF,cAAA,QAEA,0CAAAuL,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAA,QAEA,uBAAAuG,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAA,QAEA,8BAAAuG,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAA,QAEA,oBAAAuG,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAAhF,cAAA,QAEA,IAAA0mF,GAAA,gBAEA,SAAAC,GAAA3hF,GACA,OAAAA,EAAA,GAAAwiD,cAmBA,SAAAo/B,GAAA5hF,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAAwyE,GAAAh9E,eAAAN,GAAAs9E,GAAAt9E,GAAA,MACA,OAAA8K,EAAA,IAAAA,EAAA9E,MAAAjG,IAAA,EAAAC,EAAAwB,SAAA,MAAAxB,EAAA,UAAAA,EAAA,YAAAA,EAAA,UAAAA,EAAA,QAjFA,SAAAyL,EAAAzL,EAAAkJ,EAAAnJ,GACA,UAAAC,GAAA,qBAAAA,GApBA,SAAAyL,EAAAzL,EAAAkJ,EAAAnJ,GACA,UAAAmJ,GAAA,IAAAA,EAAAlD,KAAA,SAEA,cAAAhG,GACA,eACA,aACA,SAEA,cACA,OAAAD,IACA,OAAAmJ,KAAA4jF,gBAEA,WADArhF,IAAAhF,cAAAlB,MAAA,OACA,UAAAkG,GAEA,QACA,UAKA6hF,CAAA7hF,EAAAzL,EAAAkJ,EAAAnJ,GAAA,SACA,GAAAA,EAAA,SACA,UAAAmJ,EAAA,OAAAA,EAAAlD,MACA,OACA,OAAAhG,EAEA,OACA,WAAAA,EAEA,OACA,OAAA+G,MAAA/G,GAEA,OACA,OAAA+G,MAAA/G,IAAA,EAAAA,EAEA,SAkEAutF,CAAAvtF,EAAAkJ,EAAA4B,EAAA/K,KAAAmJ,EAAA,MAAAnJ,GAAA,OAAA+K,EA7GA,SAAAW,GACA,QAAAkhF,GAAAhrF,KAAAkrF,GAAAphF,KACAkhF,GAAAhrF,KAAAirF,GAAAnhF,KACAihF,GAAAj3E,KAAAhK,GAAAohF,GAAAphF,IAAA,GACAmhF,GAAAnhF,IAAA,GACA,IAwGA+hF,CAAAxtF,KAAA,OAAAkJ,EAAAuC,EAAAqzB,gBAAA9+B,GAAAyL,EAAA6wB,aAAAt8B,EAAA,GAAAkJ,IAAA4B,EAAAmiF,gBAAAxhF,EAAAX,EAAAoiF,cAAA,OAAAhkF,EAAA,IAAA4B,EAAA9E,MAAA,GAAAkD,GAAAlJ,EAAA8K,EAAAiiF,cAAAhtF,EAAA+K,EAAAkiF,mBAAA,OAAA9jF,EAAAuC,EAAAqzB,gBAAA9+B,IAAAkJ,EAAA,KAAA4B,IAAA9E,OAAA,IAAA8E,IAAA,IAAA5B,EAAA,MAAAA,EAAAnJ,EAAA0L,EAAAgiF,eAAA1tF,EAAAC,EAAAkJ,GAAAuC,EAAA6wB,aAAAt8B,EAAAkJ,MAGA,SAAAwkF,GAAAjiF,GACA,cAAAA,GACA,cACA,aACA,aACA,aACA,gBACA,OAAAA,EAEA,QACA,UAIA,SAAAkiF,GAAAliF,EAAAzL,GACA,IAAAkJ,EAAAlJ,EAAA4F,QACA,OAAAe,EAAA,GAAa3G,EAAA,CACb4tF,oBAAA,EACAC,kBAAA,EACAjtF,WAAA,EACAgF,QAAA,MAAAsD,IAAAuC,EAAAqiF,cAAAC,iBAIA,SAAAC,GAAAviF,EAAAzL,GACA,IAAAkJ,EAAA,MAAAlJ,EAAA6tF,aAAA,GAAA7tF,EAAA6tF,aACA9tF,EAAA,MAAAC,EAAA4F,QAAA5F,EAAA4F,QAAA5F,EAAA4tF,eACA1kF,EAAAwkF,GAAA,MAAA1tF,EAAAY,MAAAZ,EAAAY,MAAAsI,GACAuC,EAAAqiF,cAAA,CACAC,eAAAhuF,EACAkuF,aAAA/kF,EACAglF,WAAA,aAAAluF,EAAAgG,MAAA,UAAAhG,EAAAgG,KAAA,MAAAhG,EAAA4F,QAAA,MAAA5F,EAAAY,OAIA,SAAAutF,GAAA1iF,EAAAzL,GAEA,OADAA,IAAA4F,UACAynF,GAAA5hF,EAAA,UAAAzL,GAAA,GAGA,SAAAouF,GAAA3iF,EAAAzL,GACAmuF,GAAA1iF,EAAAzL,GACA,IAAAkJ,EAAAwkF,GAAA1tF,EAAAY,OACAb,EAAAC,EAAAgG,KACA,SAAAkD,EACA,WAAAnJ,GACA,IAAAmJ,GAAA,KAAAuC,EAAA7K,OAAA6K,EAAA7K,OAAAsI,KAAAuC,EAAA7K,MAAA,GAAAsI,GACKuC,EAAA7K,QAAA,GAAAsI,IAAAuC,EAAA7K,MAAA,GAAAsI,QACF,cAAAnJ,GAAA,UAAAA,EAEH,YADA0L,EAAAqzB,gBAAA,SAGA9+B,EAAAM,eAAA,SAAA+tF,GAAA5iF,EAAAzL,EAAAgG,KAAAkD,GAAAlJ,EAAAM,eAAA,iBAAA+tF,GAAA5iF,EAAAzL,EAAAgG,KAAA0nF,GAAA1tF,EAAA6tF,eACA,MAAA7tF,EAAA4F,SAAA,MAAA5F,EAAA4tF,iBAAAniF,EAAAmiF,iBAAA5tF,EAAA4tF,gBAGA,SAAAU,GAAA7iF,EAAAzL,EAAAkJ,GACA,GAAAlJ,EAAAM,eAAA,UAAAN,EAAAM,eAAA,iBACA,IAAAP,EAAAC,EAAAgG,KACA,gBAAAjG,GAAA,UAAAA,QAAA,IAAAC,EAAAY,OAAA,OAAAZ,EAAAY,OAAA,OACAZ,EAAA,GAAAyL,EAAAqiF,cAAAG,aACA/kF,GAAAlJ,IAAAyL,EAAA7K,QAAA6K,EAAA7K,MAAAZ,GACAyL,EAAAoiF,aAAA7tF,EAIA,MADAkJ,EAAAuC,EAAAub,QACAvb,EAAAub,KAAA,IACAvb,EAAAmiF,gBAAAniF,EAAAmiF,eACAniF,EAAAmiF,iBAAAniF,EAAAqiF,cAAAC,eACA,KAAA7kF,IAAAuC,EAAAub,KAAA9d,GAGA,SAAAmlF,GAAA5iF,EAAAzL,EAAAkJ,GACA,WAAAlJ,GAAAyL,EAAAo1D,cAAA0tB,gBAAA9iF,IAAA,MAAAvC,EAAAuC,EAAAoiF,aAAA,GAAApiF,EAAAqiF,cAAAG,aAAAxiF,EAAAoiF,eAAA,GAAA3kF,IAAAuC,EAAAoiF,aAAA,GAAA3kF,IA/FA,0jCAAA2K,MAAA,KAAA7B,QAAA,SAAAvG,GACA,IAAAzL,EAAAyL,EAAAuF,QAAAm8E,GAAAC,IACA9P,GAAAt9E,GAAA,IAAAi9E,GAAAj9E,EAAA,KAAAyL,EAAA,QAEA,sFAAAoI,MAAA,KAAA7B,QAAA,SAAAvG,GACA,IAAAzL,EAAAyL,EAAAuF,QAAAm8E,GAAAC,IACA9P,GAAAt9E,GAAA,IAAAi9E,GAAAj9E,EAAA,KAAAyL,EAAA,kCAEA,oCAAAuG,QAAA,SAAAvG,GACA,IAAAzL,EAAAyL,EAAAuF,QAAAm8E,GAAAC,IACA9P,GAAAt9E,GAAA,IAAAi9E,GAAAj9E,EAAA,KAAAyL,EAAA,0CAEA,2BAAAuG,QAAA,SAAAvG,GACA6xE,GAAA7xE,GAAA,IAAAwxE,GAAAxxE,EAAA,KAAAA,EAAAhF,cAAA,QAqFA,IAAA+nF,GAAA,CACAC,OAAA,CACAtM,wBAAA,CACA+F,QAAA,WACAC,SAAA,mBAEA3F,aAAA,8DAAA3uE,MAAA,OAIA,SAAA66E,GAAAjjF,EAAAzL,EAAAkJ,GAKA,OAJAuC,EAAAxJ,GAAA8kF,UAAAyH,GAAAC,OAAAhjF,EAAAzL,EAAAkJ,IACAlD,KAAA,SACAujF,GAAArgF,GACA47E,EAAAr5E,GACAA,EAGA,IAAAkjF,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAApjF,GACAm4E,EAAAn4E,GAGA,SAAAqjF,GAAArjF,GAEA,GAAA0/E,GADA/G,EAAA34E,IACA,OAAAA,EAGA,SAAAsjF,GAAAtjF,EAAAzL,GACA,cAAAyL,EAAA,OAAAzL,EAGA,IAAAgvF,IAAA,EAGA,SAAAC,KACAN,QAAAO,YAAA,mBAAAC,IAAAP,GAAAD,GAAA,MAGA,SAAAQ,GAAA1jF,GACA,UAAAA,EAAAyhF,cAAA4B,GAAAF,KAAA/E,GAAAgF,GAAApjF,EAAAijF,GAAAE,GAAAnjF,EAAAg/E,GAAAh/E,KAGA,SAAA2jF,GAAA3jF,EAAAzL,EAAAkJ,GACA,UAAAuC,GAAAwjF,KAAAL,GAAA1lF,GAAAylF,GAAA3uF,GAAAqvF,YAAA,mBAAAF,KAAA,SAAA1jF,GAAAwjF,KAGA,SAAAK,GAAA7jF,GACA,uBAAAA,GAAA,UAAAA,GAAA,YAAAA,EAAA,OAAAqjF,GAAAF,IAGA,SAAAW,GAAA9jF,EAAAzL,GACA,aAAAyL,EAAA,OAAAqjF,GAAA9uF,GAGA,SAAAwvF,GAAA/jF,EAAAzL,GACA,aAAAyL,GAAA,WAAAA,EAAA,OAAAqjF,GAAA9uF,GAvBA+kF,IAAAiK,GAAApE,GAAA,YAAA5yE,SAAA4vE,cAAA,EAAA5vE,SAAA4vE,eA0BA,IAAA6H,GAAA,CACAxN,WAAAuM,GACAkB,uBAAAV,GACAhN,cAAA,SAAAv2E,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAA9K,EAAAokF,EAAApkF,GAAA+X,OACAuiD,OAAA,EACA71C,OAAA,EACAq4B,EAAAhyC,EAAA6xB,UAAA7xB,EAAA6xB,SAAAl2B,cAEA,GADA,WAAAq2C,GAAA,UAAAA,GAAA,SAAAhyC,EAAA9E,KAAAs0D,EAAAy0B,GAAAvE,GAAA1/E,GAAAkkF,GAAA10B,EAAAk1B,IAAAl1B,EAAAg1B,GAAA7qE,EAAA2qE,KAAAtyC,EAAAhyC,EAAA6xB,WAAA,UAAAmgB,EAAAr2C,gBAAA,aAAAqE,EAAA9E,MAAA,UAAA8E,EAAA9E,QAAAs0D,EAAAi1B,IACAj1B,QAAA7uD,EAAAzL,IAAA,OAAA0uF,GAAAp0B,EAAApxD,EAAAnJ,GACA0kB,KAAAhZ,EAAAX,EAAA9K,GACA,SAAAyL,MAAAX,EAAAgjF,gBAAAriF,EAAAyiF,YAAA,WAAApjF,EAAA9E,MAAAqoF,GAAAvjF,EAAA,SAAAA,EAAAlK,SAGA+uF,GAAA1tF,GAAAulF,OAAA,CACAoI,KAAA,KACAjH,OAAA,OAEAkH,GAAA,CACAC,IAAA,SACAC,QAAA,UACAC,KAAA,UACAC,MAAA,YAGA,SAAAC,GAAAzkF,GACA,IAAAzL,EAAAH,KAAAymF,YACA,OAAAtmF,EAAAmwF,iBAAAnwF,EAAAmwF,iBAAA1kF,QAAAokF,GAAApkF,OAAAzL,EAAAyL,GAGA,SAAA2kF,KACA,OAAAF,GAGA,IAAAG,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAAd,GAAAnI,OAAA,CACAkJ,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,MAAA,KACAC,MAAA,KACA7/D,QAAA,KACAC,SAAA,KACAF,OAAA,KACAD,QAAA,KACAm/D,iBAAAC,GACAr/D,OAAA,KACAigE,QAAA,KACAC,cAAA,SAAAxlF,GACA,OAAAA,EAAAwlF,gBAAAxlF,EAAAylF,cAAAzlF,EAAA2yB,WAAA3yB,EAAA0lF,UAAA1lF,EAAAylF,cAEAE,UAAA,SAAA3lF,GACA,iBAAAA,EAAA,OAAAA,EAAA2lF,UACA,IAAApxF,EAAAqwF,GAEA,OADAA,GAAA5kF,EAAAilF,QACAH,GAAA,cAAA9kF,EAAAzF,KAAAyF,EAAAilF,QAAA1wF,EAAA,GAAAuwF,IAAA,MAEAc,UAAA,SAAA5lF,GACA,iBAAAA,EAAA,OAAAA,EAAA4lF,UACA,IAAArxF,EAAAswF,GAEA,OADAA,GAAA7kF,EAAAklF,QACAH,GAAA,cAAA/kF,EAAAzF,KAAAyF,EAAAklF,QAAA3wF,EAAA,GAAAwwF,IAAA,QAGAc,GAAAb,GAAAjJ,OAAA,CACA+J,UAAA,KACA9yE,MAAA,KACAC,OAAA,KACA8yE,SAAA,KACAC,mBAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,YAAA,KACAC,UAAA,OAEAC,GAAA,CACAC,WAAA,CACA3P,iBAAA,eACAG,aAAA,0BAEAyP,WAAA,CACA5P,iBAAA,eACAG,aAAA,0BAEA0P,aAAA,CACA7P,iBAAA,iBACAG,aAAA,8BAEA2P,aAAA,CACA9P,iBAAA,iBACAG,aAAA,+BAGA4P,GAAA,CACAnQ,WAAA8P,GACA/P,cAAA,SAAAv2E,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAA,cAAAW,GAAA,gBAAAA,EACA6uD,EAAA,aAAA7uD,GAAA,eAAAA,EACA,GAAAX,IAAA5B,EAAA+nF,eAAA/nF,EAAAgoF,eAAA52B,IAAAxvD,EAAA,YAGA,GAFAA,EAAA/K,EAAAgY,SAAAhY,KAAA+K,EAAA/K,EAAA8gE,eAAA/1D,EAAAunF,aAAAvnF,EAAAwnF,aAAAv6E,OACAuiD,KAAAt6D,OAAAkJ,EAAA+nF,eAAA/nF,EAAAioF,WAAAnN,EAAAhkF,GAAA,MAAAs6D,EAAA,KACAA,IAAAt6D,EAAA,YACA,IAAAykB,OAAA,EACAq4B,OAAA,EACAzV,OAAA,EACA7zB,OAAA,EACA,aAAA/H,GAAA,cAAAA,GAAAgZ,EAAAgsE,GAAA3zC,EAAAi1C,GAAAE,WAAA5qD,EAAA0qD,GAAAC,WAAAx+E,EAAA,SAAyG,eAAA/H,GAAA,gBAAAA,IAAAgZ,EAAA6sE,GAAAx0C,EAAAi1C,GAAAI,aAAA9qD,EAAA0qD,GAAAG,aAAA1+E,EAAA,WACzG,IAAA5M,EAAA,MAAA0zD,EAAAxvD,EAAAs5E,EAAA9pB,GAWA,GAVAxvD,EAAA,MAAA9K,EAAA8K,EAAAs5E,EAAApkF,IACAyL,EAAAgZ,EAAAsiE,UAAAjqC,EAAAwd,EAAApxD,EAAAnJ,IACAiG,KAAAwN,EAAA,QACA/H,EAAAnK,OAAAsF,EACA6E,EAAAwlF,cAAAnmF,GACA5B,EAAAub,EAAAsiE,UAAA1/C,EAAArnC,EAAAkJ,EAAAnJ,IACAiG,KAAAwN,EAAA,QACAtK,EAAA5H,OAAAwJ,EACA5B,EAAA+nF,cAAArqF,EACA7G,EAAAC,EACAs6D,GAAAv6D,EAAA0L,EAAA,CAKA,IAHAX,EAAA/K,EACAyT,EAAA,EAEAiR,EAJAzkB,EAAAs6D,EAIiB71C,EAAGA,EAAA6/D,EAAA7/D,GACpBjR,IAKA,IAFAiR,EAAA,EAEA4iB,EAAAv8B,EAAiBu8B,EAAGA,EAAAi9C,EAAAj9C,GACpB5iB,IAGA,KAAY,EAAAjR,EAAAiR,GACZzkB,EAAAskF,EAAAtkF,GAAAwT,IAGA,KAAY,EAAAiR,EAAAjR,GACZ1I,EAAAw5E,EAAAx5E,GAAA2Z,IAGA,KAAYjR,KAAK,CACjB,GAAAxT,IAAA8K,GAAA9K,IAAA8K,EAAAynF,UAAA,MAAA9mF,EACAzL,EAAAskF,EAAAtkF,GACA8K,EAAAw5E,EAAAx5E,GAGA9K,EAAA,UACKA,EAAA,KAGL,IAFA8K,EAAA9K,EAEAA,EAAA,GAAgBs6D,OAAAxvD,IAEhB,QADA0I,EAAA8mD,EAAAi4B,YACA/+E,IAAA1I,IACA9K,EAAA2I,KAAA2xD,GACAA,EAAAgqB,EAAAhqB,GAGA,IAAAA,EAAA,GAAgBv6D,OAAA+K,IAEhB,QADA0I,EAAAzT,EAAAwyF,YACA/+E,IAAA1I,IACAwvD,EAAA3xD,KAAA5I,GACAA,EAAAukF,EAAAvkF,GAGA,IAAAA,EAAA,EAAeA,EAAAC,EAAAwB,OAAczB,IAC7B6kF,EAAA5kF,EAAAD,GAAA,UAAA0L,GAGA,IAAA1L,EAAAu6D,EAAA94D,OAAsB,EAAAzB,KACtB6kF,EAAAtqB,EAAAv6D,GAAA,WAAAmJ,GAGA,OAAAuC,EAAAvC,KAIA,SAAAspF,GAAA/mF,EAAAzL,GACA,OAAAyL,IAAAzL,IAAA,IAAAyL,GAAA,EAAAA,IAAA,EAAAzL,IAAAyL,OAAAzL,MAGA,IAAAyyF,GAAAxyF,OAAAQ,UAAAH,eAEA,SAAAoyF,GAAAjnF,EAAAzL,GACA,GAAAwyF,GAAA/mF,EAAAzL,GAAA,SACA,qBAAAyL,GAAA,OAAAA,GAAA,kBAAAzL,GAAA,OAAAA,EAAA,SACA,IAAAkJ,EAAAjJ,OAAA0R,KAAAlG,GACA1L,EAAAE,OAAA0R,KAAA3R,GACA,GAAAkJ,EAAA1H,SAAAzB,EAAAyB,OAAA,SAEA,IAAAzB,EAAA,EAAaA,EAAAmJ,EAAA1H,OAAczB,IAC3B,IAAA0yF,GAAA9wF,KAAA3B,EAAAkJ,EAAAnJ,MAAAyyF,GAAA/mF,EAAAvC,EAAAnJ,IAAAC,EAAAkJ,EAAAnJ,KAAA,SAGA,SAGA,SAAA4yF,GAAAlnF,GACA,IAAAzL,EAAAyL,EACA,GAAAA,EAAA8mF,UAAA,KAAyBvyF,EAAAukF,QACzBvkF,IAAAukF,WACG,CACH,UAAAvkF,EAAA4yF,WAAA,SAEA,KAAU5yF,EAAAukF,QACV,WAAAvkF,IAAAukF,QAAAqO,WAAA,SAGA,WAAA5yF,EAAAkkF,IAAA,IAGA,SAAA2O,GAAApnF,GACA,IAAAknF,GAAAlnF,IAAAzJ,EAAA,OAwEA,SAAA8wF,GAAArnF,GAEA,KADAA,EAtEA,SAAAA,GACA,IAAAzL,EAAAyL,EAAA8mF,UACA,IAAAvyF,EAAA,YAAAA,EAAA2yF,GAAAlnF,KAAAzJ,EAAA,WAAAhC,EAAA,KAAAyL,EAEA,QAAAvC,EAAAuC,EAAA1L,EAAAC,IAAyB,CACzB,IAAA8K,EAAA5B,EAAAq7E,OACAjqB,EAAAxvD,IAAAynF,UAAA,KACA,IAAAznF,IAAAwvD,EAAA,MAEA,GAAAxvD,EAAAioF,QAAAz4B,EAAAy4B,MAAA,CACA,QAAAtuE,EAAA3Z,EAAAioF,MAA2BtuE,GAAG,CAC9B,GAAAA,IAAAvb,EAAA,OAAA2pF,GAAA/nF,GAAAW,EACA,GAAAgZ,IAAA1kB,EAAA,OAAA8yF,GAAA/nF,GAAA9K,EACAykB,IAAAuuE,QAGAhxF,EAAA,OAGA,GAAAkH,EAAAq7E,SAAAxkF,EAAAwkF,OAAAr7E,EAAA4B,EAAA/K,EAAAu6D,MAA4C,CAC5C71C,GAAA,EAEA,QAAAq4B,EAAAhyC,EAAAioF,MAA2Bj2C,GAAG,CAC9B,GAAAA,IAAA5zC,EAAA,CACAub,GAAA,EACAvb,EAAA4B,EACA/K,EAAAu6D,EACA,MAGA,GAAAxd,IAAA/8C,EAAA,CACA0kB,GAAA,EACA1kB,EAAA+K,EACA5B,EAAAoxD,EACA,MAGAxd,IAAAk2C,QAGA,IAAAvuE,EAAA,CACA,IAAAq4B,EAAAwd,EAAAy4B,MAAyBj2C,GAAG,CAC5B,GAAAA,IAAA5zC,EAAA,CACAub,GAAA,EACAvb,EAAAoxD,EACAv6D,EAAA+K,EACA,MAGA,GAAAgyC,IAAA/8C,EAAA,CACA0kB,GAAA,EACA1kB,EAAAu6D,EACApxD,EAAA4B,EACA,MAGAgyC,IAAAk2C,QAGAvuE,GAAAziB,EAAA,QAGAkH,EAAAqpF,YAAAxyF,GAAAiC,EAAA,OAIA,OADA,IAAAkH,EAAAg7E,KAAAliF,EAAA,OACAkH,EAAAw6E,UAAAvxC,UAAAjpC,EAAAuC,EAAAzL,EAIAizF,CAAAxnF,IACA,YAEA,QAAAzL,EAAAyL,IAAkB,CAClB,OAAAzL,EAAAkkF,KAAA,IAAAlkF,EAAAkkF,IAAA,OAAAlkF,EACA,GAAAA,EAAA+yF,MAAA/yF,EAAA+yF,MAAAxO,OAAAvkF,MAAA+yF,UAAiD,CACjD,GAAA/yF,IAAAyL,EAAA,MAEA,MAAYzL,EAAAgzF,SAAY,CACxB,IAAAhzF,EAAAukF,QAAAvkF,EAAAukF,SAAA94E,EAAA,YACAzL,IAAAukF,OAGAvkF,EAAAgzF,QAAAzO,OAAAvkF,EAAAukF,OACAvkF,IAAAgzF,SAIA,YAGA,IAAAE,GAAAjxF,GAAAulF,OAAA,CACA2L,cAAA,KACAC,YAAA,KACAC,cAAA,OAEAC,GAAArxF,GAAAulF,OAAA,CACA+L,cAAA,SAAA9nF,GACA,wBAAAA,IAAA8nF,cAAAx7E,OAAAw7E,iBAGAC,GAAA7D,GAAAnI,OAAA,CACAyJ,cAAA,OAGA,SAAAwC,GAAAhoF,GACA,IAAAzL,EAAAyL,EAAAg9E,QAGA,MAFA,aAAAh9E,EAAA,KAAAA,IAAAioF,WAAA,KAAA1zF,IAAAyL,EAAA,IAAAA,EAAAzL,EACA,KAAAyL,MAAA,IACA,IAAAA,GAAA,KAAAA,IAAA,EAGA,IAAAkoF,GAAA,CACAC,IAAA,SACAC,SAAA,IACAC,KAAA,YACAC,GAAA,UACAC,MAAA,aACAC,KAAA,YACAC,IAAA,SACAC,IAAA,KACAC,KAAA,cACAC,KAAA,cACAC,OAAA,aACAC,gBAAA,gBAEAC,GAAA,CACAC,EAAA,YACAC,EAAA,MACAC,GAAA,QACAC,GAAA,QACAC,GAAA,QACAC,GAAA,UACAC,GAAA,MACAC,GAAA,QACAC,GAAA,WACAC,GAAA,SACAC,GAAA,IACAC,GAAA,SACAC,GAAA,WACAC,GAAA,MACAC,GAAA,OACAC,GAAA,YACAC,GAAA,UACAC,GAAA,aACAC,GAAA,YACAC,GAAA,SACAC,GAAA,SACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,UACAC,IAAA,aACAC,IAAA,QAEAC,GAAAlH,GAAAnI,OAAA,CACA9lF,IAAA,SAAA+J,GACA,GAAAA,EAAA/J,IAAA,CACA,IAAA1B,EAAA2zF,GAAAloF,EAAA/J,MAAA+J,EAAA/J,IACA,oBAAA1B,EAAA,OAAAA,EAGA,mBAAAyL,EAAAzF,KAAA,MAAAyF,EAAAgoF,GAAAhoF,IAAA,QAAAlE,OAAAgD,aAAAkB,GAAA,YAAAA,EAAAzF,MAAA,UAAAyF,EAAAzF,KAAAwuF,GAAA/oF,EAAAg9E,UAAA,mBAEA5yE,SAAA,KACAqb,QAAA,KACAC,SAAA,KACAF,OAAA,KACAD,QAAA,KACA28B,OAAA,KACAm7B,OAAA,KACAqH,iBAAAC,GACAsD,SAAA,SAAAjoF,GACA,mBAAAA,EAAAzF,KAAAytF,GAAAhoF,GAAA,GAEAg9E,QAAA,SAAAh9E,GACA,kBAAAA,EAAAzF,MAAA,UAAAyF,EAAAzF,KAAAyF,EAAAg9E,QAAA,GAEAM,MAAA,SAAAt9E,GACA,mBAAAA,EAAAzF,KAAAytF,GAAAhoF,GAAA,YAAAA,EAAAzF,MAAA,UAAAyF,EAAAzF,KAAAyF,EAAAg9E,QAAA,KAGAqO,GAAArG,GAAAjJ,OAAA,CACAuP,aAAA,OAEAC,GAAArH,GAAAnI,OAAA,CACAyP,QAAA,KACAC,cAAA,KACAC,eAAA,KACAlmE,OAAA,KACAD,QAAA,KACAE,QAAA,KACAC,SAAA,KACAg/D,iBAAAC,KAEAgH,GAAAn1F,GAAAulF,OAAA,CACA0F,aAAA,KACAkG,YAAA,KACAC,cAAA,OAEAgE,GAAA5G,GAAAjJ,OAAA,CACA8P,OAAA,SAAA7rF,GACA,iBAAAA,IAAA6rF,OAAA,gBAAA7rF,KAAA8rF,YAAA,GAEAC,OAAA,SAAA/rF,GACA,iBAAAA,IAAA+rF,OAAA,gBAAA/rF,KAAAgsF,YAAA,eAAAhsF,KAAAisF,WAAA,GAEAC,OAAA,KACAC,UAAA,OAEAC,GAAA,oBAAAlS,EAAA,iBAAAC,EAAA,uBAAAC,EAAA,22BAAAC,GAAA,0DACAgS,GAAA,GACAC,GAAA,GAEA,SAAAC,GAAAvsF,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAA,GAEA1L,EAAA,OADA0L,IAAA,IACA,GAAAwiD,cAAAxiD,EAAAlG,MAAA,IACAvF,EAAA,CACAmiF,wBAAA,CACA+F,QAAAnoF,EACAooF,SAAApoF,EAAA,WAEAyiF,aAAA,CAAAt5E,GACA+uF,cAAAj4F,GAEA83F,GAAArsF,GAAAzL,EACA+3F,GAAA7uF,GAAAlJ,EAGA,yvBAAAgS,QAAA,SAAAvG,GACAusF,GAAAvsF,GAAA,KAEAosF,GAAA7lF,QAAA,SAAAvG,GACAusF,GAAAvsF,GAAA,KAEA,IAAAysF,GAAA,CACAjW,WAAA6V,GACAK,+BAAA,SAAA1sF,GAEA,iBADAA,EAAAssF,GAAAtsF,MACA,IAAAA,EAAAwsF,eAEAjW,cAAA,SAAAv2E,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAAitF,GAAAtsF,GACA,IAAAX,EAAA,YAEA,OAAAW,GACA,eACA,OAAAgoF,GAAAvqF,GAAA,YAEA,cACA,YACAuC,EAAAorF,GACA,MAEA,WACA,YACAprF,EAAA+nF,GACA,MAEA,YACA,OAAAtqF,EAAA6nB,OAAA,YAEA,eACA,eACA,gBACA,gBACA,cACA,eACA,gBACA,kBACAtlB,EAAAglF,GACA,MAEA,WACA,cACA,gBACA,eACA,gBACA,eACA,gBACA,WACAhlF,EAAAqrF,GACA,MAEA,kBACA,eACA,gBACA,iBACArrF,EAAAurF,GACA,MAEA,KAAArR,EACA,KAAAC,EACA,KAAAC,EACAp6E,EAAAynF,GACA,MAEA,KAAApN,GACAr6E,EAAA2rF,GACA,MAEA,aACA3rF,EAAAkkF,GACA,MAEA,YACAlkF,EAAA4rF,GACA,MAEA,WACA,UACA,YACA5rF,EAAA6nF,GACA,MAEA,wBACA,yBACA,oBACA,kBACA,kBACA,iBACA,kBACA,gBACA7nF,EAAA6lF,GACA,MAEA,QACA7lF,EAAAxJ,GAKA,OADA6iF,EADA9kF,EAAAyL,EAAAs7E,UAAAj8E,EAAA9K,EAAAkJ,EAAAnJ,IAEAC,IAGAo4F,GAAAF,GAAAC,+BACAE,GAAA,GAEA,SAAAC,GAAA7sF,GACA,IAAAzL,EAAAyL,EAAA8sF,WACArvF,EAAAlJ,EAEA,GACA,IAAAkJ,EAAA,CACAuC,EAAA+sF,UAAA7vF,KAAAO,GACA,MAGA,IAAAnJ,EAEA,IAAAA,EAAAmJ,EAAenJ,EAAAwkF,QACfxkF,IAAAwkF,OAIA,KADAxkF,EAAA,IAAAA,EAAAmkF,IAAA,KAAAnkF,EAAA2jF,UAAA+U,eACA,MACAhtF,EAAA+sF,UAAA7vF,KAAAO,GACAA,EAAA86E,EAAAjkF,SACGmJ,GAEH,IAAAA,EAAA,EAAaA,EAAAuC,EAAA+sF,UAAAh3F,OAAwB0H,IAAA,CACrClJ,EAAAyL,EAAA+sF,UAAAtvF,GACA,IAAA4B,EAAA2/E,GAAAh/E,EAAA66E,aACAvmF,EAAA0L,EAAAitF,aAEA,QAAAp+B,EAAA7uD,EAAA66E,YAAA7hE,EAAA,KAAAq4B,EAAA,EAAgDA,EAAAilC,EAAAvgF,OAAes7C,IAAA,CAC/D,IAAAzV,EAAA06C,EAAAjlC,GACAzV,QAAA26C,cAAAjiF,EAAAC,EAAAs6D,EAAAxvD,MAAA2Z,EAAAo+D,EAAAp+D,EAAA4iB,IAGAu8C,EAAAn/D,IAIA,IAAAk0E,IAAA,EAEA,SAAApb,GAAA9xE,EAAAzL,GACA,IAAAA,EAAA,YACA,IAAAkJ,GAAAkvF,GAAA3sF,GAAAmtF,GAAAC,IAAAt7D,KAAA,KAAA9xB,GACAzL,EAAAob,iBAAA3P,EAAAvC,GAAA,GAGA,SAAA4vF,GAAArtF,EAAAzL,GACA,IAAAA,EAAA,YACA,IAAAkJ,GAAAkvF,GAAA3sF,GAAAmtF,GAAAC,IAAAt7D,KAAA,KAAA9xB,GACAzL,EAAAob,iBAAA3P,EAAAvC,GAAA,GAGA,SAAA0vF,GAAAntF,EAAAzL,GACA0pF,GAAAmP,GAAAptF,EAAAzL,GAGA,SAAA64F,GAAAptF,EAAAzL,GACA,GAAA24F,GAAA,CACA,IAAAzvF,EAAAuhF,GAAAzqF,GAIA,GAFA,QADAkJ,EAAA86E,EAAA96E,KACA,kBAAAA,EAAAg7E,KAAA,IAAAyO,GAAAzpF,OAAA,MAEAmvF,GAAA72F,OAAA,CACA,IAAAzB,EAAAs4F,GAAA5kF,MACA1T,EAAA24F,aAAAjtF,EACA1L,EAAAumF,YAAAtmF,EACAD,EAAAw4F,WAAArvF,EACAuC,EAAA1L,OACK0L,EAAA,CACLitF,aAAAjtF,EACA66E,YAAAtmF,EACAu4F,WAAArvF,EACAsvF,UAAA,IAGA,IACA3O,GAAAyO,GAAA7sF,GACK,QACLA,EAAAitF,aAAA,KAAAjtF,EAAA66E,YAAA,KAAA76E,EAAA8sF,WAAA,KAAA9sF,EAAA+sF,UAAAh3F,OAAA,KAAA62F,GAAA72F,QAAA62F,GAAA1vF,KAAA8C,KAKA,IAAAstF,GAAA,GACAC,GAAA,EACAC,GAAA,wBAAAtvF,KAAAkQ,UAAAtU,MAAA,GAEA,SAAA2zF,GAAAztF,GAEA,OADAxL,OAAAQ,UAAAH,eAAAqB,KAAA8J,EAAAwtF,MAAAxtF,EAAAwtF,IAAAD,KAAAD,GAAAttF,EAAAwtF,KAAA,IACAF,GAAAttF,EAAAwtF,KAGA,SAAAE,GAAA1tF,GAEA,wBADAA,MAAA,qBAAAuM,uBAAA,IACA,YAEA,IACA,OAAAvM,EAAA8iF,eAAA9iF,EAAA2tF,KACG,MAAAp5F,GACH,OAAAyL,EAAA2tF,MAIA,SAAAC,GAAA5tF,GACA,KAAQA,KAAA6tF,YACR7tF,IAAA6tF,WAGA,OAAA7tF,EAGA,SAAA8tF,GAAA9tF,EAAAzL,GACA,IAGAD,EAHAmJ,EAAAmwF,GAAA5tF,GAGA,IAFAA,EAAA,EAEavC,GAAG,CAChB,OAAAA,EAAAyhF,SAAA,CAEA,GADA5qF,EAAA0L,EAAAvC,EAAAi9E,YAAA3kF,OACAiK,GAAAzL,GAAAD,GAAAC,EAAA,OACAw5F,KAAAtwF,EACAnB,OAAA/H,EAAAyL,GAEAA,EAAA1L,EAGA0L,EAAA,CACA,KAAYvC,GAAG,CACf,GAAAA,EAAAuwF,YAAA,CACAvwF,IAAAuwF,YACA,MAAAhuF,EAGAvC,IAAA+6E,WAGA/6E,OAAA,EAGAA,EAAAmwF,GAAAnwF,IAQA,SAAAwwF,KACA,QAAAjuF,EAAAsM,OAAA/X,EAAAm5F,KAAgCn5F,aAAAyL,EAAAkuF,mBAAkC,CAClE,IACA,IAAAzwF,EAAA,kBAAAlJ,EAAA45F,cAAA/jF,SAAA0F,KACK,MAAAxb,GACLmJ,GAAA,EAGA,IAAAA,EAA+B,MAC/BlJ,EAAAm5F,IADA1tF,EAAAzL,EAAA45F,eACA5hF,UAGA,OAAAhY,EAGA,SAAA65F,GAAApuF,GACA,IAAAzL,EAAAyL,KAAAkxB,UAAAlxB,EAAAkxB,SAAAl2B,cACA,OAAAzG,IAAA,UAAAA,IAAA,SAAAyL,EAAAzF,MAAA,WAAAyF,EAAAzF,MAAA,QAAAyF,EAAAzF,MAAA,QAAAyF,EAAAzF,MAAA,aAAAyF,EAAAzF,OAAA,aAAAhG,GAAA,SAAAyL,EAAAquF,iBA2EA,SAAAC,GAAAtuF,GACA,IAAAzL,EAAA05F,KACAxwF,EAAAuC,EAAAuuF,YACAj6F,EAAA0L,EAAAwuF,eAEA,GAAAj6F,IAAAkJ,QAAA23D,eArGA,SAAAq5B,EAAAzuF,EAAAzL,GACA,SAAAyL,IAAAzL,KAAAyL,IAAAzL,KAAAyL,GAAA,IAAAA,EAAAk/E,YAAA3qF,GAAA,IAAAA,EAAA2qF,SAAAuP,EAAAzuF,EAAAzL,EAAAikF,YAAA,aAAAx4E,IAAA0uF,SAAAn6F,KAAAyL,EAAA2uF,4BAAA,GAAA3uF,EAAA2uF,wBAAAp6F,MAoGAk6F,CAAAhxF,EAAA23D,cAAAw5B,gBAAAnxF,GAAA,CACA,UAAAnJ,GAAA85F,GAAA3wF,GAAA,GAAAlJ,EAAAD,EAAAwJ,WAAA,KAAAkC,EAAA1L,EAAAyJ,OAAAiC,EAAAzL,GAAA,mBAAAkJ,IAAAoxF,eAAAt6F,EAAAkJ,EAAAqxF,aAAA5wF,KAAAC,IAAA6B,EAAAvC,EAAAtI,MAAAY,aAA4K,IAAAiK,GAAAzL,EAAAkJ,EAAA23D,eAAA7oD,WAAAhY,EAAAqyF,aAAAt6E,QAAAyiF,aAAA,CAC5K/uF,IAAA+uF,eACA,IAAA1vF,EAAA5B,EAAAi9E,YAAA3kF,OACA84D,EAAA3wD,KAAAC,IAAA7J,EAAAwJ,MAAAuB,GACA/K,OAAA,IAAAA,EAAAyJ,IAAA8wD,EAAA3wD,KAAAC,IAAA7J,EAAAyJ,IAAAsB,IACAW,EAAA+7E,QAAAltB,EAAAv6D,IAAA+K,EAAA/K,IAAAu6D,IAAAxvD,GACAA,EAAAyuF,GAAArwF,EAAAoxD,GACA,IAAA71C,EAAA80E,GAAArwF,EAAAnJ,GACA+K,GAAA2Z,IAAA,IAAAhZ,EAAAgvF,YAAAhvF,EAAAivF,aAAA5vF,EAAA0uF,MAAA/tF,EAAAkvF,eAAA7vF,EAAA/C,QAAA0D,EAAAmvF,YAAAn2E,EAAA+0E,MAAA/tF,EAAAovF,cAAAp2E,EAAA1c,WAAA/H,IAAA86F,eAAAC,SAAAjwF,EAAA0uF,KAAA1uF,EAAA/C,QAAA0D,EAAAuvF,kBAAA1gC,EAAAv6D,GAAA0L,EAAAwvF,SAAAj7F,GAAAyL,EAAA+7E,OAAA/iE,EAAA+0E,KAAA/0E,EAAA1c,UAAA/H,EAAAk7F,OAAAz2E,EAAA+0E,KAAA/0E,EAAA1c,QAAA0D,EAAAwvF,SAAAj7F,KAIA,IAFAA,EAAA,GAEAyL,EAAAvC,EAAeuC,IAAAw4E,YACf,IAAAx4E,EAAAk/E,UAAA3qF,EAAA2I,KAAA,CACAwyF,QAAA1vF,EACA+U,KAAA/U,EAAA2vF,WACA36E,IAAAhV,EAAA4vF,YAMA,IAFA,oBAAAnyF,EAAAoyF,OAAApyF,EAAAoyF,QAEApyF,EAAA,EAAeA,EAAAlJ,EAAAwB,OAAc0H,KAC7BuC,EAAAzL,EAAAkJ,IAAAiyF,QAAAC,WAAA3vF,EAAA+U,KAAA/U,EAAA0vF,QAAAE,UAAA5vF,EAAAgV,KAKA,IAAA86E,GAAAxW,GAAA,iBAAA/sE,UAAA,IAAAA,SAAA4vE,aACA4T,GAAA,CACAC,OAAA,CACAtZ,wBAAA,CACA+F,QAAA,WACAC,SAAA,mBAEA3F,aAAA,iFAAA3uE,MAAA,OAGA6nF,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,EAEA,SAAAC,GAAArwF,EAAAzL,GACA,IAAAkJ,EAAAlJ,EAAA+X,SAAA/X,IAAAgY,SAAA,IAAAhY,EAAA2qF,SAAA3qF,IAAA6gE,cACA,OAAAg7B,IAAA,MAAAH,SAAAvC,GAAAjwF,GAAA,MAEA,mBADAA,EAAAwyF,KACA7B,GAAA3wF,KAAA,CACAK,MAAAL,EAAAoxF,eACA9wF,IAAAN,EAAAqxF,cACGrxF,EAAA,CACHwxF,YADGxxF,KAAA23D,eAAA33D,EAAA23D,cAAAwxB,aAAAt6E,QAAAyiF,gBACHE,WACAC,aAAAzxF,EAAAyxF,aACAC,UAAA1xF,EAAA0xF,UACAC,YAAA3xF,EAAA2xF,aAEAe,IAAAlJ,GAAAkJ,GAAA1yF,GAAA,MAAA0yF,GAAA1yF,GAAAuC,EAAAxJ,GAAA8kF,UAAAyU,GAAAC,OAAAE,GAAAlwF,EAAAzL,IAAAgG,KAAA,SAAAyF,EAAAnK,OAAAo6F,GAAA5W,EAAAr5E,OAGA,IAAAswF,GAAA,CACA9Z,WAAAuZ,GACAxZ,cAAA,SAAAv2E,EAAAzL,EAAAkJ,EAAAnJ,GACA,IACAu6D,EADAxvD,EAAA/K,EAAAgY,SAAAhY,IAAAiY,SAAA,IAAAjY,EAAA4qF,SAAA5qF,IAAA8gE,cAGA,KAAAvG,GAAAxvD,GAAA,CACAW,EAAA,CACAX,EAAAouF,GAAApuF,GACAwvD,EAAAioB,EAAAyZ,SAEA,QAAAv3E,EAAA,EAAuBA,EAAA61C,EAAA94D,OAAcijB,IAAA,CACrC,IAAAq4B,EAAAwd,EAAA71C,GAEA,IAAA3Z,EAAAxK,eAAAw8C,KAAAhyC,EAAAgyC,GAAA,CACAhyC,GAAA,EACA,MAAAW,GAIAX,GAAA,EAGAwvD,GAAAxvD,EAGA,GAAAwvD,EAAA,YAGA,OAFAxvD,EAAA9K,EAAAokF,EAAApkF,GAAA+X,OAEAtM,GACA,aACA++E,GAAA1/E,IAAA,SAAAA,EAAAgvF,mBAAA4B,GAAA5wF,EAAA6wF,GAAA37F,EAAA47F,GAAA,MACA,MAEA,WACAA,GAAAD,GAAAD,GAAA,KACA,MAEA,gBACAG,IAAA,EACA,MAEA,kBACA,cACA,cACA,OAAAA,IAAA,EAAAC,GAAA5yF,EAAAnJ,GAEA,sBACA,GAAAw7F,GAAA,MAEA,cACA,YACA,OAAAO,GAAA5yF,EAAAnJ,GAGA,cAuBA,SAAAk8F,GAAAxwF,EAAAzL,GAKA,OAJAyL,EAAA9E,EAAA,CACA8lB,cAAA,GACGzsB,IACHA,EAZA,SAAAyL,GACA,IAAAzL,EAAA,GAIA,OAHA28E,EAAAttD,SAAArd,QAAAvG,EAAA,SAAAA,GACA,MAAAA,IAAAzL,GAAAyL,KAEAzL,EAOAk8F,CAAAl8F,EAAAysB,aAAAhhB,EAAAghB,SAAAzsB,GACAyL,EAGA,SAAA0wF,GAAA1wF,EAAAzL,EAAAkJ,EAAAnJ,GAGA,GAFA0L,IAAAwiB,QAEAjuB,EAAA,CACAA,EAAA,GAEA,QAAA8K,EAAA,EAAmBA,EAAA5B,EAAA1H,OAAcsJ,IACjC9K,EAAA,IAAAkJ,EAAA4B,KAAA,EAGA,IAAA5B,EAAA,EAAeA,EAAAuC,EAAAjK,OAAc0H,IAC7B4B,EAAA9K,EAAAM,eAAA,IAAAmL,EAAAvC,GAAAtI,OAAA6K,EAAAvC,GAAAkzF,WAAAtxF,IAAAW,EAAAvC,GAAAkzF,SAAAtxF,MAAA/K,IAAA0L,EAAAvC,GAAAmzF,iBAAA,OAEG,CAIH,IAHAnzF,EAAA,GAAAwkF,GAAAxkF,GACAlJ,EAAA,KAEA8K,EAAA,EAAeA,EAAAW,EAAAjK,OAAcsJ,IAAA,CAC7B,GAAAW,EAAAX,GAAAlK,QAAAsI,EAGA,OAFAuC,EAAAX,GAAAsxF,UAAA,OACAr8F,IAAA0L,EAAAX,GAAAuxF,iBAAA,IAIA,OAAAr8F,GAAAyL,EAAAX,GAAA64E,WAAA3jF,EAAAyL,EAAAX,IAGA,OAAA9K,MAAAo8F,UAAA,IAIA,SAAAE,GAAA7wF,EAAAzL,GAEA,OADA,MAAAA,EAAAu8F,yBAAAv6F,EAAA,MACA2E,EAAA,GAAa3G,EAAA,CACbY,WAAA,EACAitF,kBAAA,EACAphE,SAAA,GAAAhhB,EAAAqiF,cAAAG,eAIA,SAAAuO,GAAA/wF,EAAAzL,GACA,IAAAkJ,EAAAlJ,EAAAY,MACA,MAAAsI,MAAAlJ,EAAA6tF,aAAA,OAAA7tF,IAAAysB,YAAA,MAAAvjB,GAAAlH,EAAA,MAAA5B,MAAAyD,QAAA7D,KAAA,GAAAA,EAAAwB,QAAAQ,EAAA,MAAAhC,IAAA,IAAAkJ,EAAAlJ,GAAA,MAAAkJ,MAAA,KACAuC,EAAAqiF,cAAA,CACAG,aAAAP,GAAAxkF,IAIA,SAAAuzF,GAAAhxF,EAAAzL,GACA,IAAAkJ,EAAAwkF,GAAA1tF,EAAAY,OACAb,EAAA2tF,GAAA1tF,EAAA6tF,cACA,MAAA3kF,OAAA,GAAAA,KAAAuC,EAAA7K,QAAA6K,EAAA7K,MAAAsI,GAAA,MAAAlJ,EAAA6tF,cAAApiF,EAAAoiF,eAAA3kF,IAAAuC,EAAAoiF,aAAA3kF,IACA,MAAAnJ,IAAA0L,EAAAoiF,aAAA,GAAA9tF,GAGA,SAAA28F,GAAAjxF,GACA,IAAAzL,EAAAyL,EAAA06E,YACAnmF,IAAAyL,EAAAqiF,cAAAG,eAAAxiF,EAAA7K,MAAAZ,GArFAsjF,EAAAC,uBAAA,0HAAA1vE,MAAA,MACA4uE,EAAA4B,EACAzrE,EAAAurE,EACAzB,EAAA0B,EACAd,EAAAE,yBAAA,CACAmZ,kBAAAzE,GACA0E,sBAAAxK,GACAyK,kBAAApN,GACAqN,kBAAAf,GACAgB,uBAAAlU,KA+EA,IAAAmU,GAAA,CACAC,KAAA,+BACAC,OAAA,qCACAC,IAAA,8BAGA,SAAAC,GAAA3xF,GACA,OAAAA,GACA,UACA,mCAEA,WACA,2CAEA,QACA,sCAIA,SAAA4xF,GAAA5xF,EAAAzL,GACA,aAAAyL,GAAA,iCAAAA,EAAA2xF,GAAAp9F,GAAA,+BAAAyL,GAAA,kBAAAzL,EAAA,+BAAAyL,EAGA,IACAA,GADA6xF,QAAA,EACAC,IAAA9xF,GAMC,SAAAA,EAAAzL,GACD,GAAAyL,EAAA+xF,eAAAR,GAAAG,KAAA,cAAA1xF,IAAAgyF,UAAAz9F,MAAqE,CAIrE,KAHAs9F,OAAAtlF,SAAAC,cAAA,QACAwlF,UAAA,QAAAz9F,EAAA,SAEAA,EAAAs9F,GAAAhE,WAA2B7tF,EAAA6tF,YAC3B7tF,EAAAiyF,YAAAjyF,EAAA6tF,YAGA,KAAUt5F,EAAAs5F,YACV7tF,EAAAkyF,YAAA39F,EAAAs5F,cAfA,qBAAAsE,aAAAC,wBAAA,SAAA79F,EAAAkJ,EAAAnJ,EAAA+K,GACA8yF,MAAAC,wBAAA,WACA,OAAApyF,GAAAzL,EAAAkJ,MAEGuC,IAgBH,SAAAqyF,GAAAryF,EAAAzL,GACA,GAAAA,EAAA,CACA,IAAAkJ,EAAAuC,EAAA6tF,WAEA,GAAApwF,OAAAuC,EAAAsyF,WAAA,IAAA70F,EAAAyhF,SAEA,YADAzhF,EAAA80F,UAAAh+F,GAKAyL,EAAA06E,YAAAnmF,EAGA,IAAAi+F,GAAA,CACAC,yBAAA,EACAC,mBAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,SAAA,EACAC,cAAA,EACAC,iBAAA,EACAC,aAAA,EACAC,SAAA,EACAC,MAAA,EACAC,UAAA,EACAC,cAAA,EACAC,YAAA,EACAC,cAAA,EACAC,WAAA,EACAC,UAAA,EACAC,SAAA,EACAC,YAAA,EACAC,aAAA,EACAC,cAAA,EACAC,YAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,WAAA,EACAC,YAAA,EACAC,SAAA,EACAC,OAAA,EACAC,SAAA,EACAC,SAAA,EACAC,QAAA,EACAC,QAAA,EACAC,MAAA,EACAC,aAAA,EACAC,cAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,aAAA,GAEAC,GAAA,0BAQA,SAAAC,GAAAp1F,EAAAzL,EAAAkJ,GACA,aAAAlJ,GAAA,mBAAAA,GAAA,KAAAA,EAAA,GAAAkJ,GAAA,kBAAAlJ,GAAA,IAAAA,GAAAi+F,GAAA39F,eAAAmL,IAAAwyF,GAAAxyF,IAAA,GAAAzL,GAAA+Q,OAAA/Q,EAAA,KAGA,SAAA8gG,GAAAr1F,EAAAzL,GAGA,QAAAkJ,KAFAuC,IAAAymB,MAEAlyB,EACA,GAAAA,EAAAM,eAAA4I,GAAA,CACA,IAAAnJ,EAAA,IAAAmJ,EAAAjC,QAAA,MACA6D,EAAA+1F,GAAA33F,EAAAlJ,EAAAkJ,GAAAnJ,GACA,UAAAmJ,MAAA,YACAnJ,EAAA0L,EAAAs1F,YAAA73F,EAAA4B,GAAAW,EAAAvC,GAAA4B,GAnBA7K,OAAA0R,KAAAssF,IAAAjsF,QAAA,SAAAvG,GACAm1F,GAAA5uF,QAAA,SAAAhS,GACAA,IAAAyL,EAAA4H,OAAA,GAAA46C,cAAAxiD,EAAAiR,UAAA,GACAuhF,GAAAj+F,GAAAi+F,GAAAxyF,OAqBA,IAAAu1F,GAAAr6F,EAAA,CACAs6F,UAAA,GACC,CACDC,MAAA,EACA1xE,MAAA,EACA2xE,IAAA,EACAn0B,KAAA,EACAo0B,OAAA,EACAC,IAAA,EACAlkE,KAAA,EACAo8C,OAAA,EACA+nB,QAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,EACAhgG,QAAA,EACAigG,OAAA,EACAC,KAAA,IAGA,SAAAC,GAAAn2F,EAAAzL,GACAA,IAAAghG,GAAAv1F,KAAA,MAAAzL,EAAAysB,UAAA,MAAAzsB,EAAAu8F,0BAAAv6F,EAAA,MAAAyJ,EAAA,UAAAzL,EAAAu8F,0BAAA,MAAAv8F,EAAAysB,UAAAzqB,EAAA,wBAAAhC,EAAAu8F,yBAAA,WAAAv8F,EAAAu8F,yBAAAv6F,EAAA,aAAAhC,EAAAkyB,OAAA,kBAAAlyB,EAAAkyB,OAAAlwB,EAAA,UAGA,SAAAsnB,GAAA7d,EAAAzL,GACA,QAAAyL,EAAAxE,QAAA,6BAAAjH,EAAA6hG,GAEA,OAAAp2F,GACA,qBACA,oBACA,gBACA,oBACA,oBACA,uBACA,qBACA,oBACA,SAEA,QACA,UAIA,SAAAq2F,GAAAr2F,EAAAzL,GAEA,IAAAkJ,EAAAgwF,GADAztF,EAAA,IAAAA,EAAAk/E,UAAA,KAAAl/E,EAAAk/E,SAAAl/E,IAAAo1D,eAEA7gE,EAAAuiF,EAAAviF,GAEA,QAAAD,EAAA,EAAiBA,EAAAC,EAAAwB,OAAczB,IAAA,CAC/B,IAAA+K,EAAA9K,EAAAD,GAEA,IAAAmJ,EAAA5I,eAAAwK,KAAA5B,EAAA4B,GAAA,CACA,OAAAA,GACA,aACAguF,GAAA,SAAArtF,GACA,MAEA,YACA,WACAqtF,GAAA,QAAArtF,GACAqtF,GAAA,OAAArtF,GACAvC,EAAA64F,MAAA,EACA74F,EAAAoyF,OAAA,EACA,MAEA,aACA,YACA1Q,GAAA9/E,IAAAguF,GAAAhuF,EAAAW,GACA,MAEA,cACA,aACA,YACA,MAEA,SACA,IAAAs6E,GAAA9+E,QAAA6D,IAAAyyE,GAAAzyE,EAAAW,GAGAvC,EAAA4B,IAAA,IAKA,SAAAk3F,MAEA,IAAAC,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAA12F,EAAAzL,GACA,OAAAyL,GACA,aACA,YACA,aACA,eACA,QAAAzL,EAAAoiG,UAGA,SAGA,SAAAC,GAAA52F,EAAAzL,GACA,mBAAAyL,GAAA,WAAAA,GAAA,aAAAA,GAAA,kBAAAzL,EAAAysB,UAAA,kBAAAzsB,EAAAysB,UAAA,kBAAAzsB,EAAAu8F,yBAAA,OAAAv8F,EAAAu8F,yBAAA,MAAAv8F,EAAAu8F,wBAAA+F,OAGA,IAAAC,GAAA,oBAAAr9E,2BAAA,EACAs9E,GAAA,oBAAAr9E,+BAAA,EACAs9E,GAAAzqD,EAAA0qD,0BACAC,GAAA3qD,EAAA4qD,wBA4BA,SAAAC,GAAAp3F,GACA,IAAAA,IAAAguF,YAAyBhuF,GAAA,IAAAA,EAAAk/E,UAAA,IAAAl/E,EAAAk/E,UACzBl/E,IAAAguF,YAGA,OAAAhuF,EAGA,SAAAq3F,GAAAr3F,GACA,IAAAA,IAAA6tF,WAAwB7tF,GAAA,IAAAA,EAAAk/E,UAAA,IAAAl/E,EAAAk/E,UACxBl/E,IAAAguF,YAGA,OAAAhuF,EAGA,IAAAs3F,IACA,IAAAC,GAAA,GACAC,IAAA,EAEA,SAAAvlB,GAAAjyE,GACA,EAAAw3F,KAAAx3F,EAAA0mC,QAAA6wD,GAAAC,IAAAD,GAAAC,IAAA,KAAAA,MAGA,SAAAtlB,GAAAlyE,EAAAzL,GAEAgjG,KADAC,IACAx3F,EAAA0mC,QACA1mC,EAAA0mC,QAAAnyC,EAGA,IAAAkjG,GAAA,GACAx4D,GAAA,CACAyH,QAAA+wD,IAEAnlB,GAAA,CACA5rC,SAAA,GAEAgxD,GAAAD,GAEA,SAAAE,GAAA33F,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAAzF,KAAAg1E,aACA,IAAA9xE,EAAA,OAAAg6F,GACA,IAAAnjG,EAAA0L,EAAAi4E,UACA,GAAA3jF,KAAAsjG,8CAAArjG,EAAA,OAAAD,EAAAujG,0CACA,IACAhpC,EADAxvD,EAAA,GAGA,IAAAwvD,KAAApxD,EACA4B,EAAAwvD,GAAAt6D,EAAAs6D,GAIA,OADAv6D,KAAA0L,IAAAi4E,WAAA2f,4CAAArjG,EAAAyL,EAAA63F,0CAAAx4F,GACAA,EAGA,SAAAkzE,GAAAvyE,GAEA,eADAA,IAAAqvE,yBACA,IAAArvE,EAGA,SAAA83F,GAAA93F,GACAiyE,GAAAK,IACAL,GAAAhzC,IAGA,SAAA84D,GAAA/3F,GACAiyE,GAAAK,IACAL,GAAAhzC,IAGA,SAAA+4D,GAAAh4F,EAAAzL,EAAAkJ,GACAwhC,GAAAyH,UAAA+wD,IAAAlhG,EAAA,OACA27E,GAAAjzC,GAAA1qC,GACA29E,GAAAI,GAAA70E,GAGA,SAAAw6F,GAAAj4F,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAA0L,EAAAi4E,UAEA,GADAj4E,EAAAzL,EAAA86E,kBACA,oBAAA/6E,EAAA4jG,gBAAA,OAAAz6F,EAGA,QAAA4B,KAFA/K,IAAA4jG,kBAGA74F,KAAAW,GAAAzJ,EAAA,MAAAoqF,GAAApsF,IAAA,UAAA8K,GAGA,OAAAnE,EAAA,GAAauC,EAAAnJ,GAGb,SAAA6jG,GAAAn4F,GACA,IAAAzL,EAAAyL,EAAAi4E,UAKA,OAJA1jF,OAAA6jG,2CAAAX,GACAC,GAAAz4D,GAAAyH,QACAwrC,GAAAjzC,GAAA1qC,GACA29E,GAAAI,MAAA5rC,UACA,EAGA,SAAA2xD,GAAAr4F,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAA0L,EAAAi4E,UACA3jF,GAAAiC,EAAA,OACAkH,GAAAlJ,EAAA0jG,GAAAj4F,EAAAzL,EAAAmjG,IAAApjG,EAAA8jG,0CAAA7jG,EAAA09E,GAAAK,IAAAL,GAAAhzC,IAAAizC,GAAAjzC,GAAA1qC,IAAA09E,GAAAK,IACAJ,GAAAI,GAAA70E,GAGA,IAAA66F,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAAx4F,GACA,gBAAAzL,GACA,IACA,OAAAyL,EAAAzL,GACK,MAAAkJ,MAsBL,SAAAg7F,GAAAz4F,EAAAzL,EAAAkJ,EAAAnJ,GACAF,KAAAqkF,IAAAz4E,EACA5L,KAAA6B,IAAAwH,EACArJ,KAAAmzF,QAAAnzF,KAAAkzF,MAAAlzF,KAAA0kF,OAAA1kF,KAAA6jF,UAAA7jF,KAAAmG,KAAAnG,KAAAskG,YAAA,KACAtkG,KAAA0T,MAAA,EACA1T,KAAA2xB,IAAA,KACA3xB,KAAAukG,aAAApkG,EACAH,KAAAwkG,oBAAAxkG,KAAAykG,cAAAzkG,KAAA0kG,YAAA1kG,KAAA2kG,cAAA,KACA3kG,KAAAiiD,KAAA/hD,EACAF,KAAA+yF,UAAA,EACA/yF,KAAA4kG,WAAA5kG,KAAA6kG,YAAA7kG,KAAA8kG,WAAA,KACA9kG,KAAA+kG,oBAAA/kG,KAAAglG,eAAA,EACAhlG,KAAA0yF,UAAA,KAGA,SAAAtU,GAAAxyE,EAAAzL,EAAAkJ,EAAAnJ,GACA,WAAAmkG,GAAAz4F,EAAAzL,EAAAkJ,EAAAnJ,GAGA,SAAA+kG,GAAAr5F,GAEA,UADAA,IAAAhL,aACAgL,EAAAmyE,kBAeA,SAAAmnB,GAAAt5F,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAA8mF,UAYA,OAXA,OAAArpF,MAAA+0E,GAAAxyE,EAAAy4E,IAAAlkF,EAAAyL,EAAA/J,IAAA+J,EAAAq2C,OAAAqiD,YAAA14F,EAAA04F,YAAAj7F,EAAAlD,KAAAyF,EAAAzF,KAAAkD,EAAAw6E,UAAAj4E,EAAAi4E,UAAAx6E,EAAAqpF,UAAA9mF,IAAA8mF,UAAArpF,MAAAk7F,aAAApkG,EAAAkJ,EAAA0pF,UAAA,EAAA1pF,EAAAy7F,WAAA,KAAAz7F,EAAAw7F,YAAA,KAAAx7F,EAAAu7F,WAAA,MACAv7F,EAAA07F,oBAAAn5F,EAAAm5F,oBACA17F,EAAA27F,eAAAp5F,EAAAo5F,eACA37F,EAAA6pF,MAAAtnF,EAAAsnF,MACA7pF,EAAAs7F,cAAA/4F,EAAA+4F,cACAt7F,EAAAo7F,cAAA74F,EAAA64F,cACAp7F,EAAAq7F,YAAA94F,EAAA84F,YACAr7F,EAAAm7F,oBAAA54F,EAAA44F,oBACAn7F,EAAA8pF,QAAAvnF,EAAAunF,QACA9pF,EAAAqK,MAAA9H,EAAA8H,MACArK,EAAAsoB,IAAA/lB,EAAA+lB,IACAtoB,EAGA,SAAA87F,GAAAv5F,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,GACA,IAAA71C,EAAA,EAEA,GADA1kB,EAAA0L,EACA,oBAAAA,EAAAq5F,GAAAr5F,KAAAgZ,EAAA,QAAgD,qBAAAhZ,EAAAgZ,EAAA,OAAsChZ,EAAA,OAAAA,GACtF,KAAA+/E,GACA,OAAAyZ,GAAA/7F,EAAAujB,SAAA3hB,EAAAwvD,EAAAt6D,GAEA,KAAA6rF,GACA,OAAAqZ,GAAAh8F,EAAA,EAAA4B,EAAAwvD,EAAAt6D,GAEA,KAAAyrF,GACA,OAAAyZ,GAAAh8F,EAAA,EAAA4B,EAAAwvD,EAAAt6D,GAEA,KAAA0rF,GACA,OAAAjgF,EAAAwyE,GAAA,GAAA/0E,EAAAlJ,EAAA,EAAA8K,IAAAq5F,YAAAzY,GAAAjgF,EAAAzF,KAAA0lF,GAAAjgF,EAAAo5F,eAAAvqC,EAAA7uD,EAEA,KAAAsgF,GACA,OAAAtgF,EAAAwyE,GAAA,GAAA/0E,EAAAlJ,EAAA8K,IAAAq5F,YAAApY,GAAAtgF,EAAAzF,KAAA+lF,GAAAtgF,EAAAo5F,eAAAvqC,EAAA7uD,EAEA,QACA,qBAAAA,GAAA,OAAAA,EAAA,OAAAA,EAAAmwE,UACA,KAAA+P,GACAlnE,EAAA,GACA,MAAAhZ,EAEA,KAAAmgF,GACAnnE,EAAA,EACA,MAAAhZ,EAEA,KAAAqgF,GACArnE,EAAA,GACA,MAAAhZ,EAEA,KAAAugF,GACAvnE,EAAA,GACA,MAAAhZ,EAEA,KAAAwgF,GACAxnE,EAAA,GACA1kB,EAAA,KACA,MAAA0L,EAEAzJ,EAAA,YAAAyJ,aAAA,IAMA,OAJAzL,EAAAi+E,GAAAx5D,EAAAvb,EAAAlJ,EAAA8K,IACAq5F,YAAA14F,EACAzL,EAAAgG,KAAAjG,EACAC,EAAA6kG,eAAAvqC,EACAt6D,EAGA,SAAAilG,GAAAx5F,EAAAzL,EAAAkJ,EAAAnJ,GAGA,OAFA0L,EAAAwyE,GAAA,EAAAxyE,EAAA1L,EAAAC,IACA6kG,eAAA37F,EACAuC,EAGA,SAAAy5F,GAAAz5F,EAAAzL,EAAAkJ,EAAAnJ,GAMA,OALA0L,EAAAwyE,GAAA,EAAAxyE,EAAA1L,EAAAC,GACAA,EAAA,OAAAA,GAAAyrF,GAAAI,GACApgF,EAAA04F,YAAAnkG,EACAyL,EAAAzF,KAAAhG,EACAyL,EAAAo5F,eAAA37F,EACAuC,EAGA,SAAA05F,GAAA15F,EAAAzL,EAAAkJ,GAGA,OAFAuC,EAAAwyE,GAAA,EAAAxyE,EAAA,KAAAzL,IACA6kG,eAAA37F,EACAuC,EAGA,SAAA25F,GAAA35F,EAAAzL,EAAAkJ,GAQA,OAPAlJ,EAAAi+E,GAAA,SAAAxyE,EAAAghB,SAAAhhB,EAAAghB,SAAA,GAAAhhB,EAAA/J,IAAA1B,IACA6kG,eAAA37F,EACAlJ,EAAA0jF,UAAA,CACA+U,cAAAhtF,EAAAgtF,cACA4M,gBAAA,KACAC,eAAA75F,EAAA65F,gBAEAtlG,EAGA,SAAAulG,GAAA95F,EAAAzL,GACAyL,EAAA+5F,UAAA,EACA,IAAAt8F,EAAAuC,EAAAg6F,oBACA,IAAAv8F,EAAAuC,EAAAg6F,oBAAAh6F,EAAAi6F,kBAAA1lG,EAAAkJ,EAAAlJ,EAAAyL,EAAAg6F,oBAAAzlG,EAAAyL,EAAAi6F,kBAAA1lG,IAAAyL,EAAAi6F,kBAAA1lG,GACA2lG,GAAA3lG,EAAAyL,GAeA,SAAAm6F,GAAAn6F,EAAAzL,GACAyL,EAAA+5F,UAAA,EACA/5F,EAAAo6F,kBAAA7lG,IAAAyL,EAAAo6F,iBAAA,GACA,IAAA38F,EAAAuC,EAAAg6F,oBACA1lG,EAAA0L,EAAAi6F,kBACAx8F,IAAAlJ,EAAAyL,EAAAg6F,oBAAA1lG,IAAAC,EAAAyL,EAAAi6F,kBAAA,EAAA3lG,MAAAC,IAAAyL,EAAAi6F,kBAAAx8F,GACAA,EAAAuC,EAAAq6F,sBACA/lG,EAAA0L,EAAAs6F,oBACA,IAAA78F,EAAAuC,EAAAq6F,sBAAAr6F,EAAAs6F,oBAAA/lG,EAAAkJ,EAAAlJ,EAAAyL,EAAAq6F,sBAAA9lG,EAAAD,EAAAC,IAAAyL,EAAAs6F,oBAAA/lG,GACA2lG,GAAA3lG,EAAAyL,GAGA,SAAAu6F,GAAAv6F,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAAg6F,oBAIA,OAFAv8F,EAAAlJ,MAAAkJ,IADAuC,IAAAq6F,uBAEA9lG,MAAAyL,GACAzL,EAGA,SAAA2lG,GAAAl6F,EAAAzL,GACA,IAAAkJ,EAAAlJ,EAAA8lG,sBACA/lG,EAAAC,EAAA+lG,oBACAj7F,EAAA9K,EAAAylG,oBACAnrC,EAAAt6D,EAAA6lG,iBAEA,KADA/6F,EAAA,IAAAA,IAAAwvD,KACA,IAAA7uD,GAAA1L,EAAA0L,KAAAX,EAAA/K,GAEA,KADA0L,EAAAX,IACA5B,EAAAuC,MAAAvC,GACAlJ,EAAAimG,2BAAAn7F,EACA9K,EAAA6kG,eAAAp5F,EAGA,SAAA8+B,GAAA9+B,EAAAzL,GACA,GAAAyL,KAAAwvE,aAIA,QAAA/xE,KAHAlJ,EAAA2G,EAAA,GAAY3G,GACZyL,IAAAwvE,kBAGA,IAAAj7E,EAAAkJ,KAAAlJ,EAAAkJ,GAAAuC,EAAAvC,IAIA,OAAAlJ,EAuCA,IAAAkmG,IAAA,IAAAvpB,EAAAjwD,WAAA8wD,KAEA,SAAA2oB,GAAA16F,EAAAzL,EAAAkJ,EAAAnJ,GAGAmJ,EAAA,QADAA,IAAAnJ,EADAC,EAAAyL,EAAA64F,sBAEA,IAAAp7F,EAAAlJ,EAAA2G,EAAA,GAA2C3G,EAAAkJ,GAC3CuC,EAAA64F,cAAAp7F,EAEA,QADAnJ,EAAA0L,EAAA84F,cACA,IAAA94F,EAAAo5F,iBAAA9kG,EAAAqmG,UAAAl9F,GAGA,IAAAm9F,GAAA,CACAnpB,UAAA,SAAAzxE,GACA,SAAAA,IAAA66F,sBAAA,IAAA3T,GAAAlnF,IAEA4xE,gBAAA,SAAA5xE,EAAAzL,EAAAkJ,GACAuC,IAAA66F,oBACA,IAAAvmG,EAAAwmG,KAEAz7F,EAAA07F,GADAzmG,EAAA0mG,GAAA1mG,EAAA0L,IAEAX,EAAA47F,QAAA1mG,OACA,IAAAkJ,GAAA,OAAAA,IAAA4B,EAAAoM,SAAAhO,GACAy9F,KACAC,GAAAn7F,EAAAX,GACA+7F,GAAAp7F,EAAA1L,IAEAq9E,oBAAA,SAAA3xE,EAAAzL,EAAAkJ,GACAuC,IAAA66F,oBACA,IAAAvmG,EAAAwmG,KAEAz7F,EAAA07F,GADAzmG,EAAA0mG,GAAA1mG,EAAA0L,IAEAX,EAAAo5E,IAAA4iB,GACAh8F,EAAA47F,QAAA1mG,OACA,IAAAkJ,GAAA,OAAAA,IAAA4B,EAAAoM,SAAAhO,GACAy9F,KACAC,GAAAn7F,EAAAX,GACA+7F,GAAAp7F,EAAA1L,IAEAo9E,mBAAA,SAAA1xE,EAAAzL,GACAyL,IAAA66F,oBACA,IAAAp9F,EAAAq9F,KAEAxmG,EAAAymG,GADAt9F,EAAAu9F,GAAAv9F,EAAAuC,IAEA1L,EAAAmkF,IAAA6iB,QACA,IAAA/mG,GAAA,OAAAA,IAAAD,EAAAmX,SAAAlX,GACA2mG,KACAC,GAAAn7F,EAAA1L,GACA8mG,GAAAp7F,EAAAvC,KAIA,SAAA89F,GAAAv7F,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,EAAA71C,GAEA,0BADAhZ,IAAAi4E,WACAujB,sBAAAx7F,EAAAw7F,sBAAAlnG,EAAAu6D,EAAA71C,IAAAzkB,EAAAS,YAAAT,EAAAS,UAAAq9E,wBAAA4U,GAAAxpF,EAAAnJ,KAAA2yF,GAAA5nF,EAAAwvD,IAGA,SAAA4sC,GAAAz7F,EAAAzL,EAAAkJ,GACA,IAAAnJ,GAAA,EACA+K,EAAAo4F,GACA5oC,EAAAt6D,EAAA+6E,YAQA,MAPA,kBAAAzgB,GAAA,OAAAA,IAAA9vB,GAAA8vB,IAAAxvD,EAAAkzE,GAAAh+E,GAAAmjG,GAAAz4D,GAAAyH,QAAAmoB,GAAAv6D,EAAA,QAAAA,EAAAC,EAAAg7E,oBAAA,IAAAj7E,GAAAqjG,GAAA33F,EAAAX,GAAAo4F,IACAljG,EAAA,IAAAA,EAAAkJ,EAAAoxD,GACA7uD,EAAA64F,cAAA,OAAAtkG,EAAAiW,YAAA,IAAAjW,EAAAiW,MAAAjW,EAAAiW,MAAA,KACAjW,EAAAy9E,QAAA4oB,GACA56F,EAAAi4E,UAAA1jF,EACAA,EAAAsmG,oBAAA76F,EACA1L,KAAA0L,IAAAi4E,WAAA2f,4CAAAv4F,EAAAW,EAAA63F,0CAAAhpC,GACAt6D,EAGA,SAAAmnG,GAAA17F,EAAAzL,EAAAkJ,EAAAnJ,GACA0L,EAAAzL,EAAAiW,MACA,oBAAAjW,EAAAonG,2BAAApnG,EAAAonG,0BAAAl+F,EAAAnJ,GACA,oBAAAC,EAAAqnG,kCAAArnG,EAAAqnG,iCAAAn+F,EAAAnJ,GACAC,EAAAiW,QAAAxK,GAAA46F,GAAAjpB,oBAAAp9E,IAAAiW,MAAA,MAGA,SAAAqxF,GAAA77F,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAAW,EAAAi4E,UACA54E,EAAA0N,MAAAtP,EACA4B,EAAAmL,MAAAxK,EAAA64F,cACAx5F,EAAA0yE,KAAA0oB,GACA,IAAA5rC,EAAAt6D,EAAA+6E,YACA,kBAAAzgB,GAAA,OAAAA,EAAAxvD,EAAA+f,QAAA2f,GAAA8vB,MAAA0jB,GAAAh+E,GAAAmjG,GAAAz4D,GAAAyH,QAAArnC,EAAA+f,QAAAu4E,GAAA33F,EAAA6uD,IAEA,QADAA,EAAA7uD,EAAA84F,eACAgD,GAAA97F,EAAA6uD,EAAApxD,EAAA4B,EAAA/K,GAAA+K,EAAAmL,MAAAxK,EAAA64F,eAEA,oBADAhqC,EAAAt6D,EAAAo7E,4BACA+qB,GAAA16F,EAAAzL,EAAAs6D,EAAApxD,GAAA4B,EAAAmL,MAAAxK,EAAA64F,eACA,oBAAAtkG,EAAAo7E,0BAAA,oBAAAtwE,EAAA08F,yBAAA,oBAAA18F,EAAA28F,2BAAA,oBAAA38F,EAAA48F,qBAAA1nG,EAAA8K,EAAAmL,MAAA,oBAAAnL,EAAA48F,oBAAA58F,EAAA48F,qBAAA,oBAAA58F,EAAA28F,2BAAA38F,EAAA28F,4BAAAznG,IAAA8K,EAAAmL,OAAAowF,GAAAjpB,oBAAAtyE,IAAAmL,MAAA,cAAAqkD,EAAA7uD,EAAA84F,eAAAgD,GAAA97F,EAAA6uD,EAAApxD,EAAA4B,EAAA/K,GAAA+K,EAAAmL,MAAAxK,EAAA64F,gBACA,oBAAAx5F,EAAAwhB,oBAAA7gB,EAAAmnF,WAAA,GAGA,IAAA+U,GAAAvnG,MAAAyD,QAEA,SAAA+jG,GAAAn8F,EAAAzL,EAAAkJ,GAGA,WAFAuC,EAAAvC,EAAAsoB,MAEA,oBAAA/lB,GAAA,kBAAAA,EAAA,CACA,GAAAvC,EAAAk1E,OAAA,CACAl1E,IAAAk1E,OACA,IAAAr+E,OAAA,EACAmJ,IAAA,IAAAA,EAAAg7E,KAAAliF,EAAA,OAAAjC,EAAAmJ,EAAAw6E,WACA3jF,GAAAiC,EAAA,MAAAyJ,GACA,IAAAX,EAAA,GAAAW,EACA,cAAAzL,GAAA,OAAAA,EAAAwxB,KAAA,oBAAAxxB,EAAAwxB,KAAAxxB,EAAAwxB,IAAAq2E,aAAA/8F,EAAA9K,EAAAwxB,MAEAxxB,EAAA,SAAAyL,GACA,IAAAzL,EAAAD,EAAAy9E,KACAx9E,IAAAkmG,KAAAlmG,EAAAD,EAAAy9E,KAAA,IACA,OAAA/xE,SAAAzL,EAAA8K,GAAA9K,EAAA8K,GAAAW,IAGAo8F,WAAA/8F,EACA9K,GAGA,kBAAAyL,GAAAzJ,EAAA,OACAkH,EAAAk1E,QAAAp8E,EAAA,MAAAyJ,GAGA,OAAAA,EAGA,SAAAq8F,GAAAr8F,EAAAzL,GACA,aAAAyL,EAAAzF,MAAAhE,EAAA,yBAAA/B,OAAAQ,UAAAgC,SAAAd,KAAA3B,GAAA,qBAAgHC,OAAA0R,KAAA3R,GAAAuM,KAAA,UAAkCvM,EAAA,IAGlJ,SAAA+nG,GAAAt8F,GACA,SAAAzL,IAAAkJ,GACA,GAAAuC,EAAA,CACA,IAAA1L,EAAAC,EAAAykG,WACA,OAAA1kG,KAAA4kG,WAAAz7F,EAAAlJ,EAAAykG,WAAAv7F,GAAAlJ,EAAA0kG,YAAA1kG,EAAAykG,WAAAv7F,EACAA,EAAAy7F,WAAA,KACAz7F,EAAA0pF,UAAA,GAIA,SAAA1pF,IAAAnJ,GACA,IAAA0L,EAAA,YAEA,KAAU,OAAA1L,GACVC,EAAAkJ,EAAAnJ,OAAAizF,QAGA,YAGA,SAAAjzF,EAAA0L,EAAAzL,GACA,IAAAyL,EAAA,IAAAuX,IAAuB,OAAAhjB,GACvB,OAAAA,EAAA0B,IAAA+J,EAAAgF,IAAAzQ,EAAA0B,IAAA1B,GAAAyL,EAAAgF,IAAAzQ,EAAAuT,MAAAvT,OAAAgzF,QAGA,OAAAvnF,EAGA,SAAAX,EAAAW,EAAAzL,EAAAkJ,GAIA,OAHAuC,EAAAs5F,GAAAt5F,EAAAzL,IACAuT,MAAA,EACA9H,EAAAunF,QAAA,KACAvnF,EAGA,SAAA6uD,EAAAt6D,EAAAkJ,EAAAnJ,GAEA,OADAC,EAAAuT,MAAAxT,EACA0L,EAEA,QADA1L,EAAAC,EAAAuyF,YACAxyF,IAAAwT,OAAArK,GAAAlJ,EAAA4yF,UAAA,EAAA1pF,GAAAnJ,GACAC,EAAA4yF,UAAA,EACA1pF,GAJAA,EAOA,SAAAub,EAAAzkB,GAEA,OADAyL,GAAA,OAAAzL,EAAAuyF,YAAAvyF,EAAA4yF,UAAA,GACA5yF,EAGA,SAAA88C,EAAArxC,EAAAzL,EAAAkJ,EAAAnJ,GACA,cAAAC,GAAA,IAAAA,EAAAkkF,MAAAlkF,EAAAmlG,GAAAj8F,EAAAuC,EAAAq2C,KAAA/hD,IAAAwkF,OAAA94E,EAAAzL,KACAA,EAAA8K,EAAA9K,EAAAkJ,IACAq7E,OAAA94E,EACAzL,GAGA,SAAAqnC,EAAA57B,EAAAzL,EAAAkJ,EAAAnJ,GACA,cAAAC,KAAAmkG,cAAAj7F,EAAAlD,OAAAjG,EAAA+K,EAAA9K,EAAAkJ,EAAAsP,QAAAgZ,IAAAo2E,GAAAn8F,EAAAzL,EAAAkJ,GAAAnJ,EAAAwkF,OAAA94E,EAAA1L,KACAA,EAAAilG,GAAA97F,EAAAlD,KAAAkD,EAAAxH,IAAAwH,EAAAsP,MAAA,KAAA/M,EAAAq2C,KAAA/hD,IACAyxB,IAAAo2E,GAAAn8F,EAAAzL,EAAAkJ,GACAnJ,EAAAwkF,OAAA94E,EACA1L,GAGA,SAAAyT,EAAA/H,EAAAzL,EAAAkJ,EAAAnJ,GACA,cAAAC,GAAA,IAAAA,EAAAkkF,KAAAlkF,EAAA0jF,UAAA+U,gBAAAvvF,EAAAuvF,eAAAz4F,EAAA0jF,UAAA4hB,iBAAAp8F,EAAAo8F,iBAAAtlG,EAAAolG,GAAAl8F,EAAAuC,EAAAq2C,KAAA/hD,IAAAwkF,OAAA94E,EAAAzL,KACAA,EAAA8K,EAAA9K,EAAAkJ,EAAAujB,UAAA,KACA83D,OAAA94E,EACAzL,GAGA,SAAA4G,EAAA6E,EAAAzL,EAAAkJ,EAAAnJ,EAAAu6D,GACA,cAAAt6D,GAAA,IAAAA,EAAAkkF,MAAAlkF,EAAAilG,GAAA/7F,EAAAuC,EAAAq2C,KAAA/hD,EAAAu6D,IAAAiqB,OAAA94E,EAAAzL,KACAA,EAAA8K,EAAA9K,EAAAkJ,IACAq7E,OAAA94E,EACAzL,GAGA,SAAAK,EAAAoL,EAAAzL,EAAAkJ,GACA,qBAAAlJ,GAAA,kBAAAA,EAAA,OAAAA,EAAAmlG,GAAA,GAAAnlG,EAAAyL,EAAAq2C,KAAA54C,IAAAq7E,OAAA94E,EAAAzL,EAEA,qBAAAA,GAAA,OAAAA,EAAA,CACA,OAAAA,EAAA47E,UACA,KAAA0P,GACA,OAAApiF,EAAA87F,GAAAhlG,EAAAgG,KAAAhG,EAAA0B,IAAA1B,EAAAwY,MAAA,KAAA/M,EAAAq2C,KAAA54C,IAAAsoB,IAAAo2E,GAAAn8F,EAAA,KAAAzL,GAAAkJ,EAAAq7E,OAAA94E,EAAAvC,EAEA,KAAAqiF,GACA,OAAAvrF,EAAAolG,GAAAplG,EAAAyL,EAAAq2C,KAAA54C,IAAAq7E,OAAA94E,EAAAzL,EAGA,GAAA2nG,GAAA3nG,IAAAmsF,GAAAnsF,GAAA,OAAAA,EAAAilG,GAAAjlG,EAAAyL,EAAAq2C,KAAA54C,EAAA,OAAAq7E,OAAA94E,EAAAzL,EACA8nG,GAAAr8F,EAAAzL,GAGA,YAGA,SAAA2+B,EAAAlzB,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAA,OAAA9K,IAAA0B,IAAA,KACA,qBAAAwH,GAAA,kBAAAA,EAAA,cAAA4B,EAAA,KAAAgyC,EAAArxC,EAAAzL,EAAA,GAAAkJ,EAAAnJ,GAEA,qBAAAmJ,GAAA,OAAAA,EAAA,CACA,OAAAA,EAAA0yE,UACA,KAAA0P,GACA,OAAApiF,EAAAxH,MAAAoJ,EAAA5B,EAAAlD,OAAAwlF,GAAA5kF,EAAA6E,EAAAzL,EAAAkJ,EAAAsP,MAAAiU,SAAA1sB,EAAA+K,GAAAu8B,EAAA57B,EAAAzL,EAAAkJ,EAAAnJ,GAAA,KAEA,KAAAwrF,GACA,OAAAriF,EAAAxH,MAAAoJ,EAAA0I,EAAA/H,EAAAzL,EAAAkJ,EAAAnJ,GAAA,KAGA,GAAA4nG,GAAAz+F,IAAAijF,GAAAjjF,GAAA,cAAA4B,EAAA,KAAAlE,EAAA6E,EAAAzL,EAAAkJ,EAAAnJ,EAAA,MACA+nG,GAAAr8F,EAAAvC,GAGA,YAGA,SAAA2zE,EAAApxE,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,qBAAA/K,GAAA,kBAAAA,EAAA,OAAA+8C,EAAA98C,EAAAyL,IAAAiU,IAAAxW,IAAA,QAAAnJ,EAAA+K,GAEA,qBAAA/K,GAAA,OAAAA,EAAA,CACA,OAAAA,EAAA67E,UACA,KAAA0P,GACA,OAAA7/E,IAAAiU,IAAA,OAAA3f,EAAA2B,IAAAwH,EAAAnJ,EAAA2B,MAAA,KAAA3B,EAAAiG,OAAAwlF,GAAA5kF,EAAA5G,EAAAyL,EAAA1L,EAAAyY,MAAAiU,SAAA3hB,EAAA/K,EAAA2B,KAAA2lC,EAAArnC,EAAAyL,EAAA1L,EAAA+K,GAEA,KAAAygF,GACA,OAAA/3E,EAAAxT,EAAAyL,IAAAiU,IAAA,OAAA3f,EAAA2B,IAAAwH,EAAAnJ,EAAA2B,MAAA,KAAA3B,EAAA+K,GAGA,GAAA68F,GAAA5nG,IAAAosF,GAAApsF,GAAA,OAAA6G,EAAA5G,EAAAyL,IAAAiU,IAAAxW,IAAA,KAAAnJ,EAAA+K,EAAA,MACAg9F,GAAA9nG,EAAAD,GAGA,YAGA,SAAAozB,EAAAroB,EAAA2Z,EAAAq4B,EAAAtpC,GACA,QAAA6zB,EAAA,KAAAzgC,EAAA,KAAAwxC,EAAA3zB,EAAAi4D,EAAAj4D,EAAA,EAAAq4D,EAAA,KAA4D,OAAA1kC,GAAAskC,EAAA5/B,EAAAt7C,OAA4Bk7E,IAAA,CACxFtkC,EAAA7kC,MAAAmpE,GAAAI,EAAA1kC,IAAA,MAAA0kC,EAAA1kC,EAAA46C,QACA,IAAArmD,EAAAhO,EAAA7zB,EAAAstC,EAAA0E,EAAA4/B,GAAAlpE,GAEA,UAAAm5B,EAAA,CACA,OAAAyL,MAAA0kC,GACA,MAGArxE,GAAA2sC,GAAA,OAAAzL,EAAA4lD,WAAAvyF,EAAA8K,EAAAstC,GACA3zB,EAAA61C,EAAA3tB,EAAAloB,EAAAi4D,GACA,OAAA91E,EAAAygC,EAAAsF,EAAA/lC,EAAAosF,QAAArmD,EACA/lC,EAAA+lC,EACAyL,EAAA0kC,EAGA,GAAAJ,IAAA5/B,EAAAt7C,OAAA,OAAA0H,EAAA4B,EAAAstC,GAAA/Q,EAEA,UAAA+Q,EAAA,CACA,KAAYskC,EAAA5/B,EAAAt7C,OAAck7E,KAC1BtkC,EAAA/3C,EAAAyK,EAAAgyC,EAAA4/B,GAAAlpE,MAAAiR,EAAA61C,EAAAliB,EAAA3zB,EAAAi4D,GAAA,OAAA91E,EAAAygC,EAAA+Q,EAAAxxC,EAAAosF,QAAA56C,EAAAxxC,EAAAwxC,GAGA,OAAA/Q,EAGA,IAAA+Q,EAAAr4C,EAAA+K,EAAAstC,GAAqBskC,EAAA5/B,EAAAt7C,OAAck7E,KACnCI,EAAAD,EAAAzkC,EAAAttC,EAAA4xE,EAAA5/B,EAAA4/B,GAAAlpE,MAAA/H,GAAA,OAAAqxE,EAAAyV,WAAAn6C,EAAAjvB,OAAA,OAAA2zD,EAAAp7E,IAAAg7E,EAAAI,EAAAp7E,KAAA+iB,EAAA61C,EAAAwiB,EAAAr4D,EAAAi4D,GAAA,OAAA91E,EAAAygC,EAAAy1C,EAAAl2E,EAAAosF,QAAAlW,EAAAl2E,EAAAk2E,GAMA,OAHArxE,GAAA2sC,EAAApmC,QAAA,SAAAvG,GACA,OAAAzL,EAAA8K,EAAAW,KAEA47B,EAGA,SAAAmE,EAAA1gC,EAAA2Z,EAAAq4B,EAAAtpC,GACA,IAAA6zB,EAAA8kD,GAAArvC,GACA,oBAAAzV,GAAArlC,EAAA,OAEA,OADA86C,EAAAzV,EAAA1lC,KAAAm7C,KACA96C,EAAA,OAEA,QAAA4E,EAAAygC,EAAA,KAAA+Q,EAAA3zB,EAAAi4D,EAAAj4D,EAAA,EAAAq4D,EAAA,KAAAnwC,EAAAmQ,EAAAxO,OAAoE,OAAA8J,IAAAzL,EAAA2pB,KAAuBomB,IAAA/vC,EAAAmQ,EAAAxO,OAAA,CAC3F8J,EAAA7kC,MAAAmpE,GAAAI,EAAA1kC,IAAA,MAAA0kC,EAAA1kC,EAAA46C,QACA,IAAA7/D,EAAAwL,EAAA7zB,EAAAstC,EAAAzL,EAAA/rC,MAAA4S,GAEA,UAAA2f,EAAA,CACAilB,MAAA0kC,GACA,MAGArxE,GAAA2sC,GAAA,OAAAjlB,EAAAo/D,WAAAvyF,EAAA8K,EAAAstC,GACA3zB,EAAA61C,EAAAnnC,EAAA1O,EAAAi4D,GACA,OAAA91E,EAAAygC,EAAAlU,EAAAvsB,EAAAosF,QAAA7/D,EACAvsB,EAAAusB,EACAilB,EAAA0kC,EAGA,GAAAnwC,EAAA2pB,KAAA,OAAAptD,EAAA4B,EAAAstC,GAAA/Q,EAEA,UAAA+Q,EAAA,CACA,MAAYzL,EAAA2pB,KAASomB,IAAA/vC,EAAAmQ,EAAAxO,OACrB,QAAA3B,EAAAtsC,EAAAyK,EAAA6hC,EAAA/rC,MAAA4S,MAAAiR,EAAA61C,EAAA3tB,EAAAloB,EAAAi4D,GAAA,OAAA91E,EAAAygC,EAAAsF,EAAA/lC,EAAAosF,QAAArmD,EAAA/lC,EAAA+lC,GAGA,OAAAtF,EAGA,IAAA+Q,EAAAr4C,EAAA+K,EAAAstC,IAAqBzL,EAAA2pB,KAASomB,IAAA/vC,EAAAmQ,EAAAxO,OAC9B,QAAA3B,EAAAkwC,EAAAzkC,EAAAttC,EAAA4xE,EAAA/vC,EAAA/rC,MAAA4S,MAAA/H,GAAA,OAAAkhC,EAAA4lD,WAAAn6C,EAAAjvB,OAAA,OAAAwjB,EAAAjrC,IAAAg7E,EAAA/vC,EAAAjrC,KAAA+iB,EAAA61C,EAAA3tB,EAAAloB,EAAAi4D,GAAA,OAAA91E,EAAAygC,EAAAsF,EAAA/lC,EAAAosF,QAAArmD,EAAA/lC,EAAA+lC,GAMA,OAHAlhC,GAAA2sC,EAAApmC,QAAA,SAAAvG,GACA,OAAAzL,EAAA8K,EAAAW,KAEA47B,EAGA,gBAAA57B,EAAA1L,EAAAu6D,EAAAxd,GACA,IAAAtpC,EAAA,kBAAA8mD,GAAA,OAAAA,KAAAt0D,OAAAwlF,IAAA,OAAAlxB,EAAA54D,IACA8R,IAAA8mD,IAAA9hD,MAAAiU,UACA,IAAA4a,EAAA,kBAAAizB,GAAA,OAAAA,EACA,GAAAjzB,EAAA,OAAAizB,EAAAshB,UACA,KAAA0P,GACA7/E,EAAA,CAGA,IAFA47B,EAAAizB,EAAA54D,IAEA8R,EAAAzT,EAAqB,OAAAyT,GAAY,CACjC,GAAAA,EAAA9R,MAAA2lC,EAAA,CACA,OAAA7zB,EAAA0wE,IAAA5pB,EAAAt0D,OAAAwlF,GAAAh4E,EAAA2wF,cAAA7pC,EAAAt0D,KAAA,CACAkD,EAAAuC,EAAA+H,EAAAw/E,UACAjzF,EAAA+K,EAAA0I,EAAA8mD,EAAAt0D,OAAAwlF,GAAAlxB,EAAA9hD,MAAAiU,SAAA6tC,EAAA9hD,QACAgZ,IAAAo2E,GAAAn8F,EAAA+H,EAAA8mD,GACAv6D,EAAAwkF,OAAA94E,EACAA,EAAA1L,EACA,MAAA0L,EAEAvC,EAAAuC,EAAA+H,GACA,MAEaxT,EAAAyL,EAAA+H,GACbA,IAAAw/E,QAGA14B,EAAAt0D,OAAAwlF,KAAAzrF,EAAAklG,GAAA3qC,EAAA9hD,MAAAiU,SAAAhhB,EAAAq2C,KAAAhF,EAAAwd,EAAA54D,MAAA6iF,OAAA94E,IAAA1L,KAAA+8C,EAAAkoD,GAAA1qC,EAAAt0D,KAAAs0D,EAAA54D,IAAA44D,EAAA9hD,MAAA,KAAA/M,EAAAq2C,KAAAhF,IAAAtrB,IAAAo2E,GAAAn8F,EAAA1L,EAAAu6D,GAAAxd,EAAAynC,OAAA94E,IAAAqxC,GAGA,OAAAr4B,EAAAhZ,GAEA,KAAA8/E,GACA9/E,EAAA,CACA,IAAA+H,EAAA8mD,EAAA54D,IAAyB,OAAA3B,GAAY,CACrC,GAAAA,EAAA2B,MAAA8R,EAAA,CACA,OAAAzT,EAAAmkF,KAAAnkF,EAAA2jF,UAAA+U,gBAAAn+B,EAAAm+B,eAAA14F,EAAA2jF,UAAA4hB,iBAAAhrC,EAAAgrC,eAAA,CACAp8F,EAAAuC,EAAA1L,EAAAizF,UACAjzF,EAAA+K,EAAA/K,EAAAu6D,EAAA7tC,UAAA,KACA83D,OAAA94E,EACAA,EAAA1L,EACA,MAAA0L,EAEAvC,EAAAuC,EAAA1L,GACA,MAEaC,EAAAyL,EAAA1L,GACbA,IAAAizF,SAGAjzF,EAAAqlG,GAAA9qC,EAAA7uD,EAAAq2C,KAAAhF,IACAynC,OAAA94E,EACAA,EAAA1L,EAGA,OAAA0kB,EAAAhZ,GAEA,qBAAA6uD,GAAA,kBAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAv6D,GAAA,IAAAA,EAAAmkF,KAAAh7E,EAAAuC,EAAA1L,EAAAizF,UAAAjzF,EAAA+K,EAAA/K,EAAAu6D,IAAAiqB,OAAA94E,IAAA1L,IAAAmJ,EAAAuC,EAAA1L,MAAAolG,GAAA7qC,EAAA7uD,EAAAq2C,KAAAhF,IAAAynC,OAAA94E,IAAA1L,GAAA0kB,EAAAhZ,GACA,GAAAk8F,GAAArtC,GAAA,OAAAnnC,EAAA1nB,EAAA1L,EAAAu6D,EAAAxd,GACA,GAAAqvC,GAAA7xB,GAAA,OAAA9uB,EAAA//B,EAAA1L,EAAAu6D,EAAAxd,GAEA,GADAzV,GAAAygE,GAAAr8F,EAAA6uD,GACA,qBAAAA,IAAA9mD,EAAA,OAAA/H,EAAAy4E,KACA,OACA,OACAliF,EAAA,OAAA86C,EAAArxC,EAAAzF,MAAA0lB,aAAAoxB,EAAA91B,MAAA,aAEA,OAAA9d,EAAAuC,EAAA1L,IAIA,IAAAioG,GAAAD,IAAA,GACAE,GAAAF,IAAA,GACAG,GAAA,GACAnwB,GAAA,CACA5lC,QAAA+1D,IAEAC,GAAA,CACAh2D,QAAA+1D,IAEAE,GAAA,CACAj2D,QAAA+1D,IAGA,SAAAG,GAAA58F,GAEA,OADAA,IAAAy8F,IAAAlmG,EAAA,OACAyJ,EAGA,SAAA68F,GAAA78F,EAAAzL,GACA29E,GAAAyqB,GAAApoG,GACA29E,GAAAwqB,GAAA18F,GACAkyE,GAAA5F,GAAAmwB,IACA,IAAAh/F,EAAAlJ,EAAA2qF,SAEA,OAAAzhF,GACA,OACA,QACAlJ,OAAAq6F,iBAAAr6F,EAAAw9F,aAAAH,GAAA,SACA,MAEA,QACAr9F,EAAAq9F,GAAAr9F,GAAAkJ,EAAA,IAAAA,EAAAlJ,EAAAikF,WAAAjkF,GAAAw9F,cAAA,KAAAt0F,IAAAq/F,SAGA7qB,GAAA3F,IACA4F,GAAA5F,GAAA/3E,GAGA,SAAAwoG,GAAA/8F,GACAiyE,GAAA3F,IACA2F,GAAAyqB,IACAzqB,GAAA0qB,IAGA,SAAAK,GAAAh9F,GACA48F,GAAAD,GAAAj2D,SACA,IAAAnyC,EAAAqoG,GAAAtwB,GAAA5lC,SACAjpC,EAAAm0F,GAAAr9F,EAAAyL,EAAAzF,MACAhG,IAAAkJ,IAAAy0E,GAAAwqB,GAAA18F,GAAAkyE,GAAA5F,GAAA7uE,IAGA,SAAAw/F,GAAAj9F,GACA08F,GAAAh2D,UAAA1mC,IAAAiyE,GAAA3F,IAAA2F,GAAAyqB,KAGA,IAAAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,IACAC,GAAA/d,GAAAhK,uBACAgoB,GAAA,EACAC,GAAA,KACAhrB,GAAA,KACAC,GAAA,KACAgrB,GAAA,KACA7+D,GAAA,KACA8+D,GAAA,KACAC,GAAA,EACAC,GAAA,KACAC,GAAA,EACAC,IAAA,EACAC,GAAA,KACAC,GAAA,EAEA,SAAAC,KACA9nG,EAAA,OAGA,SAAA+nG,GAAAt+F,EAAAzL,GACA,UAAAA,EAAA,SAEA,QAAAkJ,EAAA,EAAiBA,EAAAlJ,EAAAwB,QAAA0H,EAAAuC,EAAAjK,OAA8B0H,IAC/C,IAAAspF,GAAA/mF,EAAAvC,GAAAlJ,EAAAkJ,IAAA,SAGA,SAGA,SAAA8gG,GAAAv+F,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,GAOA,GANA8uC,GAAA9uC,EACA+uC,GAAArpG,EACAs+E,GAAA,OAAA7yE,IAAA64F,cAAA,KACA6E,GAAAh3D,QAAA,OAAAmsC,GAAA2rB,GAAAC,GACAlqG,EAAAkJ,EAAAnJ,EAAA+K,GAEA6+F,GAAA,CACA,GACAA,IAAA,EAAAE,IAAA,EAAAvrB,GAAA,OAAA7yE,IAAA64F,cAAA,KAAAiF,GAAAD,GAAAG,GAAAh/D,GAAA4zC,GAAA,KAAA8qB,GAAAh3D,QAAA+3D,GAAAlqG,EAAAkJ,EAAAnJ,EAAA+K,SACK6+F,IAELC,GAAA,KACAC,GAAA,EAgBA,OAbAV,GAAAh3D,QAAAg4D,IACA1+F,EAAA49F,IACA/E,cAAAgF,GACA79F,EAAAo5F,eAAA2E,GACA/9F,EAAA84F,YAAAkF,GACAh+F,EAAAmnF,WAAA8W,GACAj+F,EAAA,OAAA4yE,IAAA,OAAAA,GAAA/vC,KACA86D,GAAA,EACAG,GAAA9+D,GAAA6+D,GAAAhrB,GAAAD,GAAAgrB,GAAA,KACAG,GAAA,EACAC,GAAA,KACAC,GAAA,EACAj+F,GAAAzJ,EAAA,OACAhC,EAGA,SAAAoqG,KACAjB,GAAAh3D,QAAAg4D,GACAf,GAAA,EACAG,GAAA9+D,GAAA6+D,GAAAhrB,GAAAD,GAAAgrB,GAAA,KACAG,GAAA,EACAC,GAAA,KACAC,GAAA,EACAC,IAAA,EACAC,GAAA,KACAC,GAAA,EAGA,SAAAQ,KACA,IAAA5+F,EAAA,CACA64F,cAAA,KACA8B,UAAA,KACA/gF,MAAA,KACAilF,WAAA,KACAh8D,KAAA,MAGA,OADA,OAAA7D,GAAA6+D,GAAA7+D,GAAAh/B,EAAAg/B,MAAA6D,KAAA7iC,EACAg/B,GAGA,SAAA8/D,KACA,UAAAhB,OAAA9+D,GAAA8+D,IAAAj7D,KAAAgwC,GAAA,QAAAD,GAAAC,IAAAD,GAAA/vC,KAAA,SAA8E,CAC9E,OAAAgwC,IAAAt8E,EAAA,OAEA,IAAAyJ,EAAA,CACA64F,eAFAjmB,GAAAC,IAEAgmB,cACA8B,UAAA/nB,GAAA+nB,UACA/gF,MAAAg5D,GAAAh5D,MACAilF,WAAAjsB,GAAAisB,WACAh8D,KAAA,MAEA7D,GAAA,OAAAA,GAAA6+D,GAAA79F,EAAAg/B,GAAA6D,KAAA7iC,EACA6yE,GAAAD,GAAA/vC,KAEA,OAAA7D,GAGA,SAAA+/D,GAAA/+F,EAAAzL,GACA,0BAAAA,IAAAyL,GAAAzL,EAGA,SAAAyqG,GAAAh/F,GACA,IAAAzL,EAAAuqG,KACArhG,EAAAlJ,EAAAqlB,MAIA,GAHA,OAAAnc,GAAAlH,EAAA,OACAkH,EAAAwhG,oBAAAj/F,EAEA,EAAAo+F,GAAA,CACA,IAAA9pG,EAAAmJ,EAAAyhG,SAEA,UAAAf,GAAA,CACA,IAAA9+F,EAAA8+F,GAAAlqF,IAAAxW,GAEA,YAAA4B,EAAA,CACA8+F,GAAAzgF,OAAAjgB,GACA,IAAAoxD,EAAAt6D,EAAAskG,cAEA,GACAhqC,EAAA7uD,EAAA6uD,EAAAxvD,EAAAkM,QAAAlM,IAAAwjC,WACS,OAAAxjC,GAMT,OAJA0nF,GAAAl4B,EAAAt6D,EAAAskG,iBAAAsG,IAAA,GACA5qG,EAAAskG,cAAAhqC,EACAt6D,EAAAsqG,aAAAphG,EAAAiL,OAAAnU,EAAAomG,UAAA9rC,GACApxD,EAAA2hG,kBAAAvwC,EACA,CAAAA,EAAAv6D,IAIA,OAAAC,EAAAskG,cAAAvkG,GAGAA,EAAAmJ,EAAAiL,KACA,IAAAsQ,EAAAzkB,EAAAsqG,WAIA,GAHAhwC,EAAAt6D,EAAAomG,UACA,OAAA3hF,GAAA,OAAA1kB,MAAAuuC,KAAA,MAAAvuC,EAAA0kB,EAAA6pB,MAAAvuC,EAAA,OAAAA,IAAAuuC,KAAA,KAEA,OAAAvuC,EAAA,CACA,IAAA+8C,EAAAhyC,EAAA,KACAu8B,EAAAtnC,EACAyT,GAAA,EAEA,GACA,IAAA5M,EAAAygC,EAAAw9D,eACAj+F,EAAAwiG,IAAA51F,OAAA,EAAAspC,EAAAr4B,EAAA3Z,EAAAwvD,GAAA1zD,EAAA4iG,QAAA5iG,IAAA0zD,EAAAjzB,EAAAyjE,eAAAr/F,EAAA47B,EAAA0jE,WAAAt/F,EAAA6uD,EAAAjzB,EAAArwB,QACAyN,EAAA4iB,EACAA,IAAAiH,WACK,OAAAjH,OAAAtnC,GAELyT,IAAAspC,EAAAr4B,EAAA3Z,EAAAwvD,GACAk4B,GAAAl4B,EAAAt6D,EAAAskG,iBAAAsG,IAAA,GACA5qG,EAAAskG,cAAAhqC,EACAt6D,EAAAsqG,WAAAxtD,EACA98C,EAAAomG,UAAAt7F,EACA5B,EAAA2hG,kBAAAvwC,EAGA,OAAAt6D,EAAAskG,cAAAp7F,EAAAyhG,UAGA,SAAAK,GAAAv/F,EAAAzL,EAAAkJ,EAAAnJ,GAWA,OAVA0L,EAAA,CACAy4E,IAAAz4E,EACA/K,OAAAV,EACAuxC,QAAAroC,EACA+hG,KAAAlrG,EACAuuC,KAAA,MAEA,OAAAm7D,OAAA,CACAhF,WAAA,OACGA,WAAAh5F,EAAA6iC,KAAA7iC,EAAA,QAAAzL,EAAAypG,GAAAhF,YAAAgF,GAAAhF,WAAAh5F,EAAA6iC,KAAA7iC,GAAAvC,EAAAlJ,EAAAsuC,KAAAtuC,EAAAsuC,KAAA7iC,IAAA6iC,KAAAplC,EAAAugG,GAAAhF,WAAAh5F,GACHA,EAGA,SAAAy/F,GAAAz/F,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAAu/F,KACAX,IAAAj+F,EACAX,EAAAw5F,cAAA0G,GAAAhrG,EAAAkJ,OAAA,WAAAnJ,EAAA,KAAAA,GAGA,SAAAorG,GAAA1/F,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAAy/F,KACAxqG,OAAA,IAAAA,EAAA,KAAAA,EACA,IAAAu6D,OAAA,EAEA,UAAA+jB,GAAA,CACA,IAAA55D,EAAA45D,GAAAimB,cAGA,GAFAhqC,EAAA71C,EAAA8sB,QAEA,OAAAxxC,GAAAgqG,GAAAhqG,EAAA0kB,EAAAwmF,MAEA,YADAD,GAAArC,GAAAz/F,EAAAoxD,EAAAv6D,GAKA2pG,IAAAj+F,EACAX,EAAAw5F,cAAA0G,GAAAhrG,EAAAkJ,EAAAoxD,EAAAv6D,GAGA,SAAAqrG,GAAA3/F,EAAAzL,GACA,0BAAAA,GAAAyL,MAAAzL,EAAAyL,GAAA,WACAzL,EAAA,QAEA,OAAAA,QAAA,IAAAA,GAAAyL,MAAAzL,EAAAmyC,QAAA1mC,EAAA,WACAzL,EAAAmyC,QAAA,YADA,EAKA,SAAAk5D,MAEA,SAAAC,GAAA7/F,EAAAzL,EAAAkJ,GACA,GAAA2gG,IAAA7nG,EAAA,OACA,IAAAjC,EAAA0L,EAAA8mF,UACA,GAAA9mF,IAAA49F,IAAA,OAAAtpG,OAAAspG,GACA,GAAAM,IAAA,EAAAl+F,EAAA,CACAo5F,eAAAuE,GACApyF,OAAA9N,EACA4hG,aAAA,KACAC,WAAA,KACAz8D,KAAA,MACK,OAAAs7D,QAAA,IAAA5mF,UAAA,KAAA9Z,EAAA0gG,GAAAlqF,IAAA1f,IAAA4pG,GAAAn5F,IAAAzQ,EAAAyL,OAA6E,CAClF,IAAAzL,EAAAkJ,EAAiB,OAAAlJ,EAAAsuC,MACjBtuC,IAAAsuC,KAGAtuC,EAAAsuC,KAAA7iC,MAEG,CACHk7F,KACA,IAAA77F,EAAAy7F,KAEAjsC,EAAA,CACAuqC,eAFA/5F,EAAA27F,GAAA37F,EAAAW,GAGAuL,OAAA9N,EACA4hG,aAAA,KACAC,WAAA,KACAz8D,KAAA,MAEA7pB,EAAAzkB,EAAAmU,KACA,UAAAsQ,EAAA61C,EAAAhsB,KAAAgsB,MAA+B,CAC/B,IAAAxd,EAAAr4B,EAAA6pB,KACA,OAAAwO,IAAAwd,EAAAhsB,KAAAwO,GACAr4B,EAAA6pB,KAAAgsB,EAGA,GADAt6D,EAAAmU,KAAAmmD,EACA,IAAA7uD,EAAAo5F,iBAAA,OAAA9kG,GAAA,IAAAA,EAAA8kG,iBAAA,QAAA9kG,EAAAC,EAAA0qG,qBAAA,IACA,IAAArjE,EAAArnC,EAAA6qG,kBACAr3F,EAAAzT,EAAAsnC,EAAAn+B,GAGA,GAFAoxD,EAAAwwC,aAAA/qG,EACAu6D,EAAAywC,WAAAv3F,EACAg/E,GAAAh/E,EAAA6zB,GAAA,OACK,MAAAzgC,IACLigG,GAAAp7F,EAAAX,IAIA,IAAAq/F,GAAA,CACAoB,YAAA/gE,GACAy1C,YAAA6pB,GACA5pB,WAAA4pB,GACA3pB,UAAA2pB,GACA1pB,oBAAA0pB,GACAxpB,gBAAAwpB,GACAvpB,QAAAupB,GACAtpB,WAAAspB,GACArpB,OAAAqpB,GACAppB,SAAAopB,GACAzpB,cAAAypB,IAEAG,GAAA,CACAsB,YAAA/gE,GACAy1C,YAAA,SAAAx0E,EAAAzL,GAEA,OADAqqG,KAAA/F,cAAA,CAAA74F,OAAA,IAAAzL,EAAA,KAAAA,GACAyL,GAEAy0E,WAAA11C,GACA21C,UAAA,SAAA10E,EAAAzL,GACA,OAAAkrG,GAAA,IAAAhC,GAAAD,GAAAx9F,EAAAzL,IAEAogF,oBAAA,SAAA30E,EAAAzL,EAAAkJ,GAEA,OADAA,EAAA,OAAAA,QAAA,IAAAA,IAAAwC,OAAA,CAAAD,IAAA,KACAy/F,GAAA,EAAArC,GAAAG,GAAAoC,GAAA7tE,KAAA,KAAAv9B,EAAAyL,GAAAvC,IAEAo3E,gBAAA,SAAA70E,EAAAzL,GACA,OAAAkrG,GAAA,EAAArC,GAAAG,GAAAv9F,EAAAzL,IAEAugF,QAAA,SAAA90E,EAAAzL,GACA,IAAAkJ,EAAAmhG,KAIA,OAHArqG,OAAA,IAAAA,EAAA,KAAAA,EACAyL,MACAvC,EAAAo7F,cAAA,CAAA74F,EAAAzL,GACAyL,GAEA+0E,WAAA,SAAA/0E,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAAsqG,KAUA,OATArqG,OAAA,IAAAkJ,IAAAlJ,KACAD,EAAAukG,cAAAvkG,EAAAqmG,UAAApmG,EAOAyL,GANAA,EAAA1L,EAAAslB,MAAA,CACAlR,KAAA,KACAw2F,SAAA,KACAD,oBAAAj/F,EACAo/F,kBAAA7qG,IAEA2qG,SAAAW,GAAA/tE,KAAA,KAAA8rE,GAAA59F,GACA,CAAA1L,EAAAukG,cAAA74F,IAEAg1E,OAAA,SAAAh1E,GAKA,OAHAA,EAAA,CACA0mC,QAAA1mC,GAFA4+F,KAIA/F,cAAA74F,GAEAi1E,SAAA,SAAAj1E,GACA,IAAAzL,EAAAqqG,KAUA,MATA,oBAAA5+F,WACAzL,EAAAskG,cAAAtkG,EAAAomG,UAAA36F,EAOAA,GANAA,EAAAzL,EAAAqlB,MAAA,CACAlR,KAAA,KACAw2F,SAAA,KACAD,oBAAAF,GACAK,kBAAAp/F,IAEAk/F,SAAAW,GAAA/tE,KAAA,KAAA8rE,GAAA59F,GACA,CAAAzL,EAAAskG,cAAA74F,IAEA40E,cAAAgrB,IAEAnB,GAAA,CACAqB,YAAA/gE,GACAy1C,YAAA,SAAAx0E,EAAAzL,GACA,IAAAkJ,EAAAqhG,KACAvqG,OAAA,IAAAA,EAAA,KAAAA,EACA,IAAAD,EAAAmJ,EAAAo7F,cACA,cAAAvkG,GAAA,OAAAC,GAAA+pG,GAAA/pG,EAAAD,EAAA,IAAAA,EAAA,IACAmJ,EAAAo7F,cAAA,CAAA74F,EAAAzL,GACAyL,IAEAy0E,WAAA11C,GACA21C,UAAA,SAAA10E,EAAAzL,GACA,OAAAmrG,GAAA,IAAAjC,GAAAD,GAAAx9F,EAAAzL,IAEAogF,oBAAA,SAAA30E,EAAAzL,EAAAkJ,GAEA,OADAA,EAAA,OAAAA,QAAA,IAAAA,IAAAwC,OAAA,CAAAD,IAAA,KACA0/F,GAAA,EAAAtC,GAAAG,GAAAoC,GAAA7tE,KAAA,KAAAv9B,EAAAyL,GAAAvC,IAEAo3E,gBAAA,SAAA70E,EAAAzL,GACA,OAAAmrG,GAAA,EAAAtC,GAAAG,GAAAv9F,EAAAzL,IAEAugF,QAAA,SAAA90E,EAAAzL,GACA,IAAAkJ,EAAAqhG,KACAvqG,OAAA,IAAAA,EAAA,KAAAA,EACA,IAAAD,EAAAmJ,EAAAo7F,cACA,cAAAvkG,GAAA,OAAAC,GAAA+pG,GAAA/pG,EAAAD,EAAA,IAAAA,EAAA,IACA0L,MACAvC,EAAAo7F,cAAA,CAAA74F,EAAAzL,GACAyL,IAEA+0E,WAAAiqB,GACAhqB,OAAA,WACA,OAAA8pB,KAAAjG,eAEA5jB,SAAA,SAAAj1E,GACA,OAAAg/F,GAAAD,KAEAnqB,cAAAgrB,IAEAG,GAAA,KACAC,GAAA,KACAC,IAAA,EAEA,SAAAC,GAAAlgG,EAAAzL,GACA,IAAAkJ,EAAA+0E,GAAA,eACA/0E,EAAAi7F,YAAA,UACAj7F,EAAAlD,KAAA,UACAkD,EAAAw6E,UAAA1jF,EACAkJ,EAAAq7E,OAAA94E,EACAvC,EAAA0pF,UAAA,EACA,OAAAnnF,EAAAg5F,YAAAh5F,EAAAg5F,WAAAE,WAAAz7F,EAAAuC,EAAAg5F,WAAAv7F,GAAAuC,EAAAi5F,YAAAj5F,EAAAg5F,WAAAv7F,EAGA,SAAA0iG,GAAAngG,EAAAzL,GACA,OAAAyL,EAAAy4E,KACA,OACA,IAAAh7E,EAAAuC,EAAAzF,KAEA,eADAhG,EAAA,IAAAA,EAAA2qF,UAAAzhF,EAAAzC,gBAAAzG,EAAA28B,SAAAl2B,cAAA,KAAAzG,KACAyL,EAAAi4E,UAAA1jF,GAAA,GAEA,OACA,eAAAA,EAAA,KAAAyL,EAAA24F,cAAA,IAAApkG,EAAA2qF,SAAA,KAAA3qF,KAAAyL,EAAAi4E,UAAA1jF,GAAA,GAEA,QAGA,QACA,UAIA,SAAA6rG,GAAApgG,GACA,GAAAigG,GAAA,CACA,IAAA1rG,EAAAyrG,GAEA,GAAAzrG,EAAA,CACA,IAAAkJ,EAAAlJ,EAEA,IAAA4rG,GAAAngG,EAAAzL,GAAA,CAGA,KAFAA,EAAA6iG,GAAA35F,MAEA0iG,GAAAngG,EAAAzL,GAIA,OAHAyL,EAAAmnF,WAAA,EACA8Y,IAAA,OACAF,GAAA//F,GAIAkgG,GAAAH,GAAAtiG,GAGAsiG,GAAA//F,EACAggG,GAAA3I,GAAA9iG,QACKyL,EAAAmnF,WAAA,EAAA8Y,IAAA,EAAAF,GAAA//F,GAIL,SAAAqgG,GAAArgG,GACA,IAAAA,IAAA84E,OAAoB,OAAA94E,GAAA,IAAAA,EAAAy4E,KAAA,IAAAz4E,EAAAy4E,KAAA,KAAAz4E,EAAAy4E,KACpBz4E,IAAA84E,OAGAinB,GAAA//F,EAGA,SAAAsgG,GAAAtgG,GACA,GAAAA,IAAA+/F,GAAA,SACA,IAAAE,GAAA,OAAAI,GAAArgG,GAAAigG,IAAA,KACA,IAAA1rG,EAAAyL,EAAAzF,KACA,OAAAyF,EAAAy4E,KAAA,SAAAlkF,GAAA,SAAAA,IAAAqiG,GAAAriG,EAAAyL,EAAA+4F,eAAA,IAAAxkG,EAAAyrG,GAA0FzrG,GAC1F2rG,GAAAlgG,EAAAzL,KAAA6iG,GAAA7iG,GAIA,OAFA8rG,GAAArgG,GACAggG,GAAAD,GAAA3I,GAAAp3F,EAAAi4E,WAAA,MACA,EAGA,SAAAsoB,KACAP,GAAAD,GAAA,KACAE,IAAA,EAGA,IAAAO,GAAA7gB,GAAA/J,kBACAupB,IAAA,EAEA,SAAAnsB,GAAAhzE,EAAAzL,EAAAkJ,EAAAnJ,GACAC,EAAA+yF,MAAA,OAAAtnF,EAAAw8F,GAAAjoG,EAAA,KAAAkJ,EAAAnJ,GAAAioG,GAAAhoG,EAAAyL,EAAAsnF,MAAA7pF,EAAAnJ,GAGA,SAAAmsG,GAAAzgG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA5B,IAAAsjB,OACA,IAAA8tC,EAAAt6D,EAAAwxB,IAGA,OAFA26E,GAAAnsG,EAAA8K,GACA/K,EAAAiqG,GAAAv+F,EAAAzL,EAAAkJ,EAAAnJ,EAAAu6D,EAAAxvD,GACA,OAAAW,GAAAm/F,IACA5qG,EAAA4yF,WAAA,EACAnU,GAAAhzE,EAAAzL,EAAAD,EAAA+K,GACA9K,EAAA+yF,QAHA/yF,EAAAukG,YAAA94F,EAAA84F,YAAAvkG,EAAA4yF,YAAA,IAAAnnF,EAAAo5F,gBAAA/5F,IAAAW,EAAAo5F,eAAA,GAAAuH,GAAA3gG,EAAAzL,EAAA8K,IAMA,SAAAuhG,GAAA5gG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,GACA,UAAA7uD,EAAA,CACA,IAAAgZ,EAAAvb,EAAAlD,KACA,0BAAAye,GAAAqgF,GAAArgF,SAAA,IAAAA,EAAAw2D,cAAA,OAAA/xE,EAAAsC,cAAA,IAAAtC,EAAA+xE,eACAxvE,EAAAu5F,GAAA97F,EAAAlD,KAAA,KAAAjG,EAAA,KAAAC,EAAA8hD,KAAAwY,IACA9oC,IAAAxxB,EAAAwxB,IACA/lB,EAAA84E,OAAAvkF,EACAA,EAAA+yF,MAAAtnF,IAJAzL,EAAAkkF,IAAA,GAAAlkF,EAAAgG,KAAAye,EAAA6nF,GAAA7gG,EAAAzL,EAAAykB,EAAA1kB,EAAA+K,EAAAwvD,IAQA,OADA71C,EAAAhZ,EAAAsnF,MACAjoF,EAAAwvD,IAAAxvD,EAAA2Z,EAAA+/E,eAAAt7F,EAAA,QAAAA,IAAAsC,SAAAtC,EAAAwpF,IAAA5nF,EAAA/K,IAAA0L,EAAA+lB,MAAAxxB,EAAAwxB,KAAA46E,GAAA3gG,EAAAzL,EAAAs6D,IACAt6D,EAAA4yF,WAAA,GACAnnF,EAAAs5F,GAAAtgF,EAAA1kB,IACAyxB,IAAAxxB,EAAAwxB,IACA/lB,EAAA84E,OAAAvkF,EACAA,EAAA+yF,MAAAtnF,GAGA,SAAA6gG,GAAA7gG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,GACA,cAAA7uD,GAAAinF,GAAAjnF,EAAA+4F,cAAAzkG,IAAA0L,EAAA+lB,MAAAxxB,EAAAwxB,MAAAo5E,IAAA,EAAA9/F,EAAAwvD,GAAA8xC,GAAA3gG,EAAAzL,EAAAs6D,GAAAiyC,GAAA9gG,EAAAzL,EAAAkJ,EAAAnJ,EAAAu6D,GAGA,SAAAkyC,GAAA/gG,EAAAzL,GACA,IAAAkJ,EAAAlJ,EAAAwxB,KACA,OAAA/lB,GAAA,OAAAvC,GAAA,OAAAuC,KAAA+lB,MAAAtoB,KAAAlJ,EAAA4yF,WAAA,KAGA,SAAA2Z,GAAA9gG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,IAAAwvD,EAAA0jB,GAAA90E,GAAAi6F,GAAAz4D,GAAAyH,QAIA,OAHAmoB,EAAA8oC,GAAApjG,EAAAs6D,GACA6xC,GAAAnsG,EAAA8K,GACA5B,EAAA8gG,GAAAv+F,EAAAzL,EAAAkJ,EAAAnJ,EAAAu6D,EAAAxvD,GACA,OAAAW,GAAAm/F,IACA5qG,EAAA4yF,WAAA,EACAnU,GAAAhzE,EAAAzL,EAAAkJ,EAAA4B,GACA9K,EAAA+yF,QAHA/yF,EAAAukG,YAAA94F,EAAA84F,YAAAvkG,EAAA4yF,YAAA,IAAAnnF,EAAAo5F,gBAAA/5F,IAAAW,EAAAo5F,eAAA,GAAAuH,GAAA3gG,EAAAzL,EAAA8K,IAMA,SAAA2hG,GAAAhhG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,GAAAkzE,GAAA90E,GAAA,CACA,IAAAoxD,GAAA,EACAspC,GAAA5jG,QACGs6D,GAAA,EAGH,GADA6xC,GAAAnsG,EAAA8K,GACA,OAAA9K,EAAA0jF,UAAA,OAAAj4E,MAAA8mF,UAAA,KAAAvyF,EAAAuyF,UAAA,KAAAvyF,EAAA4yF,WAAA,GAAAsU,GAAAlnG,EAAAkJ,EAAAnJ,GAAAunG,GAAAtnG,EAAAkJ,EAAAnJ,EAAA+K,GAAA/K,GAAA,OAA6I,UAAA0L,EAAA,CAC7I,IAAAgZ,EAAAzkB,EAAA0jF,UACA5mC,EAAA98C,EAAAwkG,cACA//E,EAAAjM,MAAAskC,EACA,IAAAzV,EAAA5iB,EAAAoG,QACArX,EAAAtK,EAAA6xE,YACA,kBAAAvnE,GAAA,OAAAA,IAAAg3B,GAAAh3B,KAAA4vF,GAAApjG,EAAAwT,EAAAwqE,GAAA90E,GAAAi6F,GAAAz4D,GAAAyH,SACA,IAAAvrC,EAAAsC,EAAAkyE,yBACA/6E,EAAA,oBAAAuG,GAAA,oBAAA6d,EAAA+iF,wBACAnnG,GAAA,oBAAAokB,EAAA4iF,kCAAA,oBAAA5iF,EAAA2iF,4BAAAtqD,IAAA/8C,GAAAsnC,IAAA7zB,IAAA2zF,GAAAnnG,EAAAykB,EAAA1kB,EAAAyT,GACAk5F,IAAA,EACA,IAAA/tE,EAAA3+B,EAAAskG,cACAj9D,EAAA5iB,EAAAxO,MAAA0oB,EACA,IAAAk+C,EAAA78E,EAAAukG,YACA,OAAA1nB,IAAA0qB,GAAAvnG,EAAA68E,EAAA98E,EAAA0kB,EAAA3Z,GAAAu8B,EAAArnC,EAAAskG,eACAxnD,IAAA/8C,GAAA4+B,IAAA0I,GAAA02C,GAAA5rC,SAAAu6D,IAAA,oBAAA9lG,IAAAu/F,GAAAnmG,EAAAkJ,EAAAtC,EAAA7G,GAAAsnC,EAAArnC,EAAAskG,gBAAAxnD,EAAA4vD,IAAA1F,GAAAhnG,EAAAkJ,EAAA4zC,EAAA/8C,EAAA4+B,EAAA0I,EAAA7zB,KAAAnT,GAAA,oBAAAokB,EAAAgjF,2BAAA,oBAAAhjF,EAAAijF,qBAAA,oBAAAjjF,EAAAijF,oBAAAjjF,EAAAijF,qBAAA,oBAAAjjF,EAAAgjF,2BAAAhjF,EAAAgjF,6BAAA,oBAAAhjF,EAAA6H,oBAAAtsB,EAAA4yF,WAAA,yBAAAnuE,EAAA6H,oBAAAtsB,EAAA4yF,WAAA,GAAA5yF,EAAAwkG,cAAAzkG,EAAAC,EAAAskG,cAAAj9D,GAAA5iB,EAAAjM,MAAAzY,EAAA0kB,EAAAxO,MAAAoxB,EAAA5iB,EAAAoG,QAAArX,EAAAzT,EAAA+8C,IAAA,oBAAAr4B,EAAA6H,oBAAAtsB,EAAA4yF,WAAA,GAAA7yF,GAAA,QACG0kB,EAAAzkB,EAAA0jF,UAAA5mC,EAAA98C,EAAAwkG,cAAA//E,EAAAjM,MAAAxY,EAAAgG,OAAAhG,EAAAmkG,YAAArnD,EAAAvS,GAAAvqC,EAAAgG,KAAA82C,GAAAzV,EAAA5iB,EAAAoG,QAAA,kBAAArX,EAAAtK,EAAA6xE,cAAA,OAAAvnE,IAAAg3B,GAAAh3B,KAAA4vF,GAAApjG,EAAAwT,EAAAwqE,GAAA90E,GAAAi6F,GAAAz4D,GAAAyH,UAAA9xC,EAAA,oBAAAuG,EAAAsC,EAAAkyE,2BAAA,oBAAA32D,EAAA+iF,0BAAA,oBAAA/iF,EAAA4iF,kCAAA,oBAAA5iF,EAAA2iF,4BAAAtqD,IAAA/8C,GAAAsnC,IAAA7zB,IAAA2zF,GAAAnnG,EAAAykB,EAAA1kB,EAAAyT,GAAAk5F,IAAA,EAAArlE,EAAArnC,EAAAskG,cAAA3lE,EAAAla,EAAAxO,MAAAoxB,EAAA,QAAAw1C,EAAA78E,EAAAukG,eAAAgD,GAAAvnG,EAAA68E,EAAA98E,EAAA0kB,EAAA3Z,GAAA6zB,EAAA3+B,EAAAskG,eAAAxnD,IAAA/8C,GAAAsnC,IAAA1I,GAAAo/C,GAAA5rC,SAAAu6D,IAAA,oBAAA9lG,IAAAu/F,GAAAnmG,EAAAkJ,EAAAtC,EAAA7G,GAAA4+B,EAAA3+B,EAAAskG,gBAAA19F,EAAA8lG,IAAA1F,GAAAhnG,EAAAkJ,EAAA4zC,EAAA/8C,EAAAsnC,EAAA1I,EAAAnrB,KAAAnT,GAAA,oBAAAokB,EAAAkoF,4BAAA,oBAAAloF,EAAAmoF,sBAAA,oBAAAnoF,EAAAmoF,qBAAAnoF,EAAAmoF,oBAAA7sG,EAAA4+B,EAAAnrB,GAAA,oBAAAiR,EAAAkoF,4BAAAloF,EAAAkoF,2BAAA5sG,EAAA4+B,EAAAnrB,IAAA,oBAAAiR,EAAAoI,qBAAA7sB,EAAA4yF,WAAA,uBAAAnuE,EAAA+iF,0BAAAxnG,EAAA4yF,WAAA,2BAAAnuE,EAAAoI,oBAAAiwB,IAAArxC,EAAA+4F,eAAAn9D,IAAA57B,EAAA64F,gBAAAtkG,EAAA4yF,WAAA,uBAAAnuE,EAAA+iF,yBAAA1qD,IAAArxC,EAAA+4F,eAAAn9D,IAAA57B,EAAA64F,gBAAAtkG,EAAA4yF,WAAA,KAAA5yF,EAAAwkG,cAAAzkG,EAAAC,EAAAskG,cAAA3lE,GAAAla,EAAAjM,MAAAzY,EAAA0kB,EAAAxO,MAAA0oB,EAAAla,EAAAoG,QAAArX,EAAAzT,EAAA6G,IAAA,oBAAA6d,EAAAoI,oBAAAiwB,IAAArxC,EAAA+4F,eAAAn9D,IAAA57B,EAAA64F,gBAAAtkG,EAAA4yF,WAAA,uBAAAnuE,EAAA+iF,yBAAA1qD,IAAArxC,EAAA+4F,eAAAn9D,IAAA57B,EAAA64F,gBAAAtkG,EAAA4yF,WAAA,KAAA7yF,GAAA,GACH,OAAA8sG,GAAAphG,EAAAzL,EAAAkJ,EAAAnJ,EAAAu6D,EAAAxvD,GAGA,SAAA+hG,GAAAphG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,GACAkyC,GAAA/gG,EAAAzL,GACA,IAAAykB,EAAA,QAAAzkB,EAAA4yF,WACA,IAAA7yF,IAAA0kB,EAAA,OAAA3Z,GAAAg5F,GAAA9jG,EAAAkJ,GAAA,GAAAkjG,GAAA3gG,EAAAzL,EAAAs6D,GACAv6D,EAAAC,EAAA0jF,UACAuoB,GAAA95D,QAAAnyC,EACA,IAAA88C,EAAAr4B,GAAA,oBAAAvb,EAAAiyE,yBAAA,KAAAp7E,EAAAysB,SAKA,OAJAxsB,EAAA4yF,WAAA,EACA,OAAAnnF,GAAAgZ,GAAAzkB,EAAA+yF,MAAAiV,GAAAhoG,EAAAyL,EAAAsnF,MAAA,KAAAz4B,GAAAt6D,EAAA+yF,MAAAiV,GAAAhoG,EAAA,KAAA88C,EAAAwd,IAAAmkB,GAAAhzE,EAAAzL,EAAA88C,EAAAwd,GACAt6D,EAAAskG,cAAAvkG,EAAAkW,MACAnL,GAAAg5F,GAAA9jG,EAAAkJ,GAAA,GACAlJ,EAAA+yF,MAGA,SAAA+Z,GAAArhG,GACA,IAAAzL,EAAAyL,EAAAi4E,UACA1jF,EAAA+sG,eAAAtJ,GAAAh4F,EAAAzL,EAAA+sG,eAAA/sG,EAAA+sG,iBAAA/sG,EAAA6qB,SAAA7qB,EAAA6qB,SAAA44E,GAAAh4F,EAAAzL,EAAA6qB,SAAA,GACAy9E,GAAA78F,EAAAzL,EAAAy4F,eAGA,SAAAuU,GAAAvhG,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAAC,EAAA8hD,KACAh3C,EAAA9K,EAAAokG,aACA9pC,EAAAt6D,EAAAskG,cAEA,WAAAtkG,EAAA4yF,WAAA,CACAt4B,EAAA,KACA,IAAA71C,GAAA,OACG61C,EAAA,CACH2yC,WAAA,OAAA3yC,IAAA2yC,WAAA,GACGxoF,GAAA,EAAAzkB,EAAA4yF,YAAA,GAEH,UAAAnnF,EACA,GAAAgZ,EAAA,CACA,IAAAq4B,EAAAhyC,EAAAoiG,SACAzhG,EAAAw5F,GAAA,KAAAllG,EAAA,QACA,OAAAC,EAAA8hD,QAAAr2C,EAAAsnF,MAAA,OAAA/yF,EAAAskG,cAAAtkG,EAAA+yF,YAAA/yF,EAAA+yF,OACAhzF,EAAAklG,GAAAnoD,EAAA/8C,EAAAmJ,EAAA,MACAuC,EAAAunF,QAAAjzF,GACAmJ,EAAAuC,GACA84E,OAAAxkF,EAAAwkF,OAAAvkF,OACKkJ,EAAAnJ,EAAAkoG,GAAAjoG,EAAA,KAAA8K,EAAA2hB,SAAAvjB,QACF,OAAAuC,EAAA64F,eAAAxnD,GAAA/8C,EAAA0L,EAAAsnF,OAAAC,QAAAvuE,GAAAvb,EAAA4B,EAAAoiG,SAAApiG,EAAAi6F,GAAAhlG,IAAAqkG,cAAA,OAAApkG,EAAA8hD,SAAAr9B,EAAA,OAAAzkB,EAAAskG,cAAAtkG,EAAA+yF,YAAA/yF,EAAA+yF,SAAAhzF,EAAAgzF,QAAAjoF,EAAAioF,MAAAtuE,IAAA1kB,EAAA+K,EAAAkoF,QAAA+R,GAAAjoD,EAAA5zC,EAAA4zC,EAAA+nD,gBAAA37F,EAAA4B,IAAA85F,oBAAA,EAAA17F,EAAAq7E,OAAAxkF,EAAAwkF,OAAAvkF,GAAAkJ,EAAAnJ,EAAAioG,GAAAhoG,EAAAD,EAAAgzF,MAAAjoF,EAAA2hB,SAAAvjB,KAAA4zC,EAAArxC,EAAAsnF,MAAAtuE,KAAA3Z,EAAAoiG,UAAApiG,EAAAm6F,GAAA,KAAAllG,EAAA,SAAAgzF,MAAAj2C,EAAA,OAAA98C,EAAA8hD,QAAAh3C,EAAAioF,MAAA,OAAA/yF,EAAAskG,cAAAtkG,EAAA+yF,YAAA/yF,EAAA+yF,QAAAhzF,EAAA+K,EAAAkoF,QAAAiS,GAAAxgF,EAAA1kB,EAAAmJ,EAAA,OAAA0pF,WAAA,EAAA1pF,EAAA4B,IAAA85F,oBAAA,EAAA17F,EAAAq7E,OAAAxkF,EAAAwkF,OAAAvkF,GAAAD,EAAAmJ,EAAA8+F,GAAAhoG,EAAA88C,EAAAhyC,EAAA2hB,SAAAvjB,IAAAlJ,EAAA0jF,UAAAj4E,EAAAi4E,UAGH,OAFA1jF,EAAAskG,cAAAhqC,EACAt6D,EAAA+yF,MAAA7pF,EACAnJ,EAGA,SAAAqsG,GAAA3gG,EAAAzL,EAAAkJ,GAEA,GADA,OAAAuC,IAAAzL,EAAAqkG,oBAAA54F,EAAA44F,qBACArkG,EAAA4kG,oBAAA17F,EAAA,YAGA,GAFA,OAAAuC,GAAAzL,EAAA+yF,QAAAtnF,EAAAsnF,OAAA/wF,EAAA,OAEA,OAAAhC,EAAA+yF,MAAA,CAKA,IAHA7pF,EAAA67F,GADAt5F,EAAAzL,EAAA+yF,MACAtnF,EAAA24F,aAAA34F,EAAAo5F,gBACA7kG,EAAA+yF,MAAA7pF,EAEAA,EAAAq7E,OAAAvkF,EAAsB,OAAAyL,EAAAunF,SACtBvnF,IAAAunF,SAAA9pF,IAAA8pF,QAAA+R,GAAAt5F,IAAA24F,aAAA34F,EAAAo5F,iBAAAtgB,OAAAvkF,EAGAkJ,EAAA8pF,QAAA,KAGA,OAAAhzF,EAAA+yF,MAGA,SAAAoa,GAAA1hG,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAAC,EAAA6kG,eACA,UAAAp5F,GACA,GAAAA,EAAA+4F,gBAAAxkG,EAAAokG,cAAArmB,GAAA5rC,QAAAy4D,IAAA,OACA,GAAA7qG,EAAAmJ,EAAA,CAGA,OAFA0hG,IAAA,EAEA5qG,EAAAkkF,KACA,OACA4oB,GAAA9sG,GACAgsG,KACA,MAEA,OACAvD,GAAAzoG,GACA,MAEA,OACAg+E,GAAAh+E,EAAAgG,OAAA49F,GAAA5jG,GACA,MAEA,OACAsoG,GAAAtoG,IAAA0jF,UAAA+U,eACA,MAEA,QACA2U,GAAAptG,IAAAwkG,cAAA5jG,OACA,MAEA,QACA,UAAAZ,EAAAskG,cAEA,YADAvkG,EAAAC,EAAA+yF,MAAA6R,sBACA7kG,GAAAmJ,EAAA8jG,GAAAvhG,EAAAzL,EAAAkJ,GAEA,QADAlJ,EAAAosG,GAAA3gG,EAAAzL,EAAAkJ,IACAlJ,EAAAgzF,QAAA,KAKA,OAAAoZ,GAAA3gG,EAAAzL,EAAAkJ,SAGG0hG,IAAA,EAGH,OAFA5qG,EAAA6kG,eAAA,EAEA7kG,EAAAkkF,KACA,OACAnkF,EAAAC,EAAAmkG,YACA,OAAA14F,MAAA8mF,UAAA,KAAAvyF,EAAAuyF,UAAA,KAAAvyF,EAAA4yF,WAAA,GACAnnF,EAAAzL,EAAAokG,aACA,IAAAt5F,EAAAs4F,GAAApjG,EAAA0qC,GAAAyH,SAKA,GAJAg6D,GAAAnsG,EAAAkJ,GACA4B,EAAAk/F,GAAA,KAAAhqG,EAAAD,EAAA0L,EAAAX,EAAA5B,GACAlJ,EAAA4yF,WAAA,EAEA,kBAAA9nF,GAAA,OAAAA,GAAA,oBAAAA,EAAA0hB,aAAA,IAAA1hB,EAAA8wE,SAAA,CAIA,GAHA57E,EAAAkkF,IAAA,EACAkmB,KAEApsB,GAAAj+E,GAAA,CACA,IAAAu6D,GAAA,EACAspC,GAAA5jG,QACSs6D,GAAA,EAETt6D,EAAAskG,cAAA,OAAAx5F,EAAAmL,YAAA,IAAAnL,EAAAmL,MAAAnL,EAAAmL,MAAA,KACA,IAAAwO,EAAA1kB,EAAAq7E,yBACA,oBAAA32D,GAAA0hF,GAAAnmG,EAAAD,EAAA0kB,EAAAhZ,GACAX,EAAA2yE,QAAA4oB,GACArmG,EAAA0jF,UAAA54E,EACAA,EAAAw7F,oBAAAtmG,EACAsnG,GAAAtnG,EAAAD,EAAA0L,EAAAvC,GACAlJ,EAAA6sG,GAAA,KAAA7sG,EAAAD,GAAA,EAAAu6D,EAAApxD,QACOlJ,EAAAkkF,IAAA,EAAAzF,GAAA,KAAAz+E,EAAA8K,EAAA5B,GAAAlJ,IAAA+yF,MAEP,OAAA/yF,EAEA,QAUA,OATA8K,EAAA9K,EAAAmkG,YACA,OAAA14F,MAAA8mF,UAAA,KAAAvyF,EAAAuyF,UAAA,KAAAvyF,EAAA4yF,WAAA,GACAt4B,EAAAt6D,EAAAokG,aACA34F,EA7qCA,SAAAA,GACA,IAAAzL,EAAAyL,EAAAu0E,QAEA,OAAAv0E,EAAAs0E,SACA,OACA,OAAA//E,EAEA,OAGA,OACA,MAAAA,EAEA,QAUA,OATAyL,EAAAs0E,QAAA,GAEA//E,GADAA,EAAAyL,EAAAq0E,UAEAvlD,KAAA,SAAAv6B,GACA,IAAAyL,EAAAs0E,UAAA//E,IAAAiB,QAAAwK,EAAAs0E,QAAA,EAAAt0E,EAAAu0E,QAAAhgF,IACO,SAAAA,GACP,IAAAyL,EAAAs0E,UAAAt0E,EAAAs0E,QAAA,EAAAt0E,EAAAu0E,QAAAhgF,KAGAyL,EAAAs0E,SACA,OACA,OAAAt0E,EAAAu0E,QAEA,OACA,MAAAv0E,EAAAu0E,QAIA,MADAv0E,EAAAu0E,QAAAhgF,EACAA,GA6oCAqtG,CAAAviG,GACA9K,EAAAgG,KAAAyF,EACAX,EAAA9K,EAAAkkF,IA/1CA,SAAAz4E,GACA,uBAAAA,EAAA,OAAAq5F,GAAAr5F,GAAA,IAEA,YAAAA,GAAA,OAAAA,EAAA,CAEA,IADAA,IAAAmwE,YACAkQ,GAAA,UACA,GAAArgF,IAAAugF,GAAA,UAGA,SAs1CAshB,CAAA7hG,GACA6uD,EAAA/vB,GAAA9+B,EAAA6uD,GACA71C,OAAA,EAEA3Z,GACA,OACA2Z,EAAA8nF,GAAA,KAAAvsG,EAAAyL,EAAA6uD,EAAApxD,GACA,MAEA,OACAub,EAAAgoF,GAAA,KAAAzsG,EAAAyL,EAAA6uD,EAAApxD,GACA,MAEA,QACAub,EAAAynF,GAAA,KAAAlsG,EAAAyL,EAAA6uD,EAAApxD,GACA,MAEA,QACAub,EAAA4nF,GAAA,KAAArsG,EAAAyL,EAAA8+B,GAAA9+B,EAAAzF,KAAAs0D,GAAAv6D,EAAAmJ,GACA,MAEA,QACAlH,EAAA,MAAAyJ,EAAA,IAGA,OAAAgZ,EAEA,OACA,OAAA1kB,EAAAC,EAAAgG,KAAA8E,EAAA9K,EAAAokG,aAAAmI,GAAA9gG,EAAAzL,EAAAD,EAAA+K,EAAA9K,EAAAmkG,cAAApkG,EAAA+K,EAAAy/B,GAAAxqC,EAAA+K,GAAA5B,GAEA,OACA,OAAAnJ,EAAAC,EAAAgG,KAAA8E,EAAA9K,EAAAokG,aAAAqI,GAAAhhG,EAAAzL,EAAAD,EAAA+K,EAAA9K,EAAAmkG,cAAApkG,EAAA+K,EAAAy/B,GAAAxqC,EAAA+K,GAAA5B,GAEA,OAcA,OAbA4jG,GAAA9sG,GAEA,QADAD,EAAAC,EAAAukG,cACAviG,EAAA,OAEA8I,EAAA,QADAA,EAAA9K,EAAAskG,eACAx5F,EAAAqwF,QAAA,KACAoM,GAAAvnG,EAAAD,EAAAC,EAAAokG,aAAA,KAAAl7F,IACAnJ,EAAAC,EAAAskG,cAAAnJ,WACArwF,GAAAkhG,KAAAhsG,EAAAosG,GAAA3gG,EAAAzL,EAAAkJ,KACA4B,EAAA9K,EAAA0jF,WACA54E,GAAA,OAAAW,GAAA,OAAAA,EAAAsnF,QAAAjoF,EAAAyiG,WAAA9B,GAAA3I,GAAA9iG,EAAA0jF,UAAA+U,eAAA+S,GAAAxrG,EAAA8K,EAAA4gG,IAAA,GACA5gG,GAAA9K,EAAA4yF,WAAA,EAAA5yF,EAAA+yF,MAAAkV,GAAAjoG,EAAA,KAAAD,EAAAmJ,KAAAu1E,GAAAhzE,EAAAzL,EAAAD,EAAAmJ,GAAA8iG,MACAhsG,IAAA+yF,OAEA/yF,EAEA,OACA,OAAAyoG,GAAAzoG,GAAA,OAAAyL,GAAAogG,GAAA7rG,GAAAD,EAAAC,EAAAgG,KAAA8E,EAAA9K,EAAAokG,aAAA9pC,EAAA,OAAA7uD,IAAA+4F,cAAA,KAAA//E,EAAA3Z,EAAA2hB,SAAA41E,GAAAtiG,EAAA+K,GAAA2Z,EAAA,YAAA61C,GAAA+nC,GAAAtiG,EAAAu6D,KAAAt6D,EAAA4yF,WAAA,IAAA4Z,GAAA/gG,EAAAzL,GAAA,IAAAkJ,GAAA,EAAAlJ,EAAA8hD,MAAAh3C,EAAA0iG,QAAAxtG,EAAA6kG,eAAA7kG,EAAA4kG,oBAAA,EAAA5kG,EAAA,OAAAy+E,GAAAhzE,EAAAzL,EAAAykB,EAAAvb,GAAAlJ,IAAA+yF,OAAA/yF,EAEA,OACA,cAAAyL,GAAAogG,GAAA7rG,GAAA,KAEA,QACA,OAAAgtG,GAAAvhG,EAAAzL,EAAAkJ,GAEA,OACA,OAAAo/F,GAAAtoG,IAAA0jF,UAAA+U,eAAA14F,EAAAC,EAAAokG,aAAA,OAAA34F,EAAAzL,EAAA+yF,MAAAiV,GAAAhoG,EAAA,KAAAD,EAAAmJ,GAAAu1E,GAAAhzE,EAAAzL,EAAAD,EAAAmJ,GAAAlJ,EAAA+yF,MAEA,QACA,OAAAhzF,EAAAC,EAAAgG,KAAA8E,EAAA9K,EAAAokG,aAAA8H,GAAAzgG,EAAAzL,EAAAD,EAAA+K,EAAA9K,EAAAmkG,cAAApkG,EAAA+K,EAAAy/B,GAAAxqC,EAAA+K,GAAA5B,GAEA,OACA,OAAAu1E,GAAAhzE,EAAAzL,IAAAokG,aAAAl7F,GAAAlJ,EAAA+yF,MAEA,OAGA,QACA,OAAAtU,GAAAhzE,EAAAzL,IAAAokG,aAAA33E,SAAAvjB,GAAAlJ,EAAA+yF,MAEA,QACAtnF,EAAA,CAOA,GANA1L,EAAAC,EAAAgG,KAAA25E,SACA70E,EAAA9K,EAAAokG,aACA3/E,EAAAzkB,EAAAwkG,cAEA4I,GAAAptG,EADAs6D,EAAAxvD,EAAAlK,OAGA,OAAA6jB,EAAA,CACA,IAAAq4B,EAAAr4B,EAAA7jB,MAGA,QAFA05D,EAAAk4B,GAAA11C,EAAAwd,GAAA,yBAAAv6D,EAAAw/E,sBAAAx/E,EAAAw/E,sBAAAziC,EAAAwd,GAAA,cAGA,GAAA71C,EAAAgI,WAAA3hB,EAAA2hB,WAAAsxD,GAAA5rC,QAAA,CACAnyC,EAAAosG,GAAA3gG,EAAAzL,EAAAkJ,GACA,MAAAuC,QAEW,YAAAqxC,EAAA98C,EAAA+yF,SAAAj2C,EAAAynC,OAAAvkF,GAAqD,OAAA88C,GAAY,CAC5E,IAAAzV,EAAAyV,EAAAunD,oBAEA,UAAAh9D,EAAA,CACA5iB,EAAAq4B,EAAAi2C,MAEA,QAAAv/E,EAAA6zB,EAAAiM,MAAmC,OAAA9/B,GAAY,CAC/C,GAAAA,EAAAqX,UAAA9qB,GAAA,KAAAyT,EAAAi6F,aAAAnzC,GAAA,CACA,IAAAxd,EAAAonC,OAAA1wE,EAAAgzF,GAAAt9F,IAAAg7E,IAAA6iB,GAAAH,GAAA9pD,EAAAtpC,IACAspC,EAAA+nD,eAAA37F,IAAA4zC,EAAA+nD,eAAA37F,GAEA,QADAsK,EAAAspC,EAAAy1C,YACA/+E,EAAAqxF,eAAA37F,IAAAsK,EAAAqxF,eAAA37F,GACAsK,EAAAtK,EAEA,QAAAtC,EAAAk2C,EAAAynC,OAAwC,OAAA39E,GAAY,CACpD,IAAAvG,EAAAuG,EAAA2rF,UACA,GAAA3rF,EAAAg+F,oBAAApxF,EAAA5M,EAAAg+F,oBAAApxF,EAAA,OAAAnT,KAAAukG,oBAAApxF,IAAAnT,EAAAukG,oBAAApxF,OAAqJ,aAAAnT,KAAAukG,oBAAApxF,GAA4E,MAA5EnT,EAAAukG,oBAAApxF,EACrJ5M,IAAA29E,OAGAl9C,EAAAw9D,eAAA37F,IAAAm+B,EAAAw9D,eAAA37F,GACA,MAGAsK,IAAA86B,WAEa7pB,EAAA,KAAAq4B,EAAAonC,KAAApnC,EAAA92C,OAAAhG,EAAAgG,KAAA,KAAA82C,EAAAi2C,MAEb,UAAAtuE,IAAA8/D,OAAAznC,OAAyC,IAAAr4B,EAAAq4B,EAAgB,OAAAr4B,GAAY,CACrE,GAAAA,IAAAzkB,EAAA,CACAykB,EAAA,KACA,MAKA,WAFAq4B,EAAAr4B,EAAAuuE,SAEA,CACAl2C,EAAAynC,OAAA9/D,EAAA8/D,OACA9/D,EAAAq4B,EACA,MAGAr4B,IAAA8/D,OAEAznC,EAAAr4B,GAIAg6D,GAAAhzE,EAAAzL,EAAA8K,EAAA2hB,SAAAvjB,GACAlJ,IAAA+yF,MAGA,OAAA/yF,EAEA,OACA,OAAA8K,EAAA9K,EAAAgG,KAAAjG,GAAAu6D,EAAAt6D,EAAAokG,cAAA33E,SAAA0/E,GAAAnsG,EAAAkJ,GAAAnJ,IAAA+K,EAAA0/B,GAAA1/B,EAAAwvD,EAAAozC,wBAAA1tG,EAAA4yF,WAAA,EAAAnU,GAAAhzE,EAAAzL,EAAAD,EAAAmJ,GAAAlJ,EAAA+yF,MAEA,QACA,OAAAz4B,EAAA/vB,GAAAz/B,EAAA9K,EAAAgG,KAAAhG,EAAAokG,cAAAiI,GAAA5gG,EAAAzL,EAAA8K,EAAAwvD,EAAA/vB,GAAAz/B,EAAA9E,KAAAs0D,GAAAv6D,EAAAmJ,GAEA,QACA,OAAAojG,GAAA7gG,EAAAzL,IAAAgG,KAAAhG,EAAAokG,aAAArkG,EAAAmJ,GAEA,QACA,OAAAnJ,EAAAC,EAAAgG,KAAA8E,EAAA9K,EAAAokG,aAAAt5F,EAAA9K,EAAAmkG,cAAApkG,EAAA+K,EAAAy/B,GAAAxqC,EAAA+K,GAAA,OAAAW,MAAA8mF,UAAA,KAAAvyF,EAAAuyF,UAAA,KAAAvyF,EAAA4yF,WAAA,GAAA5yF,EAAAkkF,IAAA,EAAAlG,GAAAj+E,IAAA0L,GAAA,EAAAm4F,GAAA5jG,IAAAyL,GAAA,EAAA0gG,GAAAnsG,EAAAkJ,GAAAg+F,GAAAlnG,EAAAD,EAAA+K,GAAAw8F,GAAAtnG,EAAAD,EAAA+K,EAAA5B,GAAA2jG,GAAA,KAAA7sG,EAAAD,GAAA,EAAA0L,EAAAvC,GAGAlH,EAAA,OAGA,IAAA2rG,GAAA,CACAx7D,QAAA,MAEAy7D,GAAA,KACAC,GAAA,KACAC,GAAA,KAEA,SAAAV,GAAA3hG,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAAzF,KAAA25E,SACAhC,GAAAgwB,GAAAzkG,EAAAs2E,eACAt2E,EAAAs2E,cAAAx/E,EAGA,SAAA+tG,GAAAtiG,GACA,IAAAzL,EAAA2tG,GAAAx7D,QACAurC,GAAAiwB,IACAliG,EAAAzF,KAAA25E,SAAAH,cAAAx/E,EAGA,SAAAmsG,GAAA1gG,EAAAzL,GACA4tG,GAAAniG,EACAqiG,GAAAD,GAAA,KACA,IAAA3kG,EAAAuC,EAAA44F,oBACA,OAAAn7F,KAAA27F,gBAAA7kG,IAAA4qG,IAAA,GACAn/F,EAAA44F,oBAAA,KAGA,SAAA75D,GAAA/+B,EAAAzL,GAcA,OAbA8tG,KAAAriG,IAAA,IAAAzL,GAAA,IAAAA,IACA,kBAAAA,GAAA,aAAAA,IAAA8tG,GAAAriG,EAAAzL,EAAA,YACAA,EAAA,CACA6qB,QAAApf,EACAgiG,aAAAztG,EACAsuC,KAAA,MAEA,OAAAu/D,IAAA,OAAAD,IAAA5rG,EAAA,OAAA6rG,GAAA7tG,EAAA4tG,GAAAvJ,oBAAA,CACA/wD,MAAAtzC,EACA6kG,eAAA,IACKgJ,MAAAv/D,KAAAtuC,GAGLyL,EAAA+zE,cAGA,IAAAwuB,GAAA,EACAlH,GAAA,EACAC,GAAA,EACAkH,GAAA,EACAvB,IAAA,EAEA,SAAAwB,GAAAziG,GACA,OACA26F,UAAA36F,EACA0iG,YAAA,KACAC,WAAA,KACAC,oBAAA,KACAC,mBAAA,KACA5J,YAAA,KACAD,WAAA,KACA8J,oBAAA,KACAC,mBAAA,MAIA,SAAAC,GAAAhjG,GACA,OACA26F,UAAA36F,EAAA26F,UACA+H,YAAA1iG,EAAA0iG,YACAC,WAAA3iG,EAAA2iG,WACAC,oBAAA,KACAC,mBAAA,KACA5J,YAAA,KACAD,WAAA,KACA8J,oBAAA,KACAC,mBAAA,MAIA,SAAAhI,GAAA/6F,GACA,OACAo5F,eAAAp5F,EACAy4E,IAAA8pB,GACAtH,QAAA,KACAxvF,SAAA,KACAo3B,KAAA,KACAq2D,WAAA,MAIA,SAAA+J,GAAAjjG,EAAAzL,GACA,OAAAyL,EAAA2iG,WAAA3iG,EAAA0iG,YAAA1iG,EAAA2iG,WAAApuG,GAAAyL,EAAA2iG,WAAA9/D,KAAAtuC,EAAAyL,EAAA2iG,WAAApuG,GAGA,SAAA4mG,GAAAn7F,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAA8mF,UAEA,UAAArpF,EAAA,CACA,IAAAnJ,EAAA0L,EAAA84F,YACAz5F,EAAA,KACA,OAAA/K,MAAA0L,EAAA84F,YAAA2J,GAAAziG,EAAA64F,qBACGvkG,EAAA0L,EAAA84F,YAAAz5F,EAAA5B,EAAAq7F,YAAA,OAAAxkG,EAAA,OAAA+K,GAAA/K,EAAA0L,EAAA84F,YAAA2J,GAAAziG,EAAA64F,eAAAx5F,EAAA5B,EAAAq7F,YAAA2J,GAAAhlG,EAAAo7F,gBAAAvkG,EAAA0L,EAAA84F,YAAAkK,GAAA3jG,GAAA,OAAAA,MAAA5B,EAAAq7F,YAAAkK,GAAA1uG,IAEH,OAAA+K,GAAA/K,IAAA+K,EAAA4jG,GAAA3uG,EAAAC,GAAA,OAAAD,EAAAquG,YAAA,OAAAtjG,EAAAsjG,YAAAM,GAAA3uG,EAAAC,GAAA0uG,GAAA5jG,EAAA9K,KAAA0uG,GAAA3uG,EAAAC,GAAA8K,EAAAsjG,WAAApuG,GAGA,SAAA2uG,GAAAljG,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAA84F,YAEA,QADAr7F,EAAA,OAAAA,EAAAuC,EAAA84F,YAAA2J,GAAAziG,EAAA64F,eAAAsK,GAAAnjG,EAAAvC,IACAolG,mBAAAplG,EAAAmlG,oBAAAnlG,EAAAolG,mBAAAtuG,GAAAkJ,EAAAolG,mBAAAhgE,KAAAtuC,EAAAkJ,EAAAolG,mBAAAtuG,GAGA,SAAA4uG,GAAAnjG,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAA8mF,UAEA,OADA,OAAArpF,GAAAlJ,IAAAkJ,EAAAq7F,cAAAvkG,EAAAyL,EAAA84F,YAAAkK,GAAAzuG,IACAA,EAGA,SAAA6uG,GAAApjG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,EAAAwvD,GACA,OAAApxD,EAAAg7E,KACA,KAAA4iB,GACA,0BAAAr7F,EAAAvC,EAAAw9F,SAAAj7F,EAAA9J,KAAA24D,EAAAv6D,EAAA+K,GAAAW,EAEA,KAAAwiG,GACAxiG,EAAAmnF,WAAA,KAAAnnF,EAAAmnF,UAAA,GAEA,KAAAob,GAGA,WADAljG,EAAA,oBADAW,EAAAvC,EAAAw9F,SACAj7F,EAAA9J,KAAA24D,EAAAv6D,EAAA+K,GAAAW,SACA,IAAAX,EAAA,MACA,OAAAnE,EAAA,GAAiB5G,EAAA+K,GAEjB,KAAAi8F,GACA2F,IAAA,EAGA,OAAA3sG,EAGA,SAAAwnG,GAAA97F,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA4hG,IAAA,EAGA,QAAApyC,GAFAt6D,EAAA4uG,GAAAnjG,EAAAzL,IAEAomG,UAAA3hF,EAAA,KAAAq4B,EAAA,EAAAzV,EAAArnC,EAAAmuG,YAAA36F,EAAA8mD,EAAsE,OAAAjzB,GAAY,CAClF,IAAAzgC,EAAAygC,EAAAw9D,eACAj+F,EAAAkE,GAAA,OAAA2Z,MAAA4iB,EAAAizB,EAAA9mD,GAAAspC,EAAAl2C,IAAAk2C,EAAAl2C,KAAA4M,EAAAq7F,GAAApjG,EAAAzL,EAAAqnC,EAAA7zB,EAAAtK,EAAAnJ,GAAA,OAAAsnC,EAAAnwB,WAAAzL,EAAAmnF,WAAA,GAAAvrD,EAAAs9D,WAAA,YAAA3kG,EAAAykG,WAAAzkG,EAAA0kG,YAAA1kG,EAAAykG,WAAAp9D,GAAArnC,EAAAykG,WAAAE,WAAAt9D,EAAArnC,EAAAykG,WAAAp9D,KACAA,IAAAiH,KAKA,IAFA1nC,EAAA,KAEAygC,EAAArnC,EAAAquG,oBAAiC,OAAAhnE,GAAY,CAC7C,IAAAhnC,EAAAgnC,EAAAw9D,eACAxkG,EAAAyK,GAAA,OAAAlE,MAAAygC,EAAA,OAAA5iB,IAAA61C,EAAA9mD,IAAAspC,EAAAz8C,IAAAy8C,EAAAz8C,KAAAmT,EAAAq7F,GAAApjG,EAAAzL,EAAAqnC,EAAA7zB,EAAAtK,EAAAnJ,GAAA,OAAAsnC,EAAAnwB,WAAAzL,EAAAmnF,WAAA,GAAAvrD,EAAAs9D,WAAA,YAAA3kG,EAAAwuG,mBAAAxuG,EAAAuuG,oBAAAvuG,EAAAwuG,mBAAAnnE,GAAArnC,EAAAwuG,mBAAA7J,WAAAt9D,EAAArnC,EAAAwuG,mBAAAnnE,KACAA,IAAAiH,KAGA,OAAA7pB,IAAAzkB,EAAAouG,WAAA,MACA,OAAAxnG,EAAA5G,EAAAsuG,mBAAA,KAAA7iG,EAAAmnF,WAAA,GACA,OAAAnuE,GAAA,OAAA7d,IAAA0zD,EAAA9mD,GACAxT,EAAAomG,UAAA9rC,EACAt6D,EAAAmuG,YAAA1pF,EACAzkB,EAAAquG,oBAAAznG,EACA6E,EAAAo5F,eAAA/nD,EACArxC,EAAA64F,cAAA9wF,EAGA,SAAAs7F,GAAArjG,EAAAzL,EAAAkJ,GACA,OAAAlJ,EAAAquG,sBAAA,OAAAruG,EAAAouG,aAAApuG,EAAAouG,WAAA9/D,KAAAtuC,EAAAquG,oBAAAruG,EAAAouG,WAAApuG,EAAAsuG,oBAAAtuG,EAAAquG,oBAAAruG,EAAAsuG,mBAAA,MACAS,GAAA/uG,EAAA0kG,YAAAx7F,GACAlJ,EAAA0kG,YAAA1kG,EAAAykG,WAAA,KACAsK,GAAA/uG,EAAAuuG,oBAAArlG,GACAlJ,EAAAuuG,oBAAAvuG,EAAAwuG,mBAAA,KAGA,SAAAO,GAAAtjG,EAAAzL,GACA,KAAQ,OAAAyL,GAAY,CACpB,IAAAvC,EAAAuC,EAAAyL,SAEA,UAAAhO,EAAA,CACAuC,EAAAyL,SAAA,KACA,IAAAnX,EAAAC,EACA,oBAAAkJ,GAAAlH,EAAA,MAAAkH,GACAA,EAAAvH,KAAA5B,GAGA0L,IAAAk5F,YAIA,SAAAqK,GAAAvjG,EAAAzL,GACA,OACAY,MAAA6K,EACAhK,OAAAzB,EACAo5D,MAAAizB,GAAArsF,IAIA,SAAAivG,GAAAxjG,GACAA,EAAAmnF,WAAA,EAGA,IAAAsc,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EAEAH,GAAA,SAAAzjG,EAAAzL,GACA,QAAAkJ,EAAAlJ,EAAA+yF,MAAuB,OAAA7pF,GAAY,CACnC,OAAAA,EAAAg7E,KAAA,IAAAh7E,EAAAg7E,IAAAz4E,EAAAkyF,YAAAz0F,EAAAw6E,gBAA+D,OAAAx6E,EAAAg7E,KAAA,OAAAh7E,EAAA6pF,MAAA,CAC/D7pF,EAAA6pF,MAAAxO,OAAAr7E,EACAA,IAAA6pF,MACA,SAEA,GAAA7pF,IAAAlJ,EAAA,MAEA,KAAU,OAAAkJ,EAAA8pF,SAAoB,CAC9B,UAAA9pF,EAAAq7E,QAAAr7E,EAAAq7E,SAAAvkF,EAAA,OACAkJ,IAAAq7E,OAGAr7E,EAAA8pF,QAAAzO,OAAAr7E,EAAAq7E,OACAr7E,IAAA8pF,UAIAmc,GAAA,aAEAC,GAAA,SAAA3jG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,IAAAwvD,EAAA7uD,EAAA+4F,cAEA,GAAAlqC,IAAAv6D,EAAA,CACA,IAAA0kB,EAAAzkB,EAAA0jF,UAIA,OAHA2kB,GAAAtwB,GAAA5lC,SACA1mC,EAAA,KAEAvC,GACA,YACAoxD,EAAAqzB,GAAAlpE,EAAA61C,GACAv6D,EAAA4tF,GAAAlpE,EAAA1kB,GACA0L,EAAA,GACA,MAEA,aACA6uD,EAAA2hC,GAAAx3E,EAAA61C,GACAv6D,EAAAk8F,GAAAx3E,EAAA1kB,GACA0L,EAAA,GACA,MAEA,aACA6uD,EAAA3zD,EAAA,GAAgB2zD,EAAA,CAChB15D,WAAA,IAEAb,EAAA4G,EAAA,GAAgB5G,EAAA,CAChBa,WAAA,IAEA6K,EAAA,GACA,MAEA,eACA6uD,EAAAgiC,GAAA73E,EAAA61C,GACAv6D,EAAAu8F,GAAA73E,EAAA1kB,GACA0L,EAAA,GACA,MAEA,QACA,oBAAA6uD,EAAAzpC,SAAA,oBAAA9wB,EAAA8wB,UAAApM,EAAA6qF,QAAAtN,IAGAJ,GAAA14F,EAAAnJ,GACA0kB,EAAAvb,OAAA,EACA,IAAA4zC,EAAA,KAEA,IAAA5zC,KAAAoxD,EACA,IAAAv6D,EAAAO,eAAA4I,IAAAoxD,EAAAh6D,eAAA4I,IAAA,MAAAoxD,EAAApxD,GAAA,aAAAA,EAAA,CACA,IAAAm+B,EAAAizB,EAAApxD,GAEA,IAAAub,KAAA4iB,EACAA,EAAA/mC,eAAAmkB,KAAAq4B,MAAA,IAA8CA,EAAAr4B,GAAA,QAEvC,4BAAAvb,GAAA,aAAAA,GAAA,mCAAAA,GAAA,6BAAAA,GAAA,cAAAA,IAAAo5E,EAAAhiF,eAAA4I,GAAAuC,MAAA,KAAAA,KAAA,IAAA9C,KAAAO,EAAA,OAGP,IAAAA,KAAAnJ,EAAA,CACA,IAAAyT,EAAAzT,EAAAmJ,GAEA,GADAm+B,EAAA,MAAAizB,IAAApxD,QAAA,EACAnJ,EAAAO,eAAA4I,IAAAsK,IAAA6zB,IAAA,MAAA7zB,GAAA,MAAA6zB,GAAA,aAAAn+B,EACA,GAAAm+B,EAAA,CACA,IAAA5iB,KAAA4iB,GACAA,EAAA/mC,eAAAmkB,IAAAjR,KAAAlT,eAAAmkB,KAAAq4B,MAAA,IAA6EA,EAAAr4B,GAAA,IAG7E,IAAAA,KAAAjR,EACAA,EAAAlT,eAAAmkB,IAAA4iB,EAAA5iB,KAAAjR,EAAAiR,KAAAq4B,MAAA,IAAiEA,EAAAr4B,GAAAjR,EAAAiR,SAExDq4B,IAAArxC,MAAA,IAAAA,EAAA9C,KAAAO,EAAA4zC,MAAAtpC,MACF,4BAAAtK,GAAAsK,MAAA8uF,YAAA,EAAAj7D,MAAAi7D,YAAA,QAAA9uF,GAAA6zB,IAAA7zB,IAAA/H,KAAA,IAAA9C,KAAAO,EAAA,GAAAsK,IAAA,aAAAtK,EAAAm+B,IAAA7zB,GAAA,kBAAAA,GAAA,kBAAAA,IAAA/H,KAAA,IAAA9C,KAAAO,EAAA,GAAAsK,GAAA,mCAAAtK,GAAA,6BAAAA,IAAAo5E,EAAAhiF,eAAA4I,IAAA,MAAAsK,GAAAsuF,GAAAh3F,EAAA5B,GAAAuC,GAAA47B,IAAA7zB,IAAA/H,EAAA,MAAAA,KAAA,IAAA9C,KAAAO,EAAAsK,IAGPspC,IAAArxC,KAAA,IAAA9C,KAAA,QAAAm0C,GACAhyC,EAAAW,GACAzL,EAAAukG,YAAAz5F,IAAAmkG,GAAAjvG,KAIAqvG,GAAA,SAAA5jG,EAAAzL,EAAAkJ,EAAAnJ,GACAmJ,IAAAnJ,GAAAkvG,GAAAjvG,IAGA,IAAAuvG,GAAA,oBAAAC,gBAAAzM,IAEA,SAAA0M,GAAAhkG,EAAAzL,GACA,IAAAkJ,EAAAlJ,EAAAyB,OACA1B,EAAAC,EAAAo5D,MACA,OAAAr5D,GAAA,OAAAmJ,IAAAnJ,EAAAssF,GAAAnjF,IACA,OAAAA,GAAAkjF,GAAAljF,EAAAlD,MACAhG,IAAAY,MACA,OAAA6K,GAAA,IAAAA,EAAAy4E,KAAAkI,GAAA3gF,EAAAzF,MAEA,IACA6mC,QAAAnR,MAAA17B,GACG,MAAA8K,GACHoa,WAAA,WACA,MAAApa,KAKA,SAAA4kG,GAAAjkG,GACA,IAAAzL,EAAAyL,EAAA+lB,IACA,UAAAxxB,EAAA,uBAAAA,EAAA,IACAA,EAAA,MACG,MAAAkJ,GACHymG,GAAAlkG,EAAAvC,QACGlJ,EAAAmyC,QAAA,KAGH,SAAAy9D,GAAAnkG,EAAAzL,EAAAkJ,GAIA,WAFAA,EAAA,QADAA,IAAAq7F,aACAr7F,EAAAu7F,WAAA,MAEA,CACA,IAAA1kG,EAAAmJ,IAAAolC,KAEA,GACA,IAAAvuC,EAAAmkF,IAAAz4E,KAAAk9F,GAAA,CACA,IAAA79F,EAAA/K,EAAAwxC,QACAxxC,EAAAwxC,aAAA,OACA,IAAAzmC,QAGA/K,EAAAmkF,IAAAlkF,KAAA2oG,KAAA79F,EAAA/K,EAAAW,OAAAX,EAAAwxC,QAAAzmC,KACA/K,IAAAuuC,WACKvuC,IAAAmJ,IAqCL,SAAA2mG,GAAApkG,GAGA,OAFA,oBAAAu4F,OAAAv4F,GAEAA,EAAAy4E,KACA,OACA,QACA,QACA,QACA,IAAAlkF,EAAAyL,EAAA84F,YAEA,UAAAvkG,GAAA,QAAAA,IAAAykG,YAAA,CACA,IAAAv7F,EAAAlJ,IAAAsuC,KAEA,GACA,IAAAvuC,EAAAmJ,EAAAqoC,QAEA,YAAAxxC,EAAA,CACA,IAAA+K,EAAAW,EAEA,IACA1L,IACa,MAAAu6D,GACbq1C,GAAA7kG,EAAAwvD,IAIApxD,IAAAolC,WACSplC,IAAAlJ,GAGT,MAEA,OAGA,GAFA0vG,GAAAjkG,GAEA,oBADAzL,EAAAyL,EAAAi4E,WACAn3D,qBAAA,IACAvsB,EAAAwY,MAAA/M,EAAA+4F,cAAAxkG,EAAAiW,MAAAxK,EAAA64F,cAAAtkG,EAAAusB,uBACO,MAAA+tC,GACPq1C,GAAAlkG,EAAA6uD,GAEA,MAEA,OACAo1C,GAAAjkG,GACA,MAEA,OACAqkG,GAAArkG,IAIA,SAAAskG,GAAAtkG,GACA,WAAAA,EAAAy4E,KAAA,IAAAz4E,EAAAy4E,KAAA,IAAAz4E,EAAAy4E,IAGA,SAAA8rB,GAAAvkG,GACAA,EAAA,CACA,QAAAzL,EAAAyL,EAAA84E,OAA0B,OAAAvkF,GAAY,CACtC,GAAA+vG,GAAA/vG,GAAA,CACA,IAAAkJ,EAAAlJ,EACA,MAAAyL,EAGAzL,IAAAukF,OAGAviF,EAAA,OACAkH,OAAA,EAGA,IAAAnJ,EAAAC,OAAA,EAEA,OAAAkJ,EAAAg7E,KACA,OACAlkF,EAAAkJ,EAAAw6E,UACA3jF,GAAA,EACA,MAEA,OAKA,OACAC,EAAAkJ,EAAAw6E,UAAA+U,cACA14F,GAAA,EACA,MAEA,QACAiC,EAAA,OAGA,GAAAkH,EAAA0pF,YAAAkL,GAAA99F,EAAA,IAAAkJ,EAAA0pF,YAAA,IAEAnnF,EAAAzL,EAAA,IAAAkJ,EAAAuC,IAAoB,CACpB,KAAU,OAAAvC,EAAA8pF,SAAoB,CAC9B,UAAA9pF,EAAAq7E,QAAAwrB,GAAA7mG,EAAAq7E,QAAA,CACAr7E,EAAA,KACA,MAAAuC,EAGAvC,IAAAq7E,OAKA,IAFAr7E,EAAA8pF,QAAAzO,OAAAr7E,EAAAq7E,OAEAr7E,IAAA8pF,QAAuB,IAAA9pF,EAAAg7E,KAAA,IAAAh7E,EAAAg7E,KAAA,KAAAh7E,EAAAg7E,KAA4C,CACnE,KAAAh7E,EAAA0pF,UAAA,SAAA5yF,EACA,UAAAkJ,EAAA6pF,OAAA,IAAA7pF,EAAAg7E,IAAA,SAAAlkF,EAAsDkJ,EAAA6pF,MAAAxO,OAAAr7E,MAAA6pF,MAGtD,OAAA7pF,EAAA0pF,WAAA,CACA1pF,IAAAw6E,UACA,MAAAj4E,GAIA,QAAAX,EAAAW,IAAkB,CAClB,OAAAX,EAAAo5E,KAAA,IAAAp5E,EAAAo5E,IACA,GAAAh7E,EACA,GAAAnJ,EAAA,CACA,IAAAu6D,EAAAt6D,EACAykB,EAAA3Z,EAAA44E,UACA5mC,EAAA5zC,EACA,IAAAoxD,EAAAqwB,SAAArwB,EAAA2pB,WAAAgsB,aAAAxrF,EAAAq4B,GAAAwd,EAAA21C,aAAAxrF,EAAAq4B,QACS98C,EAAAiwG,aAAAnlG,EAAA44E,UAAAx6E,QACFnJ,GAAA0kB,EAAAzkB,EAAA88C,EAAAhyC,EAAA44E,UAAA,IAAAj/D,EAAAkmE,UAAArwB,EAAA71C,EAAAw/D,YAAAgsB,aAAAnzD,EAAAr4B,IAAA61C,EAAA71C,GAAAk5E,YAAA7gD,GAAA,QAAAr4B,IAAAyrF,2BAAA,IAAAzrF,GAAA,OAAA61C,EAAAg1C,UAAAh1C,EAAAg1C,QAAAtN,KAAAhiG,EAAA29F,YAAA7yF,EAAA44E,gBACF,OAAA54E,EAAAo5E,KAAA,OAAAp5E,EAAAioF,MAAA,CACLjoF,EAAAioF,MAAAxO,OAAAz5E,EACAA,IAAAioF,MACA,SAEA,GAAAjoF,IAAAW,EAAA,MAEA,KAAU,OAAAX,EAAAkoF,SAAoB,CAC9B,UAAAloF,EAAAy5E,QAAAz5E,EAAAy5E,SAAA94E,EAAA,OACAX,IAAAy5E,OAGAz5E,EAAAkoF,QAAAzO,OAAAz5E,EAAAy5E,OACAz5E,IAAAkoF,SAIA,SAAA8c,GAAArkG,GACA,QAAAzL,EAAAyL,EAAAvC,GAAA,EAAAnJ,OAAA,EAAA+K,OAAA,IAAkD,CAClD,IAAA5B,EAAA,CACAA,EAAAlJ,EAAAukF,OAEA94E,EAAA,OAAgB,CAGhB,OAFA,OAAAvC,GAAAlH,EAAA,OAEAkH,EAAAg7E,KACA,OACAnkF,EAAAmJ,EAAAw6E,UACA54E,GAAA,EACA,MAAAW,EAEA,OAKA,OACA1L,EAAAmJ,EAAAw6E,UAAA+U,cACA3tF,GAAA,EACA,MAAAW,EAGAvC,IAAAq7E,OAGAr7E,GAAA,EAGA,OAAAlJ,EAAAkkF,KAAA,IAAAlkF,EAAAkkF,IAAA,CACAz4E,EAAA,QAAA6uD,EAAAt6D,EAAAykB,EAAA61C,IACA,GAAAu1C,GAAAprF,GAAA,OAAAA,EAAAsuE,OAAA,IAAAtuE,EAAAy/D,IAAAz/D,EAAAsuE,MAAAxO,OAAA9/D,MAAAsuE,UAAoF,CACpF,GAAAtuE,IAAA61C,EAAA,MAEA,KAAgB,OAAA71C,EAAAuuE,SAAoB,CACpC,UAAAvuE,EAAA8/D,QAAA9/D,EAAA8/D,SAAAjqB,EAAA,MAAA7uD,EACAgZ,IAAA8/D,OAGA9/D,EAAAuuE,QAAAzO,OAAA9/D,EAAA8/D,OACA9/D,IAAAuuE,QAIAloF,GAAAwvD,EAAAv6D,EAAA0kB,EAAAzkB,EAAA0jF,UAAA,IAAAppB,EAAAqwB,SAAArwB,EAAA2pB,WAAAyZ,YAAAj5E,GAAA61C,EAAAojC,YAAAj5E,IAAA1kB,EAAA29F,YAAA19F,EAAA0jF,gBACK,OAAA1jF,EAAAkkF,KACL,UAAAlkF,EAAA+yF,MAAA,CACAhzF,EAAAC,EAAA0jF,UAAA+U,cACA3tF,GAAA,EACA9K,EAAA+yF,MAAAxO,OAAAvkF,EACAA,IAAA+yF,MACA,eAEK,GAAA8c,GAAA7vG,GAAA,OAAAA,EAAA+yF,MAAA,CACL/yF,EAAA+yF,MAAAxO,OAAAvkF,EACAA,IAAA+yF,MACA,SAGA,GAAA/yF,IAAAyL,EAAA,MAEA,KAAU,OAAAzL,EAAAgzF,SAAoB,CAC9B,UAAAhzF,EAAAukF,QAAAvkF,EAAAukF,SAAA94E,EAAA,OAEA,KADAzL,IAAAukF,QACAL,MAAAh7E,GAAA,GAGAlJ,EAAAgzF,QAAAzO,OAAAvkF,EAAAukF,OACAvkF,IAAAgzF,SAIA,SAAAmd,GAAA1kG,EAAAzL,GACA,OAAAA,EAAAkkF,KACA,OACA,QACA,QACA,QACA0rB,GAAA/G,GAAAC,GAAA9oG,GACA,MAEA,OACA,MAEA,OACA,IAAAkJ,EAAAlJ,EAAA0jF,UAEA,SAAAx6E,EAAA,CACA,IAAAnJ,EAAAC,EAAAwkG,cACA/4F,EAAA,OAAAA,IAAA+4F,cAAAzkG,EACA,IAAA+K,EAAA9K,EAAAgG,KACAs0D,EAAAt6D,EAAAukG,YACAvkG,EAAAukG,YAAA,KACA,OAAAjqC,GA3yEA,SAAA7uD,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACAW,EAAAs4E,GAAAj5E,EACA,UAAA5B,GAAA,UAAA4B,EAAA9E,MAAA,MAAA8E,EAAAkc,MAAAmnE,GAAA1iF,EAAAX,GACAwe,GAAApgB,EAAAnJ,GACAA,EAAAupB,GAAApgB,EAAA4B,GAEA,QAAAwvD,EAAA,EAAiBA,EAAAt6D,EAAAwB,OAAc84D,GAAA,GAC/B,IAAA71C,EAAAzkB,EAAAs6D,GACAxd,EAAA98C,EAAAs6D,EAAA,GACA,UAAA71C,EAAAq8E,GAAAr1F,EAAAqxC,GAAA,4BAAAr4B,EAAA84E,GAAA9xF,EAAAqxC,GAAA,aAAAr4B,EAAAq5E,GAAAryF,EAAAqxC,GAAAuwC,GAAA5hF,EAAAgZ,EAAAq4B,EAAA/8C,GAGA,OAAAmJ,GACA,YACAklF,GAAA3iF,EAAAX,GACA,MAEA,eACA2xF,GAAAhxF,EAAAX,GACA,MAEA,aACA9K,EAAAyL,EAAAqiF,cAAAsiB,YAAA3kG,EAAAqiF,cAAAsiB,cAAAtlG,EAAAgvE,SAAA,OAAA5wE,EAAA4B,EAAAlK,OAAAu7F,GAAA1wF,IAAAX,EAAAgvE,SAAA5wE,GAAA,GAAAlJ,MAAA8K,EAAAgvE,WAAA,MAAAhvE,EAAA+iF,aAAAsO,GAAA1wF,IAAAX,EAAAgvE,SAAAhvE,EAAA+iF,cAAA,GAAAsO,GAAA1wF,IAAAX,EAAAgvE,SAAAhvE,EAAAgvE,SAAA,YAqxEAu2B,CAAAnnG,EAAAoxD,EAAAxvD,EAAAW,EAAA1L,GAGA,MAEA,OACA,OAAAC,EAAA0jF,WAAA1hF,EAAA,OACAhC,EAAA0jF,UAAAsa,UAAAh+F,EAAAwkG,cACA,MAEA,OAGA,QACA,MAEA,QAQA,GAPAt7F,EAAAlJ,EAAAskG,cACAvkG,OAAA,EACA0L,EAAAzL,EACA,OAAAkJ,EAAAnJ,GAAA,GAAAA,GAAA,EAAA0L,EAAAzL,EAAA+yF,MAAA,IAAA7pF,EAAA+jG,aAAA/jG,EAAA+jG,WAAA1G,OACA,OAAA96F,GArSA,SAAAA,EAAAzL,GACA,QAAAkJ,EAAAuC,IAAkB,CAClB,OAAAvC,EAAAg7E,IAAA,CACA,IAAAnkF,EAAAmJ,EAAAw6E,UACA,GAAA1jF,EAAAD,EAAAmyB,MAAAo+E,QAAA,WAAsC,CACtCvwG,EAAAmJ,EAAAw6E,UACA,IAAA54E,EAAA5B,EAAAs7F,cAAAtyE,MACApnB,OAAA,IAAAA,GAAA,OAAAA,KAAAxK,eAAA,WAAAwK,EAAAwlG,QAAA,KACAvwG,EAAAmyB,MAAAo+E,QAAAzP,GAAA,UAAA/1F,SAEK,OAAA5B,EAAAg7E,IAAAh7E,EAAAw6E,UAAAsa,UAAAh+F,EAAA,GAAAkJ,EAAAs7F,kBAAwE,SAAAt7F,EAAAg7E,KAAA,OAAAh7E,EAAAo7F,cAAA,EAC7EvkG,EAAAmJ,EAAA6pF,MAAAC,SACAzO,OAAAr7E,EACAA,EAAAnJ,EACA,SACK,UAAAmJ,EAAA6pF,MAAA,CACL7pF,EAAA6pF,MAAAxO,OAAAr7E,EACAA,IAAA6pF,MACA,UAGA,GAAA7pF,IAAAuC,EAAA,MAEA,KAAU,OAAAvC,EAAA8pF,SAAoB,CAC9B,UAAA9pF,EAAAq7E,QAAAr7E,EAAAq7E,SAAA94E,EAAA,OACAvC,IAAAq7E,OAGAr7E,EAAA8pF,QAAAzO,OAAAr7E,EAAAq7E,OACAr7E,IAAA8pF,SAwQAud,CAAA9kG,EAAA1L,GAGA,QAFAmJ,EAAAlJ,EAAAukG,aAEA,CACAvkG,EAAAukG,YAAA,KACA,IAAA9/E,EAAAzkB,EAAA0jF,UACA,OAAAj/D,MAAAzkB,EAAA0jF,UAAA,IAAA6rB,IACArmG,EAAA8I,QAAA,SAAAvG,GACA,IAAAvC,EAi/BA,SAAAuC,EAAAzL,GACA,IAAAkJ,EAAAuC,EAAAi4E,UACA,OAAAx6E,KAAAigB,OAAAnpB,GAEAA,EAAAymG,GADAzmG,EAAAumG,KACA96F,GAEA,QADAA,EAAAtC,GAAAsC,EAAAzL,MACAulG,GAAA95F,EAAAzL,GAAA,KAAAA,EAAAyL,EAAAo5F,iBAAA2L,GAAA/kG,EAAAzL,KAv/BAu9B,KAAA,KAAAv9B,EAAAyL,GACAgZ,EAAA87B,IAAA90C,KAAAgZ,EAAAm6C,IAAAnzD,KAAA8uB,KAAArxB,QAIA,MAEA,QACA,MAEA,QACAlH,EAAA,QAIA,IAAAyuG,GAAA,oBAAAC,gBAAA1tF,IAEA,SAAA2tF,GAAAllG,EAAAzL,EAAAkJ,IACAA,EAAAs9F,GAAAt9F,IACAg7E,IAAA+pB,GACA/kG,EAAAw9F,QAAA,CACAvL,QAAA,MAEA,IAAAp7F,EAAAC,EAAAY,MAOA,OALAsI,EAAAgO,SAAA,WACA05F,GAAA7wG,GACA0vG,GAAAhkG,EAAAzL,IAGAkJ,EAGA,SAAA2nG,GAAAplG,EAAAzL,EAAAkJ,IACAA,EAAAs9F,GAAAt9F,IACAg7E,IAAA+pB,GACA,IAAAluG,EAAA0L,EAAAzF,KAAAm1E,yBAEA,uBAAAp7E,EAAA,CACA,IAAA+K,EAAA9K,EAAAY,MAEAsI,EAAAw9F,QAAA,WACA,OAAA3mG,EAAA+K,IAIA,IAAAwvD,EAAA7uD,EAAAi4E,UAUA,OATA,OAAAppB,GAAA,oBAAAA,EAAAw2C,oBAAA5nG,EAAAgO,SAAA,WACA,oBAAAnX,IAAA,OAAAgxG,MAAA,IAAAhO,IAAA,CAAAljG,OAAAkxG,GAAAnyC,IAAA/+D,OACA,IAAAqJ,EAAAlJ,EAAAY,MACAkK,EAAA9K,EAAAo5D,MACAq2C,GAAAhkG,EAAAzL,GACAH,KAAAixG,kBAAA5nG,EAAA,CACA8nG,eAAA,OAAAlmG,IAAA,OAGA5B,EAGA,SAAA+nG,GAAAxlG,GACA,OAAAA,EAAAy4E,KACA,OACAlG,GAAAvyE,EAAAzF,OAAAu9F,KACA,IAAAvjG,EAAAyL,EAAAmnF,UACA,YAAA5yF,GAAAyL,EAAAmnF,WAAA,KAAA5yF,EAAA,GAAAyL,GAAA,KAEA,OACA,OAAA+8F,KAAAhF,KAAA,SAAAxjG,EAAAyL,EAAAmnF,aAAA5wF,EAAA,OAAAyJ,EAAAmnF,WAAA,KAAA5yF,EAAA,GAAAyL,EAEA,OACA,OAAAi9F,GAAAj9F,GAAA,KAEA,QACA,aAAAzL,EAAAyL,EAAAmnF,YAAAnnF,EAAAmnF,WAAA,KAAA5yF,EAAA,GAAAyL,GAAA,KAEA,QACA,YAEA,OACA,OAAA+8F,KAAA,KAEA,QACA,OAAAuF,GAAAtiG,GAAA,KAEA,QACA,aAIA,IAAAylG,GAAA9lB,GAAAhK,uBACA+vB,GAAA/lB,GAAA/J,kBACA+vB,GAAA,WACAC,IAAA,EACA3yB,GAAA,KACA4yB,GAAA,KACA9yB,GAAA,EACA+yB,IAAA,EACAC,IAAA,EACAxyB,GAAA,KACAyyB,IAAA,EACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAb,GAAA,KAEA,SAAAc,KACA,UAAAnzB,GAAA,QAAAjzE,EAAAizE,GAAA6F,OAAwC,OAAA94E,GAAY,CACpD,IAAAzL,EAAAyL,EAEA,OAAAzL,EAAAkkF,KACA,OACA,IAAAh7E,EAAAlJ,EAAAgG,KAAA80E,kBACA,OAAA5xE,QAAA,IAAAA,GAAAq6F,KACA,MAEA,OACAiF,KACAhF,KACA,MAEA,OACAkF,GAAA1oG,GACA,MAEA,OACAwoG,KACA,MAEA,QACAuF,GAAA/tG,GAGAyL,IAAA84E,OAEA+sB,GAAA,KACA9yB,GAAA,EACA+yB,IAAA,EACAC,IAAA,EACA9yB,GAAA,KAGA,SAAAozB,KACA,KAAQ,OAAA9yB,IAAY,CACpB,IAAAvzE,EAAAuzE,GAAA4T,UAGA,GAFA,GAAAnnF,GAAAqyF,GAAA9e,GAAA0E,UAAA,IAEA,IAAAj4E,EAAA,CACA,IAAAzL,EAAAg/E,GAAAuT,UACA,OAAAvyF,IAAA,QAAAA,IAAAwxB,OAAA,oBAAAxxB,IAAA,MAAAA,EAAAmyC,QAAA,OAGA,UAAA1mC,GACA,OACAukG,GAAAhxB,IACAA,GAAA4T,YAAA,EACA,MAEA,OACAod,GAAAhxB,IACAA,GAAA4T,YAAA,EACAud,GAAAnxB,GAAAuT,UAAAvT,IACA,MAEA,OACAmxB,GAAAnxB,GAAAuT,UAAAvT,IACA,MAEA,OACA8wB,GAAArkG,EAAAuzE,IAAAvzE,EAAA84E,OAAA,KAAA94E,EAAAsnF,MAAA,KAAAtnF,EAAA64F,cAAA,KAAA74F,EAAA84F,YAAA,aAAA94F,IAAA8mF,aAAA9mF,EAAA84E,OAAA,KAAA94E,EAAAsnF,MAAA,KAAAtnF,EAAA64F,cAAA,KAAA74F,EAAA84F,YAAA,MAGAvlB,MAAA2lB,YAIA,SAAAoN,KACA,KAAQ,OAAA/yB,IAAY,CACpB,OAAAA,GAAA4T,UAAAnnF,EAAA,CACA,IAAAA,EAAAuzE,GAAAuT,UACAvyF,EAAAg/E,GAEA,OAAAh/E,EAAAkkF,KACA,OACA,QACA,QACA0rB,GAAAhH,GAAAD,GAAA3oG,GACA,MAAAyL,EAEA,OACA,OAAAzL,EAAA4yF,WAAA,OAAAnnF,EAAA,CACA,IAAAvC,EAAAuC,EAAA+4F,cACAzkG,EAAA0L,EAAA64F,cAEAtkG,GADAyL,EAAAzL,EAAA0jF,WACA8jB,wBAAAxnG,EAAAmkG,cAAAnkG,EAAAgG,KAAAkD,EAAAqhC,GAAAvqC,EAAAgG,KAAAkD,GAAAnJ,GACA0L,EAAAumG,oCAAAhyG,EAGA,MAAAyL,EAEA,OACA,OACA,OACA,OACA,QACA,MAAAA,EAEA,QACAzJ,EAAA,QAGAg9E,MAAA2lB,YAIA,SAAAsN,GAAAxmG,EAAAzL,GACA,KAAQ,OAAAg/E,IAAY,CACpB,IAAA91E,EAAA81E,GAAA4T,UAEA,MAAA1pF,EAAA,CACA,IAAAnJ,EAAAi/E,GAAAuT,UACAznF,EAAAk0E,GACA1kB,EAAAt6D,EAEA,OAAA8K,EAAAo5E,KACA,OACA,QACA,QACA0rB,GAAA7G,GAAAC,GAAAl+F,GACA,MAEA,OACA,IAAA2Z,EAAA3Z,EAAA44E,UACA,KAAA54E,EAAA8nF,UAAA,UAAA7yF,EAAA0kB,EAAA6H,wBAAqE,CACrE,IAAAwwB,EAAAhyC,EAAAq5F,cAAAr5F,EAAA9E,KAAAjG,EAAAykG,cAAAj6D,GAAAz/B,EAAA9E,KAAAjG,EAAAykG,eACA//E,EAAAoI,mBAAAiwB,EAAA/8C,EAAAukG,cAAA7/E,EAAAutF,qCAGA,QADAjyG,EAAA+K,EAAAy5F,cACAuK,GAAAhkG,EAAA/K,EAAA0kB,GACA,MAEA,OAGA,WAFA1kB,EAAA+K,EAAAy5F,aAEA,CAEA,GADA9/E,EAAA,KACA,OAAA3Z,EAAAioF,MAAA,OAAAjoF,EAAAioF,MAAA7O,KACA,OACAz/D,EAAA3Z,EAAAioF,MAAArP,UACA,MAEA,OACAj/D,EAAA3Z,EAAAioF,MAAArP,UAEAorB,GAAAhkG,EAAA/K,EAAA0kB,GAGA,MAEA,OACA61C,EAAAxvD,EAAA44E,UACA,OAAA3jF,GAAA,EAAA+K,EAAA8nF,WAAAuP,GAAAr3F,EAAA9E,KAAA8E,EAAA05F,gBAAAlqC,EAAAghC,QACA,MAEA,OAGA,OAGA,QAGA,QAGA,QACA,MAEA,QACAt5F,EAAA,QAIA,IAAAkH,IAAA,QAAA4B,EAAAk0E,GAAAxtD,OAAA8oC,EAAA0kB,GAAA0E,UAAA,oBAAA54E,IAAAwvD,GAAAxvD,EAAAqnC,QAAAmoB,IACA,IAAApxD,IAAAwoG,GAAAjmG,GACAuzE,MAAA2lB,YAkCA,SAAAgC,KACA,OAAAgL,IAAAhP,GAAAgP,IACA,OAAAC,SAGA,SAAAM,GAAAzmG,EAAAzL,GACAyxG,GAAAJ,IAAA,EACA5lG,EAAA0mC,UAAAnyC,GAAAgC,EAAA,OACA,IAAAkH,EAAAuC,EAAA0mG,4BACA,IAAAjpG,GAAAlH,EAAA,OACAyJ,EAAA0mG,4BAAA,EACA,IAAApyG,EAAAC,EAAA6kG,eACA/5F,EAAA9K,EAAA4kG,oBASA,IA92EA,SAAAn5F,EAAAzL,GAEA,GADAyL,EAAA+5F,UAAA,EACA,IAAAxlG,EAAAyL,EAAAg6F,oBAAA,EAAAh6F,EAAAi6F,kBAAA,EAAAj6F,EAAAq6F,sBAAA,EAAAr6F,EAAAs6F,oBAAA,EAAAt6F,EAAAo6F,iBAAA,MAAkJ,CAClJ7lG,EAAAyL,EAAAo6F,mBAAAp6F,EAAAo6F,iBAAA,GACA,IAAA38F,EAAAuC,EAAAi6F,kBACA,IAAAx8F,MAAAlJ,EAAAyL,EAAAg6F,oBAAAh6F,EAAAi6F,kBAAA,EAAAj6F,EAAAg6F,oBAAAzlG,IAAAyL,EAAAg6F,oBAAAh6F,EAAAi6F,oBAEA,KADAx8F,EAAAuC,EAAAq6F,uBACAP,GAAA95F,EAAAzL,KAAAyL,EAAAs6F,qBAAAt6F,EAAAq6F,sBAAA,EAAAr6F,EAAAs6F,oBAAA,EAAAt6F,EAAAo6F,iBAAA,EAAAN,GAAA95F,EAAAzL,MAAAkJ,GAAAq8F,GAAA95F,EAAAzL,GAEA2lG,GAAA,EAAAl6F,GA61EA2mG,CAAA3mG,EAAAX,EAAA/K,EAAA+K,EAAA/K,GACAoxG,GAAAh/D,QAAA,KACApyC,OAAA,EACA,EAAAC,EAAA4yF,UAAA,OAAA5yF,EAAAykG,YAAAzkG,EAAAykG,WAAAE,WAAA3kG,EAAAD,EAAAC,EAAA0kG,aAAA3kG,EAAAC,EAAAD,EAAAC,EAAA0kG,YACAzC,GAAAtJ,GACAuJ,GAjqGA,WACA,IAAAz2F,EAAAiuF,KAEA,GAAAG,GAAApuF,GAAA,CACA,sBAAAA,EAAA,IAAAzL,EAAA,CACAuJ,MAAAkC,EAAA6uF,eACA9wF,IAAAiC,EAAA8uF,mBACM9uF,EAAA,CAEN,IAAAvC,GADAlJ,KAAAyL,EAAAo1D,gBAAA7gE,EAAAqyF,aAAAt6E,QACAyiF,cAAAx6F,EAAAw6F,eAEA,GAAAtxF,GAAA,IAAAA,EAAAuxF,WAAA,CACAz6F,EAAAkJ,EAAAwxF,WACA,IAAA36F,EAAAmJ,EAAAyxF,aACA7vF,EAAA5B,EAAA0xF,UACA1xF,IAAA2xF,YAEA,IACA76F,EAAA2qF,SAAA7/E,EAAA6/E,SACS,MAAA9N,GACT78E,EAAA,KACA,MAAAyL,EAGA,IAAA6uD,EAAA,EACA71C,GAAA,EACAq4B,GAAA,EACAzV,EAAA,EACA7zB,EAAA,EACA5M,EAAA6E,EACApL,EAAA,KAEAL,EAAA,OAAkB,CAClB,QAAA2+B,EACA/3B,IAAA5G,GAAA,IAAAD,GAAA,IAAA6G,EAAA+jF,WAAAlmE,EAAA61C,EAAAv6D,GACA6G,IAAAkE,GAAA,IAAA5B,GAAA,IAAAtC,EAAA+jF,WAAA7tC,EAAAwd,EAAApxD,GACA,IAAAtC,EAAA+jF,WAAArwB,GAAA1zD,EAAAo3F,UAAAx8F,QACA,QAAAm9B,EAAA/3B,EAAA0yF,aACAj5F,EAAAuG,EACAA,EAAA+3B,EAGA,OAAiB,CACjB,GAAA/3B,IAAA6E,EAAA,MAAAzL,EAGA,GAFAK,IAAAL,KAAAqnC,IAAAtnC,IAAA0kB,EAAA61C,GACAj6D,IAAAyK,KAAA0I,IAAAtK,IAAA4zC,EAAAwd,GACA,QAAA37B,EAAA/3B,EAAA6yF,aAAA,MAEAp5F,GADAuG,EAAAvG,GACA4jF,WAGAr9E,EAAA+3B,EAGA3+B,GAAA,IAAAykB,IAAA,IAAAq4B,EAAA,MACAvzC,MAAAkb,EACAjb,IAAAszC,QAEO98C,EAAA,KAEPA,KAAA,CACAuJ,MAAA,EACAC,IAAA,QAEGxJ,EAAA,KAEH,OACAg6F,YAAAvuF,EACAwuF,eAAAj6F,GA6lGAqyG,GACA1Z,IAAA,EAEA3Z,GAAAj/E,EAAa,OAAAi/E,IAAY,CACzBl0E,GAAA,EACA,IAAAwvD,OAAA,EAEA,IACAy3C,KACK,MAAAj1D,GACLhyC,GAAA,EAAAwvD,EAAAxd,EAGAhyC,IAAA,OAAAk0E,IAAAh9E,EAAA,OAAA2tG,GAAA3wB,GAAA1kB,GAAA,OAAA0kB,WAAA2lB,aAGA,IAAA3lB,GAAAj/E,EAAa,OAAAi/E,IAAY,CACzBl0E,GAAA,EACAwvD,OAAA,EAEA,IACAw3C,KACK,MAAAh1D,GACLhyC,GAAA,EAAAwvD,EAAAxd,EAGAhyC,IAAA,OAAAk0E,IAAAh9E,EAAA,OAAA2tG,GAAA3wB,GAAA1kB,GAAA,OAAA0kB,WAAA2lB,aASA,IANA5K,GAAAmI,IACAA,GAAA,KACAvJ,KAAAsJ,GACAA,GAAA,KACAx2F,EAAA0mC,QAAAnyC,EAEAg/E,GAAAj/E,EAAa,OAAAi/E,IAAY,CACzBl0E,GAAA,EACAwvD,OAAA,EAEA,IACA23C,GAAAxmG,EAAAvC,GACK,MAAA4zC,GACLhyC,GAAA,EAAAwvD,EAAAxd,EAGAhyC,IAAA,OAAAk0E,IAAAh9E,EAAA,OAAA2tG,GAAA3wB,GAAA1kB,GAAA,OAAA0kB,WAAA2lB,aAGA,UAAA5kG,GAAA,OAAA2xG,GAAA,CACA,IAAAjtF,EAjGA,SAAAhZ,EAAAzL,GACA4xG,GAAAD,GAAAD,GAAA,KACA,IAAAxoG,EAAA4uE,GACAA,IAAA,EAEA,GACA,OAAA93E,EAAA4yF,UAAA,CACA,IAAA7yF,GAAA,EACA+K,OAAA,EAEA,IACA,IAAAwvD,EAAAt6D,EACA4vG,GAAA1G,GAAAP,GAAAruC,GACAs1C,GAAAjH,GAAAM,GAAA3uC,GACO,MAAA71C,GACP1kB,GAAA,EAAA+K,EAAA2Z,EAGA1kB,GAAA4vG,GAAA3vG,EAAA8K,GAGA9K,IAAA2kG,iBACG,OAAA3kG,GAEH83E,GAAA5uE,EAEA,KADAA,EAAAuC,EAAAo5F,iBACA2L,GAAA/kG,EAAAvC,GACAg2E,IAAApH,IAAAw6B,GAAA,gBAsEA/0E,KAAA,KAAA9xB,EAAA1L,GACA4xG,GAAA35D,EAAAu6D,yBAAAv6D,EAAAw6D,wBAAA,WACA,OAAA/P,GAAAh+E,KAEAmtF,GAAAntF,EAGA4sF,GAAAI,IAAA,EACA,oBAAA1N,OAAA/jG,EAAA0jF,WACAx6E,EAAAlJ,EAAA6kG,eAGA,KADA7kG,GADAA,IAAA4kG,qBACA17F,EAAAlJ,EAAAkJ,KACA6nG,GAAA,MA8rBA,SAAAtlG,EAAAzL,GACAyL,EAAAo5F,eAAA7kG,EACAyL,EAAAgnG,aAAA,KA/rBAC,CAAAjnG,EAAAzL,GAGA,SAAA2yG,GAAAlnG,GACA,OAAS,CACT,IAAAzL,EAAAyL,EAAA8mF,UACArpF,EAAAuC,EAAA84E,OACAxkF,EAAA0L,EAAAunF,QAEA,aAAAvnF,EAAAmnF,WAAA,CACAlU,GAAAjzE,EAEAA,EAAA,CACA,IAAAX,EAAA9K,EAEAs6D,EAAAkkB,GACA/5D,GAFAzkB,EAAAyL,GAEA24F,aAEA,OAAApkG,EAAAkkF,KACA,OAGA,QACA,MAEA,QACA,OACA,MAEA,OACAlG,GAAAh+E,EAAAgG,OAAAu9F,KACA,MAEA,OACAiF,KACAhF,MACA/+E,EAAAzkB,EAAA0jF,WACAqpB,iBAAAtoF,EAAAoG,QAAApG,EAAAsoF,eAAAtoF,EAAAsoF,eAAA,MACA,OAAAjiG,GAAA,OAAAA,EAAAioF,QAAAgZ,GAAA/rG,KAAA4yF,YAAA,GACAuc,GAAAnvG,GACA,MAEA,OACA0oG,GAAA1oG,GACA,IAAA88C,EAAAurD,GAAAD,GAAAj2D,SAEA,GADAmoB,EAAAt6D,EAAAgG,KACA,OAAA8E,GAAA,MAAA9K,EAAA0jF,UAAA0rB,GAAAtkG,EAAA9K,EAAAs6D,EAAA71C,EAAAq4B,GAAAhyC,EAAA0mB,MAAAxxB,EAAAwxB,MAAAxxB,EAAA4yF,WAAA,UAA8G,GAAAnuE,EAAA,CAC9G,IAAA4iB,EAAAghE,GAAAtwB,GAAA5lC,SAEA,GAAA45D,GAAA/rG,GAAA,CAEA8K,GADA2Z,EAAAzkB,GACA0jF,UACA,IAAAlwE,EAAAiR,EAAAze,KACAY,EAAA6d,EAAA+/E,cACAnkG,EAAAy8C,EAMA,OALAhyC,EAAAg5E,GAAAr/D,EACA3Z,EAAAi5E,GAAAn9E,EACA0zD,OAAA,EACAxd,EAAAtpC,GAGA,aACA,aACA+pE,GAAA,OAAAzyE,GACA,MAEA,YACA,YACA,IAAA0I,EAAA,EAA+BA,EAAAuyE,GAAAvkF,OAAegS,IAC9C+pE,GAAAwI,GAAAvyE,GAAA1I,GAGA,MAEA,aACAyyE,GAAA,QAAAzyE,GACA,MAEA,UACA,YACA,WACAyyE,GAAA,QAAAzyE,GACAyyE,GAAA,OAAAzyE,GACA,MAEA,WACAyyE,GAAA,QAAAzyE,GACAyyE,GAAA,SAAAzyE,GACA,MAEA,cACAyyE,GAAA,SAAAzyE,GACA,MAEA,YACAkjF,GAAAljF,EAAAlE,GACA22E,GAAA,UAAAzyE,GACAg3F,GAAAzhG,EAAA,YACA,MAEA,aACAyK,EAAAgjF,cAAA,CACAsiB,cAAAxpG,EAAAkzE,UAEAyD,GAAA,UAAAzyE,GACAg3F,GAAAzhG,EAAA,YACA,MAEA,eACAm8F,GAAA1xF,EAAAlE,GAAA22E,GAAA,UAAAzyE,GAAAg3F,GAAAzhG,EAAA,YAMA,IAAAi6D,KAHAsnC,GAAA9kD,EAAAl2C,GACA4M,EAAA,KAEA5M,EACAA,EAAAtG,eAAAg6D,KAAAjzB,EAAAzgC,EAAA0zD,GAAA,aAAAA,EAAA,kBAAAjzB,EAAAv8B,EAAAq7E,cAAA9+C,IAAA7zB,EAAA,YAAA6zB,IAAA,kBAAAA,GAAAv8B,EAAAq7E,cAAA,GAAA9+C,IAAA7zB,EAAA,eAAA6zB,IAAAi7C,EAAAhiF,eAAAg6D,IAAA,MAAAjzB,GAAAy6D,GAAAzhG,EAAAi6D,IAGA,OAAAxd,GACA,YACAguC,GAAAhgF,GACAwjF,GAAAxjF,EAAAlE,GAAA,GACA,MAEA,eACAkkF,GAAAhgF,GACA4xF,GAAA5xF,GACA,MAEA,aACA,aACA,MAEA,QACA,oBAAAlE,EAAAiqB,UAAA/lB,EAAAwkG,QAAAtN,IAGA1nC,EAAA9mD,EACAiR,EAAA8/E,YAAAjqC,GACA71C,EAAA,OAAA61C,IACA20C,GAAAjvG,OACe,CACf4G,EAAA5G,EACAK,EAAAi6D,EACAxvD,EAAA2Z,EACAjR,EAAA,IAAAspC,EAAA6tC,SAAA7tC,IAAA+jB,cACAx5B,IAAA21D,GAAAC,OAAA51D,EAAA+1D,GAAA/8F,IACAgnC,IAAA21D,GAAAC,KAAA,WAAA58F,IAAAyK,EAAA0I,EAAAyE,cAAA,QAAAwlF,UAAA,qBAAAjqF,EAAA1I,EAAA4yF,YAAA5yF,EAAAwuF,aAAA,kBAAAxuF,EAAA+2F,GAAAruF,IAAAyE,cAAA5X,EAAA,CACAwhG,GAAA/2F,EAAA+2F,MACiBruF,IAAAyE,cAAA5X,GAAA,WAAAA,MAAAmT,EAAA1I,EAAAgvE,SAAAz5E,EAAAy5E,UAAA,EAAAhvE,EAAA1E,OAAA/F,EAAA+F,KAAA0E,EAAA1E,QAAAoN,IAAAo/F,gBAAAvrE,EAAAhnC,IACjByK,EAAA0I,GACAswE,GAAAl9E,EACAkE,EAAAi5E,GAAAt/D,EACAyqF,GAAApkG,EAAA9K,GAAA,MACAK,EAAAyK,EAGA,IAAA6zB,EAAAme,EACA+/B,EAAAvzD,GAHA9V,EAAA8mD,EACA1zD,EAAA6d,GAIA,OAAAjR,GACA,aACA,aACA+pE,GAAA,OAAAl9E,GACAy8C,EAAAl2C,EACA,MAEA,YACA,YACA,IAAAk2C,EAAA,EAA+BA,EAAAipC,GAAAvkF,OAAes7C,IAC9CygC,GAAAwI,GAAAjpC,GAAAz8C,GAGAy8C,EAAAl2C,EACA,MAEA,aACA22E,GAAA,QAAAl9E,GACAy8C,EAAAl2C,EACA,MAEA,UACA,YACA,WACA22E,GAAA,QAAAl9E,GACAk9E,GAAA,OAAAl9E,GACAy8C,EAAAl2C,EACA,MAEA,WACA22E,GAAA,QAAAl9E,GACAk9E,GAAA,SAAAl9E,GACAy8C,EAAAl2C,EACA,MAEA,cACA22E,GAAA,SAAAl9E,GACAy8C,EAAAl2C,EACA,MAEA,YACAonF,GAAA3tF,EAAAuG,GACAk2C,EAAA6wC,GAAAttF,EAAAuG,GACA22E,GAAA,UAAAl9E,GACAyhG,GAAAnjE,EAAA,YACA,MAEA,aACAme,EAAAm/C,GAAA57F,EAAAuG,GACA,MAEA,aACAvG,EAAAytF,cAAA,CACAsiB,cAAAxpG,EAAAkzE,UAEAh9B,EAAAn2C,EAAA,GAA4BC,EAAA,CAC5BhG,WAAA,IAEA28E,GAAA,UAAAl9E,GACAyhG,GAAAnjE,EAAA,YACA,MAEA,eACA69D,GAAAn8F,EAAAuG,GACAk2C,EAAAw/C,GAAAj8F,EAAAuG,GACA22E,GAAA,UAAAl9E,GACAyhG,GAAAnjE,EAAA,YACA,MAEA,QACAme,EAAAl2C,EAGAg7F,GAAApuF,EAAAspC,GACAzV,OAAA,EACA,IAAAlU,EAAA3f,EACAg4B,EAAAnrC,EACAq8E,EAAA5/B,EAEA,IAAAzV,KAAAq1C,EACA,GAAAA,EAAAp8E,eAAA+mC,GAAA,CACA,IAAA+Q,EAAAskC,EAAAr1C,GACA,UAAAA,EAAAy5D,GAAAt1D,EAAA4M,GAAA,4BAAA/Q,EAAA,OAAA+Q,MAAAkqD,YAAA,IAAA/E,GAAA/xD,EAAA4M,GAAA,aAAA/Q,EAAA,kBAAA+Q,GAAA,aAAAjlB,GAAA,KAAAilB,IAAA0lD,GAAAtyD,EAAA4M,GAAA,kBAAAA,GAAA0lD,GAAAtyD,EAAA,GAAA4M,GAAA,mCAAA/Q,GAAA,6BAAAA,GAAA,cAAAA,IAAAi7C,EAAAhiF,eAAA+mC,GAAA,MAAA+Q,GAAA0pD,GAAAnjE,EAAA0I,GAAA,MAAA+Q,GAAAi1C,GAAA7hD,EAAAnE,EAAA+Q,EAAAykC,IAIA,OAAArpE,GACA,YACAs3E,GAAAzqF,GACAiuF,GAAAjuF,EAAAuG,GAAA,GACA,MAEA,eACAkkF,GAAAzqF,GACAq8F,GAAAr8F,GACA,MAEA,aACA,MAAAuG,EAAAhG,OAAAP,EAAAi8B,aAAA,WAAAoxD,GAAA9mF,EAAAhG,QACA,MAEA,cACAk8C,EAAAz8C,GACAy5E,WAAAlzE,EAAAkzE,SAEA,OADAz5E,EAAAuG,EAAAhG,OACAu7F,GAAAr/C,IAAAl2C,EAAAkzE,SAAAz5E,GAAA,SAAAuG,EAAAinF,cAAAsO,GAAAr/C,IAAAl2C,EAAAkzE,SAAAlzE,EAAAinF,cAAA,GACA,MAEA,QACA,oBAAA/wC,EAAAjsB,UAAAxwB,EAAAivG,QAAAtN,KAGAv9E,EAAA09E,GAAA7nC,EAAA71C,KAAAwqF,GAAAjvG,GACAA,EAAA0jF,UAAA54E,EAGA,OAAA9K,EAAAwxB,MAAAxxB,EAAA4yF,WAAA,UACa,OAAA5yF,EAAA0jF,WAAA1hF,EAAA,OACb,MAEA,OACA8I,GAAA,MAAA9K,EAAA0jF,UAAA2rB,GAAAvkG,EAAA9K,EAAA8K,EAAA05F,cAAA//E,IAAA,kBAAAA,IAAA,OAAAzkB,EAAA0jF,WAAA1hF,EAAA,QAAA8I,EAAAu9F,GAAAD,GAAAj2D,SAAAk2D,GAAAtwB,GAAA5lC,SAAA45D,GAAA/rG,IAAAs6D,GAAA71C,EAAAzkB,GAAA0jF,UAAA54E,EAAA2Z,EAAA+/E,cAAAlqC,EAAAwpB,GAAAr/D,KAAA61C,EAAA0jC,YAAAlzF,IAAAmkG,GAAAjvG,KAAAs6D,EAAAt6D,GAAAykB,GAAA,IAAA3Z,EAAA6/E,SAAA7/E,IAAA+1D,eAAAgyC,eAAApuF,IAAAq/D,GAAA9jF,EAAAs6D,EAAAopB,UAAAj/D,IACA,MAEA,QACA,MAEA,QAGA,GAFAA,EAAAzkB,EAAAskG,cAEA,QAAAtkG,EAAA4yF,WAAA,CACA5yF,EAAA6kG,eAAAvqC,EACAokB,GAAA1+E,EACA,MAAAyL,EAGAgZ,EAAA,OAAAA,EACA61C,EAAA,OAAAxvD,GAAA,OAAAA,EAAAw5F,cACA,OAAAx5F,IAAA2Z,GAAA61C,IAAA,QAAAxvD,IAAAioF,MAAAC,WAAA,QAAAl2C,EAAA98C,EAAA0kG,cAAA1kG,EAAA0kG,YAAA55F,IAAA65F,WAAA7nD,IAAA98C,EAAA0kG,YAAA1kG,EAAAykG,WAAA35F,IAAA65F,WAAA,MAAA75F,EAAA8nF,UAAA,KACAnuE,GAAA61C,KAAAt6D,EAAA4yF,WAAA,GACA,MAEA,OAGA,OAGA,QACA,MAEA,OACA4V,KACA2G,GAAAnvG,GACA,MAEA,QACA+tG,GAAA/tG,GACA,MAEA,OAGA,QACA,MAEA,QACAg+E,GAAAh+E,EAAAgG,OAAAu9F,KACA,MAEA,QACA,MAEA,QACAvhG,EAAA,OAGA08E,GAAA,KAKA,GAFA1+E,EAAAyL,EAEA,IAAA+yE,IAAA,IAAAx+E,EAAA4kG,oBAAA,CAGA,IAFAngF,EAAA,EAEA61C,EAAAt6D,EAAA+yF,MAAyB,OAAAz4B,IACzBxvD,EAAAwvD,EAAAuqC,gBAAApgF,MAAA3Z,IAAAgyC,EAAAwd,EAAAsqC,qBAAAngF,MAAAq4B,GAAAwd,IAAA04B,QAGAhzF,EAAA4kG,oBAAAngF,EAGA,UAAAi6D,GAAA,OAAAA,GACA,OAAAx1E,GAAA,UAAAA,EAAA0pF,aAAA,OAAA1pF,EAAAw7F,cAAAx7F,EAAAw7F,YAAAj5F,EAAAi5F,aAAA,OAAAj5F,EAAAg5F,aAAA,OAAAv7F,EAAAu7F,aAAAv7F,EAAAu7F,WAAAE,WAAAl5F,EAAAi5F,aAAAx7F,EAAAu7F,WAAAh5F,EAAAg5F,YAAA,EAAAh5F,EAAAmnF,YAAA,OAAA1pF,EAAAu7F,WAAAv7F,EAAAu7F,WAAAE,WAAAl5F,EAAAvC,EAAAw7F,YAAAj5F,EAAAvC,EAAAu7F,WAAAh5F,QACK,CAEL,WADAA,EAAAwlG,GAAAxlG,IACA,OAAAA,EAAAmnF,WAAA,KAAAnnF,EACA,OAAAvC,MAAAw7F,YAAAx7F,EAAAu7F,WAAA,KAAAv7F,EAAA0pF,WAAA,MAGA,UAAA7yF,EAAA,OAAAA,EACA,UAAAmJ,EAA0B,MAA1BuC,EAAAvC,EAGA,YAGA,SAAA4pG,GAAArnG,GACA,IAAAzL,EAAAmtG,GAAA1hG,EAAA8mF,UAAA9mF,EAAA+yE,IAIA,OAHA/yE,EAAA+4F,cAAA/4F,EAAA24F,aACA,OAAApkG,MAAA2yG,GAAAlnG,IACA0lG,GAAAh/D,QAAA,KACAnyC,EAGA,SAAA+yG,GAAAtnG,EAAAzL,GACAqxG,IAAArvG,EAAA,OACA2kG,KACA0K,IAAA,EACA,IAAAnoG,EAAAgoG,GAAA/+D,QACA++D,GAAA/+D,QAAAg4D,GACA,IAAApqG,EAAA0L,EAAAw6F,2BACAlmG,IAAAy+E,IAAA/yE,IAAA6lG,IAAA,OAAA5yB,KAAAmzB,KAAArzB,GAAAz+E,EAAA2+E,GAAAqmB,IAAAuM,GAAA7lG,GAAA0mC,QAAA,MAAA1mC,EAAA0mG,4BAAA,GAGA,IAFA,IAAArnG,GAAA,IAEA,CACA,IACA,GAAA9K,EAAA,KAAmB,OAAA0+E,KAAAs0B,MACnBt0B,GAAAo0B,GAAAp0B,SACO,KAAY,OAAAA,IACnBA,GAAAo0B,GAAAp0B,IAEK,MAAAhC,GACL,GAAAoxB,GAAAD,GAAAD,GAAA,KAAAxD,KAAA,OAAA1rB,GAAA5zE,GAAA,EAAA8lG,GAAAl0B,OAA+D,CAC/D,OAAAgC,IAAA18E,EAAA,OACA,IAAAs4D,EAAAokB,GACAj6D,EAAA61C,EAAAiqB,OACA,UAAA9/D,EAAsC,CACtChZ,EAAA,CACA,IAAAqxC,EAAArxC,EACA47B,EAAA5iB,EACAjR,EAAA8mD,EACA1zD,EAAA81E,EAKA,GAJAj4D,EAAA+5D,GACAhrE,EAAAo/E,WAAA,KACAp/E,EAAAkxF,YAAAlxF,EAAAixF,WAAA,KAEA,OAAA79F,GAAA,kBAAAA,GAAA,oBAAAA,EAAA2zB,KAAA,CACA,IAAAl6B,EAAAuG,EACAA,EAAAygC,EACA,IAAA1I,GAAA,EACAk+C,GAAA,EAEA,GACA,QAAAj2E,EAAAs9E,IAAA,CACA,IAAA/wD,EAAAvsB,EAAA2rF,UAEA,UAAAp/D,GAAA,QAAAA,IAAAmxE,eAAA,CACAznB,EAAA,eAAA1pD,EAAA85E,YACA,MAIA,kBADA95E,EAAAvsB,EAAAw9F,aAAA6O,eACA,GAAA9/E,EAAAwL,EAAA,IAA+D,IAAAA,GAAAxL,EAAAwL,OAAAxL,IAG/DvsB,IAAA29E,aACe,OAAA39E,GAEfA,EAAAygC,EAEA,GAGA,IAFAlU,EAAA,KAAAvsB,EAAAs9E,OAAA/wD,OAAA,IAAAvsB,EAAA49F,cAAA0I,UAAA,OAAAtmG,EAAA09F,eAEAnxE,EAAA,CAIA,GAFA,QADAkU,EAAAzgC,EAAA29F,eACAl9D,EAAA,IAAA07D,KAAAnkC,IAAAv+D,GAAAuG,EAAA29F,YAAAl9D,KAAAu3B,IAAAv+D,GAEA,OAAAuG,EAAAk7C,MAAA,CACAl7C,EAAAgsF,WAAA,GACAp/E,EAAAo/E,YAAA,KACA,IAAAp/E,EAAA0wE,MAAA,OAAA1wE,EAAA++E,UAAA/+E,EAAA0wE,IAAA,KAAAz/D,EAAA+hF,GAAA,aAAAtiB,IAAA6iB,GAAAH,GAAApzF,EAAAiR,KACAjR,EAAAqxF,eAAA,WACA,MAAAp5F,EAIA47B,EAAA5iB,EACA,IAAA+mB,GAFAh4B,EAAAspC,GAEAo2D,UACA,OAAA1nE,KAAAh4B,EAAA0/F,UAAA,IAAAzC,GAAAt9E,EAAA,IAAA4vE,IAAAv3D,EAAA/6B,IAAApQ,EAAA8yB,SAAA,KAAAA,EAAAqY,EAAA9rB,IAAArf,MAAA8yB,EAAA,IAAA4vE,IAAAv3D,EAAA/6B,IAAApQ,EAAA8yB,IACAA,EAAAotB,IAAAlZ,KAAAlU,EAAAyrC,IAAAv3B,GAAA7zB,EAAA2/F,GAAA51E,KAAA,KAAA/pB,EAAAnT,EAAAgnC,GAAAhnC,EAAAk6B,KAAA/mB,OACA,IAAAmrB,EAAAme,EAAA,iBAAA+/B,MAAA,eAAAmpB,GAAAlpD,EAAAr4B,IAAA,KAAAq4B,EAAA+/B,EAAAl+C,GACA,GAAAme,GAAAy0D,GAAAz0D,IAAAy0D,GAAAz0D,GACAl2C,EAAAgsF,WAAA,KACAhsF,EAAAi+F,eAAApgF,EACA,MAAAhZ,EAGA7E,IAAA29E,aACe,OAAA39E,GAEfA,EAAArC,OAAA6nF,GAAA54E,EAAAxN,OAAA,6MAAAqmF,GAAA74E,IAGAg+F,IAAA,EACA5qG,EAAAooG,GAAApoG,EAAA4M,GACAspC,EAAAzV,EAEA,GACA,OAAAyV,EAAAonC,KACA,OACApnC,EAAA81C,WAAA,KACA91C,EAAA+nD,eAAApgF,EAEAkqF,GAAA7xD,EADAr4B,EAAAksF,GAAA7zD,EAAAl2C,EAAA6d,IAEA,MAAAhZ,EAEA,OACA,GAAAkzB,EAAA/3B,EAAAi2E,EAAA//B,EAAA92C,KAAAwN,EAAAspC,EAAA4mC,UAAA,QAAA5mC,EAAA81C,aAAA,oBAAA/V,EAAA1B,0BAAA,OAAA3nE,GAAA,oBAAAA,EAAAs9F,oBAAA,OAAAC,QAAAxwD,IAAA/sC,KAAA,CACAspC,EAAA81C,WAAA,KACA91C,EAAA+nD,eAAApgF,EAEAkqF,GAAA7xD,EADAr4B,EAAAosF,GAAA/zD,EAAAne,EAAAla,IAEA,MAAAhZ,GAKAqxC,IAAAynC,aACa,OAAAznC,GAGb4hC,GAAAi0B,GAAAr4C,GACA,SAhGAxvD,GAAA,EAAA8lG,GAAAl0B,IAqGA,MAOA,GAJA20B,IAAA,EACAH,GAAA/+D,QAAAjpC,EACA4kG,GAAAD,GAAAD,GAAA,KACAxD,KACAt/F,EAAAwmG,GAAA,KAAA7lG,EAAAgnG,aAAA,UAA0C,UAAA/zB,GAAAjzE,EAAAgnG,aAAA,SAA2C,CAKrF,GAHA,QADAvpG,EAAAuC,EAAA0mC,QAAAogD,YACAvwF,EAAA,OACAsvG,GAAA,KAEAE,GAAA,CAKA,GAJA1mG,EAAAW,EAAAi6F,kBACAprC,EAAA7uD,EAAAs6F,oBACAthF,EAAAhZ,EAAAo6F,iBAEA,IAAA/6F,KAAA/K,GAAA,IAAAu6D,KAAAv6D,GAAA,IAAA0kB,KAAA1kB,EAGA,OAFA6lG,GAAAn6F,EAAA1L,QACAqzG,GAAA3nG,EAAAvC,EAAAnJ,EAAA0L,EAAAo5F,gBAAA,GAIA,IAAAp5F,EAAA+5F,UAAAxlG,EAKA,OAJAyL,EAAA+5F,UAAA,EACAzlG,EAAA0L,EAAAw6F,2BAAAlmG,EACAC,EAAAyL,EAAAo5F,eAAA,gBACAuO,GAAA3nG,EAAAvC,EAAAnJ,EAAAC,GAAA,GAKAA,IAAA,IAAAuxG,IAAA3L,GAAAn6F,EAAA1L,IAAAC,EAAA,eAAAgmG,GAAAv6F,EAAA1L,KAAAwxG,QAAAvxG,KAAA,eAAAumG,MAAAvmG,EAAAuxG,GAAAvxG,EAAAozG,GAAA3nG,EAAAvC,EAAAnJ,EAAA0L,EAAAo5F,eAAA,EAAA7kG,EAAA,EAAAA,KAAAyL,EAAA0mG,4BAAApyG,EAAA0L,EAAAgnG,aAAAvpG,IAIA,SAAAymG,GAAAlkG,EAAAzL,GACA,QAAAkJ,EAAAuC,EAAA84E,OAAwB,OAAAr7E,GAAY,CACpC,OAAAA,EAAAg7E,KACA,OACA,IAAAnkF,EAAAmJ,EAAAw6E,UAEA,uBAAAx6E,EAAAlD,KAAAm1E,0BAAA,oBAAAp7E,EAAA+wG,oBAAA,OAAAC,QAAAxwD,IAAAxgD,IAKA,OAFA6mG,GAAA19F,EADAuC,EAAAolG,GAAA3nG,EADAuC,EAAAujG,GAAAhvG,EAAAyL,GACA,kBAEAo7F,GAAA39F,EAAA,YAIA,MAEA,OAKA,OAFA09F,GAAA19F,EADAuC,EAAAklG,GAAAznG,EADAuC,EAAAujG,GAAAhvG,EAAAyL,GACA,kBAEAo7F,GAAA39F,EAAA,YAIAA,IAAAq7E,OAGA,IAAA94E,EAAAy4E,MAAA0iB,GAAAn7F,EAAAvC,EAAAynG,GAAAllG,EAAAvC,EAAA8lG,GAAAhvG,EAAAyL,GAAA,aAAAo7F,GAAAp7F,EAAA,aAGA,SAAAg7F,GAAAh7F,EAAAzL,GACA,IAAAkJ,EAAA8uC,EAAAq7D,mCACAtzG,OAAA,EACA,UAAAC,EAAA8hD,MAAA/hD,EAAA,gBAAyC,GAAAsxG,KAAAI,GAAA1xG,EAAAy+E,OAA0B,CACnE,OAAAt1E,GACA,KAAA8uC,EAAAs7D,2BACAvzG,EAAA,WACA,MAEA,KAAAi4C,EAAAu7D,8BACAxzG,EAAA,8BAAA0L,EAAA,WACA,MAEA,KAAAusC,EAAAw6D,wBACAzyG,EAAA,8BAAA0L,EAAA,YACA,MAEA,KAAAusC,EAAAw7D,qBACA,KAAAx7D,EAAAy7D,sBACA1zG,EAAA,EACA,MAEA,QACAiC,EAAA,OAGA,OAAAsvG,IAAAvxG,IAAAy+E,MAAAz+E,EAGA,OADAmJ,IAAA8uC,EAAAu7D,gCAAA,IAAAG,IAAA3zG,EAAA2zG,SAAA3zG,GACAA,EAGA,SAAAozG,GAAA1nG,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAA0L,EAAAynG,UACA,OAAAnzG,KAAAopB,OAAAnpB,GACA,OAAAsxG,IAAA9yB,KAAAt1E,EAAAooG,GAAA,MAAwCtxG,EAAAyL,EAAAq6F,sBAAA/lG,EAAA0L,EAAAs6F,oBAAA,IAAA/lG,GAAAkJ,GAAAlJ,GAAAkJ,GAAAnJ,IACxC0L,EAAA+5F,UAAA,GAEA,KADAxlG,EAAAyL,EAAAo6F,mBACA7lG,EAAAkJ,KAAAuC,EAAAo6F,iBAAA38F,GACAy8F,GAAAz8F,EAAAuC,GAEA,KADAvC,EAAAuC,EAAAo5F,iBACA2L,GAAA/kG,EAAAvC,KAaA,SAAAC,GAAAsC,EAAAzL,GACAyL,EAAAo5F,eAAA7kG,IAAAyL,EAAAo5F,eAAA7kG,GACA,IAAAkJ,EAAAuC,EAAA8mF,UACA,OAAArpF,KAAA27F,eAAA7kG,IAAAkJ,EAAA27F,eAAA7kG,GACA,IAAAD,EAAA0L,EAAA84E,OACAz5E,EAAA,KACA,UAAA/K,GAAA,IAAA0L,EAAAy4E,IAAAp5E,EAAAW,EAAAi4E,eAAiD,KAAW,OAAA3jF,GAAY,CAKxE,GAJAmJ,EAAAnJ,EAAAwyF,UACAxyF,EAAA6kG,oBAAA5kG,IAAAD,EAAA6kG,oBAAA5kG,GACA,OAAAkJ,KAAA07F,oBAAA5kG,IAAAkJ,EAAA07F,oBAAA5kG,GAEA,OAAAD,EAAAwkF,QAAA,IAAAxkF,EAAAmkF,IAAA,CACAp5E,EAAA/K,EAAA2jF,UACA,MAGA3jF,IAAAwkF,OAEA,OAAAz5E,EAGA,SAAA+7F,GAAAp7F,EAAAzL,GAEA,QADAyL,EAAAtC,GAAAsC,EAAAzL,OACAqxG,IAAA,IAAA7yB,IAAAx+E,EAAAw+E,IAAAqzB,KAAAtM,GAAA95F,EAAAzL,GAAAqxG,KAAAI,IAAAH,KAAA7lG,GAAA+kG,GAAA/kG,IAAAo5F,gBAAA8O,GAAAC,KAAAD,GAAA,EAAA3xG,EAAA,SAGA,SAAA6xG,GAAApoG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,OAAAktC,EAAAu6D,yBAAAv6D,EAAAs7D,2BAAA,WACA,OAAA7nG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,KAIA,IAAAgpG,GAAA,KACAxyB,GAAA,KACAyyB,GAAA,EACAC,QAAA,EACAl8B,IAAA,EACAm8B,GAAA,KACA1yB,GAAA,EACAmyB,GAAA,EACAQ,IAAA,EACAC,GAAA,KACAj1B,IAAA,EACAk1B,IAAA,EACAC,GAAA,KACA1oC,GAAA3zB,EAAAs8D,eACAC,GAAA,YAAA5oC,GAAA,MACA6oC,GAAAD,GACAX,GAAA,GACAD,GAAA,EACAc,GAAA,KAEA,SAAAhpC,KACA8oC,GAAA,aAAAv8D,EAAAs8D,eAAA3oC,IAAA,MAGA,SAAAN,GAAA5/D,EAAAzL,GACA,OAAA+zG,GAAA,CACA,GAAA/zG,EAAA+zG,GAAA,OACA,OAAAC,IAAAh8D,EAAA4qD,wBAAAoR,IAGAD,GAAA/zG,EACAyL,EAAAusC,EAAAs8D,eAAA3oC,GACAqoC,GAAAh8D,EAAA0qD,0BAAAn3B,GAAA,CACA7lD,QAAA,eAAA1lB,GAAAyL,IAIA,SAAA2nG,GAAA3nG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACAW,EAAAo5F,eAAA9kG,EACA,IAAA+K,GAAAkoG,KAAA,EAAAloG,IAAAW,EAAAipG,cAAAnS,GAGA,SAAA92F,EAAAzL,EAAAkJ,GACAuC,EAAA0mG,4BAAAjpG,EACAuC,EAAAgnG,aAAAzyG,EACAyrE,KACA+oC,GAAAD,GACAI,GAAAlpG,EAAAvC,IARAq0B,KAAA,KAAA9xB,EAAAzL,EAAAkJ,GAAA4B,KAAAW,EAAA0mG,4BAAAjpG,EAAAuC,EAAAgnG,aAAAzyG,GAgBA,SAAAumG,KACA,OAAAzuB,GAAA08B,IACAI,KACA,IAAArzB,IAAA,IAAAA,KAAA9V,KAAA+oC,GAAAD,IACAC,IAGA,SAAAhE,GAAA/kG,EAAAzL,GACA,OAAAyL,EAAAopG,mBAAAppG,EAAAo5F,eAAA7kG,EAAA,OAAAshF,IAAAwyB,GAAAxyB,GAAA71E,IAAAopG,kBAAAppG,IAAA61E,MAAAuzB,kBAAAppG,GAAAopG,kBAAAf,IAAA9zG,EAAAyL,EAAAo5F,iBAAAp5F,EAAAo5F,eAAA7kG,GACA83E,KAAAoH,GAAAk1B,KAAAH,GAAAxoG,EAAA81E,GAAA,WAAAuzB,GAAArpG,EAAA,6BAAAzL,EAAAsyG,GAAA,eAAAjnC,GAAA5/D,EAAAzL,IAGA,SAAA40G,KACA,IAAAnpG,EAAA,EACAzL,EAAA,KACA,UAAAshF,GAAA,QAAAp4E,EAAAo4E,GAAAvhF,EAAA+zG,GAAyC,OAAA/zG,GAAY,CACrD,IAAA+K,EAAA/K,EAAA8kG,eAEA,OAAA/5F,EAAA,CAGA,IAFA,OAAA5B,GAAA,OAAAo4E,KAAAt/E,EAAA,OAEAjC,MAAA80G,kBAAA,CACAf,GAAAxyB,GAAAvhF,EAAA80G,kBAAA,KACA,MACO,GAAA90G,IAAA+zG,MAAAhpG,EAAA/K,EAAA80G,kBAAAvzB,GAAAuzB,kBAAA/pG,EAAA/K,EAAA80G,kBAAA,SAAsG,IAAA90G,IAAAuhF,GAAA,EAC7GA,GAAAp4E,GACA2rG,kBAAAf,GACA/zG,EAAA80G,kBAAA,KACA,MACO3rG,EAAA2rG,kBAAA90G,EAAA80G,kBAAA90G,EAAA80G,kBAAA,KAEP90G,EAAAmJ,EAAA2rG,sBACK,CAEL,GADA/pG,EAAAW,MAAAX,EAAA9K,EAAAD,GACAA,IAAAuhF,GAAA,MACA,gBAAA71E,EAAA,MACAvC,EAAAnJ,EACAA,IAAA80G,mBAGAZ,GAAAj0G,EACAuhF,GAAA91E,EAGA,IAAAspG,IAAA,EAEA,SAAA/B,KACA,QAAA+B,MAAA/8D,EAAAg9D,yBAAAD,IAAA,GAGA,SAAAxpC,KACA,IACA,IAAAynC,MAAA,OAAAc,GAAA,CACAroC,KACA,IAAAhgE,EAAAqoG,GAEA,GACA,IAAA9zG,EAAAyL,EAAAo5F,eACA,IAAA7kG,GAAAu0G,IAAAv0G,IAAAyL,EAAAw6F,2BAAAsO,IACA9oG,IAAAopG,wBACOppG,IAAAqoG,IAGPxB,GAAA,MACG,QACHyC,IAAA,GAIA,SAAAzC,GAAA7mG,EAAAzL,GAEA,GADA40G,KACA50G,EAAA,IAAAyrE,KAAA+oC,GAAAD,GAA4B,OAAAN,IAAA,IAAA1yB,IAAA91E,GAAA81E,MAAAwzB,IAAAR,GAAAhzB,KAC5BuzB,GAAAb,GAAA1yB,GAAAgzB,GAAAhzB,IAAAqzB,KAAAnpC,KAAA+oC,GAAAD,QACG,KAAY,OAAAN,IAAA,IAAA1yB,IAAA91E,GAAA81E,IACfuzB,GAAAb,GAAA1yB,IAAA,GAAAqzB,KAMA,GAJA50G,IAAA+zG,GAAA,EAAAC,GAAA,MACA,IAAAzyB,IAAAlW,GAAA4oC,GAAA1yB,IACAoyB,GAAA,EACAc,GAAA,KACA,OAAAJ,GAAA,IAAA5oG,EAAA4oG,MAAA,KAAAr0G,EAAA,EAAiDA,EAAAyL,EAAAjK,OAAcxB,IAAA,CAC/D,IAAAkJ,EAAAuC,EAAAzL,GAEA,IACAkJ,EAAA+rG,cACK,MAAAl1G,GACLm0G,SAAA,EAAAC,GAAAp0G,IAGA,GAAAm0G,GAAA,MAAAzoG,EAAA0oG,MAAA,KAAAD,IAAA,EAAAzoG,EAGA,SAAAkpG,GAAAlpG,EAAAzL,GACA83E,IAAA91E,EAAA,OACAiyG,GAAAxoG,EACA81E,GAAAvhF,EACA80G,GAAArpG,EAAAzL,GAAA,GACAsyG,GAAA,eAGA,SAAAwC,GAAArpG,EAAAzL,EAAAkJ,GAIA,GAHA4uE,IAAA91E,EAAA,OACA81E,IAAA,EAEA5uE,EAAA,CACA,IAAAnJ,EAAA0L,EAAAgnG,aACA,OAAA1yG,EAAAm1G,GAAAzpG,EAAA1L,EAAAC,IAAAyL,EAAAgnG,aAAA,WAAA1yG,EAAA0L,EAAAipG,iBAAAjpG,EAAAipG,eAAA,EAAAlS,GAAAziG,IAAAgzG,GAAAtnG,EAAAvC,GAAA,QAAAnJ,EAAA0L,EAAAgnG,gBAAAO,KAAAvnG,EAAAgnG,aAAA1yG,EAAAm1G,GAAAzpG,EAAA1L,EAAAC,UACG,QAAAD,EAAA0L,EAAAgnG,cAAAyC,GAAAzpG,EAAA1L,EAAAC,IAAAyL,EAAAgnG,aAAA,WAAA1yG,EAAA0L,EAAAipG,iBAAAjpG,EAAAipG,eAAA,EAAAlS,GAAAziG,IAAAgzG,GAAAtnG,EAAAvC,GAAA,QAAAnJ,EAAA0L,EAAAgnG,eAAAyC,GAAAzpG,EAAA1L,EAAAC,IAEH83E,IAAA,EAGA,SAAAo9B,GAAAzpG,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAA0L,EAAA0pG,WAEA,UAAAp1G,KAAAq1G,iBAAAlsG,IAAA,OAAAmrG,MAAA,CAAAt0G,GAAAs0G,GAAA1rG,KAAA5I,KAAAs1G,QAGA,OAFA5pG,EAAAgnG,aAAAzyG,OACAyL,EAAAo5F,eAAA,GAIAp5F,EAAAgnG,aAAA,KACAhnG,IAAAgpG,GAAAd,MAAAc,GAAAhpG,EAAAkoG,GAAA,GACA37D,EAAAu6D,yBAAAv6D,EAAAs7D,2BAAA,WACApB,GAAAzmG,EAAAzL,KAIA,SAAA4wG,GAAAnlG,GACA,OAAAwoG,IAAAjyG,EAAA,OACAiyG,GAAApP,eAAA,EACAqP,SAAA,EAAAC,GAAA1oG,GAGA,SAAA6pG,GAAA7pG,EAAAzL,GACA,IAAAkJ,EAAAg2E,GACAA,IAAA,EAEA,IACA,OAAAzzE,EAAAzL,GACG,SACHk/E,GAAAh2E,IAAA4uE,IAAAw6B,GAAA,gBAIA,SAAAiD,GAAA9pG,EAAAzL,GACA,GAAAk/E,KAAAk1B,GAAA,CACAA,IAAA,EAEA,IACA,OAAA3oG,EAAAzL,GACK,QACLo0G,IAAA,GAIA,OAAA3oG,EAAAzL,GAGA,SAAAw1G,GAAA/pG,EAAAzL,EAAAkJ,GACAg2E,IAAApH,IAAA,IAAA47B,KAAApB,GAAAoB,IAAA,GAAAA,GAAA,GACA,IAAA3zG,EAAAm/E,GACAA,IAAA,EAEA,IACA,OAAAlnC,EAAAu6D,yBAAAv6D,EAAAu7D,8BAAA,WACA,OAAA9nG,EAAAzL,EAAAkJ,KAEG,SACHg2E,GAAAn/E,IAAA+3E,IAAAw6B,GAAA,gBAIA,SAAAmD,GAAAhqG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,IAAAwvD,EAAAt6D,EAAAmyC,QAEA1mC,EAAA,GAAAvC,EAAA,CAGAlJ,EAAA,CACA,IAAA2yF,GAHAzpF,IAAAo9F,sBAGA,IAAAp9F,EAAAg7E,KAAAliF,EAAA,OACA,IAAAyiB,EAAAvb,EAEA,GACA,OAAAub,EAAAy/D,KACA,OACAz/D,IAAAi/D,UAAA74D,QACA,MAAA7qB,EAEA,OACA,GAAAg+E,GAAAv5D,EAAAze,MAAA,CACAye,IAAAi/D,UAAAmgB,0CACA,MAAA7jG,GAKAykB,IAAA8/D,aACO,OAAA9/D,GAEPziB,EAAA,OACAyiB,OAAA,EAGA,OAAAvb,EAAAg7E,IAAA,CACA,IAAApnC,EAAA5zC,EAAAlD,KAEA,GAAAg4E,GAAAlhC,GAAA,CACA5zC,EAAAw6F,GAAAx6F,EAAA4zC,EAAAr4B,GACA,MAAAhZ,GAIAvC,EAAAub,OACGvb,EAAAg6F,GAaH,OAXA,OAAAljG,EAAA6qB,QAAA7qB,EAAA6qB,QAAA3hB,EAAAlJ,EAAA+sG,eAAA7jG,EACAlJ,EAAA8K,GACAA,EAAA07F,GAAAzmG,IACA2mG,QAAA,CACAvL,QAAA1vF,GAGA,QADAzL,OAAA,IAAAA,EAAA,KAAAA,KACA8K,EAAAoM,SAAAlX,GACA2mG,KACAC,GAAAtsC,EAAAxvD,GACA+7F,GAAAvsC,EAAAv6D,GACAA,EAGA,SAAA21G,GAAAjqG,EAAAzL,EAAAkJ,EAAAnJ,GACA,IAAA+K,EAAA9K,EAAAmyC,QAGA,OAAAsjE,GAAAhqG,EAAAzL,EAAAkJ,EADA4B,EAAA27F,GADAF,KACAz7F,GACA/K,GAGA,SAAA41G,GAAAlqG,GAEA,KADAA,IAAA0mC,SACA4gD,MAAA,YAEA,OAAAtnF,EAAAsnF,MAAA7O,KACA,OAGA,QACA,OAAAz4E,EAAAsnF,MAAArP,WAmDA,SAAAkyB,GAAAnqG,GACA,IAAAzL,EAAA,8BAAAumG,KAAA,YACAvmG,GAAAoxG,KAAApxG,EAAAoxG,GAAA,GACAvxG,KAAAu1G,gBAAAhE,GAAApxG,EACAH,KAAAg2G,MAAApqG,EACA5L,KAAAi2G,WAAAj2G,KAAAk2G,MAAA,KACAl2G,KAAAm2G,aAAAn2G,KAAAo2G,cAAA,EACAp2G,KAAAq2G,UAAA,KACAr2G,KAAAw1G,QAAA,EA8DA,SAAAc,KACAt2G,KAAAi2G,WAAA,KACAj2G,KAAAu2G,YAAA,EACAv2G,KAAAw2G,UAAAx2G,KAAAw2G,UAAA94E,KAAA19B,MAuBA,SAAAy2G,GAAA7qG,EAAAzL,EAAAkJ,GAEAuC,EAAA,CACA0mC,QAFAnyC,EAAAi+E,GAAA,YAAAj+E,EAAA,KAGAy4F,cAAAhtF,EACA45F,gBAAA,KACA6N,UAAA,KACAzN,oBAAA,EACAC,kBAAA,EACAI,sBAAA,EACAC,oBAAA,EACAF,iBAAA,EACAL,UAAA,EACA2M,4BAAA,EACAM,aAAA,KACAiC,eAAA,EACA7pF,QAAA,KACAkiF,eAAA,KACAQ,QAAArkG,EACA+8F,2BAAA,EACApB,eAAA,EACAsQ,WAAA,KACAN,kBAAA,MAEAh1G,KAAA02G,cAAAv2G,EAAA0jF,UAAAj4E,EA8CA,SAAA+qG,GAAA/qG,GACA,SAAAA,GAAA,IAAAA,EAAAk/E,UAAA,IAAAl/E,EAAAk/E,UAAA,KAAAl/E,EAAAk/E,WAAA,IAAAl/E,EAAAk/E,UAAA,iCAAAl/E,EAAAuyF,YAkBA,SAAAyY,GAAAhrG,EAAAzL,EAAAkJ,EAAAnJ,EAAA+K,GACA,IAAAwvD,EAAApxD,EAAAgnG,oBAEA,GAAA51C,EAAA,CACA,uBAAAxvD,EAAA,CACA,IAAA2Z,EAAA3Z,EAEAA,EAAA,WACA,IAAAW,EAAAkqG,GAAAr7C,EAAAi8C,eACA9xF,EAAA9iB,KAAA8J,IAIA,MAAAA,EAAA6uD,EAAAo8C,kCAAAjrG,EAAAzL,EAAA8K,GAAAwvD,EAAA9tC,OAAAxsB,EAAA8K,OACG,CAGH,GAFAwvD,EAAApxD,EAAAgnG,oBAvBA,SAAAzkG,EAAAzL,GAEA,GADAA,YAAAyL,EAAA,IAAAA,EAAAk/E,SAAAl/E,EAAA4uF,gBAAA5uF,EAAA6tF,WAAA,WAAAt5F,EAAA2qF,WAAA3qF,EAAA22G,aAAA,qBACA32G,EAAA,QAAAkJ,EAAqBA,EAAAuC,EAAAsyF,WACrBtyF,EAAAiyF,YAAAx0F,GAEA,WAAAotG,GAAA7qG,GAAA,EAAAzL,GAkBA42G,CAAA1tG,EAAAnJ,GAEA,oBAAA+K,EAAA,CACA,IAAAgyC,EAAAhyC,EAEAA,EAAA,WACA,IAAAW,EAAAkqG,GAAAr7C,EAAAi8C,eACAz5D,EAAAn7C,KAAA8J,IAIA8pG,GAAA,WACA,MAAA9pG,EAAA6uD,EAAAo8C,kCAAAjrG,EAAAzL,EAAA8K,GAAAwvD,EAAA9tC,OAAAxsB,EAAA8K,KAIA,OAAA6qG,GAAAr7C,EAAAi8C,eAGA,SAAAM,GAAAprG,EAAAzL,GACA,IAAAkJ,EAAA,EAAAlI,UAAAQ,aAAA,IAAAR,UAAA,GAAAA,UAAA,QAEA,OADAw1G,GAAAx2G,IAAAgC,EAAA,OA5QA,SAAAyJ,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAA,EAAAiB,UAAAQ,aAAA,IAAAR,UAAA,GAAAA,UAAA,QACA,OACA46E,SAAA2P,GACA7pF,IAAA,MAAA3B,EAAA,QAAAA,EACA0sB,SAAAhhB,EACAgtF,cAAAz4F,EACAslG,eAAAp8F,GAsQA4tG,CAAArrG,EAAAzL,EAAA,KAAAkJ,GAlQAigF,GAAA,SAAA19E,EAAAzL,EAAAkJ,GACA,OAAAlJ,GACA,YAIA,GAHAouF,GAAA3iF,EAAAvC,GACAlJ,EAAAkJ,EAAA8d,KAEA,UAAA9d,EAAAlD,MAAA,MAAAhG,EAAA,CACA,IAAAkJ,EAAAuC,EAAmBvC,EAAA+6E,YACnB/6E,IAAA+6E,WAKA,IAFA/6E,IAAA6tG,iBAAA,cAAAzoD,KAAAC,UAAA,GAAAvuD,GAAA,mBAEAA,EAAA,EAAmBA,EAAAkJ,EAAA1H,OAAcxB,IAAA,CACjC,IAAAD,EAAAmJ,EAAAlJ,GAEA,GAAAD,IAAA0L,GAAA1L,EAAAi3G,OAAAvrG,EAAAurG,KAAA,CACA,IAAAlsG,EAAAu5E,EAAAtkF,GACA+K,GAAA9I,EAAA,MACAmpF,GAAAprF,GACAquF,GAAAruF,EAAA+K,KAKA,MAEA,eACA2xF,GAAAhxF,EAAAvC,GACA,MAEA,aACA,OAAAlJ,EAAAkJ,EAAAtI,QAAAu7F,GAAA1wF,IAAAvC,EAAA4wE,SAAA95E,GAAA,KAeA41G,GAAAn1G,UAAA+rB,OAAA,SAAA/gB,GACA5L,KAAAw1G,QAAArzG,EAAA,OACAnC,KAAAm2G,cAAA,EACAn2G,KAAAq2G,UAAAzqG,EACA,IAAAzL,EAAAH,KAAAg2G,MAAAU,cACArtG,EAAArJ,KAAAu1G,gBACAr1G,EAAA,IAAAo2G,GAEA,OADAV,GAAAhqG,EAAAzL,EAAA,KAAAkJ,EAAAnJ,EAAAs2G,WACAt2G,GAGA61G,GAAAn1G,UAAA85B,KAAA,SAAA9uB,GACA,GAAA5L,KAAAo2G,aAAAxqG,QAA6B,CAC7B,IAAAzL,EAAAH,KAAAi2G,WACA,OAAA91G,MAAAH,KAAAi2G,WAAA,IACA91G,EAAA2I,KAAA8C,KAIAmqG,GAAAn1G,UAAAw2G,OAAA,WACA,IAAAxrG,EAAA5L,KAAAg2G,MAAAU,cACAv2G,EAAAyL,EAAA0pG,WAGA,GAFAt1G,KAAAw1G,QAAA,OAAAr1G,GAAAgC,EAAA,OAEAnC,KAAAm2G,aAAA,CACA,IAAA9sG,EAAArJ,KAAAu1G,gBAEA,GAAAp1G,IAAAH,KAAA,CACAA,KAAAm2G,eAAA9sG,EAAArJ,KAAAu1G,gBAAAp1G,EAAAo1G,gBAAAv1G,KAAA2sB,OAAA3sB,KAAAq2G,YAEA,QAAAn2G,EAAA,KAAA+K,EAAA9K,EAA+B8K,IAAAjL,MAC/BE,EAAA+K,MAAAirG,MAGA,OAAAh2G,GAAAiC,EAAA,OACAjC,EAAAg2G,MAAAjrG,EAAAirG,MACAl2G,KAAAk2G,MAAA/1G,EACAyL,EAAA0pG,WAAAt1G,KAGAA,KAAAw1G,QAAA,EACAV,GAAAlpG,EAAAvC,GACAlJ,EAAAH,KAAAk2G,MACAl2G,KAAAk2G,MAAA,KAEA,QADA/1G,EAAAyL,EAAA0pG,WAAAn1G,IACAA,EAAAg2G,cAAAh2G,EAAAwsB,OAAAxsB,EAAAk2G,gBACGr2G,KAAAk2G,MAAA,KAAAl2G,KAAAw1G,QAAA,GAGHO,GAAAn1G,UAAAw0G,YAAA,WACA,IAAAp1G,KAAAo2G,aAAA,CACAp2G,KAAAo2G,cAAA,EACA,IAAAxqG,EAAA5L,KAAAi2G,WACA,UAAArqG,EAAA,QAAAzL,EAAA,EAAmCA,EAAAyL,EAAAjK,OAAcxB,KACjD,EAAAyL,EAAAzL,QAWAm2G,GAAA11G,UAAA85B,KAAA,SAAA9uB,GACA,GAAA5L,KAAAu2G,WAAA3qG,QAA2B,CAC3B,IAAAzL,EAAAH,KAAAi2G,WACA,OAAA91G,MAAAH,KAAAi2G,WAAA,IACA91G,EAAA2I,KAAA8C,KAIA0qG,GAAA11G,UAAA41G,UAAA,WACA,IAAAx2G,KAAAu2G,WAAA,CACAv2G,KAAAu2G,YAAA,EACA,IAAA3qG,EAAA5L,KAAAi2G,WACA,UAAArqG,EAAA,QAAAzL,EAAA,EAAmCA,EAAAyL,EAAAjK,OAAcxB,IAAA,CACjD,IAAAkJ,EAAAuC,EAAAzL,GACA,oBAAAkJ,GAAAlH,EAAA,MAAAkH,GACAA,OAgCAotG,GAAA71G,UAAA+rB,OAAA,SAAA/gB,EAAAzL,GACA,IAAAkJ,EAAArJ,KAAA02G,cACAx2G,EAAA,IAAAo2G,GAIA,OAFA,QADAn2G,OAAA,IAAAA,EAAA,KAAAA,IACAD,EAAAw6B,KAAAv6B,GACA01G,GAAAjqG,EAAAvC,EAAA,KAAAnJ,EAAAs2G,WACAt2G,GAGAu2G,GAAA71G,UAAAy2G,QAAA,SAAAzrG,GACA,IAAAzL,EAAAH,KAAA02G,cACArtG,EAAA,IAAAitG,GAIA,OAFA,QADA1qG,OAAA,IAAAA,EAAA,KAAAA,IACAvC,EAAAqxB,KAAA9uB,GACAiqG,GAAA,KAAA11G,EAAA,KAAAkJ,EAAAmtG,WACAntG,GAGAotG,GAAA71G,UAAAi2G,kCAAA,SAAAjrG,EAAAzL,EAAAkJ,GACA,IAAAnJ,EAAAF,KAAA02G,cACAzrG,EAAA,IAAAqrG,GAIA,OAFA,QADAjtG,OAAA,IAAAA,EAAA,KAAAA,IACA4B,EAAAyvB,KAAArxB,GACAwsG,GAAA11G,EAAAD,EAAA0L,EAAAX,EAAAurG,WACAvrG,GAGAwrG,GAAA71G,UAAA02G,YAAA,WACA,IAAA1rG,EAAA,IAAAmqG,GAAA/1G,MACAG,EAAAyL,EAAA2pG,gBACAlsG,EAAArJ,KAAA02G,cACAx2G,EAAAmJ,EAAAisG,WACA,UAAAp1G,EAAAmJ,EAAAisG,WAAA1pG,IAAAsqG,MAAA,SAAmD,CACnD,IAAA7sG,EAAA,KAAkB,OAAAnJ,KAAAq1G,iBAAAp1G,GAClBkJ,EAAAnJ,MAAAg2G,MAGAtqG,EAAAsqG,MAAAh2G,EACA,OAAAmJ,MAAA6sG,MAAAtqG,GAEA,OAAAA,GAOAg+E,GAAA6rB,GACA5rB,GAAA8rB,GAEA7rB,GAAA,WACA7R,IAAA,IAAA47B,KAAApB,GAAAoB,IAAA,GAAAA,GAAA,IAmDA,IAAA0D,GAAA,CACAC,aAAAR,GACAS,YAAA,SAAA7rG,GACA,SAAAA,EAAA,YACA,OAAAA,EAAAk/E,SAAA,OAAAl/E,EACA,IAAAzL,EAAAyL,EAAA66F,oBAIA,YAHA,IAAAtmG,IAAA,oBAAAyL,EAAA+gB,OAAAxqB,EAAA,OAAAA,EAAA,MAAA/B,OAAA0R,KAAAlG,KAEAA,EAAA,QADAA,EAAAqnF,GAAA9yF,IACA,KAAAyL,EAAAi4E,WAGA6pB,QAAA,SAAA9hG,EAAAzL,EAAAkJ,GAEA,OADAstG,GAAAx2G,IAAAgC,EAAA,OACAy0G,GAAA,KAAAhrG,EAAAzL,GAAA,EAAAkJ,IAEAsjB,OAAA,SAAA/gB,EAAAzL,EAAAkJ,GAEA,OADAstG,GAAAx2G,IAAAgC,EAAA,OACAy0G,GAAA,KAAAhrG,EAAAzL,GAAA,EAAAkJ,IAEAquG,oCAAA,SAAA9rG,EAAAzL,EAAAkJ,EAAAnJ,GAGA,OAFAy2G,GAAAttG,IAAAlH,EAAA,QACA,MAAAyJ,QAAA,IAAAA,EAAA66F,sBAAAtkG,EAAA,MACAy0G,GAAAhrG,EAAAzL,EAAAkJ,GAAA,EAAAnJ,IAEAy3G,uBAAA,SAAA/rG,GAEA,OADA+qG,GAAA/qG,IAAAzJ,EAAA,QACAyJ,EAAAykG,sBAAAqF,GAAA,WACAkB,GAAA,UAAAhrG,GAAA,aACAA,EAAAykG,oBAAA,UAEK,IAELuH,sBAAA,WACA,OAAAZ,GAAA91G,WAAA,EAAAC,YAEA02G,wBAAApC,GACAqC,4BAAAnC,GACAoC,UAAA,SAAAnsG,EAAAzL,GACA83E,IAAA91E,EAAA,OACA,IAAAkH,EAAAg2E,GACAA,IAAA,EAEA,IACA,OAAA20B,GAAApoG,EAAAzL,GACK,QACLk/E,GAAAh2E,EAAAopG,GAAA,iBAGAuF,oBAkBA,SAAApsG,EAAAzL,GAEA,OADAw2G,GAAA/qG,IAAAzJ,EAAA,6BACA,IAAAs0G,GAAA7qG,GAAA,QAAAzL,IAAA,IAAAA,EAAAutG,UAnBAuK,yBAAA,SAAArsG,GACA,IAAAzL,EAAAk/E,GACAA,IAAA,EAEA,IACA20B,GAAApoG,GACK,SACLyzE,GAAAl/E,IAAA83E,IAAAw6B,GAAA,iBAGAnxB,mDAAA,CACA42B,OAAA,CAAA5zB,EAAAC,EAAAC,EAAAf,EAAAE,yBAAAtB,EAAA4C,EAAA,SAAAr5E,GACAq3E,EAAAr3E,EAAAo5E,IACK0E,GAAAC,GAAAqP,GAAAjV,MASL,SAAAn4E,GACA,IAAAzL,EAAAyL,EAAAusG,yBA71HA,SAAAvsG,GACA,wBAAA6uE,+BAAA,SACA,IAAAt6E,EAAAs6E,+BACA,GAAAt6E,EAAAi4G,aAAAj4G,EAAAk4G,cAAA,SAEA,IACA,IAAAhvG,EAAAlJ,EAAAm4G,OAAA1sG,GACAs4F,GAAAE,GAAA,SAAAx4F,GACA,OAAAzL,EAAAo4G,kBAAAlvG,EAAAuC,KAEAu4F,GAAAC,GAAA,SAAAx4F,GACA,OAAAzL,EAAAq4G,qBAAAnvG,EAAAuC,KAEG,MAAA1L,MAi1HHu4G,CAAA3xG,EAAA,GAAgB8E,EAAA,CAChB8sG,cAAA,KACAC,qBAAAptB,GAAAhK,uBACAq3B,wBAAA,SAAAhtG,GAEA,eADAA,EAAAqnF,GAAArnF,IACA,KAAAA,EAAAi4E,WAEAs0B,wBAAA,SAAAvsG,GACA,OAAAzL,IAAAyL,GAAA,SAVA,CAaC,CACDusG,wBAAAh0B,EACA00B,WAAA,EACAryF,QAAA,SACAsyF,oBAAA,cAGA,IAAAC,GAAA,CACA33G,QAAAm2G,IAEAyB,GAAAD,IAAAxB,IAAAwB,GACAn5G,EAAAC,QAAAm5G,GAAA53G,SAAA43G,iCCh0MAp5G,EAAAC,QAAmBC,EAAQ,oCCH3B,SAAA+D,GAUAzD,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAEA,IAAAb,EAAA,KACA+K,GAAA,EACA2Z,EAAA,EACAjR,GAAA,EACA6zB,GAAA,EACAzgC,GAAA,EACAD,GAAA,EAEA,SAAAtG,IACA,IAAAuG,EAAA,CACA,IAAA6E,EAAA1L,EAAA8kG,eACAl+F,EAAAyxC,IAAAzxC,GAAA,EAEAmyG,EAAAn6E,EAAAlzB,IAIA,SAAAixE,IACA,IAAAjxE,EAAA1L,EACAC,EAAAD,EAAAuuC,KACA,GAAAvuC,IAAAC,EAAAD,EAAA,SAAwB,CACxB,IAAAmJ,EAAAnJ,EAAA4wE,SACA5wE,EAAAmJ,EAAAolC,KAAAtuC,EACAA,EAAA2wE,SAAAznE,EAEAuC,EAAA6iC,KAAA7iC,EAAAklE,SAAA,KACAznE,EAAAuC,EAAAyL,SACAlX,EAAAyL,EAAAo5F,eACAp5F,IAAAstG,cACA,IAAAz+C,EAAA71C,EACAgmB,EAAApD,EACA5iB,EAAAhZ,EACA47B,EAAArnC,EAEA,IACA,IAAA88C,EAAA5zC,IACG,QACHub,EAAA61C,EAAAjzB,EAAAoD,EAGA,uBAAAqS,EAAA,GAAAA,EAAA,CACA5lC,SAAA4lC,EACAi8D,cAAAttG,EACAo5F,eAAA7kG,EACAsuC,KAAA,KACAqiC,SAAA,MACG,OAAA5wE,IAAA+8C,EAAAxO,KAAAwO,EAAA6zB,SAAA7zB,MAA0C,CAC7C5zC,EAAA,KACAuC,EAAA1L,EAEA,GACA,GAAA0L,EAAAo5F,gBAAA7kG,EAAA,CACAkJ,EAAAuC,EACA,MAGAA,IAAA6iC,WACK7iC,IAAA1L,GAEL,OAAAmJ,IAAAnJ,EAAAmJ,IAAAnJ,MAAA+8C,EAAAz8C,MACAL,EAAAkJ,EAAAynE,UACAriC,KAAAplC,EAAAynE,SAAA7zB,EACAA,EAAAxO,KAAAplC,EACA4zC,EAAA6zB,SAAA3wE,GAIA,SAAAmzB,IACA,QAAA3f,GAAA,OAAAzT,GAAA,IAAAA,EAAAg5G,cAAA,CACAnyG,GAAA,EAEA,IACA,GACA81E,UACO,OAAA38E,GAAA,IAAAA,EAAAg5G,eACF,QACLnyG,GAAA,SAAA7G,EAAAM,IAAAsG,GAAA,IAKA,SAAAg4B,EAAAlzB,GACA7E,GAAA,EACA,IAAA5G,EAAA8K,EACAA,EAAAW,EAEA,IACA,GAAAA,EAAA,KAAiB,OAAA1L,GAAY,CAC7B,IAAAmJ,EAAAxJ,EAAA40G,eAEA,KAAAv0G,EAAA8kG,gBAAA37F,GAIO,MAHP,GACAwzE,UACS,OAAA38E,KAAA8kG,gBAAA37F,QAEJ,UAAAnJ,EACL,GACA28E,UACO,OAAA38E,IAAA4sC,KAEJ,QACH/lC,GAAA,EAAAkE,EAAA9K,EAAA,OAAAD,EAAAM,IAAAsG,GAAA,EAAAwsB,KAIA,IAKA8pD,EACAK,EANAt7E,EAAA2Q,KACA1Q,EAAA,oBAAAijB,2BAAA,EACA69C,EAAA,oBAAA59C,+BAAA,EACA03D,EAAA,oBAAAm8B,iDAAA,EACAl8B,EAAA,oBAAAm8B,+CAAA,EAIA,SAAA17B,EAAA9xE,GACAwxE,EAAAJ,EAAA,SAAA78E,GACA+iE,EAAAua,GACA7xE,EAAAzL,KAEAs9E,EAAAr7E,EAAA,WACA66E,EAAAG,GACAxxE,EAAA/L,EAAA40G,iBACG,KAGH,qBAAA4E,aAAA,oBAAAA,YAAAtmG,IAAA,CACA,IAAA8qE,EAAAw7B,YAEAx5G,EAAA40G,aAAA,WACA,OAAA52B,EAAA9qE,YAEClT,EAAA40G,aAAA,WACD,OAAAtyG,EAAA4Q,OAGA,IAAAkmG,EACA1gE,EACAzL,EACAgxC,EAAA,KAIA,GAFA,qBAAA5lE,OAAA4lE,EAAA5lE,OAAA,qBAAArU,IAAAi6E,EAAAj6E,GAEAi6E,KAAAw7B,WAAA,CACA,IAAAzuE,EAAAizC,EAAAw7B,WACAL,EAAApuE,EAAA,GACA0N,EAAA1N,EAAA,GACAiC,EAAAjC,EAAA,GACAhrC,EAAA40G,aAAA5pE,EAAA,QACC,wBAAA3yB,QAAA,oBAAAqhG,eAAA,CACD,IAAAr7B,EAAA,KACAC,EAAA,SAAAvyE,GACA,UAAAsyE,EAAA,IACAA,EAAAtyE,GACK,QACLsyE,EAAA,OAIA+6B,EAAA,SAAArtG,GACA,OAAAsyE,EAAA74D,WAAA4zF,EAAA,EAAArtG,IAAAsyE,EAAAtyE,EAAAyZ,WAAA84D,EAAA,QAGA5lC,EAAA,WACA2lC,EAAA,MAGApxC,EAAA,WACA,cAEC,CACD,qBAAAE,UAAA,oBAAAgwC,GAAAhwC,QAAAnR,MAAA,+JAAAohD,GAAAjwC,QAAAnR,MAAA,2IACA,IAAAuiD,EAAA,KACA1zC,GAAA,EACAC,GAAA,EACAutC,GAAA,EACAsG,GAAA,EACAC,EAAA,EACA9yC,EAAA,GACAizC,EAAA,GAEA9xC,EAAA,WACA,OAAA2xC,GAAA5+E,EAAA40G,gBAGA,IAAA51B,EAAA,IAAA06B,eACA56B,EAAAE,EAAA26B,MAEA36B,EAAA46B,MAAAC,UAAA,WACAhvE,GAAA,EACA,IAAA9+B,EAAAwyE,EACAj+E,EAAAwqC,EACAyzC,EAAA,KACAzzC,GAAA,EACA,IAAAthC,EAAAxJ,EAAA40G,eACAh6C,GAAA,EACA,MAAAgkB,EAAAp1E,EAAA,WAAAlJ,MAAAkJ,GAIA,OAHA6uE,OAAA,EAAAwF,EAAAyB,IACAf,EAAAxyE,OACA++B,EAAAxqC,GAHAs6D,GAAA,EAOA,UAAA7uD,EAAA,CACA4yE,GAAA,EAEA,IACA5yE,EAAA6uD,GACO,QACP+jB,GAAA,KAKA,IAAAW,EAAA,SAAAA,EAAAvzE,GACA,UAAAwyE,EAAA,CACAV,EAAAyB,GACA,IAAAh/E,EAAAyL,EAAA6yE,EAAAG,EACAz+E,EAAAy+E,GAAAjzC,EAAAizC,GAAA,EAAAz+E,MAAA,GAAAy+E,EAAAz+E,EAAAwrC,IAAAxrC,GAAAwrC,EAAAxrC,EACAs+E,EAAA7yE,EAAAgzE,EACAl0C,OAAA,EAAAi0C,EAAAg7B,iBAAA,SACKzhC,GAAA,GAGL+gC,EAAA,SAAArtG,EAAAzL,GACAi+E,EAAAxyE,EACA++B,EAAAxqC,EACAq+E,GAAA,EAAAr+E,EAAAw+E,EAAAg7B,iBAAA,GAAAzhC,OAAA,EAAAwF,EAAAyB,KAGA5mC,EAAA,WACA6lC,EAAA,KACA1zC,GAAA,EACAC,GAAA,GAIA9qC,EAAA4zG,2BAAA,EACA5zG,EAAA6zG,8BAAA,EACA7zG,EAAA8yG,wBAAA,EACA9yG,EAAA+zG,sBAAA,EACA/zG,EAAA8zG,qBAAA,EAEA9zG,EAAA6yG,yBAAA,SAAA9mG,EAAAzL,GACA,OAAAyL,GACA,OACA,OACA,OACA,OACA,OACA,MAEA,QACAA,EAAA,EAGA,IAAAvC,EAAAub,EACA61C,EAAA9mD,EACAiR,EAAAhZ,EACA+H,EAAA9T,EAAA40G,eAEA,IACA,OAAAt0G,IACG,QACHykB,EAAAvb,EAAAsK,EAAA8mD,EAAAnnC,MAIAzzB,EAAA+5G,cAAA,SAAAhuG,GACA,OAAAgZ,GACA,OACA,OACA,OACA,IAAAzkB,EAAA,EACA,MAEA,QACAA,EAAAykB,EAGA,IAAAvb,EAAAub,EACA61C,EAAA9mD,EACAiR,EAAAzkB,EACAwT,EAAA9T,EAAA40G,eAEA,IACA,OAAA7oG,IACG,QACHgZ,EAAAvb,EAAAsK,EAAA8mD,EAAAnnC,MAIAzzB,EAAAgjG,0BAAA,SAAAj3F,EAAAzL,GACA,IAAAkJ,GAAA,IAAAsK,IAAA9T,EAAA40G,eACA,qBAAAt0G,GAAA,OAAAA,GAAA,kBAAAA,EAAA0lB,QAAA1lB,EAAAkJ,EAAAlJ,EAAA0lB,aAA8F,OAAAjB,GAC9F,OACAzkB,EAAAkJ,GAAA,EACA,MAEA,OACAlJ,EAAAkJ,EAAA,IACA,MAEA,OACAlJ,EAAAkJ,EAAA,WACA,MAEA,OACAlJ,EAAAkJ,EAAA,IACA,MAEA,QACAlJ,EAAAkJ,EAAA,IASA,GAPAuC,EAAA,CACAyL,SAAAzL,EACAstG,cAAAt0F,EACAogF,eAAA7kG,EACAsuC,KAAA,KACAqiC,SAAA,MAEA,OAAA5wE,IAAA0L,EAAA6iC,KAAA7iC,EAAAklE,SAAAllE,EAAApL,QAAmD,CACnD6I,EAAA,KACA,IAAAoxD,EAAAv6D,EAEA,GACA,GAAAu6D,EAAAuqC,eAAA7kG,EAAA,CACAkJ,EAAAoxD,EACA,MAGAA,IAAAhsB,WACKgsB,IAAAv6D,GAEL,OAAAmJ,IAAAnJ,EAAAmJ,IAAAnJ,MAAA0L,EAAApL,MACAL,EAAAkJ,EAAAynE,UACAriC,KAAAplC,EAAAynE,SAAAllE,EACAA,EAAA6iC,KAAAplC,EACAuC,EAAAklE,SAAA3wE,EAEA,OAAAyL,GAGA/L,EAAAkjG,wBAAA,SAAAn3F,GACA,IAAAzL,EAAAyL,EAAA6iC,KAEA,UAAAtuC,EAAA,CACA,GAAAA,IAAAyL,EAAA1L,EAAA,SAA0B,CAC1B0L,IAAA1L,MAAAC,GACA,IAAAkJ,EAAAuC,EAAAklE,SACAznE,EAAAolC,KAAAtuC,EACAA,EAAA2wE,SAAAznE,EAEAuC,EAAA6iC,KAAA7iC,EAAAklE,SAAA,OAIAjxE,EAAAg6G,sBAAA,SAAAjuG,GACA,IAAAzL,EAAAykB,EACA,kBACA,IAAAvb,EAAAub,EACA61C,EAAA9mD,EACAiR,EAAAzkB,EACAwT,EAAA9T,EAAA40G,eAEA,IACA,OAAA7oG,EAAA1K,MAAAlB,KAAAmB,WACK,QACLyjB,EAAAvb,EAAAsK,EAAA8mD,EAAAnnC,OAKAzzB,EAAA2zG,iCAAA,WACA,OAAA5uF,GAGA/kB,EAAAs1G,qBAAA,WACA,OAAAlqG,IAAA,OAAA/K,KAAA8kG,eAAAx9D,GAAAsF,MAGAjtC,EAAAi6G,2BAAA,WACA,OAAA55G,GAAAM,KAGAX,EAAAk6G,wBAAA,aAEAl6G,EAAAm6G,8BAAA,WACA,OAAA95G,qDCvYA,IAAA+5G,EAA2Bn6G,EAAQ,KAEnC,SAAAo6G,KAEA,SAAAC,KAEAA,EAAAC,kBAAAF,EAEAt6G,EAAAC,QAAA,WACA,SAAAw6G,EAAA1hG,EAAA2hG,EAAAC,EAAAvkG,EAAAwkG,EAAAC,GACA,GAAAA,IAAAR,EAAA,CAKA,IAAAhmF,EAAA,IAAAvvB,MAAA,mLAEA,MADAuvB,EAAA9M,KAAA,sBACA8M,GAMA,SAAAymF,IACA,OAAAL,EAHAA,EAAAM,WAAAN,EASA,IAAAO,EAAA,CACA71G,MAAAs1G,EACAQ,KAAAR,EACAhjD,KAAAgjD,EACAn8C,OAAAm8C,EACA5nE,OAAA4nE,EACAh1G,OAAAg1G,EACAS,OAAAT,EACAU,IAAAV,EACAW,QAAAN,EACApf,QAAA+e,EACA/V,YAAA+V,EACAY,WAAAP,EACA/gB,KAAA0gB,EACAa,SAAAR,EACAS,MAAAT,EACAU,UAAAV,EACAW,MAAAX,EACAnsF,MAAAmsF,EACAY,eAAAnB,EACAC,kBAAAF,GAGA,OADAU,EAAAW,UAAAX,EACAA,iCCpDAh7G,EAAAC,QADA,6ECNAA,EAAA66E,YAAA,EAEA,IAAA8gC,EAAa17G,EAAQ,GAMrB27G,GAJA7gC,EAAA4gC,GAIA5gC,EAFiB96E,EAAQ,MAMzB47G,EAAA9gC,EAFW96E,EAAQ,MAMnB86E,EAFe96E,EAAQ,MAIvB,SAAA86E,EAAAh1E,GACA,OAAAA,KAAA80E,WAAA90E,EAAA,CACAxE,QAAAwE,GAIA,SAAA+d,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAhf,UAAA,qCAIA,SAAAyf,EAAAC,EAAAziB,GACA,IAAAyiB,EACA,UAAAC,eAAA,6DAGA,OAAA1iB,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyiB,EAAAziB,EAGA,SAAA6iB,EAAAvR,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAxO,UAAA,kEAAAwO,GAGAD,EAAAxS,UAAAR,OAAAS,OAAAwS,KAAAzS,UAAA,CACAD,YAAA,CACAI,MAAAqS,EACA1B,YAAA,EACAC,UAAA,EACApG,cAAA,KAGA8H,IAAAjT,OAAAC,eAAAD,OAAAC,eAAA+S,EAAAC,GAAAD,EAAA9S,UAAA+S,GAGA,IAAAsoG,EAAA,WAsKA97G,EAAAuB,QAhIA,SAAA4sF,EAAA4tB,GACA,IAAAC,EAAAC,EAEAC,EAAA,6BAAAL,EAAAt6G,WAAA,KAEAwqB,EAAA,SAAAowF,GAGA,SAAApwF,IACA,IAAAqwF,EAAA3pG,EAEAqR,EAAA3jB,KAAA4rB,GAEA,QAAAjU,EAAAxW,UAAAQ,OAAAiW,EAAArX,MAAAoX,GAAAE,EAAA,EAAqEA,EAAAF,EAAaE,IAClFD,EAAAC,GAAA1W,UAAA0W,GAGA,OAAAokG,EAAA3pG,EAAAgS,EAAAtkB,KAAAg8G,EAAAl6G,KAAAZ,MAAA86G,EAAA,CAAAh8G,MAAA6L,OAAA+L,KAAAtF,EAAAy6B,QA5CA,SAAAhsC,GACA,IAAAm7G,EAAA,GACA,OACAx1F,GAAA,SAAAqnB,GACAmuE,EAAApzG,KAAAilC,IAEAlnB,IAAA,SAAAknB,GACAmuE,IAAAlqG,OAAA,SAAAirC,GACA,OAAAA,IAAAlP,KAGAluB,IAAA,WACA,OAAA9e,GAEA6P,IAAA,SAAAurG,EAAAC,GACAr7G,EAAAo7G,EACAD,EAAA/pG,QAAA,SAAA47B,GACA,OAAAA,EAAAhtC,EAAAq7G,OA2BAC,CAAA/pG,EAAAqG,MAAA5X,OAAAujB,EAAAhS,EAAA2pG,GAqCA,OAhDAt3F,EAAAiH,EAAAowF,GAcApwF,EAAAhrB,UAAAkjG,gBAAA,WACA,IAAAjqF,EAEA,OAAAA,EAAA,IAAsBkiG,GAAA/7G,KAAA+sC,QAAAlzB,GAGtB+R,EAAAhrB,UAAA2mG,0BAAA,SAAA+U,GACA,GAAAt8G,KAAA2Y,MAAA5X,QAAAu7G,EAAAv7G,MAAA,CACA,IAAAw7G,EAAAv8G,KAAA2Y,MAAA5X,MACAo7G,EAAAG,EAAAv7G,MACAq7G,OAAA,IAjEAj6G,EAmEAo6G,MAnEAn6G,EAmEA+5G,GAjEA,IAAAh6G,GAAA,EAAAA,IAAA,EAAAC,EAEAD,OAAAC,OAgEAg6G,EAAA,GAEAA,EAAA,oBAAAR,IAAAW,EAAAJ,GAAAR,EAQA,KAFAS,GAAA,IAGAp8G,KAAA+sC,QAAAn8B,IAAA0rG,EAAAv7G,MAAAq7G,IA/EA,IAAAj6G,EAAAC,GAqFAwpB,EAAAhrB,UAAA+rB,OAAA,WACA,OAAA3sB,KAAA2Y,MAAAiU,UAGAhB,EAjDA,CAkDG4vF,EAAA3uF,WAEHjB,EAAAqvD,oBAAA4gC,EAAA,IAA0DE,GAAAN,EAAAr6G,QAAAqxC,OAAAkoE,WAAAkB,GAE1D,IAAA/vF,EAAA,SAAA0wF,GAGA,SAAA1wF,IACA,IAAA2wF,EAAA/lD,EAEA/yC,EAAA3jB,KAAA8rB,GAEA,QAAA4wF,EAAAv7G,UAAAQ,OAAAiW,EAAArX,MAAAm8G,GAAAC,EAAA,EAAwEA,EAAAD,EAAeC,IACvF/kG,EAAA+kG,GAAAx7G,UAAAw7G,GAGA,OAAAF,EAAA/lD,EAAApyC,EAAAtkB,KAAAw8G,EAAA16G,KAAAZ,MAAAs7G,EAAA,CAAAx8G,MAAA6L,OAAA+L,KAAA8+C,EAAAtgD,MAAA,CACArV,MAAA21D,EAAAz1B,YACOy1B,EAAAxpC,SAAA,SAAAivF,EAAAC,GAGP,MAFA,EAAA1lD,EAAAk3C,cAEAwO,IACA1lD,EAAAx8C,SAAA,CACAnZ,MAAA21D,EAAAz1B,cAGO3c,EAAAoyC,EAAA+lD,GAqCP,OA1DA93F,EAAAmH,EAAA0wF,GAwBA1wF,EAAAlrB,UAAA2mG,0BAAA,SAAA+U,GACA,IAAA1O,EAAA0O,EAAA1O,aACA5tG,KAAA4tG,kBAAA1oG,IAAA0oG,GAAA,OAAAA,EAAA+N,EACA/N,GAGA9hF,EAAAlrB,UAAA6rB,kBAAA,WACAzsB,KAAAgrB,QAAA+wF,IACA/7G,KAAAgrB,QAAA+wF,GAAAr1F,GAAA1mB,KAAAktB,UAGA,IAAA0gF,EAAA5tG,KAAA2Y,MAAAi1F,aACA5tG,KAAA4tG,kBAAA1oG,IAAA0oG,GAAA,OAAAA,EAAA+N,EACA/N,GAGA9hF,EAAAlrB,UAAA8rB,qBAAA,WACA1sB,KAAAgrB,QAAA+wF,IACA/7G,KAAAgrB,QAAA+wF,GAAAl1F,IAAA7mB,KAAAktB,WAIApB,EAAAlrB,UAAAqgC,SAAA,WACA,OAAAjhC,KAAAgrB,QAAA+wF,GACA/7G,KAAAgrB,QAAA+wF,GAAAl8F,MAEAmuE,GAIAliE,EAAAlrB,UAAA+rB,OAAA,WACA,OAvHAC,EAuHA5sB,KAAA2Y,MAAAiU,SAtHArsB,MAAAyD,QAAA4oB,KAAA,GAAAA,GAsHA5sB,KAAAoW,MAAArV,OAvHA,IAAA6rB,GA0HAd,EA3DA,CA4DG0vF,EAAA3uF,WAGH,OADAf,EAAAqvD,eAAA2gC,EAAA,IAAqDC,GAAAN,EAAAr6G,QAAAqxC,OAAAqpE,GACrD,CACAlwF,WACAE,aAKAlsB,EAAAC,UAAA,uCC/NA,SAAAgE,GAGA,IAAAhC,EAAA,uBAEAjC,EAAAC,QAAA,WACA,OAAAgE,EAAAhC,IAAAgC,EAAAhC,IAAA,uDCGA,IASA8qC,EAToB7sC,EAAQ,KAqD5BF,EAAAC,QAAA8sC,gCCpDA,SAAAiwE,EAAAp4G,GACA,kBACA,OAAAA,GAUA,IAAA01G,EAAA,aAEAA,EAAA2C,YAAAD,EACA1C,EAAA4C,iBAAAF,GAAA,GACA1C,EAAA6C,gBAAAH,GAAA,GACA1C,EAAA8C,gBAAAJ,EAAA,MAEA1C,EAAA+C,gBAAA,WACA,OAAAj9G,MAGAk6G,EAAAgD,oBAAA,SAAA14G,GACA,OAAAA,GAGA5E,EAAAC,QAAAq6G,iBCrCAt6G,EAAAC,QAAAU,MAAAyD,SAAA,SAAAsD,GACA,wBAAAlH,OAAAQ,UAAAgC,SAAAd,KAAAwF,kCCSAlH,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAEA,IAAAZ,EAAA,oBAAAkL,eAAAuxE,IACAvzE,EAAAlJ,EAAAkL,OAAAuxE,IAAA,uBACA18E,EAAAC,EAAAkL,OAAAuxE,IAAA,sBACA3xE,EAAA9K,EAAAkL,OAAAuxE,IAAA,wBACAniB,EAAAt6D,EAAAkL,OAAAuxE,IAAA,2BACAh4D,EAAAzkB,EAAAkL,OAAAuxE,IAAA,wBACA3/B,EAAA98C,EAAAkL,OAAAuxE,IAAA,wBACAjpE,EAAAxT,EAAAkL,OAAAuxE,IAAA,uBACAp1C,EAAArnC,EAAAkL,OAAAuxE,IAAA,0BACA71E,EAAA5G,EAAAkL,OAAAuxE,IAAA,+BACA91E,EAAA3G,EAAAkL,OAAAuxE,IAAA,2BACAp8E,EAAAL,EAAAkL,OAAAuxE,IAAA,wBACArkC,EAAAp4C,EAAAkL,OAAAuxE,IAAA,oBACAzkC,EAAAh4C,EAAAkL,OAAAuxE,IAAA,oBAEA,SAAA99C,EAAAlzB,GACA,qBAAAA,GAAA,OAAAA,EAAA,CACA,IAAAixE,EAAAjxE,EAAAmwE,SAEA,OAAAc,GACA,KAAAxzE,EACA,OAAAuC,IAAAzF,MACA,KAAAqhC,EACA,KAAAzgC,EACA,KAAAkE,EACA,KAAA2Z,EACA,KAAA61C,EACA,KAAAj6D,EACA,OAAAoL,EAEA,QACA,OAAAA,OAAAmwE,UACA,KAAApoE,EACA,KAAA7M,EACA,KAAAm2C,EACA,OAAArxC,EAEA,QACA,OAAAixE,GAKA,KAAA1kC,EACA,KAAAI,EACA,KAAAr4C,EACA,OAAA28E,IAKA,SAAAvpD,EAAA1nB,GACA,OAAAkzB,EAAAlzB,KAAA7E,EAGAlH,EAAAs9G,OAAAr+E,EACAj/B,EAAAu9G,UAAA51E,EACA3nC,EAAAw9G,eAAAt2G,EACAlH,EAAAy9G,gBAAA3pG,EACA9T,EAAA09G,gBAAAtgE,EACAp9C,EAAA29G,QAAAn0G,EACAxJ,EAAAs8E,WAAAr1E,EACAjH,EAAAihF,SAAA71E,EACApL,EAAA49G,KAAAtlE,EACAt4C,EAAA69G,KAAAnlE,EACA14C,EAAA89G,OAAAz9G,EACAL,EAAA+9G,SAAAh5F,EACA/kB,EAAAkhF,WAAAtmB,EACA56D,EAAAmhF,SAAAxgF,EAEAX,EAAAg+G,mBAAA,SAAAjyG,GACA,wBAAAA,GAAA,oBAAAA,OAAAX,GAAAW,IAAA7E,GAAA6E,IAAAgZ,GAAAhZ,IAAA6uD,GAAA7uD,IAAApL,GAAA,kBAAAoL,GAAA,OAAAA,MAAAmwE,WAAA5jC,GAAAvsC,EAAAmwE,WAAAxjC,GAAA3sC,EAAAmwE,WAAA9+B,GAAArxC,EAAAmwE,WAAApoE,GAAA/H,EAAAmwE,WAAAj1E,IAGAjH,EAAAi+G,YAAA,SAAAlyG,GACA,OAAA0nB,EAAA1nB,IAAAkzB,EAAAlzB,KAAA47B,GAGA3nC,EAAAk+G,iBAAAzqF,EAEAzzB,EAAAm+G,kBAAA,SAAApyG,GACA,OAAAkzB,EAAAlzB,KAAA+H,GAGA9T,EAAAo+G,kBAAA,SAAAryG,GACA,OAAAkzB,EAAAlzB,KAAAqxC,GAGAp9C,EAAAq+G,UAAA,SAAAtyG,GACA,wBAAAA,GAAA,OAAAA,KAAAmwE,WAAA1yE,GAGAxJ,EAAAs+G,aAAA,SAAAvyG,GACA,OAAAkzB,EAAAlzB,KAAA9E,GAGAjH,EAAAu+G,WAAA,SAAAxyG,GACA,OAAAkzB,EAAAlzB,KAAAX,GAGApL,EAAAw+G,OAAA,SAAAzyG,GACA,OAAAkzB,EAAAlzB,KAAAusC,GAGAt4C,EAAAq8E,OAAA,SAAAtwE,GACA,OAAAkzB,EAAAlzB,KAAA2sC,GAGA14C,EAAAy+G,SAAA,SAAA1yG,GACA,OAAAkzB,EAAAlzB,KAAA1L,GAGAL,EAAA0+G,WAAA,SAAA3yG,GACA,OAAAkzB,EAAAlzB,KAAAgZ,GAGA/kB,EAAA2+G,aAAA,SAAA5yG,GACA,OAAAkzB,EAAAlzB,KAAA6uD,GAGA56D,EAAA4+G,WAAA,SAAA7yG,GACA,OAAAkzB,EAAAlzB,KAAApL,kCCtIA,SAAAwkB,EAAA9gB,GAEA,IAAAkvB,EAAetzB,EAAQ,IAAQszB,SAE/BsrF,EAAS5+G,EAAQ,KAAW4+G,GAE5BC,EAAU7+G,EAAQ,KAElB8+G,EAAa9+G,EAAQ,KAErB++G,EAAA,aAEAC,EAAA,CACAC,WAAA,EACAC,SAAA,IACAz4G,KAAA,EACA04G,OAAA,EACAC,UAAA,MAEAC,EAAA,CACAJ,WAAA,EACAC,SAAA,IACAC,OAAA,EACA14G,KAAA,GAGA,SAAA64G,EAAAhxF,EAAAixF,GAEAjxF,EADA,kBAAAA,EACA,CACA4wF,SAAA5wF,GAGAA,GAAA,GAGA,IAAAC,EAAA,CACAloB,KAAAuB,OAAA23G,GAAAjxF,EAAAjoB,MAAA,OAAAS,eAEA04G,EAAA,OAAAjxF,EAAAloB,KAAA24G,EAAAK,EAEA,QAAAxrG,KAAA2rG,EACAjxF,EAAA1a,QAAAya,IAAAza,GAAA2rG,EAAA3rG,GAGA,OAAA0a,EA8EAzuB,EAAAC,QAAA,CACA+f,OAAA8+F,EACAx/F,MA7EA,SAAAmD,EAAA+L,GACAA,EAAAgxF,EAAAhxF,GACA,IAAAxO,EAAA8+F,EAAAr8F,EAAA+L,EAAA4wF,SAAA5wF,EAAA2wF,WACApjF,EAAA,IAAAvI,EAGA,OAFAuI,EAAAy1B,MAAAytD,EAEAzwF,EAAAjoB,MACA,UACA,UACA,UACA6e,EAAAmB,SAAA,WACAy4F,EAAAxwF,EAAAjoB,MAAAyZ,EAAA+b,EAAAvN,EAAA6wF,OAAA7wF,EAAA7nB,QAEA,MAEA,cAEAye,EAAAmB,SAAA,WACA,IAAAvgB,EAAAg5G,EAAAW,WAAA3/F,EAAAwO,EAAA6wF,OAAA7wF,EAAA7nB,MACAo1B,EAAA7yB,KAAAlD,EAAA4P,MACAmmB,EAAA7yB,KAAA,QAEA,MAEA,UACA,QACAkc,EAAAmB,SAAA,WACA,IAAAq5F,EAAAb,EAAAa,OAAA5/F,EAAAwO,EAAA7nB,KAAA6nB,EAAA6wF,QAEA7wF,EAAA8wF,WACA9wF,EAAA8wF,UAAAM,GAGAb,MAAAa,EAAA7jF,KAIA,OAAAA,GAyCA8jF,UAtCA,SAAAp9F,EAAA+L,GACAA,EAAAgxF,EAAAhxF,GACA,IAEA1Z,EAFAkL,EAAA8+F,EAAAr8F,EAAA+L,EAAA4wF,SAAA5wF,EAAA2wF,WACApjF,EAAA,GAGA,OAAAvN,EAAAjoB,MACA,UACA,UACA,UACAy4G,EAAAxwF,EAAAjoB,MAAAyZ,EAAA+b,EAAAvN,EAAA6wF,OAAA7wF,EAAA7nB,MACAmO,EAAAinB,EAAA3pB,OAAA0tG,SAAAhzG,KAAA,IACA,MAEA,UACA,QACA,IAAA8yG,EAAAb,EAAAa,OAAA5/F,EAAAwO,EAAA7nB,KAAA6nB,EAAA6wF,QAEA7wF,EAAA8wF,WACA9wF,EAAA8wF,UAAAM,GAGAb,MAAAa,EAAA7jF,GACAjnB,EAAAxQ,EAAA2H,OAAA8vB,EAAA3pB,OAAA0tG,UAGA,OAAAhrG,GAaAirG,UAVA,SAAAt9F,EAAA+L,GACAA,EAAAgxF,EAAAhxF,EAAA,OACA,IAAAxO,EAAA8+F,EAAAr8F,EAAA+L,EAAA4wF,UACA,OAAAJ,EAAAW,WAAA3/F,EAAAwO,EAAA6wF,uECrHAp/G,EAAAoF,WAkCA,SAAA26G,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,UAAAE,EAAAC,GAAA,EAAAA,GArCAngH,EAAAoR,YA4CA,SAAA2uG,GAUA,IATA,IAAAK,EACAJ,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAv4G,EAAA,IAAA44G,EATA,SAAAN,EAAAG,EAAAC,GACA,UAAAD,EAAAC,GAAA,EAAAA,EAQAG,CAAAP,EAAAG,EAAAC,IACAI,EAAA,EAEAt6G,EAAAk6G,EAAA,EAAAD,EAAA,EAAAA,EAEAr+G,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,EAC1Bu+G,EAAAI,EAAAT,EAAA72G,WAAArH,KAAA,GAAA2+G,EAAAT,EAAA72G,WAAArH,EAAA,QAAA2+G,EAAAT,EAAA72G,WAAArH,EAAA,OAAA2+G,EAAAT,EAAA72G,WAAArH,EAAA,IACA4F,EAAA84G,KAAAH,GAAA,OACA34G,EAAA84G,KAAAH,GAAA,MACA34G,EAAA84G,KAAA,IAAAH,EAGA,IAAAD,IACAC,EAAAI,EAAAT,EAAA72G,WAAArH,KAAA,EAAA2+G,EAAAT,EAAA72G,WAAArH,EAAA,OACA4F,EAAA84G,KAAA,IAAAH,GAGA,IAAAD,IACAC,EAAAI,EAAAT,EAAA72G,WAAArH,KAAA,GAAA2+G,EAAAT,EAAA72G,WAAArH,EAAA,OAAA2+G,EAAAT,EAAA72G,WAAArH,EAAA,OACA4F,EAAA84G,KAAAH,GAAA,MACA34G,EAAA84G,KAAA,IAAAH,GAGA,OAAA34G,GAvEAzH,EAAA+J,cA0FA,SAAA02G,GASA,IARA,IAAAL,EACAn6G,EAAAw6G,EAAA3+G,OACA4+G,EAAAz6G,EAAA,EAEAmpD,EAAA,GAIAvtD,EAAA,EAAA8+G,EAAA16G,EAAAy6G,EAA0C7+G,EAAA8+G,EAAU9+G,GAHpD,MAIAutD,EAAAnmD,KAAA23G,EAAAH,EAAA5+G,IAJA,MAIA8+G,IAAA9+G,EAJA,QAQA,IAAA6+G,GACAN,EAAAK,EAAAx6G,EAAA,GACAmpD,EAAAnmD,KAAA43G,EAAAT,GAAA,GAAAS,EAAAT,GAAA,aACG,IAAAM,IACHN,GAAAK,EAAAx6G,EAAA,OAAAw6G,EAAAx6G,EAAA,GACAmpD,EAAAnmD,KAAA43G,EAAAT,GAAA,IAAAS,EAAAT,GAAA,MAAAS,EAAAT,GAAA,YAGA,OAAAhxD,EAAAviD,KAAA,KA1GA,IALA,IAAAg0G,EAAA,GACAL,EAAA,GACAH,EAAA,qBAAA37G,sBAAAhE,MACAsQ,EAAA,mEAEAnP,EAAA,EAAAoE,EAAA+K,EAAAlP,OAAkCD,EAAAoE,IAASpE,EAC3Cg/G,EAAAh/G,GAAAmP,EAAAnP,GACA2+G,EAAAxvG,EAAA9H,WAAArH,MAQA,SAAAo+G,EAAAF,GACA,IAAA95G,EAAA85G,EAAAj+G,OAEA,GAAAmE,EAAA,IACA,UAAApB,MAAA,kDAKA,IAAAq7G,EAAAH,EAAAx4G,QAAA,KAGA,OAFA,IAAA24G,MAAAj6G,GAEA,CAAAi6G,EADAA,IAAAj6G,EAAA,IAAAi6G,EAAA,GAmDA,SAAAU,EAAAH,EAAA52G,EAAAC,GAIA,IAHA,IAAAs2G,EALAU,EAMAtkD,EAAA,GAEA36D,EAAAgI,EAAqBhI,EAAAiI,EAASjI,GAAA,EAC9Bu+G,GAAAK,EAAA5+G,IAAA,cAAA4+G,EAAA5+G,EAAA,kBAAA4+G,EAAA5+G,EAAA,IACA26D,EAAAvzD,KATA43G,GADAC,EAUAV,IATA,OAAAS,EAAAC,GAAA,OAAAD,EAAAC,GAAA,MAAAD,EAAA,GAAAC,IAYA,OAAAtkD,EAAA3vD,KAAA,IA1EA2zG,EAAA,IAAAt3G,WAAA,OACAs3G,EAAA,IAAAt3G,WAAA,sBClBAlJ,EAAA8H,KAAA,SAAA1B,EAAAiC,EAAA04G,EAAAC,EAAAC,GACA,IAAA71G,EAAAlE,EACAg6G,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAx/G,EAAAk/G,EAAAE,EAAA,IACA5gH,EAAA0gH,GAAA,IACA5wF,EAAA/pB,EAAAiC,EAAAxG,GAMA,IALAA,GAAAxB,EACA+K,EAAA+kB,GAAA,IAAAkxF,GAAA,EACAlxF,KAAAkxF,EACAA,GAAAH,EAEQG,EAAA,EAAWj2G,EAAA,IAAAA,EAAAhF,EAAAiC,EAAAxG,MAAAxB,EAAAghH,GAAA,GAMnB,IAJAn6G,EAAAkE,GAAA,IAAAi2G,GAAA,EACAj2G,KAAAi2G,EACAA,GAAAL,EAEQK,EAAA,EAAWn6G,EAAA,IAAAA,EAAAd,EAAAiC,EAAAxG,MAAAxB,EAAAghH,GAAA,GAEnB,OAAAj2G,EACAA,EAAA,EAAAg2G,MACG,IAAAh2G,IAAA+1G,EACH,OAAAj6G,EAAAutB,IAAAvjB,KAAAif,GAAA,KAEAjpB,GAAA+C,KAAA6E,IAAA,EAAAkyG,GACA51G,GAAAg2G,EAGA,OAAAjxF,GAAA,KAAAjpB,EAAA+C,KAAA6E,IAAA,EAAA1D,EAAA41G,IAGAhhH,EAAA4F,MAAA,SAAAQ,EAAAlF,EAAAmH,EAAA04G,EAAAC,EAAAC,GACA,IAAA71G,EAAAlE,EAAAsC,EACA03G,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAG,EAAA,KAAAN,EAAA/2G,KAAA6E,IAAA,OAAA7E,KAAA6E,IAAA,SACAjN,EAAAk/G,EAAA,EAAAE,EAAA,EACA5gH,EAAA0gH,EAAA,KACA5wF,EAAAjvB,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAqCA,IApCAA,EAAA+I,KAAAy3D,IAAAxgE,GAEAmG,MAAAnG,QAAAgQ,KACAhK,EAAAG,MAAAnG,GAAA,IACAkK,EAAA+1G,IAEA/1G,EAAAnB,KAAA2F,MAAA3F,KAAA8tB,IAAA72B,GAAA+I,KAAAs3G,KAEArgH,GAAAsI,EAAAS,KAAA6E,IAAA,GAAA1D,IAAA,IACAA,IACA5B,GAAA,IAIAtI,GADAkK,EAAAg2G,GAAA,EACAE,EAAA93G,EAEA83G,EAAAr3G,KAAA6E,IAAA,IAAAsyG,IAGA53G,GAAA,IACA4B,IACA5B,GAAA,GAGA4B,EAAAg2G,GAAAD,GACAj6G,EAAA,EACAkE,EAAA+1G,GACK/1G,EAAAg2G,GAAA,GACLl6G,GAAAhG,EAAAsI,EAAA,GAAAS,KAAA6E,IAAA,EAAAkyG,GACA51G,GAAAg2G,IAEAl6G,EAAAhG,EAAA+I,KAAA6E,IAAA,EAAAsyG,EAAA,GAAAn3G,KAAA6E,IAAA,EAAAkyG,GACA51G,EAAA,IAIQ41G,GAAA,EAAW56G,EAAAiC,EAAAxG,GAAA,IAAAqF,EAAArF,GAAAxB,EAAA6G,GAAA,IAAA85G,GAAA,GAKnB,IAHA51G,KAAA41G,EAAA95G,EACAg6G,GAAAF,EAEQE,EAAA,EAAU96G,EAAAiC,EAAAxG,GAAA,IAAAuJ,EAAAvJ,GAAAxB,EAAA+K,GAAA,IAAA81G,GAAA,GAElB96G,EAAAiC,EAAAxG,EAAAxB,IAAA,IAAA8vB,kCC9EA,IAAA9rB,EAAapE,EAAQ,IAAaoE,OAElCgvB,EAAWpzB,EAAQ,KAMnBF,EAAAC,QAAA,WACA,SAAAuwD,KAfA,SAAAxsC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAhf,UAAA,qCAcA8e,CAAA3jB,KAAAowD,GAEApwD,KAAAmyD,KAAA,KACAnyD,KAAA6yD,KAAA,KACA7yD,KAAA2B,OAAA,EAgEA,OA7DAyuD,EAAAxvD,UAAAkI,KAAA,SAAAwqB,GACA,IAAArV,EAAA,CACA7X,KAAAktB,EACAmb,KAAA,MAEAzuC,KAAA2B,OAAA,EAAA3B,KAAA6yD,KAAApkB,KAAAxwB,EAAgDje,KAAAmyD,KAAAl0C,EAChDje,KAAA6yD,KAAA50C,IACAje,KAAA2B,QAGAyuD,EAAAxvD,UAAA6T,QAAA,SAAA6e,GACA,IAAArV,EAAA,CACA7X,KAAAktB,EACAmb,KAAAzuC,KAAAmyD,MAEA,IAAAnyD,KAAA2B,SAAA3B,KAAA6yD,KAAA50C,GACAje,KAAAmyD,KAAAl0C,IACAje,KAAA2B,QAGAyuD,EAAAxvD,UAAAomC,MAAA,WACA,OAAAhnC,KAAA2B,OAAA,CACA,IAAAwL,EAAAnN,KAAAmyD,KAAA/rD,KAGA,OAFA,IAAApG,KAAA2B,OAAA3B,KAAAmyD,KAAAnyD,KAAA6yD,KAAA,KAAwD7yD,KAAAmyD,KAAAnyD,KAAAmyD,KAAA1jB,OACxDzuC,KAAA2B,OACAwL,IAGAijD,EAAAxvD,UAAA6f,MAAA,WACAzgB,KAAAmyD,KAAAnyD,KAAA6yD,KAAA,KACA7yD,KAAA2B,OAAA,GAGAyuD,EAAAxvD,UAAA8L,KAAA,SAAAsjB,GACA,OAAAhwB,KAAA2B,OAAA,SAIA,IAHA,IAAAnB,EAAAR,KAAAmyD,KACAhlD,EAAA,GAAA3M,EAAA4F,KAEA5F,IAAAiuC,MACAthC,GAAA6iB,EAAAxvB,EAAA4F,KAGA,OAAA+G,GAGAijD,EAAAxvD,UAAAiL,OAAA,SAAA/E,GACA,OAAA9G,KAAA2B,OAAA,OAAAuC,EAAA2G,MAAA,GACA,OAAA7K,KAAA2B,OAAA,OAAA3B,KAAAmyD,KAAA/rD,KAKA,IAJA,IA7DAkL,EAAA7P,EAAAyG,EA6DAiF,EAAAjJ,EAAAS,YAAAmC,IAAA,GACAtG,EAAAR,KAAAmyD,KACAzwD,EAAA,EAEAlB,GAjEA8Q,EAkEA9Q,EAAA4F,KAlEA3E,EAkEA0L,EAlEAjF,EAkEAxG,EAjEA4P,EAAAtL,KAAAvE,EAAAyG,GAkEAxG,GAAAlB,EAAA4F,KAAAzE,OACAnB,IAAAiuC,KAGA,OAAAthC,GAGAijD,EAtEA,GAyEAl9B,KAAA3mB,SAAA2mB,EAAA3mB,QAAAkzD,SACA7/D,EAAAC,QAAAe,UAAAsyB,EAAA3mB,QAAAkzD,QAAA,WACA,IAAA75D,EAAAstB,EAAA3mB,QAAA,CACA5K,OAAA3B,KAAA2B,SAEA,OAAA3B,KAAAW,YAAAwmB,KAAA,IAAAvhB,uBC9FA,SAAA/B,GAAA,IAAAw9G,EAAA,qBAAAx9G,MAAA,qBAAA0gB,YAAArM,OACAhX,EAAA2jB,SAAAjkB,UAAAM,MAgBA,SAAAogH,EAAAjuB,EAAAkuB,GACAvhH,KAAAwhH,IAAAnuB,EACArzF,KAAAyhH,SAAAF,EAhBA1hH,EAAAwlB,WAAA,WACA,WAAAi8F,EAAApgH,EAAAY,KAAAujB,WAAAg8F,EAAAlgH,WAAAmkB,eAGAzlB,EAAA6hH,YAAA,WACA,WAAAJ,EAAApgH,EAAAY,KAAA4/G,YAAAL,EAAAlgH,WAAAwgH,gBAGA9hH,EAAAylB,aAAAzlB,EAAA8hH,cAAA,SAAA97F,GACAA,GACAA,EAAA+7F,SASAN,EAAA1gH,UAAAihH,MAAAP,EAAA1gH,UAAA+wB,IAAA,aAEA2vF,EAAA1gH,UAAAghH,MAAA,WACA5hH,KAAAyhH,SAAA3/G,KAAAu/G,EAAArhH,KAAAwhH,MAIA3hH,EAAAiiH,OAAA,SAAA9sG,EAAA+sG,GACAz8F,aAAAtQ,EAAAgtG,gBACAhtG,EAAAitG,aAAAF,GAGAliH,EAAAqiH,SAAA,SAAAltG,GACAsQ,aAAAtQ,EAAAgtG,gBACAhtG,EAAAitG,cAAA,GAGApiH,EAAAsiH,aAAAtiH,EAAAk8B,OAAA,SAAA/mB,GACAsQ,aAAAtQ,EAAAgtG,gBACA,IAAAD,EAAA/sG,EAAAitG,aAEAF,GAAA,IACA/sG,EAAAgtG,eAAA38F,WAAA,WACArQ,EAAAotG,YAAAptG,EAAAotG,cACKL,KAKLjiH,EAAQ,KAKRD,EAAA0uC,aAAA,qBAAAhqB,WAAAgqB,cAAA,qBAAA1qC,KAAA0qC,cAAAvuC,WAAAuuC,aACA1uC,EAAAwiH,eAAA,qBAAA99F,WAAA89F,gBAAA,qBAAAx+G,KAAAw+G,gBAAAriH,WAAAqiH,oDCzDA,SAAAx+G,EAAAmhB,IAAA,SAAAnhB,EAAAqB,GACA,aAEA,IAAArB,EAAA0qC,aAAA,CAIA,IAKA+zE,EALAC,EAAA,EAEAC,EAAA,GACAC,GAAA,EACAC,EAAA7+G,EAAAsU,SAuKAwqG,EAAAviH,OAAAgkB,gBAAAhkB,OAAAgkB,eAAAvgB,GACA8+G,OAAAt9F,WAAAs9F,EAAA9+G,EAEQ,qBAAR,GAAQjB,SAAAd,KAAA+B,EAAAmhB,SAzFRs9F,EAAA,SAAAM,GACA59F,EAAAmB,SAAA,WACA08F,EAAAD,MAKA,WAGA,GAAA/+G,EAAA81G,cAAA91G,EAAAi/G,cAAA,CACA,IAAAC,GAAA,EACAC,EAAAn/G,EAAA61G,UAQA,OANA71G,EAAA61G,UAAA,WACAqJ,GAAA,GAGAl/G,EAAA81G,YAAA,QACA91G,EAAA61G,UAAAsJ,EACAD,GAwEGE,GApEH,WAIA,IAAAC,EAAA,gBAAAp5G,KAAAkQ,SAAA,IAEAmpG,EAAA,SAAA9oG,GACAA,EAAAzY,SAAAiC,GAAA,kBAAAwW,EAAAjU,MAAA,IAAAiU,EAAAjU,KAAAgB,QAAA87G,IACAL,GAAAxoG,EAAAjU,KAAAV,MAAAw9G,EAAAvhH,UAIAkC,EAAA0X,iBACA1X,EAAA0X,iBAAA,UAAA4nG,GAAA,GAEAt/G,EAAA2rF,YAAA,YAAA2zB,GAGAb,EAAA,SAAAM,GACA/+G,EAAA81G,YAAAuJ,EAAAN,EAAA,MAmDAQ,GACGv/G,EAAA01G,eAhDH,WACA,IAAA8J,EAAA,IAAA9J,eAEA8J,EAAA5J,MAAAC,UAAA,SAAAr/F,GAEAwoG,EADAxoG,EAAAjU,OAIAk8G,EAAA,SAAAM,GACAS,EAAA7J,MAAAG,YAAAiJ,IAyCAU,GACGZ,GAAA,uBAAAA,EAAAtqG,cAAA,UAtCH,WACA,IAAAglF,EAAAslB,EAAAloB,gBAEA8nB,EAAA,SAAAM,GAGA,IAAAW,EAAAb,EAAAtqG,cAAA,UAEAmrG,EAAAC,mBAAA,WACAX,EAAAD,GACAW,EAAAC,mBAAA,KACApmB,EAAAS,YAAA0lB,GACAA,EAAA,MAGAnmB,EAAAU,YAAAylB,IAyBAE,GApBAnB,EAAA,SAAAM,GACAv9F,WAAAw9F,EAAA,EAAAD,IAyBAD,EAAAp0E,aAxLA,SAAAl3B,GAEA,oBAAAA,IACAA,EAAA,IAAAwN,SAAA,GAAAxN,IAMA,IAFA,IAAAO,EAAA,IAAArX,MAAAY,UAAAQ,OAAA,GAEAD,EAAA,EAAmBA,EAAAkW,EAAAjW,OAAiBD,IACpCkW,EAAAlW,GAAAP,UAAAO,EAAA,GAIA,IAAAgiH,EAAA,CACArsG,WACAO,QAIA,OAFA4qG,EAAAD,GAAAmB,EACApB,EAAAC,GACAA,KAqKAI,EAAAN,iBAlKA,SAAAA,EAAAO,UACAJ,EAAAI,GA8BA,SAAAC,EAAAD,GAGA,GAAAH,EAGAp9F,WAAAw9F,EAAA,EAAAD,OACK,CACL,IAAAc,EAAAlB,EAAAI,GAEA,GAAAc,EAAA,CACAjB,GAAA,EAEA,KAxCA,SAAAiB,GACA,IAAArsG,EAAAqsG,EAAArsG,SACAO,EAAA8rG,EAAA9rG,KAEA,OAAAA,EAAAjW,QACA,OACA0V,IACA,MAEA,OACAA,EAAAO,EAAA,IACA,MAEA,OACAP,EAAAO,EAAA,GAAAA,EAAA,IACA,MAEA,OACAP,EAAAO,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MAEA,QACAP,EAAAnW,MAAAgE,EAAA0S,IAmBAkO,CAAA49F,GACS,QACTrB,EAAAO,GACAH,GAAA,MArFA,CAwMC,qBAAAl+F,KAAA,qBAAA1gB,EAAA7D,KAAA6D,EAAA0gB,iDCxMD,SAAA1gB,GAwDA,SAAA8/G,EAAAx8F,GAEA,IACA,IAAAtjB,EAAA+/G,aAAA,SACG,MAAArxE,GACH,SAGA,IAAArsC,EAAArC,EAAA+/G,aAAAz8F,GACA,aAAAjhB,GACA,SAAAwB,OAAAxB,GAAAU,cA/DAhH,EAAAC,QAmBA,SAAA0X,EAAAojD,GACA,GAAAgpD,EAAA,iBACA,OAAApsG,EAGA,IAAAs1B,GAAA,EAkBA,OAhBA,WACA,IAAAA,EAAA,CACA,GAAA82E,EAAA,oBACA,UAAAj/G,MAAAi2D,GACOgpD,EAAA,oBACP32E,QAAA+tB,MAAAJ,GAEA3tB,QAAAC,KAAA0tB,GAGA9tB,GAAA,EAGA,OAAAt1B,EAAArW,MAAAlB,KAAAmB,8DCjBAvB,EAAAC,QAAAyuC,EAEA,IAAAD,EAAgBvuC,EAAQ,IAIxBozB,EAAWpzB,EAAQ,IAOnB,SAAAwuC,EAAAlgB,GACA,KAAApuB,gBAAAsuC,GAAA,WAAAA,EAAAlgB,GACAigB,EAAAvsC,KAAA9B,KAAAouB,GAPA8E,EAAAC,SAAgBrzB,EAAQ,IAGxBozB,EAAAC,SAAAmb,EAAAD,GAOAC,EAAA1tC,UAAA01D,WAAA,SAAA7uB,EAAAniC,EAAA4uB,GACAA,EAAA,KAAAuT,qBC5CA7nC,EAAAC,QAAiBC,EAAQ,qBCAzBF,EAAAC,QAAiBC,EAAQ,qBCAzBF,EAAAC,QAAiBC,EAAQ,IAAYuuC,2BCArCzuC,EAAAC,QAAiBC,EAAQ,IAAYwuC,2CCArC,SAAApqC,GAEA,IAAAy4C,EAAa78C,EAAQ,KAErB+jH,EAAkB/jH,EAAQ,KAE1B8f,EAAa9f,EAAQ,KAErB,SAAAgkH,EAAAl+G,GACA,OAAA6oD,KAAAxB,MAAAwB,KAAAC,UAAA9oD,IAGA,IAAAm+G,EAAA,kBAEAt9F,EAAA,IAEA,8HACA,6IACA,8JACA,sKACA,6KACA,wLACA,2LACA,+LA+BA,SAAAu9F,EAAA3xG,EAAA2sG,GACA,IACAl5G,EADApE,EAAA,EASA,IANA2Q,EAAA4xG,MACAn+G,EAAAgE,KAAAw3D,KAAAjvD,EAAA4xG,MAAAtiH,OAAA,GAEAD,EAAA,GAKAA,EAAA,GAASA,IAAA,CAGT,IAFA8kB,EAAAC,EAAA/kB,GAAAs9G,IAEAkF,UAAAp+G,EACA,OAAAg+G,EAAAt9F,GAUA,IANAnU,EAAA8xG,OACAr+G,EAAAgE,KAAAw3D,KAAAjvD,EAAA8xG,OAAAxiH,OAAA,GAEAD,EAAA,GAKAA,EAAA,GAASA,IAAA,CAGT,IAFA8kB,EAAAC,EAAA/kB,GAAAs9G,IAEAkF,UAAAp+G,EACA,OAAAg+G,EAAAt9F,GAMA,IAFA1gB,EAAAgE,KAAAw3D,KAAAjvD,EAAA+xG,OAAAziH,OAAA,GAIAD,EAAA,GAASA,IAAA,CACT,IAAA8kB,EAEA,IAFAA,EAAAC,EAAA/kB,GAAAs9G,IAEAkF,UAAAp+G,EACA,OAAAg+G,EAAAt9F,GAIA,UAAA9hB,MAAA,iBAIA,SAAA2/G,EAAAhyG,EAAAiyG,GACA,IAAA79D,EAAA,IAAAviD,EAAAogH,EAAAJ,UACAz9D,EAAAj7C,KAAA,GAYA,IAFA,IAAA1F,GAPAuM,EADAiyG,EAAA99F,QAAA,GACAnU,EAAA4xG,MACGK,EAAA99F,QAAA,GACHnU,EAAA8xG,OAEA9xG,EAAA+xG,QAGAziH,OAEAD,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,GAG1B,IAFA,IAAAvB,EAAA,EAEA6H,EAAA,EAAmBA,EAAA,EAAOA,IAC1B7H,KAAA,GAAAkS,EAAA3Q,EAAAsG,GAAA,KAGAy+C,EAAA/kD,EAAA,GAAAvB,EAGA,IAAA68D,EAAA,IAEA,IAAAt7D,EAAAoI,KAAAw3D,MAAAx7D,EAAA,MAAwCpE,EAAA+kD,EAAA9kD,OAAmBD,IAC3D+kD,EAAA/kD,GAAAs7D,EACAA,EAAA,KAAAA,EAAA,OAGA,IAAA90D,EAAA,EAOA,OANAo8G,EAAA79D,OAAA69D,EAAA79D,OAAAzoC,IAAA,SAAAlX,GACA,IAAA3G,EAAAsmD,EAAA/gD,MAAAwC,IAAApB,GAGA,OAFAoB,GAAApB,EACAw9G,EAAAn4B,GAAArjF,KAAA+6G,EAAA1jH,EAAAmkH,EAAAC,SACApkH,IAEAmkH,EAvHA79F,IAAAzI,IAAA,SAAAsV,EAAA5f,GACA,IAAAA,EAAA,SAGA,IAFA,IAAA1J,EAAA,GAEAtI,EAAA,EAAiBA,EAAA,EAAOA,GAAA,GAaxB,IAZA,IAAAC,EAAA2xB,EAAA,GAAAA,EAAA5xB,GACA8iH,EAAAlxF,EAAA5xB,EAAA,GACAs9G,EAAA+E,EAAAriH,EAAA,KACA+iH,EAAA,CACAj+F,QAAA9S,EACAsrG,WACAkF,SAAAviH,EACA4iH,OAAAjxF,EAAA5xB,GAAA8iH,EACA/9D,OAAA,GACA0lC,GAAA,IAGAx4E,EAAA6wG,EAAA19G,EAAAnF,EAA0CgS,EAAA,EAAOA,IAAA,CACjD,IAAAsI,EAAAnV,EAAA6M,EAAA,EACA8wG,EAAAh+D,OAAA39C,KAAAmT,GACAnV,GAAAmV,EAGAjS,EAAAg1G,GAAAyF,EAGA,OAAAz6G,IAyGApK,EAAAC,QAAA,CACA6+G,GATA,SAAAr8F,EAAA28F,EAAAD,GACAC,EAAA+E,EAAA38G,QAAA43G,IAAA,EAAAA,EAAA,IACA,IAAA3sG,EAAAsqC,EAAAt6B,EAAA08F,GACA34G,EAAAi+G,EAAAhyG,EAAA2xG,EAAA3xG,EAAA2sG,IACA,OAAAp/F,EAAA4f,UAAAp5B,IAMA49G,cACAK,wEC/JA,SAAAngH,GAEA,SAAAwgH,EAAAp9G,EAAAR,EAAA/F,GACA,QAAA2gB,EAAA,GAAA5a,EAAA,EAA4B4a,EAAKA,KAAA,EACjCpa,EAAAwB,KAAA4Y,EAAA3gB,EAAA,KA4BA,IAAA4jH,EAAA,SAAA30F,GAGA,IAFA,IAAAhmB,EAAA,GAEAtI,EAAA,EAAiBA,EAAAsuB,EAAAruB,OAAcD,IAC/BsI,EAAAgmB,EAAAtuB,MAGA,OAAAsI,EAPA,CAQC,iDA6FD,SAAA2yC,EAAAv2C,EAAA24G,GACA,IAAAn2G,EACAk2B,SAAA14B,EAEA,aAAA04B,GAAA,UAAAA,EAEA14B,EAAA,IAAAlC,EADA0E,EAAA,GAAAxC,QAEG,GAAAlC,EAAA2B,SAAAO,GACHwC,EAAAxC,EAAAxD,eACG,KAAArC,MAAAyD,QAAAoC,GAIH,UAAA1B,MAAA,YAFAkE,GADAxC,EAAA,IAAAlC,EAAAkC,IACAxD,WAKA,cAAAgT,KAAAhN,GAAA,CACA,GAAAxC,EAAAzE,OAAA,KACA,UAAA+C,MAAA,iBAGA,OA3EA,SAAAkE,GAIA,IAHA,IAAA9C,EAAA8C,EAAAjH,OACAod,EAAA,GAEArd,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,GAC1B,IAAAsuB,EAAApnB,EAAAJ,OAAA9G,EAAA,GAEAgjH,EAAA3lG,EADAjV,KAAAw3D,KAAA,GAAAtxC,EAAAruB,OAAA,GACA4G,SAAAynB,EAAA,KAGA,IAYA9vB,EAZA8J,EAAA,GAiBA,OAfA06G,EADAxkH,EAAA,UACA,GAAA4F,GACAkE,EAAAo6G,OAAAlkH,EAAA2L,OAAAkT,GAEAjZ,EAAA,OAEA4+G,EADAxkH,EAAA,UACA,GAAA4F,GACAkE,EAAAm6G,OAAAjkH,EAAA2L,OAAAkT,IAGAjZ,EAAA,OAEA4+G,EADAxkH,EAAA,UACA,GAAA4F,GACAkE,EAAAi6G,MAAA/jH,EAAA2L,OAAAkT,IAGA/U,EAgDA46G,CAAAh8G,GAGA,iCAAAgN,KAAAhN,GAAA,CACA,GAAAxC,EAAAzE,OAAA,KACA,UAAA+C,MAAA,iBAGA,OAxHA,SAAAkE,GAIA,IAHA,IAAA9C,EAAA8C,EAAAjH,OACAod,EAAA,GAEArd,EAAA,EAAiBA,EAAAoE,EAASpE,GAAA,GAC1B,IAAAvB,EAAA,EACA2G,EAAA69G,EAAA/7G,EAAAlH,IAEAkH,EAAAlH,EAAA,KACAvB,EAAA,GACA2G,EAAA,GAAAA,EAAA69G,EAAA/7G,EAAAlH,EAAA,KAGAgjH,EAAA3lG,EAAA5e,EAAA2G,GAGA,IAYA5G,EAZA8J,EAAA,GAiBA,OAfA06G,EADAxkH,EAAA,UACA,GAAA4F,GACAkE,EAAAo6G,OAAAlkH,EAAA2L,OAAAkT,GAEAjZ,EAAA,OAEA4+G,EADAxkH,EAAA,UACA,GAAA4F,GACAkE,EAAAm6G,OAAAjkH,EAAA2L,OAAAkT,IAGAjZ,EAAA,MAEA4+G,EADAxkH,EAAA,UACA,EAAA4F,GACAkE,EAAAi6G,MAAA/jH,EAAA2L,OAAAkT,IAGA/U,EAuFA66G,CAAAj8G,GAGA,GAAAm2G,GAAA,YAAAnpG,KAAAhN,GACA,OAxDA,SAAAA,GACA,IAAA+T,EAAA/T,EAAAxB,QAAA,UAAAwB,EAAAjH,OACAqI,EAAA2yC,EAAA/zC,EAAAlD,MAAA,EAAAiX,GAAAyxC,eAAA,GAEA,GAAAzxC,GAAA/T,EAAAjH,OACA,OAAAqI,EAGA,IAAA86G,EAAAnoE,EAAA/zC,EAAAlD,MAAAiX,IAAA,GAWA,OAVA3S,EAAAo6G,OAAAp6G,EAAAo6G,OAAAv4G,OAAAi5G,EAAAV,QAEAp6G,EAAAm6G,QAAAW,EAAAX,SACAn6G,EAAAm6G,OAAAn6G,EAAAm6G,OAAAt4G,OAAAi5G,EAAAX,SAGAn6G,EAAAi6G,OAAAa,EAAAb,QACAj6G,EAAAi6G,MAAAj6G,EAAAi6G,MAAAp4G,OAAAi5G,EAAAb,QAGAj6G,EAqCA+6G,CAAAn8G,GAGA,GAAAxC,EAAAzE,OAAA,KACA,UAAA+C,MAAA,iBAGA,OApKA,SAAA0B,GAIA,IAHA,IAAAN,EAAAM,EAAAzE,OACAod,EAAA,GAEArd,EAAA,EAAiBA,EAAAoE,EAASpE,IAC1BgjH,EAAA3lG,EAAA,EAAA3Y,EAAA1E,IAGA,IAMAxB,EANA8J,EAAA,GAWA,OATA06G,EADAxkH,EAAA,UACA,GAAA4F,GACAkE,EAAAm6G,OAAAn6G,EAAAo6G,OAAAlkH,EAAA2L,OAAAkT,GAEAjZ,EAAA,MAEA4+G,EADAxkH,EAAA,UACA,EAAA4F,GACAkE,EAAAi6G,MAAA/jH,EAAA2L,OAAAkT,IAGA/U,EAiJAg7G,CAAA5+G,GAIAxG,EAAAC,QAAA88C,0DCjLA,SAAAz4C,GAMA,IAJA,IACA+gH,EAAA,IACAC,EAAA,GAEAxjH,EAAA,EAAeA,EAAA,IAASA,IAAA,CACxB,IAAAoF,EAAAm+G,EAAAvjH,EAAA,MACAoF,EAAA,MAAAA,GANA,KAOAm+G,EAAAvjH,GAAAoF,EAGA,IAAApF,EAAA,EAAeA,EAAA,IAASA,IACxBwjH,EAAAD,EAAAvjH,MAGA,SAAAi2B,EAAAhkB,GACA,KAAAA,EAAA,GACAA,GAAA,IAGA,KAAAA,EAAA,KACAA,GAAA,IAGA,OAAAsxG,EAAAtxG,GAGA,SAAAikB,EAAAjkB,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,MAAAjP,MAAA,WAAAiP,EAAA,KAGA,OAAAuxG,EAAAvxG,GAIA,IAAAwxG,EAAA,KACA,MACA,UAoBAvlH,EAAAC,QAAA,SAAA86D,EAAA4pD,GAGA5pD,EAAA,GAAAj1D,MAAA5D,KAAA64D,GAIA,IAFA,IAAAtjB,EAvBA,SAAA+tE,EAAAzE,GACA,GAAAwE,EAAAxE,GACA,OAAAwE,EAAAxE,GAGA,IAAAjkD,EAAA0oD,EAAAzE,EAAA,GACA32G,EAAA,GACAA,EAAA,GAAA0yD,EAAA,GAEA,QAAAh7D,EAAA,EAAiBA,GAAAi/G,EAAUj/G,IAC3BsI,EAAAtI,GAAAk2B,EAAAD,EAAA+kC,EAAAh7D,IAAAi2B,EAAA+kC,EAAAh7D,EAAA,GAAAi/G,EAAA,IAIA,OADAwE,EAAAxE,GAAA32G,EACAA,EASAo7G,CAAAb,GAEA7iH,EAAA,EAAiBA,EAAA6iH,EAAY7iH,IAC7Bi5D,EAAA7xD,KAAA,GAGA,KAAA6xD,EAAAh5D,OAAA4iH,GACA,GAAA5pD,EAAA,IAKA,IAAA0qD,EAAAztF,EAAA+iC,EAAA,IAEA,IAAAj5D,EAAA,EAAmBA,GAAA6iH,EAAa7iH,IAChCi5D,EAAAj5D,GAAAi5D,EAAAj5D,GAAAi2B,EAAA0f,EAAA31C,GAAA2jH,GAGA1qD,EAAA3zB,aAVA2zB,EAAA3zB,QAaA,WAAA9iC,EAAAy2D,4DCrFA,SAAAz2D,GAEA,SAAA+nC,EAAAzlB,GACA,IAAA0xD,EAAA,EAAA1xD,EAAA,GACA5G,EAAA,GACA0lG,EAAA,IAAAphH,EAAAg0E,GACAotC,EAAA95G,KAAA,GACA85G,EAAA,GAAA5/G,MAAA5D,KAAAwjH,GAEA,QAAA5jH,EAAA,EAAiBA,EAAAw2E,EAAOx2E,IACxBke,EAAAle,GAAA4jH,EAAA5/G,QAGA,OAAAka,EAIA,SAAA2lG,EAAA3lG,GAGA,IAFA,IAAAs4D,EAAAt4D,EAAAje,OAEAD,GAAA,EAAkBA,GAAA,EAAQA,IAC1B,QAAAsG,GAAA,EAAoBA,GAAA,EAAQA,IAAA,CAC5B,IAAAwE,EAAA1C,KAAA0C,IAAA9K,EAAAsG,GACA+B,EAAAD,KAAAC,IAAArI,EAAAsG,GACA07D,EAAA,GAAAl3D,GAAAzC,IAAA,OAAAA,GAAAyC,GAAA,UACAoT,EAAA,EAAAle,GAAA,EAAAsG,GAAA07D,EACA9jD,EAAA,EAAAle,GAAAw2E,EAAA,EAAAlwE,GAAA07D,EACA9jD,EAAAs4D,EAAA,EAAAx2E,GAAA,EAAAsG,GAAA07D,EAIA,IAAAhiE,EAAA,EAAiBA,EAAA,EAAOA,IACxBke,EAAA,GAAAle,GAAAke,EAAAle,GAAA,GAAAke,EAAA,GAAAs4D,EAAAx2E,EAAA,GAAAke,EAAAle,GAAAw2E,EAAA,GAAAt4D,EAAAs4D,EAAA,GAAAx2E,GAAAke,EAAAs4D,EAAA,EAAAx2E,GAAA,OAKA,SAAA8jH,EAAA5lG,GACA,IAAAs4D,EAAAt4D,EAAAje,OAEA,GAAAu2E,EAAA,IACA,IAAApyE,EAAAoyE,EAAA,GACAl9D,EAAAlR,KAAAuqB,MAAAvuB,EAAAgE,KAAAw3D,KAAAx7D,EAAA,KACAkV,EAAA,GAAAA,IAGA,IAFA,IAAAhR,EAAA,GAEAxJ,EAAAsF,EAAA,EAAyBtF,EAAA,GAAQA,GAAAwa,EACjChR,EAAAyK,QAAAjU,GAGAwJ,EAAAyK,QAAA,GAEA,QAAA/S,EAAA,EAAmBA,EAAAsI,EAAArI,OAAgBD,IACnC,QAAAsG,EAAA,EAAqBA,EAAAgC,EAAArI,OAAgBqG,IAAA,CACrC,IAAA7F,EAAA6H,EAAAtI,GACAU,EAAA4H,EAAAhC,GACA,IAAA4X,EAAAzd,GAAAC,GAEA,QAAA+1C,GAAA,EAAwBA,GAAA,EAAQA,IAChC,QAAA9uC,GAAA,EAA0BA,GAAA,EAAQA,IAAA,CAClC,IAAAmD,EAAA1C,KAAA0C,IAAA2rC,EAAA9uC,GACAU,EAAAD,KAAAC,IAAAouC,EAAA9uC,GACAq6D,EAAA,GAAAl3D,GAAAzC,IAAA,OAAAA,GAAAyC,GAAA,UACAoT,EAAAzd,EAAAg2C,GAAA/1C,EAAAiH,GAAAq6D,IAOA,IAAAhiE,EAAA,EAAiBA,EAAAw2E,EAAA,EAAWx2E,IAC5Bke,EAAA,GAAAle,GAAAke,EAAAle,GAAA,GAAAA,EAAA,UAKA,SAAA+jH,EAAA7lG,GAGA,IAFA,IAAAs4D,EAAAt4D,EAAAje,OAEAD,EAAA,EAAiBA,EAAA,EAAOA,IACxB,GAAAA,IACAke,EAAA,GAAAle,GAAAke,EAAAle,GAAA,QAGAke,EAAA,GAAAs4D,EAAA,EAAAx2E,GAAA,IACAke,EAAAs4D,EAAA,EAAAx2E,GAAA,OAKA,GAFAke,EAAA,UACAA,EAAAs4D,EAAA,YACAA,EAAA,IAEA,IAAAx2E,EAAAw2E,EAAA,GAAsBx2E,EAAAw2E,EAAA,EAAWx2E,IACjC,QAAAsG,EAAA,EAAmBA,EAAA,EAAOA,IAC1B4X,EAAAle,GAAAsG,GAAA4X,EAAA5X,GAAAtG,GAAA,IAMA,IAAAgkH,EAAA,WAOA,IANA,IAAAC,EAAAplH,MAAA,IACAi6C,EAAAj6C,MAAA,IAKAkiB,EAAA,EAAsBA,EAAA,GAAaA,IAAA,CAGnC,IAFA,IAAAzY,EAAAyY,GAAA,GAEA/gB,EAAA,EAAmBA,EAAA,EAAOA,IAC1BsI,IAAA,EAAAtI,IACAsI,GATA,MASAtI,EAAA,GAIAikH,EAAAljG,GAXA,OAWAzY,EAAAyY,GAAA,IAGA,QAAA+D,EAAA,EAAuBA,GAAA,GAAeA,IAAA,CAGtC,IAFAxc,EAAAwc,GAAA,GAEA9kB,EAAA,EAAmBA,EAAA,EAAOA,IAC1BsI,IAAA,GAAAtI,IACAsI,GApBA,MAoBAtI,EAAA,GAIA84C,EAAAh0B,GAAAxc,EAAAwc,GAAA,GAGA,IAAAu9F,EAAA,CACAr5E,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAEA,gBAAAjrB,EAAAo/F,EAAA/+F,GACA,IAAAi4D,EAAAt4D,EAAAje,OACA8gB,EAAAkjG,EAAA5B,EAAA/E,IAAA,EAAA/+F,GAEA,SAAA49D,EAAAlqE,GACA,OAAA8O,GAAA9O,EAAA,UAKA,QAAAjS,EAAA,EAAmBA,EAAA,EAAOA,IAC1Bke,EAAA,GAAAs4D,EAAA,EAAAx2E,GAAAm8E,EAAAn8E,GACAA,EAAA,IAAAke,EAAAle,GAAA,GAAAm8E,EAAAn8E,IAGA,IAAAA,EAAA,EAAmBA,EAAA,GAAQA,IAC3Bke,EAAAs4D,EAAA,GAAAx2E,GAAA,GAAAm8E,EAAAn8E,GACAA,EAAA,IAAAke,EAAA,MAAAle,GAAAm8E,EAAAn8E,IAGAke,EAAA,MAAAi+D,EAAA,GACAj+D,EAAA,MAAAi+D,EAAA,GACAj+D,EAAA,MAAAi+D,EAAA,GACA,IAAAr3D,EAAAg0B,GAAA09B,EAAA,OACA,GAAA1xD,EAQA,IAAA9kB,EAAA,EAAmBA,EAAA,EAAOA,IAC1B,QAAAsG,EAAA,EAAqBA,EAAA,EAAOA,IAC5B4X,EAAAs4D,EAAA,GAAAlwE,GAAAtG,GAAAke,EAAAle,GAAAw2E,EAAA,GAAAlwE,GAPAwe,GAOA,EAAA9kB,EAAAsG,EAPA,WAhEA,GA8EA49G,EAAA,WACA,IAAAC,EAAA,UAAAnkH,EAAAsG,GACA,OAAAtG,EAAAsG,GAAA,MACG,SAAAtG,EAAAsG,GACH,OAAAtG,EAAA,MACG,SAAAA,EAAAsG,GACH,OAAAA,EAAA,MACG,SAAAtG,EAAAsG,GACH,OAAAtG,EAAAsG,GAAA,MACG,SAAAtG,EAAAsG,GACH,OAAA8B,KAAA2F,MAAA/N,EAAA,GAAAoI,KAAA2F,MAAAzH,EAAA,UACG,SAAAtG,EAAAsG,GACH,OAAAtG,EAAAsG,EAAA,EAAAtG,EAAAsG,EAAA,MACG,SAAAtG,EAAAsG,GACH,OAAAtG,EAAAsG,EAAA,EAAAtG,EAAAsG,EAAA,SACG,SAAAtG,EAAAsG,GACH,OAAAtG,EAAAsG,EAAA,GAAAtG,EAAAsG,GAAA,UAEA,gBAAA4X,EAAAxZ,EAAA6Z,GACA,IACAK,EACA6sD,EAFA+K,EAAAt4D,EAAAje,OAGAsF,GAAA,EACAqZ,EAAA6sD,EAAA+K,EAAA,EAIA,IAHA,IAAA4tC,EAAAD,EAAA5lG,GACAna,EAAAM,EAAAqgD,OAAArgD,EAAAqgD,OAAA9kD,OAAA,GAAAA,OAEAD,EAAA,EAAmBA,EAAAoE,EAASpE,IAC5B,QAAAvB,EAAA,EAAqBA,EAAAiG,EAAAqgD,OAAA9kD,OAAwBxB,IAC7CiG,EAAAqgD,OAAAtmD,GAAAwB,QAAAD,GACAqkH,EAAA3/G,EAAAqgD,OAAAtmD,GAAAuB,IAIAoE,EAAAM,EAAAm+G,OAEA,IAAA7iH,EAAA,EAAmBA,EAAAoE,EAASpE,IAC5B,IAAAvB,EAAA,EAAqBA,EAAAiG,EAAA+lF,GAAAxqF,OAAoBxB,IACzC4lH,EAAA3/G,EAAA+lF,GAAAhsF,GAAAuB,IAIA,GAAAyrE,GAAA,EACA,GACAvtD,EAAAU,GAAA6sD,GAAA24C,EAAAxlG,EAAA6sD,GAAA,UACO1+B,KAGP,SAAAs3E,EAAArwD,GACA,QAAAz1C,EAAA,IAA2BA,EAAMA,IAAA,GACjC,IAAAyjD,KAAAzjD,EAAAy1C,GACAowD,EAAAxlG,EAAA6sD,KAAAzJ,MACA9jD,EAAAU,GAAA6sD,GAAAzJ,EAAA,IACAj1B,KAIA,SAAAA,IACA,GAiBA,GAhBA0+B,EAAA,EAAAA,EAAA,EACAlmE,EAAA,MAAAqZ,GAAArZ,EAAA,GAAAqZ,GAAA43D,EAAA,GACA/K,IACAlmE,OAEAkmE,IACA7sD,GAAArZ,GAGAkmE,IAGA,GAAAA,GACAA,IAGAA,EAAA,EACA,eAEO,IAAAvtD,EAAAU,GAAA6sD,IAEP,WAhFA,GAsFA,SAAA64C,EAAApmG,GAIA,IAHA,IAAAs4D,EAAAt4D,EAAAje,OACAujD,EAAA,EAEAxjD,EAAA,EAAiBA,EAAAw2E,EAAOx2E,IAAA,CAIxB,IAHA,IAAAgiE,EAAA,EAAA9jD,EAAAle,GAAA,GACAoE,EAAA,EAEAkC,EAAA,EAAmBA,EAAAkwE,EAAOlwE,IAAA,EAC1BxH,EAAA,EAAAof,EAAAle,GAAAsG,KAEA07D,GAKA59D,GAAA,IACAo/C,GAAAp/C,EAAA,GAGA49D,EAAAljE,EACAsF,EAAA,GATAA,IAYAA,GAAA,IACAo/C,GAAAp/C,EAAA,GAIA,IAAAkC,EAAA,EAAiBA,EAAAkwE,EAAOlwE,IAAA,CAIxB,IAHA07D,EAAA,EAAA9jD,EAAA,GAAA5X,GACAlC,EAAA,EAEApE,EAAA,EAAmBA,EAAAw2E,EAAOx2E,IAAA,CAC1B,IAAAlB,KAAA,EAAAof,EAAAle,GAAAsG,KAEA07D,GAKA59D,GAAA,IACAo/C,GAAAp/C,EAAA,GAGA49D,EAAAljE,EACAsF,EAAA,GATAA,IAYAA,GAAA,IACAo/C,GAAAp/C,EAAA,GAKA,IAAApE,EAAA,EAAiBA,EAAAw2E,EAAA,EAAWx2E,IAC5B,IAAAsG,EAAA,EAAmBA,EAAAkwE,EAAA,EAAWlwE,IAAA,CAC9B,IAAAgoB,EAAApQ,EAAAle,GAAAsG,GAAA4X,EAAAle,GAAAsG,EAAA,GAAA4X,EAAAle,EAAA,GAAAsG,GAAA4X,EAAAle,EAAA,GAAAsG,EAAA,KAEA,GAAAgoB,GAAA,GAAAA,IACAk1B,GAAA,GAMA,SAAAg5B,EAAAvqE,GACA,SAAAiM,EAAAle,GAAAsG,EAAA2L,GAKA,SAAAwqE,EAAAxqE,GACA,SAAAiM,EAAAle,EAAAiS,GAAA3L,GAKA,IAAAtG,EAAA,EAAiBA,EAAAw2E,EAAOx2E,IACxB,IAAAsG,EAAA,EAAmBA,EAAAkwE,EAAOlwE,IAC1BA,EAAAkwE,EAAA,GAAAgG,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KACAl2E,GAAA,KAAAk2E,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAh5B,GAAA,IAGAl9C,EAAAkwE,EAAA,MAAAgG,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,OACAh5B,GAAA,KAIAxjD,EAAAw2E,EAAA,GAAAiG,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KACAz8E,GAAA,KAAAy8E,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAj5B,GAAA,IAGAxjD,EAAAw2E,EAAA,MAAAiG,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,OACAj5B,GAAA,KAOA,IAAA+gE,EAAA,EAEA,IAAAvkH,EAAA,EAAiBA,EAAAw2E,EAAOx2E,IACxB,IAAAsG,EAAA,EAAmBA,EAAAkwE,EAAOlwE,IAC1B,EAAA4X,EAAAle,GAAAsG,IAAAi+G,IAKA,OADA/gE,GAAA,GAAAp7C,KAAA2F,MAAA3F,KAAAy3D,IAAA,MAAA0kD,GAAA/tC,OAkCAt4E,EAAAC,QAAA,CACA2/B,UA9BA,SAAAp5B,GACA,IAAAwZ,EAAAqsB,EAAA7lC,EAAAogB,SACA++F,EAAA3lG,GACA4lG,EAAA5lG,GACA6lG,EAAA7lG,GAIA,IAHA,IAAAslC,EAAAn0C,IACAm1G,EAAA,EAEAjmG,EAAA,EAAoBA,EAAA,EAAUA,IAAA,CAC9B2lG,EAAAhmG,EAAAxZ,EAAA6Z,GACAylG,EAAA9lG,EAAAxZ,EAAA44G,SAAA/+F,GACA,IAAAzf,EAAAwlH,EAAApmG,GAEApf,EAAA0kD,IACAA,EAAA1kD,EACA0lH,EAAAjmG,GAMA,OAFA2lG,EAAAhmG,EAAAxZ,EAAA8/G,GACAR,EAAA9lG,EAAAxZ,EAAA44G,SAAAkH,GACAtmG,EAAA5B,IAAA,SAAAsC,GACA,OAAAA,EAAAtC,IAAA,SAAAmoG,GACA,SAAAA,OAQAl6E,OACAs5E,cACAC,qBACAC,WACAC,eACAE,WACAI,4ECjaA,SAAA9hH,GAEA,IAAAkiH,EAAWtmH,EAAQ,KAEnBumH,EAAYvmH,EAAQ,KAEpBwmH,EAAA,IAAApiH,EAAA,4BACAqiH,EAAA,IAAAriH,EAAA,0DACAsiH,EAAA,IAAAtiH,EAAA,uBACAuiH,EAAA,IAAAviH,EAAA,qCAgDAtE,EAAAC,QAAA,CACA2/G,OA9BA,SAAA5/F,EAAArZ,EAAA04G,GACA,IAAA/mC,EAAAt4D,EAAAje,OACA09E,GAAAnH,EAAA,EAAA+mC,GAAA14G,EACAH,EAAA,IAAAlC,GAAAm7E,EAAA,GAAAA,GACAj5E,EAAAoF,KAAA,KAEA,QAAA9J,EAAA,EAAiBA,EAAA29E,EAAO39E,IACxB0E,EAAA1E,GAAA29E,EAAA,MAGA,IAAA39E,EAAA,EAAiBA,EAAAw2E,EAAOx2E,IACxB,QAAAsG,EAAA,EAAmBA,EAAAkwE,EAAOlwE,IAC1B,GAAA4X,EAAAle,GAAAsG,GAAA,CACA,IAAAE,IAAA+2G,EAAAv9G,IAAA29E,EAAA,IAAA4/B,EAAAj3G,IAAAzB,EAAA,EACAH,EAAAoF,KAAA,EAAAtD,IAAA3B,GAEA,QAAA8C,EAAA,EAAuBA,EAAA9C,EAAU8C,IACjCjD,EAAAJ,KAAAI,EAAA8B,EAAAmB,GAAAg2E,EAAA,GAAAn3E,IAAA3B,GAMA,OACAH,OACAG,KAAA84E,IAMAs/B,IAhDA,SAAAa,EAAA7jF,GACAA,EAAA7yB,KAAAw9G,GACA,IAAAI,EAAAxiH,EAAA2H,OAAA,CAAA06G,IACAG,EAAA72G,cAAA2vG,EAAAj5G,KAAA,GACAmgH,EAAA72G,cAAA2vG,EAAAj5G,KAAA,IACAmgH,EAAA72G,cAAAw2G,EAAAK,EAAAhhH,MAAA,WACAi2B,EAAA7yB,KAAA49G,GACA,IAAAC,EAAAziH,EAAA2H,OAAA,CAAA26G,EAAAJ,EAAAQ,YAAApH,EAAAp5G,KAAA,CACAq+G,MAAA,IACG,IAAAvgH,EAAA,KACHyiH,EAAA92G,cAAA82G,EAAAhlH,OAAA,MACAglH,EAAA92G,cAAAw2G,EAAAM,EAAAjhH,MAAA,OAAAihH,EAAAhlH,OAAA,GACAg6B,EAAA7yB,KAAA69G,GACAhrF,EAAA7yB,KAAA29G,GACA9qF,EAAA7yB,KAAA,gECzBA,SAAAkc,GAEA,IAAA9gB,EAAapE,EAAQ,GAAQoE,OAE7BmqC,EAAgBvuC,EAAQ,IAAQuuC,UAEhCjnB,EAActnB,EAAQ,KAEtBozB,EAAWpzB,EAAQ,IAEnBq3D,EAAar3D,EAAQ,IAAQ4a,GAE7BzW,EAAiBnE,EAAQ,GAAQmE,WAEjC4iH,EAAA,yDAAA5iH,EAAArB,SAAA,aAGAwkB,EAAA0/F,iBAAA,EACA1/F,EAAA2/F,iBAAA,GACA3/F,EAAA4/F,qBAAA,GAIA5/F,EAAA6/F,YAAA,GACA7/F,EAAA8/F,YAAAn2G,IACAqW,EAAA+/F,gBAAA,MACA//F,EAAAggG,eAAA,EACAhgG,EAAAigG,eAAA,EACAjgG,EAAAkgG,mBAAA,EACAlgG,EAAAmgG,aAAA,EACAngG,EAAAogG,YAAA,EACApgG,EAAAqgG,gBAAArgG,EAAAsgG,sBAIA,IAFA,IAAAC,EAAAvnH,OAAA0R,KAAAsV,GAEAwgG,EAAA,EAAgBA,EAAAD,EAAAhmH,OAAmBimH,IAAA,CACnC,IAAAC,EAAAF,EAAAC,GAEAC,EAAAp7G,MAAA,OACArM,OAAAU,eAAAjB,EAAAgoH,EAAA,CACAn2G,YAAA,EACA3Q,MAAAqmB,EAAAygG,GACAl2G,UAAA,IAmBA,IAbA,IAAAm2G,EAAA,CACAC,KAAA3gG,EAAA2gG,KACAC,aAAA5gG,EAAA4gG,aACAC,YAAA7gG,EAAA6gG,YACAC,QAAA9gG,EAAA8gG,QACAC,eAAA/gG,EAAA+gG,eACAC,aAAAhhG,EAAAghG,aACAC,YAAAjhG,EAAAihG,YACAC,YAAAlhG,EAAAkhG,YACAC,gBAAAnhG,EAAAmhG,iBAEAC,EAAApoH,OAAA0R,KAAAg2G,GAEAW,EAAA,EAAgBA,EAAAD,EAAA7mH,OAAmB8mH,IAAA,CACnC,IAAAC,EAAAF,EAAAC,GACAX,IAAAY,MAyIA,SAAAC,EAAAC,EAAA3iH,EAAAoR,GACA,IAAAwxG,EAAA,GACAC,EAAA,EAMA,SAAAx2D,IAGA,IAFA,IAAA7qB,EAEA,QAAAA,EAAAmhF,EAAAjhH,SACAkhH,EAAA//G,KAAA2+B,GACAqhF,GAAArhF,EAAA9lC,OAGAinH,EAAAhiG,KAAA,WAAA0rC,GASA,SAAAy2D,IACA,IAAAnhH,EACAqsB,EAAA,KAEA60F,GAAA7kH,EACAgwB,EAAA,IAAA3vB,WAAAuiH,GAEAj/G,EAAA1D,EAAA2H,OAAAg9G,EAAAC,GAGAD,EAAA,GACAD,EAAAhH,QACAvqG,EAAA4c,EAAArsB,GAlCAghH,EAAAliG,GAAA,QAgBA,SAAAuN,GACA20F,EAAA9hG,eAAA,MAAAiiG,GACAH,EAAA9hG,eAAA,WAAAwrC,GACAj7C,EAAA4c,KAlBA20F,EAAAliG,GAAA,MAAAqiG,GACAH,EAAAj/G,IAAA1D,GACAqsD,IAmCA,SAAA02D,EAAAJ,EAAA3iH,GAEA,GADA,kBAAAA,MAAA/B,EAAAU,KAAAqB,KACA/B,EAAA2B,SAAAI,GAAA,UAAApB,UAAA,0BACA,IAAAokH,EAAAL,EAAAM,iBACA,OAAAN,EAAAO,cAAAljH,EAAAgjH,GAKA,SAAAG,EAAA96D,GACA,KAAAtuD,gBAAAopH,GAAA,WAAAA,EAAA96D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAAkiG,SAGA,SAAAC,EAAAj7D,GACA,KAAAtuD,gBAAAupH,GAAA,WAAAA,EAAAj7D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAAoiG,SAIA,SAAAC,EAAAn7D,GACA,KAAAtuD,gBAAAypH,GAAA,WAAAA,EAAAn7D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAAsiG,MAGA,SAAAC,EAAAr7D,GACA,KAAAtuD,gBAAA2pH,GAAA,WAAAA,EAAAr7D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAAwiG,QAIA,SAAAC,EAAAv7D,GACA,KAAAtuD,gBAAA6pH,GAAA,WAAAA,EAAAv7D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAA0iG,YAGA,SAAAC,EAAAz7D,GACA,KAAAtuD,gBAAA+pH,GAAA,WAAAA,EAAAz7D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAA4iG,YAIA,SAAAC,EAAA37D,GACA,KAAAtuD,gBAAAiqH,GAAA,WAAAA,EAAA37D,GACA+6D,EAAAvnH,KAAA9B,KAAAsuD,EAAAlnC,EAAA8iG,OAGA,SAAAC,EAAAC,GACA,OAAAA,IAAAhjG,EAAAijG,YAAAD,IAAAhjG,EAAAkjG,iBAAAF,IAAAhjG,EAAAmjG,cAAAH,IAAAhjG,EAAAojG,cAAAJ,IAAAhjG,EAAAqjG,UAAAL,IAAAhjG,EAAAsjG,QAOA,SAAArB,EAAA/6D,EAAArM,GACA,IAAA3vC,EAAAtS,KAMA,GAJAA,KAAA2qH,MAAAr8D,KAAA,GACAtuD,KAAA4qH,WAAAt8D,EAAAu8D,WAAAhrH,EAAAsnH,gBACA94E,EAAAvsC,KAAA9B,KAAAsuD,GAEAA,EAAAiI,QAAA4zD,EAAA77D,EAAAiI,OACA,UAAA7xD,MAAA,uBAAA4pD,EAAAiI,OAGA,GAAAjI,EAAAw8D,cAAAX,EAAA77D,EAAAw8D,aACA,UAAApmH,MAAA,uBAAA4pD,EAAAw8D,aAMA,GAHA9qH,KAAA+qH,WAAAz8D,EAAAiI,OAAAnvC,EAAAijG,WACArqH,KAAAkpH,iBAAA,qBAAA56D,EAAAw8D,YAAAx8D,EAAAw8D,YAAA1jG,EAAAqjG,SAEAn8D,EAAAu8D,YACAv8D,EAAAu8D,UAAAhrH,EAAAonH,aAAA34D,EAAAu8D,UAAAhrH,EAAAqnH,aACA,UAAAxiH,MAAA,uBAAA4pD,EAAAu8D,WAIA,GAAAv8D,EAAA08D,aACA18D,EAAA08D,WAAAnrH,EAAAinH,kBAAAx4D,EAAA08D,WAAAnrH,EAAAknH,kBACA,UAAAriH,MAAA,uBAAA4pD,EAAA08D,YAIA,GAAA18D,EAAAm2D,QACAn2D,EAAAm2D,MAAA5kH,EAAA0nH,aAAAj5D,EAAAm2D,MAAA5kH,EAAA2nH,aACA,UAAA9iH,MAAA,8BAAA4pD,EAAAm2D,OAIA,GAAAn2D,EAAA28D,WACA38D,EAAA28D,SAAAprH,EAAAunH,gBAAA94D,EAAA28D,SAAAprH,EAAAwnH,gBACA,UAAA3iH,MAAA,qBAAA4pD,EAAA28D,UAIA,GAAA38D,EAAA48D,UACA58D,EAAA48D,UAAArrH,EAAAsrH,YAAA78D,EAAA48D,UAAArrH,EAAAurH,gBAAA98D,EAAA48D,UAAArrH,EAAAwrH,OAAA/8D,EAAA48D,UAAArrH,EAAAyrH,SAAAh9D,EAAA48D,UAAArrH,EAAA0rH,mBACA,UAAA7mH,MAAA,qBAAA4pD,EAAA48D,UAIA,GAAA58D,EAAAk9D,aACAtnH,EAAA2B,SAAAyoD,EAAAk9D,YACA,UAAA9mH,MAAA,sDAIA1E,KAAAyrH,QAAA,IAAArkG,EAAAiiG,KAAApnE,GACA,IAAA19B,EAAAvkB,KACAA,KAAA0rH,WAAA,EAEA1rH,KAAAyrH,QAAA77D,QAAA,SAAAv9C,EAAAs5G,GAGAC,EAAArnG,GAEAA,EAAAmnG,WAAA,EACA,IAAA7vF,EAAA,IAAAn3B,MAAA2N,GACAwpB,EAAA8vF,QACA9vF,EAAAhrB,KAAAhR,EAAAioH,MAAA6D,GACApnG,EAAAyC,KAAA,QAAA6U,IAGA,IAAA4oF,EAAA5kH,EAAA6nH,sBACA,kBAAAp5D,EAAAm2D,UAAAn2D,EAAAm2D,OACA,IAAAyG,EAAArrH,EAAA0rH,mBACA,kBAAAj9D,EAAA48D,aAAA58D,EAAA48D,UAEAlrH,KAAAyrH,QAAAx/E,KAAAqiB,EAAA08D,YAAAnrH,EAAAmnH,qBAAAvC,EAAAn2D,EAAA28D,UAAAprH,EAAAynH,mBAAA4D,EAAA58D,EAAAk9D,YAEAxrH,KAAA6rH,QAAA3nH,EAAAS,YAAA3E,KAAA4qH,YACA5qH,KAAA8rH,QAAA,EACA9rH,KAAA+rH,OAAAtH,EACAzkH,KAAAgsH,UAAAd,EACAlrH,KAAA4mB,KAAA,MAAA5mB,KAAA4hH,OACAxhH,OAAAU,eAAAd,KAAA,WACA6f,IAAA,WACA,OAAAvN,EAAAm5G,SAEAlgH,cAAA,EACAmG,YAAA,IA4EA,SAAAk6G,EAAAhD,EAAAvxG,GACAA,GAAA2N,EAAAmB,SAAA9O,GAEAuxG,EAAA6C,UAEA7C,EAAA6C,QAAA7J,QAEAgH,EAAA6C,QAAA,MAGA,SAAAQ,EAAA1nG,GACAA,EAAAyC,KAAA,SApZA5mB,OAAAU,eAAAjB,EAAA,SACA6R,YAAA,EACA3Q,MAAAX,OAAA8rH,OAAApE,GACAn2G,UAAA,IAEA9R,EAAAupH,UACAvpH,EAAA0pH,UACA1pH,EAAA4pH,OACA5pH,EAAA8pH,SACA9pH,EAAAgqH,aACAhqH,EAAAkqH,aACAlqH,EAAAoqH,QAEApqH,EAAAssH,cAAA,SAAArqG,GACA,WAAAsnG,EAAAtnG,IAGAjiB,EAAAusH,cAAA,SAAAtqG,GACA,WAAAynG,EAAAznG,IAGAjiB,EAAAwsH,iBAAA,SAAAvqG,GACA,WAAA+nG,EAAA/nG,IAGAjiB,EAAAysH,iBAAA,SAAAxqG,GACA,WAAAioG,EAAAjoG,IAGAjiB,EAAA0sH,WAAA,SAAAzqG,GACA,WAAA2nG,EAAA3nG,IAGAjiB,EAAA2sH,aAAA,SAAA1qG,GACA,WAAA6nG,EAAA7nG,IAGAjiB,EAAA4sH,YAAA,SAAA3qG,GACA,WAAAmoG,EAAAnoG,IAKAjiB,EAAA6sH,QAAA,SAAAzmH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAS,EAAA96D,GAAAroD,EAAAoR,IAGAxX,EAAA+mH,YAAA,SAAA3gH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAI,EAAA96D,GAAAroD,IAGApG,EAAA8sH,KAAA,SAAA1mH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAc,EAAAn7D,GAAAroD,EAAAoR,IAGAxX,EAAA+sH,SAAA,SAAA3mH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAS,EAAAn7D,GAAAroD,IAGApG,EAAAgtH,WAAA,SAAA5mH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAkB,EAAAv7D,GAAAroD,EAAAoR,IAGAxX,EAAAitH,eAAA,SAAA7mH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAa,EAAAv7D,GAAAroD,IAGApG,EAAAktH,MAAA,SAAA9mH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAsB,EAAA37D,GAAAroD,EAAAoR,IAGAxX,EAAAmtH,UAAA,SAAA/mH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAiB,EAAA37D,GAAAroD,IAGApG,EAAAotH,QAAA,SAAAhnH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAY,EAAAj7D,GAAAroD,EAAAoR,IAGAxX,EAAAqtH,YAAA,SAAAjnH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAO,EAAAj7D,GAAAroD,IAGApG,EAAAstH,OAAA,SAAAlnH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAgB,EAAAr7D,GAAAroD,EAAAoR,IAGAxX,EAAAutH,WAAA,SAAAnnH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAW,EAAAr7D,GAAAroD,IAGApG,EAAAwtH,WAAA,SAAApnH,EAAAqoD,EAAAj3C,GAMA,MALA,oBAAAi3C,IACAj3C,EAAAi3C,EACAA,EAAA,IAGAq6D,EAAA,IAAAoB,EAAAz7D,GAAAroD,EAAAoR,IAGAxX,EAAAytH,eAAA,SAAArnH,EAAAqoD,GACA,OAAA06D,EAAA,IAAAe,EAAAz7D,GAAAroD,IA8LAitB,EAAAC,SAAAk2F,EAAAh7E,GAEAg7E,EAAAzoH,UAAA0rB,OAAA,SAAAm4F,EAAAyG,EAAA7zG,GACA,GAAAotG,EAAA5kH,EAAA0nH,aAAA9C,EAAA5kH,EAAA2nH,YACA,UAAAljH,WAAA,8BAAAmgH,GAGA,GAAAyG,GAAArrH,EAAAsrH,YAAAD,GAAArrH,EAAAurH,gBAAAF,GAAArrH,EAAAwrH,OAAAH,GAAArrH,EAAAyrH,SAAAJ,GAAArrH,EAAA0rH,mBACA,UAAA1mH,UAAA,qBAAAqmH,GAGA,GAAAlrH,KAAA+rH,SAAAtH,GAAAzkH,KAAAgsH,YAAAd,EAAA,CACA,IAAA3mG,EAAAvkB,KACAA,KAAAu2D,MAAAnvC,EAAAmjG,aAAA,WACApzD,EAAA5yC,EAAAknG,QAAA,uBAEAlnG,EAAAknG,QAAAn/F,OAAAm4F,EAAAyG,GAEA3mG,EAAAmnG,YACAnnG,EAAAwnG,OAAAtH,EACAlgG,EAAAynG,UAAAd,EACA7zG,eAIA2N,EAAAmB,SAAA9O,IAIAgyG,EAAAzoH,UAAA2nB,MAAA,WAEA,OADA4uC,EAAAn3D,KAAAyrH,QAAA,uBACAzrH,KAAAyrH,QAAAljG,SAKA8gG,EAAAzoH,UAAA41D,OAAA,SAAAn/C,GACArX,KAAAs2D,WAAApyD,EAAA2G,MAAA,MAAAwM,IAGAgyG,EAAAzoH,UAAA21D,MAAA,SAAAz7B,EAAAzjB,GACA,IAAAq/C,EAAA12D,KAEAutH,EAAAvtH,KAAA0zB,gBAEA,oBAAAoH,QAAA51B,IAAA41B,IAAAzjB,KACAA,EAAAyjB,EACAA,EAAA1T,EAAAojG,cAGA+C,EAAA55F,MACAtc,GAAA2N,EAAAmB,SAAA9O,GACGk2G,EAAAv9E,OACH34B,GAAArX,KAAA4mB,KAAA,MAAAvP,GACGk2G,EAAAx9E,UACH14B,GACArX,KAAA4mB,KAAA,mBACA,OAAA8vC,EAAAH,MAAAz7B,EAAAzjB,MAIArX,KAAA+qH,WAAAjwF,EACA96B,KAAAyF,MAAAvB,EAAA2G,MAAA,MAAAwM,KAIAgyG,EAAAzoH,UAAAghH,MAAA,SAAAvqG,GACAu0G,EAAA5rH,KAAAqX,GAEA2N,EAAAmB,SAAA8lG,EAAAjsH,OAiBAqpH,EAAAzoH,UAAA01D,WAAA,SAAA7uB,EAAAniC,EAAA4uB,GACA,IAAA+0F,EACAsE,EAAAvtH,KAAA0zB,eAEApf,GADAi5G,EAAAv9E,QAAAu9E,EAAA55F,UACA8T,GAAA8lF,EAAA5rH,SAAA8lC,EAAA9lC,QACA,cAAA8lC,GAAAvjC,EAAA2B,SAAA4hC,GACAznC,KAAAyrH,SAMAn3G,EAAA20G,EAAAjpH,KAAAkpH,kBACAD,EAAAjpH,KAAA+qH,WAGAtjF,EAAA9lC,QAAA4rH,EAAA5rH,SACA3B,KAAA+qH,WAAA/qH,KAAA2qH,MAAAp0D,OAAAnvC,EAAAijG,kBAIArqH,KAAAmpH,cAAA1hF,EAAAwhF,EAAA/0F,IAfAA,EAAA,IAAAxvB,MAAA,wBADAwvB,EAAA,IAAAxvB,MAAA,mBAmBA2kH,EAAAzoH,UAAAuoH,cAAA,SAAA1hF,EAAAwhF,EAAA/0F,GACA,IAAAs5F,EAAA/lF,KAAA9lC,OACA8rH,EAAAztH,KAAA4qH,WAAA5qH,KAAA8rH,QACA4B,EAAA,EACAnpG,EAAAvkB,KACA2tH,EAAA,oBAAAz5F,EAEA,IAAAy5F,EAAA,CACA,IAEA9xF,EAFAgtF,EAAA,GACAC,EAAA,EAEA9oH,KAAA0mB,GAAA,iBAAAonB,GACAjS,EAAAiS,IAEAqpB,EAAAn3D,KAAAyrH,QAAA,uBAEA,GACA,IAAAzhH,EAAAhK,KAAAyrH,QAAAmC,UAAA3E,EAAAxhF,EACAimF,EACAF,EACAxtH,KAAA6rH,QACA7rH,KAAA8rH,QACA2B,UAEKztH,KAAA0rH,WAAAr0G,EAAArN,EAAA,GAAAA,EAAA,KAEL,GAAAhK,KAAA0rH,UACA,MAAA7vF,EAGA,GAAAitF,GAAA7kH,EAGA,MAFA2nH,EAAA5rH,MAEA,IAAAsE,WAAAuiH,GAGA,IAAAj/G,EAAA1D,EAAA2H,OAAAg9G,EAAAC,GAIA,OAFA8C,EAAA5rH,MAEA4H,EAGAuvD,EAAAn3D,KAAAyrH,QAAA,uBAEA,IAAAoC,EAAA7tH,KAAAyrH,QAAAhmH,MAAAwjH,EAAAxhF,EACAimF,EACAF,EACAxtH,KAAA6rH,QACA7rH,KAAA8rH,QACA2B,GAMA,SAAAp2G,EAAAy2G,EAAAC,GAWA,GALA/tH,OACAA,KAAAiG,OAAA,KACAjG,KAAAqX,SAAA,OAGAkN,EAAAmnG,UAAA,CACA,IAAAsC,EAAAP,EAAAM,EAGA,GAFA52D,EAAA62D,GAAA,6BAEAA,EAAA,GACA,IAAA5gH,EAAAmX,EAAAsnG,QAAAnmH,MAAA6e,EAAAunG,QAAAvnG,EAAAunG,QAAAkC,GAEAzpG,EAAAunG,SAAAkC,EAEAL,EACAppG,EAAAzb,KAAAsE,IAEAy7G,EAAA//G,KAAAsE,GACA07G,GAAA17G,EAAAzL,QAWA,IANA,IAAAosH,GAAAxpG,EAAAunG,SAAAvnG,EAAAqmG,cACA6C,EAAAlpG,EAAAqmG,WACArmG,EAAAunG,QAAA,EACAvnG,EAAAsnG,QAAA3nH,EAAAS,YAAA4f,EAAAqmG,aAGA,IAAAmD,EAAA,CAOA,GAFAL,GAAAF,EAAAM,EACAN,EAAAM,GACAH,EAAA,SAEA,IAAAM,EAAA1pG,EAAAknG,QAAAhmH,MAAAwjH,EAAAxhF,EAAAimF,EAAAF,EAAAjpG,EAAAsnG,QAAAtnG,EAAAunG,QAAAvnG,EAAAqmG,YAKA,OAHAqD,EAAA52G,gBAEA42G,EAAAhoH,OAAAwhC,GAIA,IAAAkmF,EAAA,SAEAz5F,KAzDA25F,EAAA5nH,OAAAwhC,EACAomF,EAAAx2G,YA4DA6b,EAAAC,SAAAi2F,EAAAC,GACAn2F,EAAAC,SAAAo2F,EAAAF,GACAn2F,EAAAC,SAAAs2F,EAAAJ,GACAn2F,EAAAC,SAAAw2F,EAAAN,GACAn2F,EAAAC,SAAA02F,EAAAR,GACAn2F,EAAAC,SAAA42F,EAAAV,GACAn2F,EAAAC,SAAA82F,EAAAZ,qDCzmBA,SAAAnlH,EAAA8gB,GAGA,IAAAmyC,EAAar3D,EAAQ,IAErBouH,EAAcpuH,EAAQ,KAEtBquH,EAAmBruH,EAAQ,KAE3BsuH,EAAmBtuH,EAAQ,KAE3BuuH,EAAgBvuH,EAAQ,KAExB,QAAA+B,KAAAwsH,EACAxuH,EAAAgC,GAAAwsH,EAAAxsH,GAIAhC,EAAAyuH,KAAA,EACAzuH,EAAAypH,QAAA,EACAzpH,EAAA2pH,QAAA,EACA3pH,EAAA6pH,KAAA,EACA7pH,EAAA+pH,OAAA,EACA/pH,EAAAiqH,WAAA,EACAjqH,EAAAmqH,WAAA,EACAnqH,EAAAqqH,MAAA,EAOA,SAAAb,EAAApnE,GACA,qBAAAA,KAAApiD,EAAAypH,SAAArnE,EAAApiD,EAAAqqH,MACA,UAAArlH,UAAA,gBAGA7E,KAAAwrH,WAAA,KACAxrH,KAAAi0B,IAAA,EACAj0B,KAAAu2D,MAAA,EACAv2D,KAAAuuH,WAAA,EACAvuH,KAAAykH,MAAA,EACAzkH,KAAAirH,SAAA,EACAjrH,KAAAiiD,OACAjiD,KAAAkrH,SAAA,EACAlrH,KAAAgrH,WAAA,EACAhrH,KAAAwuH,mBAAA,EACAxuH,KAAAyuH,eAAA,EACAzuH,KAAA0uH,mBAAA,EAGArF,EAAAzoH,UAAAghH,MAAA,WACA5hH,KAAAwuH,kBACAxuH,KAAAyuH,eAAA,GAIAzuH,KAAAyuH,eAAA,EACAt3D,EAAAn3D,KAAAuuH,UAAA,qBACAp3D,EAAAn3D,KAAAiiD,MAAApiD,EAAAqqH,OAEAlqH,KAAAiiD,OAAApiD,EAAAypH,SAAAtpH,KAAAiiD,OAAApiD,EAAA6pH,MAAA1pH,KAAAiiD,OAAApiD,EAAAiqH,WACAqE,EAAAQ,WAAA3uH,KAAA4uH,MACG5uH,KAAAiiD,OAAApiD,EAAA2pH,SAAAxpH,KAAAiiD,OAAApiD,EAAA+pH,QAAA5pH,KAAAiiD,OAAApiD,EAAAmqH,YAAAhqH,KAAAiiD,OAAApiD,EAAAqqH,OACHkE,EAAAS,WAAA7uH,KAAA4uH,MAGA5uH,KAAAiiD,KAAApiD,EAAAyuH,KACAtuH,KAAAwrH,WAAA,OAGAnC,EAAAzoH,UAAA6E,MAAA,SAAA8wD,EAAAmjB,EAAAo1C,EAAAC,EAAA3hH,EAAA4hH,EAAAC,GACA,OAAAjvH,KAAAuxC,QAAA,EAAAglB,EAAAmjB,EAAAo1C,EAAAC,EAAA3hH,EAAA4hH,EAAAC,IAGA5F,EAAAzoH,UAAAgtH,UAAA,SAAAr3D,EAAAmjB,EAAAo1C,EAAAC,EAAA3hH,EAAA4hH,EAAAC,GACA,OAAAjvH,KAAAuxC,QAAA,EAAAglB,EAAAmjB,EAAAo1C,EAAAC,EAAA3hH,EAAA4hH,EAAAC,IAGA5F,EAAAzoH,UAAA2wC,OAAA,SAAAo8E,EAAAp3D,EAAAmjB,EAAAo1C,EAAAC,EAAA3hH,EAAA4hH,EAAAC,GAUA,GATA93D,EAAAwC,MAAAx4D,UAAAQ,OAAA,GACAw1D,EAAAn3D,KAAAuuH,UAAA,qBACAp3D,EAAAn3D,KAAAiiD,OAAApiD,EAAAyuH,KAAA,qBACAn3D,EAAAwC,OAAA,EAAA35D,KAAAwuH,kBAAA,6BACAr3D,EAAAwC,OAAA,EAAA35D,KAAAyuH,cAAA,oBACAzuH,KAAAwuH,mBAAA,EACAr3D,EAAAwC,OAAA,OAAAz0D,IAAAqxD,EAAA,4BACAv2D,KAAAwuH,mBAAA,EAEAj4D,IAAA12D,EAAAwqH,YAAA9zD,IAAA12D,EAAAyqH,iBAAA/zD,IAAA12D,EAAA0qH,cAAAh0D,IAAA12D,EAAA2qH,cAAAj0D,IAAA12D,EAAA4qH,UAAAl0D,IAAA12D,EAAA6qH,QACA,UAAAhmH,MAAA,uBAiBA,GAdA,MAAAg1E,IACAA,EAAAx1E,EAAA2G,MAAA,GACAkkH,EAAA,EACAD,EAAA,GAGA9uH,KAAA4uH,KAAAM,SAAAH,EACA/uH,KAAA4uH,KAAAl1C,QACA15E,KAAA4uH,KAAAO,QAAAL,EACA9uH,KAAA4uH,KAAAQ,UAAAH,EACAjvH,KAAA4uH,KAAAvyD,OAAAjvD,EACApN,KAAA4uH,KAAAS,SAAAL,EACAhvH,KAAAu2D,SAEAo3D,EAIA,OAFA3tH,KAAAsvH,WAEAtvH,KAAAuvH,cACAvvH,KAAAwvH,kBAGA,EAIA,IAAAjrG,EAAAvkB,KAMA,OALAglB,EAAAmB,SAAA,WACA5B,EAAA+qG,WAEA/qG,EAAAkrG,WAEAzvH,MAGAqpH,EAAAzoH,UAAA4uH,WAAA,WACA,IAAAJ,EAAApvH,KAAA4uH,KAAAQ,UACAF,EAAAlvH,KAAA4uH,KAAAM,SAEA,OADAlvH,KAAAwuH,mBAAA,EACA,CAAAU,EAAAE,IAGA/F,EAAAzoH,UAAA0uH,SAAA,WACA,IAAAI,EAAA,KAIA,OAAA1vH,KAAAiiD,MACA,KAAApiD,EAAAypH,QACA,KAAAzpH,EAAA6pH,KACA,KAAA7pH,EAAAiqH,WACA9pH,KAAAi0B,IAAAk6F,EAAAzB,QAAA1sH,KAAA4uH,KAAA5uH,KAAAu2D,OACA,MAEA,KAAA12D,EAAAqqH,MAKA,OAJAlqH,KAAA4uH,KAAAM,SAAA,IACAQ,EAAA1vH,KAAA4uH,KAAAO,SAGAnvH,KAAA0uH,oBACA,OACA,UAAAgB,EACA,MAGA,GApIA,KAoIA1vH,KAAA4uH,KAAAl1C,MAAAg2C,GAQW,CACX1vH,KAAAiiD,KAAApiD,EAAA2pH,QACA,MANA,GAHAxpH,KAAA0uH,mBAAA,EACAgB,IAEA,IAAA1vH,KAAA4uH,KAAAM,SAEA,MASA,OACA,UAAAQ,EACA,MApJA,MAuJA1vH,KAAA4uH,KAAAl1C,MAAAg2C,IACA1vH,KAAA0uH,mBAAA,EACA1uH,KAAAiiD,KAAApiD,EAAA+pH,QAIA5pH,KAAAiiD,KAAApiD,EAAA2pH,QAGA,MAEA,QACA,UAAA9kH,MAAA,kDAKA,KAAA7E,EAAA2pH,QACA,KAAA3pH,EAAA+pH,OACA,KAAA/pH,EAAAmqH,WAmBA,IAlBAhqH,KAAAi0B,IAAAm6F,EAAAnB,QAAAjtH,KAAA4uH,KAAA5uH,KAAAu2D,OAGAv2D,KAAAi0B,MAAAp0B,EAAAooH,aAAAjoH,KAAAwrH,aAEAxrH,KAAAi0B,IAAAm6F,EAAAuB,qBAAA3vH,KAAA4uH,KAAA5uH,KAAAwrH,YAEAxrH,KAAAi0B,MAAAp0B,EAAAkoH,KAEA/nH,KAAAi0B,IAAAm6F,EAAAnB,QAAAjtH,KAAA4uH,KAAA5uH,KAAAu2D,OACSv2D,KAAAi0B,MAAAp0B,EAAAuoH,eAITpoH,KAAAi0B,IAAAp0B,EAAAooH,cAIAjoH,KAAA4uH,KAAAM,SAAA,GAAAlvH,KAAAiiD,OAAApiD,EAAA+pH,QAAA5pH,KAAAi0B,MAAAp0B,EAAAmoH,cAAA,IAAAhoH,KAAA4uH,KAAAO,QAAA,IAKAnvH,KAAAuoB,QACAvoB,KAAAi0B,IAAAm6F,EAAAnB,QAAAjtH,KAAA4uH,KAAA5uH,KAAAu2D,OAGA,MAEA,QACA,UAAA7xD,MAAA,gBAAA1E,KAAAiiD,QAIAonE,EAAAzoH,UAAA2uH,YAAA,WAEA,OAAAvvH,KAAAi0B,KACA,KAAAp0B,EAAAkoH,KACA,KAAAloH,EAAAyoH,YACA,OAAAtoH,KAAA4uH,KAAAQ,WAAApvH,KAAAu2D,QAAA12D,EAAA4qH,SAGA,OAFAzqH,KAAA4vH,OAAA,2BAEA,EAGA,MAEA,KAAA/vH,EAAAmoH,aAEA,MAEA,KAAAnoH,EAAAooH,YAOA,OANA,MAAAjoH,KAAAwrH,WACAxrH,KAAA4vH,OAAA,sBAEA5vH,KAAA4vH,OAAA,mBAGA,EAEA,QAIA,OAFA5vH,KAAA4vH,OAAA,eAEA,EAGA,UAGAvG,EAAAzoH,UAAA6uH,OAAA,WACA,GAAAzvH,KAAAuvH,cAAA,CAIA,IAAAH,EAAApvH,KAAA4uH,KAAAQ,UACAF,EAAAlvH,KAAA4uH,KAAAM,SACAlvH,KAAAwuH,mBAAA,EAEAxuH,KAAAqX,SAAA63G,EAAAE,GAEApvH,KAAAyuH,eACAzuH,KAAA4hH,UAIAyH,EAAAzoH,UAAAgvH,OAAA,SAAAv9G,GACArS,KAAA4uH,KAAAj0D,MACAtoD,EAAArS,KAAA4uH,KAAAj0D,KAGA36D,KAAA4vD,QAAAv9C,EAAArS,KAAAi0B,KAEAj0B,KAAAwuH,mBAAA,EAEAxuH,KAAAyuH,eACAzuH,KAAA4hH,SAIAyH,EAAAzoH,UAAAqrC,KAAA,SAAA++E,EAAAvG,EAAAwG,EAAAC,EAAAM,GACAr0D,EAAA,IAAAh2D,UAAAQ,QAAA,IAAAR,UAAAQ,OAAA,6DACAw1D,EAAA6zD,GAAA,GAAAA,GAAA,yBACA7zD,EAAAstD,IAAA,GAAAA,GAAA,+BACAttD,EAAA8zD,GAAA,GAAAA,GAAA,sBACA9zD,EAAA+zD,IAAArrH,EAAAsrH,YAAAD,IAAArrH,EAAAurH,gBAAAF,IAAArrH,EAAAwrH,OAAAH,IAAArrH,EAAAyrH,SAAAJ,IAAArrH,EAAA0rH,mBAAA,oBAEAvrH,KAAA6vH,MAAApL,EAAAuG,EAAAC,EAAAC,EAAAM,GAEAxrH,KAAA8vH,kBAGAzG,EAAAzoH,UAAA0rB,OAAA,WACA,UAAA5nB,MAAA,gCAGA2kH,EAAAzoH,UAAA2nB,MAAA,WACAvoB,KAAA+vH,SAEA/vH,KAAA8vH,kBAGAzG,EAAAzoH,UAAAivH,MAAA,SAAApL,EAAAuG,EAAAC,EAAAC,EAAAM,GAsBA,OArBAxrH,KAAAykH,QACAzkH,KAAAgrH,aACAhrH,KAAAirH,WACAjrH,KAAAkrH,WACAlrH,KAAAu2D,MAAA12D,EAAAwqH,WACArqH,KAAAi0B,IAAAp0B,EAAAkoH,KAEA/nH,KAAAiiD,OAAApiD,EAAA6pH,MAAA1pH,KAAAiiD,OAAApiD,EAAA+pH,SACA5pH,KAAAgrH,YAAA,IAGAhrH,KAAAiiD,OAAApiD,EAAAqqH,QACAlqH,KAAAgrH,YAAA,IAGAhrH,KAAAiiD,OAAApiD,EAAAiqH,YAAA9pH,KAAAiiD,OAAApiD,EAAAmqH,aACAhqH,KAAAgrH,YAAA,EAAAhrH,KAAAgrH,YAGAhrH,KAAA4uH,KAAA,IAAAV,EAEAluH,KAAAiiD,MACA,KAAApiD,EAAAypH,QACA,KAAAzpH,EAAA6pH,KACA,KAAA7pH,EAAAiqH,WACA9pH,KAAAi0B,IAAAk6F,EAAA6B,aAAAhwH,KAAA4uH,KAAA5uH,KAAAykH,MAAA5kH,EAAAowH,WAAAjwH,KAAAgrH,WAAAhrH,KAAAirH,SAAAjrH,KAAAkrH,UACA,MAEA,KAAArrH,EAAA2pH,QACA,KAAA3pH,EAAA+pH,OACA,KAAA/pH,EAAAmqH,WACA,KAAAnqH,EAAAqqH,MACAlqH,KAAAi0B,IAAAm6F,EAAA8B,aAAAlwH,KAAA4uH,KAAA5uH,KAAAgrH,YACA,MAEA,QACA,UAAAtmH,MAAA,gBAAA1E,KAAAiiD,MAGAjiD,KAAAi0B,MAAAp0B,EAAAkoH,MACA/nH,KAAA4vH,OAAA,cAGA5vH,KAAAwrH,aACAxrH,KAAAwuH,mBAAA,EACAxuH,KAAAuuH,WAAA,GAGAlF,EAAAzoH,UAAAkvH,eAAA,WACA,SAAA9vH,KAAAwrH,WAAA,CAMA,OAFAxrH,KAAAi0B,IAAAp0B,EAAAkoH,KAEA/nH,KAAAiiD,MACA,KAAApiD,EAAAypH,QACA,KAAAzpH,EAAAiqH,WACA9pH,KAAAi0B,IAAAk6F,EAAAgC,qBAAAnwH,KAAA4uH,KAAA5uH,KAAAwrH,YAOAxrH,KAAAi0B,MAAAp0B,EAAAkoH,MACA/nH,KAAA4vH,OAAA,8BAIAvG,EAAAzoH,UAAAmvH,OAAA,WAGA,OAFA/vH,KAAAi0B,IAAAp0B,EAAAkoH,KAEA/nH,KAAAiiD,MACA,KAAApiD,EAAAypH,QACA,KAAAzpH,EAAAiqH,WACA,KAAAjqH,EAAA6pH,KACA1pH,KAAAi0B,IAAAk6F,EAAAiC,aAAApwH,KAAA4uH,MACA,MAEA,KAAA/uH,EAAA2pH,QACA,KAAA3pH,EAAAmqH,WACA,KAAAnqH,EAAA+pH,OACA5pH,KAAAi0B,IAAAm6F,EAAAiC,aAAArwH,KAAA4uH,MAOA5uH,KAAAi0B,MAAAp0B,EAAAkoH,MACA/nH,KAAA4vH,OAAA,2BAIA/vH,EAAAwpH,qDChaAzpH,EAAAC,QAAA,SAAA2E,GACA,OAAAA,GAAA,kBAAAA,GAAA,oBAAAA,EAAAwB,MAAA,oBAAAxB,EAAAgH,MAAA,oBAAAhH,EAAA8J,yCC0DA1O,EAAAC,QAxCA,WAEAG,KAAA05E,MAAA,KAEA15E,KAAAmvH,QAAA,EAGAnvH,KAAAkvH,SAAA,EAGAlvH,KAAAswH,SAAA,EAGAtwH,KAAAq8D,OAAA,KAEAr8D,KAAAqvH,SAAA,EAGArvH,KAAAovH,UAAA,EAGApvH,KAAAuwH,UAAA,EAGAvwH,KAAA26D,IAAA,GAKA36D,KAAAoW,MAAA,KAGApW,KAAAwwH,UAAA,EAKAxwH,KAAA8/D,MAAA,iCCrCA,IA2pCA2wD,EA3pCAC,EAAY5wH,EAAQ,IAEpB6wH,EAAY7wH,EAAQ,KAEpB8wH,EAAc9wH,EAAQ,IAEtBumH,EAAYvmH,EAAQ,IAEpB66D,EAAU76D,EAAQ,KAQlBuqH,EAAA,EACAC,EAAA,EAEAE,EAAA,EACAC,EAAA,EACAC,EAAA,EAMA3C,EAAA,EACAC,EAAA,EAGAG,GAAA,EACAC,GAAA,EAEAE,GAAA,EAOAZ,GAAA,EACAyD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAMAsF,EAAA,EAGAZ,EAAA,EAGAa,EAAA,EAGAC,EAAA,GAGAC,EAAA,EAOAC,EAAAC,IAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,EAAAJ,EAAA,EAGAK,EAAA,GAGAC,EAAA,EACAC,EAAA,IACAC,EAAAD,EAAAD,EAAA,EACAG,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAEA,SAAAr+F,EAAA26F,EAAA2D,GAEA,OADA3D,EAAAj0D,MAAA43D,GACAA,EAGA,SAAAC,EAAA/3D,GACA,OAAAA,GAAA,IAAAA,EAAA,OAGA,SAAAvjC,EAAAtvB,GAGA,IAFA,IAAA9B,EAAA8B,EAAAjG,SAEAmE,GAAA,GACA8B,EAAA9B,GAAA,EAWA,SAAA2sH,GAAA7D,GACA,IAAA5+F,EAAA4+F,EAAAx4G,MAEAtQ,EAAAkqB,EAAA0iG,QAEA5sH,EAAA8oH,EAAAQ,YACAtpH,EAAA8oH,EAAAQ,WAGA,IAAAtpH,IAIA4qH,EAAAvpF,SAAAynF,EAAAvyD,OAAArsC,EAAA2iG,YAAA3iG,EAAA4iG,YAAA9sH,EAAA8oH,EAAAS,UACAT,EAAAS,UAAAvpH,EACAkqB,EAAA4iG,aAAA9sH,EACA8oH,EAAA2B,WAAAzqH,EACA8oH,EAAAQ,WAAAtpH,EACAkqB,EAAA0iG,SAAA5sH,EAEA,IAAAkqB,EAAA0iG,UACA1iG,EAAA4iG,YAAA,IAIA,SAAAC,GAAA7iG,EAAA1b,GACAq8G,EAAAmC,gBAAA9iG,IAAA+iG,aAAA,EAAA/iG,EAAA+iG,aAAA,EAAA/iG,EAAAgjG,SAAAhjG,EAAA+iG,YAAAz+G,GAEA0b,EAAA+iG,YAAA/iG,EAAAgjG,SACAP,GAAAziG,EAAA4+F,MAGA,SAAAqE,GAAAjjG,EAAA7vB,GACA6vB,EAAA2iG,YAAA3iG,EAAA0iG,WAAAvyH,EASA,SAAA+yH,GAAAljG,EAAA7vB,GAGA6vB,EAAA2iG,YAAA3iG,EAAA0iG,WAAAvyH,IAAA,MACA6vB,EAAA2iG,YAAA3iG,EAAA0iG,WAAA,IAAAvyH,EAWA,SAAAgzH,GAAAvE,EAAAhnH,EAAA8B,EAAAnD,GACA,IAAAT,EAAA8oH,EAAAM,SAMA,OAJAppH,EAAAS,IACAT,EAAAS,GAGA,IAAAT,EACA,GAGA8oH,EAAAM,UAAAppH,EAEA4qH,EAAAvpF,SAAAv/B,EAAAgnH,EAAAl1C,MAAAk1C,EAAAO,QAAArpH,EAAA4D,GAEA,IAAAklH,EAAAx4G,MAAAg+C,KACAw6D,EAAA9uD,MAAA8wD,EAAAhC,EAAA9uD,MAAAl4D,EAAA9B,EAAA4D,GACG,IAAAklH,EAAAx4G,MAAAg+C,OACHw6D,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAAl4D,EAAA9B,EAAA4D,IAGAklH,EAAAO,SAAArpH,EACA8oH,EAAA0B,UAAAxqH,EACAA,GAaA,SAAAstH,GAAApjG,EAAAqjG,GACA,IAMA5mH,EAGA3G,EATAwtH,EAAAtjG,EAAAujG,iBAGAC,EAAAxjG,EAAAgjG,SASAS,EAAAzjG,EAAA0jG,YAGAC,EAAA3jG,EAAA2jG,WAGA5jH,EAAAigB,EAAAgjG,SAAAhjG,EAAA4jG,OAAAnC,EAAAzhG,EAAAgjG,UAAAhjG,EAAA4jG,OAAAnC,GAAA,EAGAoC,EAAA7jG,EAAA9X,OAEA47G,EAAA9jG,EAAA+jG,OACAr3D,EAAA1sC,EAAA0sC,KAKAs3D,EAAAhkG,EAAAgjG,SAAAxB,EACAyC,EAAAJ,EAAAL,EAAAC,EAAA,GACAS,EAAAL,EAAAL,EAAAC,GAQAzjG,EAAA0jG,aAAA1jG,EAAAmkG,aACAb,IAAA,GAOAK,EAAA3jG,EAAAokG,YACAT,EAAA3jG,EAAAokG,WAIA,GAYA,GAAAP,GAVApnH,EAAA4mH,GAUAI,KAAAS,GAAAL,EAAApnH,EAAAgnH,EAAA,KAAAQ,GAAAJ,EAAApnH,KAAAonH,EAAAL,IAAAK,IAAApnH,KAAAonH,EAAAL,EAAA,IAWAA,GAAA,EACA/mH,IAMA,UAEKonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAAonH,IAAAL,KAAAK,IAAApnH,IAAA+mH,EAAAQ,GAML,GAHAluH,EAAA0rH,GAAAwC,EAAAR,GACAA,EAAAQ,EAAAxC,EAEA1rH,EAAA2tH,EAAA,CAIA,GAHAzjG,EAAAqkG,YAAAhB,EACAI,EAAA3tH,EAEAA,GAAA6tH,EACA,MAGAM,EAAAJ,EAAAL,EAAAC,EAAA,GACAS,EAAAL,EAAAL,EAAAC,YAEGJ,EAAA32D,EAAA22D,EAAAS,IAAA/jH,GAAA,MAAAujH,GAEH,OAAAG,GAAAzjG,EAAAokG,UACAX,EAGAzjG,EAAAokG,UAcA,SAAAE,GAAAtkG,GACA,IACAxvB,EAAAsG,EAAAC,EAAAwtH,EAAA3rH,EADA4rH,EAAAxkG,EAAA4jG,OAGA,GAoBA,GAnBAW,EAAAvkG,EAAAykG,YAAAzkG,EAAAokG,UAAApkG,EAAAgjG,SAmBAhjG,EAAAgjG,UAAAwB,KAAA/C,GAAA,CACAf,EAAAvpF,SAAAnX,EAAA9X,OAAA8X,EAAA9X,OAAAs8G,IAAA,GACAxkG,EAAAqkG,aAAAG,EACAxkG,EAAAgjG,UAAAwB,EAGAxkG,EAAA+iG,aAAAyB,EASAh0H,EADAsG,EAAAkpB,EAAA0kG,UAGA,GACA3tH,EAAAipB,EAAAmiC,OAAA3xD,GACAwvB,EAAAmiC,KAAA3xD,GAAAuG,GAAAytH,EAAAztH,EAAAytH,EAAA,UACO1tH,GAGPtG,EADAsG,EAAA0tH,EAGA,GACAztH,EAAAipB,EAAA0sC,OAAAl8D,GACAwvB,EAAA0sC,KAAAl8D,GAAAuG,GAAAytH,EAAAztH,EAAAytH,EAAA,UAIO1tH,GAEPytH,GAAAC,EAGA,OAAAxkG,EAAA4+F,KAAAM,SACA,MAoBA,GAJApoH,EAAAqsH,GAAAnjG,EAAA4+F,KAAA5+F,EAAA9X,OAAA8X,EAAAgjG,SAAAhjG,EAAAokG,UAAAG,GACAvkG,EAAAokG,WAAAttH,EAGAkpB,EAAAokG,UAAApkG,EAAAG,QAAAohG,EASA,IARA3oH,EAAAonB,EAAAgjG,SAAAhjG,EAAAG,OACAH,EAAA2kG,MAAA3kG,EAAA9X,OAAAtP,GAGAonB,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAAtP,EAAA,IAAAonB,EAAA6kG,UAIA7kG,EAAAG,SAEAH,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAAtP,EAAA2oH,EAAA,IAAAvhG,EAAA6kG,UACA7kG,EAAA0sC,KAAA9zD,EAAAonB,EAAA+jG,QAAA/jG,EAAAmiC,KAAAniC,EAAA2kG,OACA3kG,EAAAmiC,KAAAniC,EAAA2kG,OAAA/rH,EACAA,IACAonB,EAAAG,WAEAH,EAAAokG,UAAApkG,EAAAG,OAAAohG,aASGvhG,EAAAokG,UAAA3C,GAAA,IAAAzhG,EAAA4+F,KAAAM,UAgKH,SAAA4F,GAAA9kG,EAAAumC,GAOA,IANA,IAAAw+D,EAGAC,IAGS,CAMT,GAAAhlG,EAAAokG,UAAA3C,EAAA,CAGA,GAFA6C,GAAAtkG,GAEAA,EAAAokG,UAAA3C,GAAAl7D,IAAA8zD,EACA,OAAA6H,EAGA,OAAAliG,EAAAokG,UACA,MAoCA,GA3BAW,EAAA,EAIA/kG,EAAAokG,WAAA7C,IAEAvhG,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAA8X,EAAAgjG,SAAAzB,EAAA,IAAAvhG,EAAA6kG,UACAE,EAAA/kG,EAAA0sC,KAAA1sC,EAAAgjG,SAAAhjG,EAAA+jG,QAAA/jG,EAAAmiC,KAAAniC,EAAA2kG,OACA3kG,EAAAmiC,KAAAniC,EAAA2kG,OAAA3kG,EAAAgjG,UAQA,IAAA+B,GAEA/kG,EAAAgjG,SAAA+B,GAAA/kG,EAAA4jG,OAAAnC,IAKAzhG,EAAAilG,aAAA7B,GAAApjG,EAAA+kG,IAIA/kG,EAAAilG,cAAA1D,EAWA,GANAyD,EAAArE,EAAAuE,UAAAllG,IAAAgjG,SAAAhjG,EAAAqkG,YAAArkG,EAAAilG,aAAA1D,GACAvhG,EAAAokG,WAAApkG,EAAAilG,aAKAjlG,EAAAilG,cAAAjlG,EAAAmlG,gBAEAnlG,EAAAokG,WAAA7C,EAAA,CACAvhG,EAAAilG,eAGA,GACAjlG,EAAAgjG,WAGAhjG,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAA8X,EAAAgjG,SAAAzB,EAAA,IAAAvhG,EAAA6kG,UACAE,EAAA/kG,EAAA0sC,KAAA1sC,EAAAgjG,SAAAhjG,EAAA+jG,QAAA/jG,EAAAmiC,KAAAniC,EAAA2kG,OACA3kG,EAAAmiC,KAAAniC,EAAA2kG,OAAA3kG,EAAAgjG,eAMS,MAAAhjG,EAAAilG,cAETjlG,EAAAgjG,gBAEAhjG,EAAAgjG,UAAAhjG,EAAAilG,aACAjlG,EAAAilG,aAAA,EACAjlG,EAAA2kG,MAAA3kG,EAAA9X,OAAA8X,EAAAgjG,UAGAhjG,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAA8X,EAAAgjG,SAAA,IAAAhjG,EAAA6kG,eAaAG,EAAArE,EAAAuE,UAAAllG,EAAA,EAAAA,EAAA9X,OAAA8X,EAAAgjG,WACAhjG,EAAAokG,YACApkG,EAAAgjG,WAGA,GAAAgC,IAEAnC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA,OAAA8C,EASA,OAFAliG,EAAAG,OAAAH,EAAAgjG,SAAAzB,EAAA,EAAAvhG,EAAAgjG,SAAAzB,EAAA,EAEAh7D,IAAAk0D,GAEAoI,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,UACAgD,EAKAC,GAGAriG,EAAAolG,WAEAvC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA8C,EAMAC,EASA,SAAAkD,GAAArlG,EAAAumC,GAUA,IATA,IAAAw+D,EAGAC,EAGAM,IAGS,CAMT,GAAAtlG,EAAAokG,UAAA3C,EAAA,CAGA,GAFA6C,GAAAtkG,GAEAA,EAAAokG,UAAA3C,GAAAl7D,IAAA8zD,EACA,OAAA6H,EAGA,OAAAliG,EAAAokG,UACA,MAuDA,GA7CAW,EAAA,EAIA/kG,EAAAokG,WAAA7C,IAEAvhG,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAA8X,EAAAgjG,SAAAzB,EAAA,IAAAvhG,EAAA6kG,UACAE,EAAA/kG,EAAA0sC,KAAA1sC,EAAAgjG,SAAAhjG,EAAA+jG,QAAA/jG,EAAAmiC,KAAAniC,EAAA2kG,OACA3kG,EAAAmiC,KAAAniC,EAAA2kG,OAAA3kG,EAAAgjG,UAOAhjG,EAAA0jG,YAAA1jG,EAAAilG,aACAjlG,EAAAulG,WAAAvlG,EAAAqkG,YACArkG,EAAAilG,aAAA1D,EAAA,EAEA,IAAAwD,GAEA/kG,EAAA0jG,YAAA1jG,EAAAmlG,gBAAAnlG,EAAAgjG,SAAA+B,GAAA/kG,EAAA4jG,OAAAnC,IAOAzhG,EAAAilG,aAAA7B,GAAApjG,EAAA+kG,GAGA/kG,EAAAilG,cAAA,IAAAjlG,EAAAk7F,WAAAC,GAAAn7F,EAAAilG,eAAA1D,GAAAvhG,EAAAgjG,SAAAhjG,EAAAqkG,YAAA,QAMArkG,EAAAilG,aAAA1D,EAAA,IAQAvhG,EAAA0jG,aAAAnC,GAAAvhG,EAAAilG,cAAAjlG,EAAA0jG,YAAA,CACA4B,EAAAtlG,EAAAgjG,SAAAhjG,EAAAokG,UAAA7C,EAOAyD,EAAArE,EAAAuE,UAAAllG,IAAAgjG,SAAA,EAAAhjG,EAAAulG,WAAAvlG,EAAA0jG,YAAAnC,GAOAvhG,EAAAokG,WAAApkG,EAAA0jG,YAAA,EACA1jG,EAAA0jG,aAAA,EAEA,KACA1jG,EAAAgjG,UAAAsC,IAEAtlG,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAA8X,EAAAgjG,SAAAzB,EAAA,IAAAvhG,EAAA6kG,UACAE,EAAA/kG,EAAA0sC,KAAA1sC,EAAAgjG,SAAAhjG,EAAA+jG,QAAA/jG,EAAAmiC,KAAAniC,EAAA2kG,OACA3kG,EAAAmiC,KAAAniC,EAAA2kG,OAAA3kG,EAAAgjG,gBAGO,MAAAhjG,EAAA0jG,aAMP,GAJA1jG,EAAAwlG,gBAAA,EACAxlG,EAAAilG,aAAA1D,EAAA,EACAvhG,EAAAgjG,WAEAgC,IAEAnC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA,OAAA8C,OAKK,GAAAliG,EAAAwlG,iBAmBL,IAXAR,EAAArE,EAAAuE,UAAAllG,EAAA,EAAAA,EAAA9X,OAAA8X,EAAAgjG,SAAA,MAIAH,GAAA7iG,GAAA,GAIAA,EAAAgjG,WACAhjG,EAAAokG,YAEA,IAAApkG,EAAA4+F,KAAAQ,UACA,OAAA8C,OAMAliG,EAAAwlG,gBAAA,EACAxlG,EAAAgjG,WACAhjG,EAAAokG,YAeA,OAVApkG,EAAAwlG,kBAIAR,EAAArE,EAAAuE,UAAAllG,EAAA,EAAAA,EAAA9X,OAAA8X,EAAAgjG,SAAA,IACAhjG,EAAAwlG,gBAAA,GAGAxlG,EAAAG,OAAAH,EAAAgjG,SAAAzB,EAAA,EAAAvhG,EAAAgjG,SAAAzB,EAAA,EAEAh7D,IAAAk0D,GAEAoI,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,UACAgD,EAKAC,GAGAriG,EAAAolG,WAEAvC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA8C,EAMAC,EA8MA,SAAAsD,GAAAC,EAAAC,EAAAC,EAAAC,EAAAx+D,GACAr3D,KAAA01H,cACA11H,KAAA21H,WACA31H,KAAA41H,cACA51H,KAAA61H,YACA71H,KAAAq3D,OAqDA,SAAAy+D,KACA91H,KAAA4uH,KAAA,KAGA5uH,KAAA+1H,OAAA,EAGA/1H,KAAA2yH,YAAA,KAGA3yH,KAAAg2H,iBAAA,EAGAh2H,KAAA4yH,YAAA,EAGA5yH,KAAA0yH,QAAA,EAGA1yH,KAAAo0D,KAAA,EAGAp0D,KAAAi2H,OAAA,KAGAj2H,KAAAk2H,QAAA,EAGAl2H,KAAA+tB,OAAAkiG,EAGAjwH,KAAAm2H,YAAA,EAGAn2H,KAAA4zH,OAAA,EAGA5zH,KAAAo2H,OAAA,EAGAp2H,KAAA+zH,OAAA,EAGA/zH,KAAAkY,OAAA,KAQAlY,KAAAy0H,YAAA,EAKAz0H,KAAA08D,KAAA,KAMA18D,KAAAmyD,KAAA,KAGAnyD,KAAA20H,MAAA,EAGA30H,KAAA00H,UAAA,EAGA10H,KAAAq2H,UAAA,EAGAr2H,KAAA60H,UAAA,EAGA70H,KAAA40H,WAAA,EAOA50H,KAAA+yH,YAAA,EAKA/yH,KAAAi1H,aAAA,EAGAj1H,KAAAu1H,WAAA,EAGAv1H,KAAAw1H,gBAAA,EAGAx1H,KAAAgzH,SAAA,EAGAhzH,KAAAq0H,YAAA,EAGAr0H,KAAAo0H,UAAA,EAGAp0H,KAAA0zH,YAAA,EAKA1zH,KAAAuzH,iBAAA,EAMAvzH,KAAAm1H,eAAA,EAaAn1H,KAAAykH,MAAA,EAGAzkH,KAAAkrH,SAAA,EAGAlrH,KAAAm0H,WAAA,EAGAn0H,KAAA2zH,WAAA,EAYA3zH,KAAAs2H,UAAA,IAAA5F,EAAA7oF,MAAA,EAAAwpF,GACArxH,KAAAu2H,UAAA,IAAA7F,EAAA7oF,MAAA,KAAAspF,EAAA,IACAnxH,KAAAw2H,QAAA,IAAA9F,EAAA7oF,MAAA,KAAAupF,EAAA,IACAl6F,EAAAl3B,KAAAs2H,WACAp/F,EAAAl3B,KAAAu2H,WACAr/F,EAAAl3B,KAAAw2H,SACAx2H,KAAAy2H,OAAA,KAGAz2H,KAAA02H,OAAA,KAGA12H,KAAA22H,QAAA,KAIA32H,KAAA42H,SAAA,IAAAlG,EAAA7oF,MAAAypF,EAAA,GAIAtxH,KAAA62H,KAAA,IAAAnG,EAAA7oF,MAAA,EAAAopF,EAAA,GAGA/5F,EAAAl3B,KAAA62H,MACA72H,KAAA82H,SAAA,EAGA92H,KAAA+2H,SAAA,EAOA/2H,KAAAs7D,MAAA,IAAAo1D,EAAA7oF,MAAA,EAAAopF,EAAA,GAEA/5F,EAAAl3B,KAAAs7D,OAIAt7D,KAAAg3H,MAAA,EAGAh3H,KAAAi3H,YAAA,EAoBAj3H,KAAAo1H,SAAA,EAGAp1H,KAAAk3H,MAAA,EAMAl3H,KAAAm3H,QAAA,EAGAn3H,KAAAo3H,WAAA,EAGAp3H,KAAAquD,QAAA,EAGAruD,KAAAmwB,OAAA,EAGAnwB,KAAAq3H,OAAA,EAKAr3H,KAAAs3H,SAAA,EAeA,SAAAC,GAAA3I,GACA,IAAA5+F,EAEA,OAAA4+F,KAAAx4G,OAIAw4G,EAAA0B,SAAA1B,EAAA2B,UAAA,EACA3B,EAAA4B,UAAAK,GACA7gG,EAAA4+F,EAAAx4G,OACAs8G,QAAA,EACA1iG,EAAA4iG,YAAA,EAEA5iG,EAAAokC,KAAA,IACApkC,EAAAokC,MAAApkC,EAAAokC,MAIApkC,EAAA+lG,OAAA/lG,EAAAokC,KAAAu9D,EAAAK,EACApD,EAAA9uD,MAAA,IAAA9vC,EAAAokC,KAAA,EACA,EAEApkC,EAAAmmG,WAAA9L,EAEAsG,EAAA6G,SAAAxnG,GAEA+3F,GAtBA9zF,EAAA26F,EAAAzG,GAyBA,SAAAiI,GAAAxB,GACA,IApTA5+F,EAoTA7iB,EAAAoqH,GAAA3I,GAMA,OAJAzhH,IAAA46G,KAtTA/3F,EAuTA4+F,EAAAx4G,OAtTAq+G,YAAA,EAAAzkG,EAAA4jG,OAGA18F,EAAAlH,EAAAmiC,MAKAniC,EAAAmlG,eAAA1E,EAAAzgG,EAAAy0F,OAAAkR,SACA3lG,EAAAmkG,WAAA1D,EAAAzgG,EAAAy0F,OAAAiR,YACA1lG,EAAA2jG,WAAAlD,EAAAzgG,EAAAy0F,OAAAmR,YACA5lG,EAAAujG,iBAAA9C,EAAAzgG,EAAAy0F,OAAAoR,UACA7lG,EAAAgjG,SAAA,EACAhjG,EAAA+iG,YAAA,EACA/iG,EAAAokG,UAAA,EACApkG,EAAAG,OAAA,EACAH,EAAAilG,aAAAjlG,EAAA0jG,YAAAnC,EAAA,EACAvhG,EAAAwlG,gBAAA,EACAxlG,EAAA2kG,MAAA,GAuSAxnH,EAgBA,SAAA6iH,GAAApB,EAAAnK,EAAA12F,EAAAi9F,EAAAC,EAAAC,GACA,IAAA0D,EAEA,OAAAzG,EAGA,IAAA/zD,EAAA,EAiBA,GAfAqwD,IAAAiD,IACAjD,EAAA,GAGAuG,EAAA,GAEA52D,EAAA,EACA42D,MACGA,EAAA,KACH52D,EAAA,EAGA42D,GAAA,IAGAC,EAAA,GAAAA,EAAA6F,GAAA/iG,IAAAkiG,GAAAjF,EAAA,GAAAA,EAAA,IAAAvG,EAAA,GAAAA,EAAA,GAAAyG,EAAA,GAAAA,EAAAI,EACA,OAAAr3F,EAAA26F,EAAAzG,GAGA,IAAA6C,IACAA,EAAA,GAKA,IAAAh7F,EAAA,IAAA8lG,GAgCA,OA/BAlH,EAAAx4G,MAAA4Z,EACAA,EAAA4+F,OACA5+F,EAAAokC,OACApkC,EAAAimG,OAAA,KACAjmG,EAAAomG,OAAApL,EACAh7F,EAAA4jG,OAAA,GAAA5jG,EAAAomG,OACApmG,EAAA+jG,OAAA/jG,EAAA4jG,OAAA,EACA5jG,EAAAqmG,UAAApL,EAAA,EACAj7F,EAAA0kG,UAAA,GAAA1kG,EAAAqmG,UACArmG,EAAA6kG,UAAA7kG,EAAA0kG,UAAA,EACA1kG,EAAA4kG,eAAA5kG,EAAAqmG,UAAA9E,EAAA,GAAAA,GACAvhG,EAAA9X,OAAA,IAAAw4G,EAAA9oF,KAAA,EAAA5X,EAAA4jG,QACA5jG,EAAAmiC,KAAA,IAAAu+D,EAAA7oF,MAAA7X,EAAA0kG,WACA1kG,EAAA0sC,KAAA,IAAAg0D,EAAA7oF,MAAA7X,EAAA4jG,QAGA5jG,EAAAinG,YAAA,GAAAhM,EAAA,EAGAj7F,EAAAgmG,iBAAA,EAAAhmG,EAAAinG,YAGAjnG,EAAA2iG,YAAA,IAAAjC,EAAA9oF,KAAA5X,EAAAgmG,kBAGAhmG,EAAAknG,MAAA,EAAAlnG,EAAAinG,YAEAjnG,EAAAgnG,MAAA,EAAAhnG,EAAAinG,YACAjnG,EAAAy0F,QACAz0F,EAAAk7F,WACAl7F,EAAAjC,SACAqiG,GAAAxB,GAtaA6B,EAAA,CAEA,IAAAgF,GAAA,QAnqBA,SAAAzlG,EAAAumC,GAIA,IAAAkhE,EAAA,MAQA,IANAA,EAAAznG,EAAAgmG,iBAAA,IACAyB,EAAAznG,EAAAgmG,iBAAA,KAKS,CAET,GAAAhmG,EAAAokG,WAAA,GASA,GAFAE,GAAAtkG,GAEA,IAAAA,EAAAokG,WAAA79D,IAAA8zD,EACA,OAAA6H,EAGA,OAAAliG,EAAAokG,UACA,MAQApkG,EAAAgjG,UAAAhjG,EAAAokG,UACApkG,EAAAokG,UAAA,EAGA,IAAAsD,EAAA1nG,EAAA+iG,YAAA0E,EAEA,QAAAznG,EAAAgjG,UAAAhjG,EAAAgjG,UAAA0E,KAEA1nG,EAAAokG,UAAApkG,EAAAgjG,SAAA0E,EACA1nG,EAAAgjG,SAAA0E,EAGA7E,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA,OAAA8C,EAUA,GAAAliG,EAAAgjG,SAAAhjG,EAAA+iG,aAAA/iG,EAAA4jG,OAAAnC,IAEAoB,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA,OAAA8C,EASA,OAFAliG,EAAAG,OAAA,EAEAomC,IAAAk0D,GAEAoI,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,UACAgD,EAKAC,IAGAriG,EAAAgjG,SAAAhjG,EAAA+iG,cAEAF,GAAA7iG,GAAA,GAEAA,EAAA4+F,KAAAQ,WACA8C,KAwkBA,IAAAuD,GAAA,QAAAX,IAEA,IAAAW,GAAA,SAAAX,IAEA,IAAAW,GAAA,UAAAX,IAEA,IAAAW,GAAA,UAAAJ,IAEA,IAAAI,GAAA,WAAAJ,IAEA,IAAAI,GAAA,aAAAJ,IAEA,IAAAI,GAAA,aAAAJ,IAEA,IAAAI,GAAA,gBAAAJ,IAEA,IAAAI,GAAA,gBAAAJ,KA84BAx1H,EAAA83H,YAzfA,SAAA/I,EAAAnK,GACA,OAAAuL,GAAApB,EAAAnK,EAAAwL,EAAAc,EAAAC,EAAAzF,IAyfA1rH,EAAAmwH,gBACAnwH,EAAAuwH,gBACAvwH,EAAA03H,oBACA13H,EAAA+3H,iBA9kBA,SAAAhJ,EAAAz8D,GACA,OAAAy8D,KAAAx4G,MAIA,IAAAw4G,EAAAx4G,MAAAg+C,KACA+zD,GAGAyG,EAAAx4G,MAAA6/G,OAAA9jE,EACA41D,GARAI,GA6kBAtoH,EAAA6sH,QA1fA,SAAAkC,EAAAr4D,GACA,IAAAshE,EAAA7nG,EACA8nG,EAAA5xH,EAEA,IAAA0oH,MAAAx4G,OAAAmgD,EAAAm0D,GAAAn0D,EAAA,EACA,OAAAq4D,EAAA36F,EAAA26F,EAAAzG,KAKA,GAFAn4F,EAAA4+F,EAAAx4G,OAEAw4G,EAAAvyD,SAAAuyD,EAAAl1C,OAAA,IAAAk1C,EAAAM,UAAAl/F,EAAA+lG,SAAA9D,GAAA17D,IAAAk0D,EACA,OAAAx2F,EAAA26F,EAAA,IAAAA,EAAAQ,UAAA9G,EAAAH,GAUA,GAPAn4F,EAAA4+F,OAGAiJ,EAAA7nG,EAAAmmG,WACAnmG,EAAAmmG,WAAA5/D,EAGAvmC,EAAA+lG,SAAApE,EACA,OAAA3hG,EAAAokC,KAEAw6D,EAAA9uD,MAAA,EAEAmzD,GAAAjjG,EAAA,IACAijG,GAAAjjG,EAAA,KACAijG,GAAAjjG,EAAA,GAEAA,EAAAimG,QAWAhD,GAAAjjG,KAAAimG,OAAA5zG,KAAA,MAAA2N,EAAAimG,OAAA8B,KAAA,MAAA/nG,EAAAimG,OAAA+B,MAAA,MAAAhoG,EAAAimG,OAAA9uG,KAAA,MAAA6I,EAAAimG,OAAAgC,QAAA,OACAhF,GAAAjjG,EAAA,IAAAA,EAAAimG,OAAAz3D,MACAy0D,GAAAjjG,IAAAimG,OAAAz3D,MAAA,OACAy0D,GAAAjjG,IAAAimG,OAAAz3D,MAAA,QACAy0D,GAAAjjG,IAAAimG,OAAAz3D,MAAA,QACAy0D,GAAAjjG,EAAA,IAAAA,EAAAy0F,MAAA,EAAAz0F,EAAAk7F,UAAAE,GAAAp7F,EAAAy0F,MAAA,OACAwO,GAAAjjG,EAAA,IAAAA,EAAAimG,OAAAiC,IAEAloG,EAAAimG,OAAA+B,OAAAhoG,EAAAimG,OAAA+B,MAAAr2H,SACAsxH,GAAAjjG,EAAA,IAAAA,EAAAimG,OAAA+B,MAAAr2H,QACAsxH,GAAAjjG,IAAAimG,OAAA+B,MAAAr2H,QAAA,QAGAquB,EAAAimG,OAAA8B,OACAnJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAA,IAGA1iG,EAAAkmG,QAAA,EACAlmG,EAAA+lG,OAAAnE,IA3BAqB,GAAAjjG,EAAA,GACAijG,GAAAjjG,EAAA,GACAijG,GAAAjjG,EAAA,GACAijG,GAAAjjG,EAAA,GACAijG,GAAAjjG,EAAA,GACAijG,GAAAjjG,EAAA,IAAAA,EAAAy0F,MAAA,EAAAz0F,EAAAk7F,UAAAE,GAAAp7F,EAAAy0F,MAAA,OACAwO,GAAAjjG,EAAAsiG,GACAtiG,EAAA+lG,OAAA/D,OAuBA,CACA,IAAAmG,EAAAlI,GAAAjgG,EAAAomG,OAAA,SAaA+B,IAVAnoG,EAAAk7F,UAAAE,GAAAp7F,EAAAy0F,MAAA,EACA,EACSz0F,EAAAy0F,MAAA,EACT,EACS,IAAAz0F,EAAAy0F,MACT,EAEA,IAGA,EAEA,IAAAz0F,EAAAgjG,WACAmF,GAAAzG,GAGAyG,GAAA,GAAAA,EAAA,GACAnoG,EAAA+lG,OAAA/D,EACAkB,GAAAljG,EAAAmoG,GAGA,IAAAnoG,EAAAgjG,WACAE,GAAAljG,EAAA4+F,EAAA9uD,QAAA,IACAozD,GAAAljG,EAAA,MAAA4+F,EAAA9uD,QAGA8uD,EAAA9uD,MAAA,EAKA,GAAA9vC,EAAA+lG,SAAAnE,EACA,GAAA5hG,EAAAimG,OAAA+B,MAEA,CAIA,IAHAF,EAAA9nG,EAAA0iG,QAGA1iG,EAAAkmG,SAAA,MAAAlmG,EAAAimG,OAAA+B,MAAAr2H,UACAquB,EAAA0iG,UAAA1iG,EAAAgmG,mBACAhmG,EAAAimG,OAAA8B,MAAA/nG,EAAA0iG,QAAAoF,IACAlJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAAoF,MAGArF,GAAA7D,GACAkJ,EAAA9nG,EAAA0iG,QAEA1iG,EAAA0iG,UAAA1iG,EAAAgmG,oBAKA/C,GAAAjjG,EAAA,IAAAA,EAAAimG,OAAA+B,MAAAhoG,EAAAkmG,UACAlmG,EAAAkmG,UAGAlmG,EAAAimG,OAAA8B,MAAA/nG,EAAA0iG,QAAAoF,IACAlJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAAoF,MAGA9nG,EAAAkmG,UAAAlmG,EAAAimG,OAAA+B,MAAAr2H,SACAquB,EAAAkmG,QAAA,EACAlmG,EAAA+lG,OAAAlE,QAGA7hG,EAAA+lG,OAAAlE,EAIA,GAAA7hG,EAAA+lG,SAAAlE,EACA,GAAA7hG,EAAAimG,OAAA9uG,KAEA,CACA2wG,EAAA9nG,EAAA0iG,QAIA,GACA,GAAA1iG,EAAA0iG,UAAA1iG,EAAAgmG,mBACAhmG,EAAAimG,OAAA8B,MAAA/nG,EAAA0iG,QAAAoF,IACAlJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAAoF,MAGArF,GAAA7D,GACAkJ,EAAA9nG,EAAA0iG,QAEA1iG,EAAA0iG,UAAA1iG,EAAAgmG,kBAAA,CACA9vH,EAAA,EACA,MAMAA,EADA8pB,EAAAkmG,QAAAlmG,EAAAimG,OAAA9uG,KAAAxlB,OACA,IAAAquB,EAAAimG,OAAA9uG,KAAApe,WAAAinB,EAAAkmG,WAEA,EAGAjD,GAAAjjG,EAAA9pB,SACS,IAAAA,GAET8pB,EAAAimG,OAAA8B,MAAA/nG,EAAA0iG,QAAAoF,IACAlJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAAoF,MAGA,IAAA5xH,IACA8pB,EAAAkmG,QAAA,EACAlmG,EAAA+lG,OAAAjE,QAGA9hG,EAAA+lG,OAAAjE,EAIA,GAAA9hG,EAAA+lG,SAAAjE,EACA,GAAA9hG,EAAAimG,OAAAgC,QAEA,CACAH,EAAA9nG,EAAA0iG,QAIA,GACA,GAAA1iG,EAAA0iG,UAAA1iG,EAAAgmG,mBACAhmG,EAAAimG,OAAA8B,MAAA/nG,EAAA0iG,QAAAoF,IACAlJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAAoF,MAGArF,GAAA7D,GACAkJ,EAAA9nG,EAAA0iG,QAEA1iG,EAAA0iG,UAAA1iG,EAAAgmG,kBAAA,CACA9vH,EAAA,EACA,MAMAA,EADA8pB,EAAAkmG,QAAAlmG,EAAAimG,OAAAgC,QAAAt2H,OACA,IAAAquB,EAAAimG,OAAAgC,QAAAlvH,WAAAinB,EAAAkmG,WAEA,EAGAjD,GAAAjjG,EAAA9pB,SACS,IAAAA,GAET8pB,EAAAimG,OAAA8B,MAAA/nG,EAAA0iG,QAAAoF,IACAlJ,EAAA9uD,MAAAumD,EAAAuI,EAAA9uD,MAAA9vC,EAAA2iG,YAAA3iG,EAAA0iG,QAAAoF,MAGA,IAAA5xH,IACA8pB,EAAA+lG,OAAAhE,QAGA/hG,EAAA+lG,OAAAhE,EAyBA,GArBA/hG,EAAA+lG,SAAAhE,IACA/hG,EAAAimG,OAAA8B,MACA/nG,EAAA0iG,QAAA,EAAA1iG,EAAAgmG,kBACAvD,GAAA7D,GAGA5+F,EAAA0iG,QAAA,GAAA1iG,EAAAgmG,mBACA/C,GAAAjjG,EAAA,IAAA4+F,EAAA9uD,OACAmzD,GAAAjjG,EAAA4+F,EAAA9uD,OAAA,OACA8uD,EAAA9uD,MAAA,EAEA9vC,EAAA+lG,OAAA/D,IAGAhiG,EAAA+lG,OAAA/D,GAOA,IAAAhiG,EAAA0iG,SAGA,GAFAD,GAAA7D,GAEA,IAAAA,EAAAQ,UAQA,OADAp/F,EAAAmmG,YAAA,EACApO,OAOG,OAAA6G,EAAAM,UAAAsD,EAAAj8D,IAAAi8D,EAAAqF,IAAAthE,IAAAk0D,EACH,OAAAx2F,EAAA26F,EAAAtG,GAKA,GAAAt4F,EAAA+lG,SAAA9D,GAAA,IAAArD,EAAAM,SACA,OAAAj7F,EAAA26F,EAAAtG,GAMA,OAAAsG,EAAAM,UAAA,IAAAl/F,EAAAokG,WAAA79D,IAAA8zD,GAAAr6F,EAAA+lG,SAAA9D,EAAA,CACA,IAAAmG,EAAApoG,EAAAk7F,WAAAE,EAzxBA,SAAAp7F,EAAAumC,GAIA,IAHA,IAAAy+D,IAGS,CAET,OAAAhlG,EAAAokG,YACAE,GAAAtkG,GAEA,IAAAA,EAAAokG,WAAA,CACA,GAAA79D,IAAA8zD,EACA,OAAA6H,EAGA,MAeA,GARAliG,EAAAilG,aAAA,EAIAD,EAAArE,EAAAuE,UAAAllG,EAAA,EAAAA,EAAA9X,OAAA8X,EAAAgjG,WACAhjG,EAAAokG,YACApkG,EAAAgjG,WAEAgC,IAEAnC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA,OAAA8C,EASA,OAFAliG,EAAAG,OAAA,EAEAomC,IAAAk0D,GAEAoI,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,UACAgD,EAKAC,GAGAriG,EAAAolG,WAEAvC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA8C,EAMAC,EAstBAkG,CAAAroG,EAAAumC,GAAAvmC,EAAAk7F,WAAAG,EAl5BA,SAAAr7F,EAAAumC,GAYA,IAXA,IAAAy+D,EAGAt4D,EAGA82D,EAAAQ,EAGAH,EAAA7jG,EAAA9X,SAES,CAKT,GAAA8X,EAAAokG,WAAA5C,EAAA,CAGA,GAFA8C,GAAAtkG,GAEAA,EAAAokG,WAAA5C,GAAAj7D,IAAA8zD,EACA,OAAA6H,EAGA,OAAAliG,EAAAokG,UACA,MAUA,GAFApkG,EAAAilG,aAAA,EAEAjlG,EAAAokG,WAAA7C,GAAAvhG,EAAAgjG,SAAA,IAEAt2D,EAAAm3D,EADAL,EAAAxjG,EAAAgjG,SAAA,MAGAa,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,GAAA,CACAQ,EAAAhkG,EAAAgjG,SAAAxB,EAEA,UAES90D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,IAAA92D,IAAAm3D,IAAAL,MAAAQ,GAEThkG,EAAAilG,aAAAzD,GAAAwC,EAAAR,GAEAxjG,EAAAilG,aAAAjlG,EAAAokG,YACApkG,EAAAilG,aAAAjlG,EAAAokG,WA0BA,GAlBApkG,EAAAilG,cAAA1D,GAIAyD,EAAArE,EAAAuE,UAAAllG,EAAA,EAAAA,EAAAilG,aAAA1D,GACAvhG,EAAAokG,WAAApkG,EAAAilG,aACAjlG,EAAAgjG,UAAAhjG,EAAAilG,aACAjlG,EAAAilG,aAAA,IAMAD,EAAArE,EAAAuE,UAAAllG,EAAA,EAAAA,EAAA9X,OAAA8X,EAAAgjG,WACAhjG,EAAAokG,YACApkG,EAAAgjG,YAGAgC,IAEAnC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA,OAAA8C,EASA,OAFAliG,EAAAG,OAAA,EAEAomC,IAAAk0D,GAEAoI,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,UACAgD,EAKAC,GAGAriG,EAAAolG,WAEAvC,GAAA7iG,GAAA,GAEA,IAAAA,EAAA4+F,KAAAQ,WACA8C,EAMAC,EAiyBAmG,CAAAtoG,EAAAumC,GAAAk6D,EAAAzgG,EAAAy0F,OAAAptD,KAAArnC,EAAAumC,GAMA,GAJA6hE,IAAAhG,GAAAgG,IAAA/F,IACAriG,EAAA+lG,OAAA9D,GAGAmG,IAAAlG,GAAAkG,IAAAhG,EAMA,OALA,IAAAxD,EAAAQ,YACAp/F,EAAAmmG,YAAA,GAIApO,EAUA,GAAAqQ,IAAAjG,IACA57D,IAAA+zD,EACAqG,EAAA4H,UAAAvoG,GACOumC,IAAAm0D,IAEPiG,EAAA6H,iBAAAxoG,EAAA,QAMAumC,IAAAi0D,IAIAtzF,EAAAlH,EAAAmiC,MAEA,IAAAniC,EAAAokG,YACApkG,EAAAgjG,SAAA,EACAhjG,EAAA+iG,YAAA,EACA/iG,EAAAG,OAAA,KAKAsiG,GAAA7D,GAEA,IAAAA,EAAAQ,WAIA,OAHAp/F,EAAAmmG,YAAA,EAGApO,EAOA,OAAAxxD,IAAAk0D,EACA1C,EAGA/3F,EAAAokC,MAAA,EACA4zD,GAKA,IAAAh4F,EAAAokC,MACA6+D,GAAAjjG,EAAA,IAAA4+F,EAAA9uD,OACAmzD,GAAAjjG,EAAA4+F,EAAA9uD,OAAA,OACAmzD,GAAAjjG,EAAA4+F,EAAA9uD,OAAA,QACAmzD,GAAAjjG,EAAA4+F,EAAA9uD,OAAA,QACAmzD,GAAAjjG,EAAA,IAAA4+F,EAAA0B,UACA2C,GAAAjjG,EAAA4+F,EAAA0B,UAAA,OACA2C,GAAAjjG,EAAA4+F,EAAA0B,UAAA,QACA2C,GAAAjjG,EAAA4+F,EAAA0B,UAAA,UAEA4C,GAAAljG,EAAA4+F,EAAA9uD,QAAA,IACAozD,GAAAljG,EAAA,MAAA4+F,EAAA9uD,QAGA2yD,GAAA7D,GAKA5+F,EAAAokC,KAAA,IACApkC,EAAAokC,MAAApkC,EAAAokC,MAKA,IAAApkC,EAAA0iG,QAAA3K,EAAAC,IAqIAnoH,EAAA8uH,WAlIA,SAAAC,GACA,IAAAmH,EAEA,OAAAnH,GAEAA,EAAAx4G,OAMA2/G,EAAAnH,EAAAx4G,MAAA2/G,UAEApE,GAAAoE,IAAAnE,GAAAmE,IAAAlE,GAAAkE,IAAAjE,GAAAiE,IAAAhE,GAAAgE,IAAA/D,GAAA+D,IAAA9D,EACAh+F,EAAA26F,EAAAzG,IAGAyG,EAAAx4G,MAAA,KACA2/G,IAAA/D,EAAA/9F,EAAA26F,EAAAxG,GAAAL,GAVAI,GA2HAtoH,EAAAswH,qBAzGA,SAAAvB,EAAApD,GACA,IACAx7F,EACApnB,EAAA9B,EACAstD,EACAqkE,EACAhqF,EACAirC,EACAg/C,EAPAC,EAAAnN,EAAA7pH,OASA,IAAAitH,IAEAA,EAAAx4G,MAGA,OAAA+xG,EAMA,QAFA/zD,GADApkC,EAAA4+F,EAAAx4G,OACAg+C,OAEA,IAAAA,GAAApkC,EAAA+lG,SAAApE,GAAA3hG,EAAAokG,UACA,OAAAjM,EA8CA,IAzCA,IAAA/zD,IAEAw6D,EAAA9uD,MAAA8wD,EAAAhC,EAAA9uD,MAAA0rD,EAAAmN,EAAA,IAGA3oG,EAAAokC,KAAA,EAKAukE,GAAA3oG,EAAA4jG,SACA,IAAAx/D,IAIAl9B,EAAAlH,EAAAmiC,MAEAniC,EAAAgjG,SAAA,EACAhjG,EAAA+iG,YAAA,EACA/iG,EAAAG,OAAA,GAMAuoG,EAAA,IAAAhI,EAAA9oF,KAAA5X,EAAA4jG,QACAlD,EAAAvpF,SAAAuxF,EAAAlN,EAAAmN,EAAA3oG,EAAA4jG,OAAA5jG,EAAA4jG,OAAA,GACApI,EAAAkN,EACAC,EAAA3oG,EAAA4jG,QAKA6E,EAAA7J,EAAAM,SACAzgF,EAAAmgF,EAAAO,QACAz1C,EAAAk1C,EAAAl1C,MACAk1C,EAAAM,SAAAyJ,EACA/J,EAAAO,QAAA,EACAP,EAAAl1C,MAAA8xC,EACA8I,GAAAtkG,GAEAA,EAAAokG,WAAA7C,GAAA,CACA3oH,EAAAonB,EAAAgjG,SACAlsH,EAAAkpB,EAAAokG,WAAA7C,EAAA,GAEA,GAEAvhG,EAAA2kG,OAAA3kG,EAAA2kG,OAAA3kG,EAAA4kG,WAAA5kG,EAAA9X,OAAAtP,EAAA2oH,EAAA,IAAAvhG,EAAA6kG,UACA7kG,EAAA0sC,KAAA9zD,EAAAonB,EAAA+jG,QAAA/jG,EAAAmiC,KAAAniC,EAAA2kG,OACA3kG,EAAAmiC,KAAAniC,EAAA2kG,OAAA/rH,EACAA,YACK9B,GAELkpB,EAAAgjG,SAAApqH,EACAonB,EAAAokG,UAAA7C,EAAA,EACA+C,GAAAtkG,GAaA,OAVAA,EAAAgjG,UAAAhjG,EAAAokG,UACApkG,EAAA+iG,YAAA/iG,EAAAgjG,SACAhjG,EAAAG,OAAAH,EAAAokG,UACApkG,EAAAokG,UAAA,EACApkG,EAAAilG,aAAAjlG,EAAA0jG,YAAAnC,EAAA,EACAvhG,EAAAwlG,gBAAA,EACA5G,EAAAO,QAAA1gF,EACAmgF,EAAAl1C,QACAk1C,EAAAM,SAAAuJ,EACAzoG,EAAAokC,OACA2zD,GAWAloH,EAAA+4H,YAAA,mECpkEA,IAAAlI,EAAY5wH,EAAQ,IASpBwrH,EAAA,EAIAuN,EAAA,EACAC,EAAA,EAEAjI,EAAA,EAGA,SAAA35F,EAAAtvB,GAGA,IAFA,IAAA9B,EAAA8B,EAAAjG,SAEAmE,GAAA,GACA8B,EAAA9B,GAAA,EAKA,IAAAizH,EAAA,EACAC,EAAA,EACAC,EAAA,EAYAC,EAAA,GAGAhI,EAAA,IAGAD,EAAAC,EAAA,EAAAgI,EAGA/H,EAAA,GAGAC,EAAA,GAGAC,EAAA,EAAAJ,EAAA,EAGAK,EAAA,GAGA6H,EAAA,GAOAC,EAAA,EAGAC,EAAA,IAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAKAC,EAEA,4DACAC,EAEA,sEACAC,EAEA,wCACAC,EAAA,iDAgBAC,EAAA,IAAAt5H,MAAA,GAAA0wH,EAAA,IACA/5F,EAAA2iG,GAOA,IAAAC,EAAA,IAAAv5H,MAAA,EAAA4wH,GACAj6F,EAAA4iG,GAKA,IAAAC,EAAA,IAAAx5H,MAlBA,KAoBA22B,EAAA6iG,GAMA,IAAAC,EAAA,IAAAz5H,MAAAixH,KAEAt6F,EAAA8iG,GAGA,IAAAC,EAAA,IAAA15H,MAAA24H,GACAhiG,EAAA+iG,GAGA,IAwBAC,EACAC,EACAC,EA1BAC,EAAA,IAAA95H,MAAA4wH,GAIA,SAAAmJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA36H,KAAAu6H,cAGAv6H,KAAAw6H,aAGAx6H,KAAAy6H,aAGAz6H,KAAA06H,QAGA16H,KAAA26H,aAIA36H,KAAA46H,UAAAL,KAAA54H,OAOA,SAAAk5H,EAAAC,EAAAC,GACA/6H,KAAA86H,WAGA96H,KAAAg7H,SAAA,EAGAh7H,KAAA+6H,YAIA,SAAAE,EAAA5vD,GACA,OAAAA,EAAA,IAAA0uD,EAAA1uD,GAAA0uD,EAAA,KAAA1uD,IAAA,IAQA,SAAA6vD,EAAAlrG,EAAA8c,GAGA9c,EAAA2iG,YAAA3iG,EAAA0iG,WAAA,IAAA5lF,EACA9c,EAAA2iG,YAAA3iG,EAAA0iG,WAAA5lF,IAAA,MAQA,SAAAquF,EAAAnrG,EAAAjvB,EAAAY,GACAquB,EAAAsnG,SAAA6B,EAAAx3H,GACAquB,EAAAqnG,QAAAt2H,GAAAivB,EAAAsnG,SAAA,MACA4D,EAAAlrG,IAAAqnG,QACArnG,EAAAqnG,OAAAt2H,GAAAo4H,EAAAnpG,EAAAsnG,SACAtnG,EAAAsnG,UAAA31H,EAAAw3H,IAEAnpG,EAAAqnG,QAAAt2H,GAAAivB,EAAAsnG,SAAA,MACAtnG,EAAAsnG,UAAA31H,GAIA,SAAAy5H,EAAAprG,EAAA3mB,EAAAgyH,GACAF,EAAAnrG,EAAAqrG,EAAA,EAAAhyH,GAEAgyH,EAAA,EAAAhyH,EAAA,IAWA,SAAAiyH,EAAAzqH,EAAA/K,GACA,IAAAkE,EAAA,EAEA,GACAA,GAAA,EAAA6G,EACAA,KAAA,EACA7G,IAAA,UACGlE,EAAA,GAEH,OAAAkE,IAAA,EA4LA,SAAAuxH,EAAAF,EAAAL,EAAApE,GAIA,IAMA73G,EAGAjY,EATA00H,EAAA,IAAAj7H,MAAA+wH,EAAA,GAGAzgH,EAAA,EAaA,IAAAkO,EAAA,EAAgBA,GAAAuyG,EAAkBvyG,IAClCy8G,EAAAz8G,GAAAlO,IAAA+lH,EAAA73G,EAAA,MAUA,IAAAjY,EAAA,EAAaA,GAAAk0H,EAAel0H,IAAA,CAC5B,IAAAhB,EAAAu1H,EAAA,EAAAv0H,EAAA,GAIA,IAAAhB,IAMAu1H,EAAA,EAAAv0H,GAEAw0H,EAAAE,EAAA11H,UAuJA,SAAA21H,EAAAzrG,GACA,IAAAlpB,EAKA,IAAAA,EAAA,EAAaA,EAAAmqH,EAAanqH,IAC1BkpB,EAAAsmG,UAAA,EAAAxvH,GAEA,EAGA,IAAAA,EAAA,EAAaA,EAAAqqH,EAAarqH,IAC1BkpB,EAAAumG,UAAA,EAAAzvH,GAEA,EAGA,IAAAA,EAAA,EAAaA,EAAAsqH,EAActqH,IAC3BkpB,EAAAwmG,QAAA,EAAA1vH,GAEA,EAGAkpB,EAAAsmG,UAAA,EAAA+C,GAEA,EACArpG,EAAAmnG,QAAAnnG,EAAAonG,WAAA,EACApnG,EAAAolG,SAAAplG,EAAAq+B,QAAA,EAOA,SAAAqtE,EAAA1rG,GACAA,EAAAsnG,SAAA,EACA4D,EAAAlrG,IAAAqnG,QACGrnG,EAAAsnG,SAAA,IAEHtnG,EAAA2iG,YAAA3iG,EAAA0iG,WAAA1iG,EAAAqnG,QAGArnG,EAAAqnG,OAAA,EACArnG,EAAAsnG,SAAA,EAiCA,SAAAqE,EAAAN,EAAAv0H,EAAAC,EAAAu0D,GACA,IAAAsgE,EAAA,EAAA90H,EAEA+0H,EAAA,EAAA90H,EAEA,OAAAs0H,EAAAO,GAEAP,EAAAQ,IAEAR,EAAAO,KAEAP,EAAAQ,IAEAvgE,EAAAx0D,IAAAw0D,EAAAv0D,GAUA,SAAA+0H,EAAA9rG,EAAAqrG,EAAA1nH,GAQA,IAJA,IAAA2f,EAAAtD,EAAA6mG,KAAAljH,GACA3L,EAAA2L,GAAA,EAGA3L,GAAAgoB,EAAA8mG,WAEA9uH,EAAAgoB,EAAA8mG,UAAA6E,EAAAN,EAAArrG,EAAA6mG,KAAA7uH,EAAA,GAAAgoB,EAAA6mG,KAAA7uH,GAAAgoB,EAAAsrC,QACAtzD,KAKA2zH,EAAAN,EAAA/nG,EAAAtD,EAAA6mG,KAAA7uH,GAAAgoB,EAAAsrC,SAMAtrC,EAAA6mG,KAAAljH,GAAAqc,EAAA6mG,KAAA7uH,GACA2L,EAAA3L,EAGAA,IAAA,EAGAgoB,EAAA6mG,KAAAljH,GAAA2f,EASA,SAAAyoG,EAAA/rG,EAAAgsG,EAAAC,GAIA,IAAA5wD,EAGAyhB,EAMAj8E,EAGAmnH,EANAkE,EAAA,EASA,OAAAlsG,EAAAolG,SACA,GACA/pD,EAAAr7C,EAAA2iG,YAAA3iG,EAAAknG,MAAA,EAAAgF,IAAA,EAAAlsG,EAAA2iG,YAAA3iG,EAAAknG,MAAA,EAAAgF,EAAA,GACApvC,EAAA98D,EAAA2iG,YAAA3iG,EAAAgnG,MAAAkF,GACAA,IAEA,IAAA7wD,EACA+vD,EAAAprG,EAAA88D,EAAAkvC,IAMAZ,EAAAprG,GADAnf,EAAAmpH,EAAAltC,IACAokC,EAAA,EAAA8K,GAKA,KAFAhE,EAAAyB,EAAA5oH,KAIAsqH,EAAAnrG,EADA88D,GAAAmtC,EAAAppH,GACAmnH,GASAoD,EAAAprG,EAFAnf,EAAAoqH,IAHA5vD,GAKA4wD,GAKA,KAFAjE,EAAA0B,EAAA7oH,KAIAsqH,EAAAnrG,EADAq7C,GAAAgvD,EAAAxpH,GACAmnH,UAUKkE,EAAAlsG,EAAAolG,UAGLgG,EAAAprG,EAAAqpG,EAAA2C,GAYA,SAAAG,EAAAnsG,EAAA8sC,GAGA,IAIAh2D,EAAAC,EAMA4yF,EAVA0hC,EAAAv+D,EAAAg+D,SACAsB,EAAAt/D,EAAAi+D,UAAAR,YACAK,EAAA99D,EAAAi+D,UAAAH,UACAF,EAAA59D,EAAAi+D,UAAAL,MAIAM,GAAA,EAcA,IAHAhrG,EAAA8mG,SAAA,EACA9mG,EAAA+mG,SAAA1F,EAEAvqH,EAAA,EAAaA,EAAA4zH,EAAW5zH,IAGxB,IAFAu0H,EAAA,EAAAv0H,IAGAkpB,EAAA6mG,OAAA7mG,EAAA8mG,UAAAkE,EAAAl0H,EACAkpB,EAAAsrC,MAAAx0D,GAAA,GAEAu0H,EAAA,EAAAv0H,EAAA,GAEA,EAUA,KAAAkpB,EAAA8mG,SAAA,GAEAuE,EAAA,GADA1hC,EAAA3pE,EAAA6mG,OAAA7mG,EAAA8mG,UAAAkE,EAAA,IAAAA,EAAA,IAGA,EACAhrG,EAAAsrC,MAAAq+B,GAAA,EACA3pE,EAAAmnG,UAEAyD,IACA5qG,EAAAonG,YAAAgF,EAAA,EAAAziC,EAAA,IAaA,IALA78B,EAAAk+D,WAKAl0H,EAAAkpB,EAAA8mG,UAAA,EAEGhwH,GAAA,EAAQA,IACXg1H,EAAA9rG,EAAAqrG,EAAAv0H,GAOA6yF,EAAA+gC,EAGA,GAIA5zH,EAAAkpB,EAAA6mG,KAAA,GAGA7mG,EAAA6mG,KAAA,GAEA7mG,EAAA6mG,KAAA7mG,EAAA8mG,YACAgF,EAAA9rG,EAAAqrG,EAAA,GAKAt0H,EAAAipB,EAAA6mG,KAAA,GAKA7mG,EAAA6mG,OAAA7mG,EAAA+mG,UAAAjwH,EAGAkpB,EAAA6mG,OAAA7mG,EAAA+mG,UAAAhwH,EAGAs0H,EAAA,EAAA1hC,GAEA0hC,EAAA,EAAAv0H,GAEAu0H,EAAA,EAAAt0H,GAGAipB,EAAAsrC,MAAAq+B,IAAA3pE,EAAAsrC,MAAAx0D,IAAAkpB,EAAAsrC,MAAAv0D,GAAAipB,EAAAsrC,MAAAx0D,GAAAkpB,EAAAsrC,MAAAv0D,IAAA,EACAs0H,EAAA,EAAAv0H,EAAA,GAEAu0H,EAAA,EAAAt0H,EAAA,GAEA4yF,EAGA3pE,EAAA6mG,KAAA,GAEAl9B,IACAmiC,EAAA9rG,EAAAqrG,EAAA,SAGGrrG,EAAA8mG,UAAA,GAEH9mG,EAAA6mG,OAAA7mG,EAAA+mG,UAAA/mG,EAAA6mG,KAAA,GA1rBA,SAAA7mG,EAAA8sC,GAGA,IAOA7f,EAGAn2C,EAAAC,EAGAgY,EAGAs9G,EAGA5hE,EAnBA4gE,EAAAv+D,EAAAg+D,SACAE,EAAAl+D,EAAAk+D,SACAoB,EAAAt/D,EAAAi+D,UAAAR,YACAK,EAAA99D,EAAAi+D,UAAAH,UACA5C,EAAAl7D,EAAAi+D,UAAAP,WACA7qG,EAAAmtC,EAAAi+D,UAAAN,WACAE,EAAA79D,EAAAi+D,UAAAJ,WAgBA2B,EAAA,EAGA,IAAAv9G,EAAA,EAAgBA,GAAAuyG,EAAkBvyG,IAClCiR,EAAA4mG,SAAA73G,GAAA,EAYA,IALAs8G,EAAA,EAAArrG,EAAA6mG,KAAA7mG,EAAA+mG,UAAA,GAEA,EAGA95E,EAAAjtB,EAAA+mG,SAAA,EAA0B95E,EAAAo0E,EAAep0E,KAEzCl+B,EAAAs8G,EAEA,EAFAA,EAAA,GADAv0H,EAAAkpB,EAAA6mG,KAAA55E,IACA,GAEA,GAEA,GAEA09E,IACA57G,EAAA47G,EACA2B,KAGAjB,EAAA,EAAAv0H,EAAA,GAEAiY,EAGAjY,EAAAk0H,IAMAhrG,EAAA4mG,SAAA73G,KACAs9G,EAAA,EAEAv1H,GAAA6oB,IACA0sG,EAAArE,EAAAlxH,EAAA6oB,IAGA8qC,EAAA4gE,EAAA,EAAAv0H,GAGAkpB,EAAAmnG,SAAA18D,GAAA17C,EAAAs9G,GAEAzB,IACA5qG,EAAAonG,YAAA38D,GAAA2hE,EAAA,EAAAt1H,EAAA,GAEAu1H,KAIA,OAAAC,EAAA,CASA,GAGA,IAFAv9G,EAAA47G,EAAA,EAEA,IAAA3qG,EAAA4mG,SAAA73G,IACAA,IAGAiR,EAAA4mG,SAAA73G,KAGAiR,EAAA4mG,SAAA73G,EAAA,MAGAiR,EAAA4mG,SAAA+D,KAKA2B,GAAA,QACGA,EAAA,GAQH,IAAAv9G,EAAA47G,EAAyB,IAAA57G,EAAYA,IAGrC,IAFAjY,EAAAkpB,EAAA4mG,SAAA73G,GAEA,IAAAjY,IACAC,EAAAipB,EAAA6mG,OAAA55E,IAEA+9E,IAIAK,EAAA,EAAAt0H,EAAA,KAEAgY,IAEAiR,EAAAmnG,UAAAp4G,EAAAs8G,EAAA,EAAAt0H,EAAA,IAEAs0H,EAAA,EAAAt0H,GAGAs0H,EAAA,EAAAt0H,EAAA,GAEAgY,GAGAjY,MAijBAy1H,CAAAvsG,EAAA8sC,GAGAy+D,EAAAF,EAAAL,EAAAhrG,EAAA4mG,UAQA,SAAA4F,EAAAxsG,EAAAqrG,EAAAL,GAIA,IAAAl0H,EAMA21H,EAHAC,GAAA,EAMAC,EAAAtB,EAAA,GAKA5rG,EAAA,EAGAmtG,EAAA,EAGAC,EAAA,EAaA,IAVA,IAAAF,IACAC,EAAA,IACAC,EAAA,GAGAxB,EAAA,GAAAL,EAAA,MAEA,MAGAl0H,EAAA,EAAaA,GAAAk0H,EAAel0H,IAC5B21H,EAAAE,EACAA,EAAAtB,EAAA,GAAAv0H,EAAA,QAIA2oB,EAAAmtG,GAAAH,IAAAE,IAEKltG,EAAAotG,EACL7sG,EAAAwmG,QAAA,EAAAiG,IAEAhtG,EACK,IAAAgtG,GACLA,IAAAC,GACA1sG,EAAAwmG,QAAA,EAAAiG,KAGAzsG,EAAAwmG,QAAA,EAAA8C,MACK7pG,GAAA,GACLO,EAAAwmG,QAAA,EAAA+C,KAEAvpG,EAAAwmG,QAAA,EAAAgD,KAGA/pG,EAAA,EACAitG,EAAAD,EAEA,IAAAE,GACAC,EAAA,IACAC,EAAA,GACKJ,IAAAE,GACLC,EAAA,EACAC,EAAA,IAEAD,EAAA,EACAC,EAAA,IAUA,SAAAC,EAAA9sG,EAAAqrG,EAAAL,GAIA,IAAAl0H,EAMA21H,EAHAC,GAAA,EAMAC,EAAAtB,EAAA,GAKA5rG,EAAA,EAGAmtG,EAAA,EAGAC,EAAA,EAYA,IALA,IAAAF,IACAC,EAAA,IACAC,EAAA,GAGA/1H,EAAA,EAAaA,GAAAk0H,EAAel0H,IAM5B,GALA21H,EAAAE,EACAA,EAAAtB,EAAA,GAAAv0H,EAAA,UAIA2oB,EAAAmtG,GAAAH,IAAAE,GAAA,CAEK,GAAAltG,EAAAotG,EACL,GACAzB,EAAAprG,EAAAysG,EAAAzsG,EAAAwmG,eACO,MAAA/mG,QACF,IAAAgtG,GACLA,IAAAC,IACAtB,EAAAprG,EAAAysG,EAAAzsG,EAAAwmG,SACA/mG,KAIA2rG,EAAAprG,EAAAspG,EAAAtpG,EAAAwmG,SACA2E,EAAAnrG,EAAAP,EAAA,MACKA,GAAA,IACL2rG,EAAAprG,EAAAupG,EAAAvpG,EAAAwmG,SACA2E,EAAAnrG,EAAAP,EAAA,OAEA2rG,EAAAprG,EAAAwpG,EAAAxpG,EAAAwmG,SACA2E,EAAAnrG,EAAAP,EAAA,OAGAA,EAAA,EACAitG,EAAAD,EAEA,IAAAE,GACAC,EAAA,IACAC,EAAA,GACKJ,IAAAE,GACLC,EAAA,EACAC,EAAA,IAEAD,EAAA,EACAC,EAAA,IAt+BA3lG,EAAAmjG,GAsnCA,IAAA0C,IAAA,EAyBA,SAAAvE,GAAAxoG,EAAApoB,EAAAo1H,EAAA1oH,GAKA6mH,EAAAnrG,GAAA+oG,GAAA,IAAAzkH,EAAA,QAnoBA,SAAA0b,EAAApoB,EAAA9B,EAAAqyH,GAKAuD,EAAA1rG,GAGAmoG,IACA+C,EAAAlrG,EAAAlqB,GACAo1H,EAAAlrG,GAAAlqB,IAMA4qH,EAAAvpF,SAAAnX,EAAA2iG,YAAA3iG,EAAA9X,OAAAtQ,EAAA9B,EAAAkqB,EAAA0iG,SACA1iG,EAAA0iG,SAAA5sH,EAqnBAm3H,CAAAjtG,EAAApoB,EAAAo1H,GAAA,GAqKAn9H,EAAA23H,SAjMA,SAAAxnG,GACA+sG,KA7yBA,WACA,IAAAj2H,EAGAiY,EAGApd,EAGAkP,EAGAw6D,EAGAurD,EAAA,IAAAr2H,MAAA+wH,EAAA,GAmBA,IAFA3vH,EAAA,EAEAkP,EAAA,EAAgBA,EAAAqoH,EAAA,EAAyBroH,IAGzC,IAFAopH,EAAAppH,GAAAlP,EAEAmF,EAAA,EAAeA,EAAA,GAAA2yH,EAAA5oH,GAA4B/J,IAC3CkzH,EAAAr4H,KAAAkP,EAeA,IALAmpH,EAAAr4H,EAAA,GAAAkP,EAGAw6D,EAAA,EAEAx6D,EAAA,EAAgBA,EAAA,GAAWA,IAG3B,IAFAwpH,EAAAxpH,GAAAw6D,EAEAvkE,EAAA,EAAeA,EAAA,GAAA4yH,EAAA7oH,GAA4B/J,IAC3CizH,EAAA1uD,KAAAx6D,EAQA,IAHAw6D,IAAA,EAGQx6D,EAAAsgH,EAAgBtgH,IAGxB,IAFAwpH,EAAAxpH,GAAAw6D,GAAA,EAEAvkE,EAAA,EAAeA,EAAA,GAAA4yH,EAAA7oH,GAAA,EAAgC/J,IAC/CizH,EAAA,IAAA1uD,KAAAx6D,EAOA,IAAAkO,EAAA,EAAgBA,GAAAuyG,EAAkBvyG,IAClC63G,EAAA73G,GAAA,EAKA,IAFAjY,EAAA,EAEAA,GAAA,KACA+yH,EAAA,EAAA/yH,EAAA,GAEA,EACAA,IACA8vH,EAAA,KAGA,KAAA9vH,GAAA,KACA+yH,EAAA,EAAA/yH,EAAA,GAEA,EACAA,IACA8vH,EAAA,KAGA,KAAA9vH,GAAA,KACA+yH,EAAA,EAAA/yH,EAAA,GAEA,EACAA,IACA8vH,EAAA,KAGA,KAAA9vH,GAAA,KACA+yH,EAAA,EAAA/yH,EAAA,GAEA,EACAA,IACA8vH,EAAA,KAWA,IAHA2E,EAAA1B,EAAA5I,EAAA,EAAA2F,GAGA9vH,EAAA,EAAaA,EAAAqqH,EAAarqH,IAC1BgzH,EAAA,EAAAhzH,EAAA,GAEA,EACAgzH,EAAA,EAAAhzH,GAEAw0H,EAAAx0H,EAAA,GAIAozH,EAAA,IAAAI,EAAAT,EAAAJ,EAAAvI,EAAA,EAAAD,EAAAK,GACA6I,EAAA,IAAAG,EAAAR,EAAAJ,EAAA,EAAAvI,EAAAG,GACA8I,EAAA,IAAAE,EAAA,IAAA/5H,MAAA,GAAAo5H,EAAA,EAAAvI,EAAAgI,GAuqBA8D,GACAH,IAAA,GAGA/sG,EAAAymG,OAAA,IAAAoE,EAAA7qG,EAAAsmG,UAAA4D,GACAlqG,EAAA0mG,OAAA,IAAAmE,EAAA7qG,EAAAumG,UAAA4D,GACAnqG,EAAA2mG,QAAA,IAAAkE,EAAA7qG,EAAAwmG,QAAA4D,GACApqG,EAAAqnG,OAAA,EACArnG,EAAAsnG,SAAA,EAGAmE,EAAAzrG,IAqLAnwB,EAAA24H,oBACA34H,EAAAizH,gBAnJA,SAAA9iG,EAAApoB,EAAAo1H,EAAA1oH,GAKA,IAAA6oH,EAAAC,EAGAC,EAAA,EAKArtG,EAAAy0F,MAAA,GAEAz0F,EAAA4+F,KAAA4B,YAAAK,IACA7gG,EAAA4+F,KAAA4B,UAjHA,SAAAxgG,GAKA,IACAlpB,EADAw2H,EAAA,WAIA,IAAAx2H,EAAA,EAAaA,GAAA,GAASA,IAAAw2H,KAAA,EACtB,KAAAA,GAEA,IAFAttG,EAAAsmG,UAAA,EAAAxvH,GAGA,OAAA+xH,EAMA,GAEA,IAFA7oG,EAAAsmG,UAAA,KAIA,IAFAtmG,EAAAsmG,UAAA,KAIA,IAFAtmG,EAAAsmG,UAAA,IAGA,OAAAwC,EAGA,IAAAhyH,EAAA,GAAcA,EAAAoqH,EAAcpqH,IAC5B,GAEA,IAFAkpB,EAAAsmG,UAAA,EAAAxvH,GAGA,OAAAgyH,EAQA,OAAAD,EAwEA0E,CAAAvtG,IAKAmsG,EAAAnsG,IAAAymG,QAGA0F,EAAAnsG,IAAA0mG,QAWA2G,EA9NA,SAAArtG,GACA,IAAAqtG,EAmBA,IAdAb,EAAAxsG,IAAAsmG,UAAAtmG,EAAAymG,OAAAuE,UACAwB,EAAAxsG,IAAAumG,UAAAvmG,EAAA0mG,OAAAsE,UAGAmB,EAAAnsG,IAAA2mG,SAUA0G,EAAAjM,EAAA,EAAkCiM,GAAA,GAGlC,IAFArtG,EAAAwmG,QAAA,EAAAoD,EAAAyD,GAAA,GADoDA,KAapD,OAHArtG,EAAAmnG,SAAA,GAAAkG,EAAA,SAGAA,EA6LAG,CAAAxtG,GAGAmtG,EAAAntG,EAAAmnG,QAAA,SACAiG,EAAAptG,EAAAonG,WAAA,UAIA+F,IACAA,EAAAC,IAIAD,EAAAC,EAAAJ,EAAA,EAIAA,EAAA,GAAAG,IAAA,IAAAv1H,EASA4wH,GAAAxoG,EAAApoB,EAAAo1H,EAAA1oH,GACG0b,EAAAk7F,WAAAI,GAAA8R,IAAAD,GACHhC,EAAAnrG,GAAAgpG,GAAA,IAAA1kH,EAAA,QACAynH,EAAA/rG,EAAA6pG,EAAAC,KAEAqB,EAAAnrG,GAAAipG,GAAA,IAAA3kH,EAAA,QAnNA,SAAA0b,EAAAytG,EAAAC,EAAAC,GAGA,IAAAnL,EAcA,IAPA2I,EAAAnrG,EAAAytG,EAAA,OAGAtC,EAAAnrG,EAAA0tG,EAAA,KACAvC,EAAAnrG,EAAA2tG,EAAA,KAGAnL,EAAA,EAAgBA,EAAAmL,EAAgBnL,IAEhC2I,EAAAnrG,IAAAwmG,QAAA,EAAAoD,EAAApH,GAAA,GAEA,GAIAsK,EAAA9sG,IAAAsmG,UAAAmH,EAAA,GAIAX,EAAA9sG,IAAAumG,UAAAmH,EAAA,GAuLAE,CAAA5tG,IAAAymG,OAAAuE,SAAA,EAAAhrG,EAAA0mG,OAAAsE,SAAA,EAAAqC,EAAA,GACAtB,EAAA/rG,IAAAsmG,UAAAtmG,EAAAumG,YAQAkF,EAAAzrG,GAEA1b,GACAonH,EAAA1rG,IAqEAnwB,EAAAq1H,UA1DA,SAAAllG,EAAAq7C,EAAAyhB,GAgDA,OA3CA98D,EAAA2iG,YAAA3iG,EAAAknG,MAAA,EAAAlnG,EAAAolG,UAAA/pD,IAAA,MACAr7C,EAAA2iG,YAAA3iG,EAAAknG,MAAA,EAAAlnG,EAAAolG,SAAA,OAAA/pD,EACAr7C,EAAA2iG,YAAA3iG,EAAAgnG,MAAAhnG,EAAAolG,UAAA,IAAAtoC,EACA98D,EAAAolG,WAEA,IAAA/pD,EAEAr7C,EAAAsmG,UAAA,EAAAxpC,MAEA98D,EAAAq+B,UAGAgd,IAMAr7C,EAAAsmG,UAAA,GAAA0D,EAAAltC,GAAAokC,EAAA,MACAlhG,EAAAumG,UAAA,EAAA0E,EAAA5vD,OAwBAr7C,EAAAolG,WAAAplG,EAAAinG,YAAA,GAWAp3H,EAAA04H,UAhKA,SAAAvoG,GACAmrG,EAAAnrG,EAAAgpG,GAAA,KACAoC,EAAAprG,EAAAqpG,EAAAQ,GA7jCA,SAAA7pG,GACA,KAAAA,EAAAsnG,UACA4D,EAAAlrG,IAAAqnG,QACArnG,EAAAqnG,OAAA,EACArnG,EAAAsnG,SAAA,GACGtnG,EAAAsnG,UAAA,IACHtnG,EAAA2iG,YAAA3iG,EAAA0iG,WAAA,IAAA1iG,EAAAqnG,OACArnG,EAAAqnG,SAAA,EACArnG,EAAAsnG,UAAA,GAsjCAuG,CAAA7tG,kCCrzCApwB,EAAAC,QAAA,CACAi+H,EAAA,kBAGAC,EAAA,aAGAC,EAAA,GAGAC,KAAA,aAGAC,KAAA,eAGAC,KAAA,aAGAC,KAAA,sBAGAC,KAAA,eAGAC,KAAA,sDCzBA,IAAA5N,EAAY5wH,EAAQ,IAEpB8wH,EAAc9wH,EAAQ,IAEtBumH,EAAYvmH,EAAQ,IAEpBy+H,EAAmBz+H,EAAQ,KAE3B0+H,EAAoB1+H,EAAQ,KAE5B2+H,EAAA,EACAC,EAAA,EACAC,EAAA,EAWAlU,EAAA,EACAC,EAAA,EACAkU,EAAA,EAKA7W,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAE,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAIA2H,EAAA,EAKA4O,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAGAC,EAAA,GAKAC,GAAA,IACAC,GAAA,IAKAC,GAHA,GAKA,SAAAC,GAAAzoF,GACA,OAAAA,IAAA,SAAAA,IAAA,iBAAAA,IAAA,SAAAA,IAAA,IAGA,SAAA0oF,KACAjhI,KAAAiiD,KAAA,EAGAjiD,KAAAsU,MAAA,EAGAtU,KAAAo0D,KAAA,EAGAp0D,KAAAkhI,UAAA,EAGAlhI,KAAA4uD,MAAA,EAGA5uD,KAAAmhI,KAAA,EAGAnhI,KAAA4lC,MAAA,EAGA5lC,KAAAqqB,MAAA,EAIArqB,KAAAmyD,KAAA,KAKAnyD,KAAAohI,MAAA,EAGAphI,KAAAqhI,MAAA,EAGArhI,KAAAshI,MAAA,EAGAthI,KAAAuhI,MAAA,EAGAvhI,KAAAkY,OAAA,KAKAlY,KAAAwhI,KAAA,EAGAxhI,KAAA+e,KAAA,EAKA/e,KAAA2B,OAAA,EAGA3B,KAAAkI,OAAA,EAKAlI,KAAAg4H,MAAA,EAKAh4H,KAAAyhI,QAAA,KAGAzhI,KAAA0hI,SAAA,KAGA1hI,KAAA2hI,QAAA,EAGA3hI,KAAA4hI,SAAA,EAKA5hI,KAAA6hI,MAAA,EAGA7hI,KAAA8hI,KAAA,EAGA9hI,KAAA+hI,MAAA,EAGA/hI,KAAAguH,KAAA,EAGAhuH,KAAAyuC,KAAA,KAGAzuC,KAAA6/G,KAAA,IAAA6Q,EAAA7oF,MAAA,KAGA7nC,KAAAgiI,KAAA,IAAAtR,EAAA7oF,MAAA,KASA7nC,KAAAiiI,OAAA,KAGAjiI,KAAAkiI,QAAA,KAGAliI,KAAAmiI,KAAA,EAGAniI,KAAAoiI,KAAA,EAGApiI,KAAAqiI,IAAA,EAIA,SAAAC,GAAA1T,GACA,IAAAx4G,EAEA,OAAAw4G,KAAAx4G,OAIAA,EAAAw4G,EAAAx4G,MACAw4G,EAAA0B,SAAA1B,EAAA2B,UAAAn6G,EAAAiU,MAAA,EACAukG,EAAAj0D,IAAA,GAGAvkD,EAAAg+C,OAEAw6D,EAAA9uD,MAAA,EAAA1pD,EAAAg+C,MAGAh+C,EAAA6rC,KAAA48E,EACAzoH,EAAA9B,KAAA,EACA8B,EAAA8qH,SAAA,EACA9qH,EAAA+qH,KAAA,MACA/qH,EAAA+7C,KAAA,KAGA/7C,EAAAorH,KAAA,EACAprH,EAAA2I,KAAA,EAEA3I,EAAAqrH,QAAArrH,EAAA6rH,OAAA,IAAAvR,EAAA5oF,MAAA+4F,IACAzqH,EAAAsrH,SAAAtrH,EAAA8rH,QAAA,IAAAxR,EAAA5oF,MAAAg5F,IACA1qH,EAAA+rH,KAAA,EACA/rH,EAAAgsH,MAAA,EAEAra,GA5BAI,EA+BA,SAAAkI,GAAAzB,GACA,IAAAx4G,EAEA,OAAAw4G,KAAAx4G,QAIAA,EAAAw4G,EAAAx4G,OACAirH,MAAA,EACAjrH,EAAAkrH,MAAA,EACAlrH,EAAAmrH,MAAA,EACAe,GAAA1T,IAPAzG,EAUA,SAAAoa,GAAA3T,EAAA5D,GACA,IAAA52D,EACAh+C,EAGA,OAAAw4G,KAAAx4G,OAIAA,EAAAw4G,EAAAx4G,MAGA40G,EAAA,GACA52D,EAAA,EACA42D,OAEA52D,EAAA,GAAA42D,GAAA,GAEAA,EAAA,KACAA,GAAA,KAMAA,MAAA,GAAAA,EAAA,IACA7C,GAGA,OAAA/xG,EAAA8B,QAAA9B,EAAAgrH,QAAApW,IACA50G,EAAA8B,OAAA,MAKA9B,EAAAg+C,OACAh+C,EAAAgrH,MAAApW,EACAqF,GAAAzB,KA/BAzG,EAkCA,SAAA+H,GAAAtB,EAAA5D,GACA,IAAA79G,EACAiJ,EAEA,OAAAw4G,GAKAx4G,EAAA,IAAA6qH,GAGArS,EAAAx4G,QACAA,EAAA8B,OAAA,MAGA/K,EAAAo1H,GAAA3T,EAAA5D,MAEAjD,IACA6G,EAAAx4G,MAAA,MAKAjJ,GAnBAg7G,EAqCA,IACAqa,GAAAC,GADAC,IAAA,EAGA,SAAAC,GAAAvsH,GAEA,GAAAssH,GAAA,CACA,IAAAzwH,EAOA,IANAuwH,GAAA,IAAA9R,EAAA5oF,MAAA,KACA26F,GAAA,IAAA/R,EAAA5oF,MAAA,IAGA71B,EAAA,EAEAA,EAAA,KACAmE,EAAAypG,KAAA5tG,KAAA,EAGA,KAAAA,EAAA,KACAmE,EAAAypG,KAAA5tG,KAAA,EAGA,KAAAA,EAAA,KACAmE,EAAAypG,KAAA5tG,KAAA,EAGA,KAAAA,EAAA,KACAmE,EAAAypG,KAAA5tG,KAAA,EAUA,IAPAusH,EAAAE,EAAAtoH,EAAAypG,KAAA,MAAA2iB,GAAA,EAAApsH,EAAA4rH,KAAA,CACAjjH,KAAA,IAIA9M,EAAA,EAEAA,EAAA,IACAmE,EAAAypG,KAAA5tG,KAAA,EAGAusH,EAAAG,EAAAvoH,EAAAypG,KAAA,KAAA4iB,GAAA,EAAArsH,EAAA4rH,KAAA,CACAjjH,KAAA,IAIA2jH,IAAA,EAGAtsH,EAAAqrH,QAAAe,GACApsH,EAAAurH,QAAA,EACAvrH,EAAAsrH,SAAAe,GACArsH,EAAAwrH,SAAA,EAkBA,SAAAgB,GAAAhU,EAAAt9G,EAAA3H,EAAA3D,GACA,IAAAqlE,EACAj1D,EAAAw4G,EAAAx4G,MA6CA,OA1CA,OAAAA,EAAA8B,SACA9B,EAAAirH,MAAA,GAAAjrH,EAAAgrH,MACAhrH,EAAAmrH,MAAA,EACAnrH,EAAAkrH,MAAA,EACAlrH,EAAA8B,OAAA,IAAAw4G,EAAA9oF,KAAAxxB,EAAAirH,QAKAr7H,GAAAoQ,EAAAirH,OACA3Q,EAAAvpF,SAAA/wB,EAAA8B,OAAA5G,EAAA3H,EAAAyM,EAAAirH,MAAAjrH,EAAAirH,MAAA,GACAjrH,EAAAmrH,MAAA,EACAnrH,EAAAkrH,MAAAlrH,EAAAirH,SAEAh2D,EAAAj1D,EAAAirH,MAAAjrH,EAAAmrH,OAEAv7H,IACAqlE,EAAArlE,GAIA0qH,EAAAvpF,SAAA/wB,EAAA8B,OAAA5G,EAAA3H,EAAA3D,EAAAqlE,EAAAj1D,EAAAmrH,QACAv7H,GAAAqlE,IAIAqlD,EAAAvpF,SAAA/wB,EAAA8B,OAAA5G,EAAA3H,EAAA3D,IAAA,GACAoQ,EAAAmrH,MAAAv7H,EACAoQ,EAAAkrH,MAAAlrH,EAAAirH,QAEAjrH,EAAAmrH,OAAAl2D,EAEAj1D,EAAAmrH,QAAAnrH,EAAAirH,QACAjrH,EAAAmrH,MAAA,GAGAnrH,EAAAkrH,MAAAlrH,EAAAirH,QACAjrH,EAAAkrH,OAAAj2D,KAKA,EAkgDAxrE,EAAAwwH,gBACAxwH,EAAA0iI,iBACA1iI,EAAAyiI,oBACAziI,EAAAgjI,YAxoDA,SAAAjU,GACA,OAAAsB,GAAAtB,EAAAmS,KAwoDAlhI,EAAAqwH,gBACArwH,EAAAotH,QApgDA,SAAA2B,EAAAr4D,GACA,IAAAngD,EACAsjE,GAAArd,GAEA5tB,GAGAs3E,GAGAiI,GAAArtG,GAGA6gH,GAGAziH,GAGA+jH,GAAAC,GAIA/8H,GAGApB,GAGAo+H,GAIAC,GAAAC,GAAAC,GAGAC,GAAAC,GAAAC,GAEAx9H,GAGAqH,GAMAmhD,GACAxnD,GAlBAy8H,GAAA,EAcAC,GAAA,IAAA9S,EAAA9oF,KAAA,GAMAq4D,GAEA,iDAEA,IAAA2uB,MAAAx4G,QAAAw4G,EAAAvyD,SAAAuyD,EAAAl1C,OAAA,IAAAk1C,EAAAM,SACA,OAAA/G,GAGA/xG,EAAAw4G,EAAAx4G,OAEA6rC,OAAAu9E,IACAppH,EAAA6rC,KAAAw9E,GAMA1Z,GAAA6I,EAAAS,SACAhzD,GAAAuyD,EAAAvyD,OACA17C,GAAAiuG,EAAAQ,UACA3gF,GAAAmgF,EAAAO,QACAz1C,GAAAk1C,EAAAl1C,MACAs0C,GAAAY,EAAAM,SACAsS,GAAAprH,EAAAorH,KACAziH,GAAA3I,EAAA2I,KAEA+jH,GAAA9U,GACA+U,GAAApiH,GACAxT,GAAA46G,EAEA0b,EACA,OACA,OAAArtH,EAAA6rC,MACA,KAAA48E,EACA,OAAAzoH,EAAAg+C,KAAA,CACAh+C,EAAA6rC,KAAAw9E,EACA,MAIA,KAAA1gH,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA,KAAA3I,EAAAg+C,MAAA,QAAAotE,GAAA,CAEAprH,EAAAwvB,MAAA,EAIA49F,GAAA,OAAAhC,GACAgC,GAAA,GAAAhC,KAAA,MACAprH,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA49F,GAAA,KAGAhC,GAAA,EACAziH,GAAA,EAEA3I,EAAA6rC,KAAA68E,EACA,MAUA,GAPA1oH,EAAAw4C,MAAA,EAGAx4C,EAAA+7C,OACA/7C,EAAA+7C,KAAAsE,MAAA,KAGA,EAAArgD,EAAAg+C,UAEA,IAAAotE,KAEA,IAAAA,IAAA,QACA5S,EAAAj0D,IAAA,yBACAvkD,EAAA6rC,KAAAy+E,EACA,MAGA,OAAAc,MAEAvR,EAAA,CACArB,EAAAj0D,IAAA,6BACAvkD,EAAA6rC,KAAAy+E,EACA,MAWA,GANA3hH,IAAA,EAEAjZ,GAEA,GAFA,IAHA07H,MAAA,IAOA,IAAAprH,EAAAgrH,MACAhrH,EAAAgrH,MAAAt7H,QACS,GAAAA,GAAAsQ,EAAAgrH,MAAA,CACTxS,EAAAj0D,IAAA,sBACAvkD,EAAA6rC,KAAAy+E,EACA,MAGAtqH,EAAA+qH,KAAA,GAAAr7H,GAEA8oH,EAAA9uD,MAAA1pD,EAAAwvB,MAAA,EAGAxvB,EAAA6rC,KAAA,IAAAu/E,GAAAlC,EAAAE,EAEAgC,GAAA,EACAziH,GAAA,EAEA,MAEA,KAAA+/G,EAEA,KAAA//G,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAMA,GAFA3I,EAAAw4C,MAAA4yE,IAEA,IAAAprH,EAAAw4C,SAAAqhE,EAAA,CACArB,EAAAj0D,IAAA,6BACAvkD,EAAA6rC,KAAAy+E,EACA,MAGA,SAAAtqH,EAAAw4C,MAAA,CACAggE,EAAAj0D,IAAA,2BACAvkD,EAAA6rC,KAAAy+E,EACA,MAGAtqH,EAAA+7C,OACA/7C,EAAA+7C,KAAA9vC,KAAAm/G,IAAA,KAGA,IAAAprH,EAAAw4C,QAEA40E,GAAA,OAAAhC,GACAgC,GAAA,GAAAhC,KAAA,MACAprH,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA49F,GAAA,MAIAhC,GAAA,EACAziH,GAAA,EAEA3I,EAAA6rC,KAAA88E,EAIA,KAAAA,EAEA,KAAAhgH,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA3I,EAAA+7C,OACA/7C,EAAA+7C,KAAAqM,KAAAgjE,IAGA,IAAAprH,EAAAw4C,QAEA40E,GAAA,OAAAhC,GACAgC,GAAA,GAAAhC,KAAA,MACAgC,GAAA,GAAAhC,KAAA,OACAgC,GAAA,GAAAhC,KAAA,OACAprH,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA49F,GAAA,MAIAhC,GAAA,EACAziH,GAAA,EAEA3I,EAAA6rC,KAAA+8E,EAIA,KAAAA,EAEA,KAAAjgH,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA3I,EAAA+7C,OACA/7C,EAAA+7C,KAAAuxE,OAAA,IAAAlC,GACAprH,EAAA+7C,KAAA+lE,GAAAsJ,IAAA,GAGA,IAAAprH,EAAAw4C,QAEA40E,GAAA,OAAAhC,GACAgC,GAAA,GAAAhC,KAAA,MACAprH,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA49F,GAAA,MAIAhC,GAAA,EACAziH,GAAA,EAEA3I,EAAA6rC,KAAAg9E,EAIA,KAAAA,EACA,QAAA7oH,EAAAw4C,MAAA,CAEA,KAAA7vC,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA3I,EAAAzU,OAAA6/H,GAEAprH,EAAA+7C,OACA/7C,EAAA+7C,KAAAwxE,UAAAnC,IAGA,IAAAprH,EAAAw4C,QAEA40E,GAAA,OAAAhC,GACAgC,GAAA,GAAAhC,KAAA,MACAprH,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA49F,GAAA,MAIAhC,GAAA,EACAziH,GAAA,OACS3I,EAAA+7C,OACT/7C,EAAA+7C,KAAA6lE,MAAA,MAKA5hH,EAAA6rC,KAAAi9E,EAIA,KAAAA,EACA,QAAA9oH,EAAAw4C,SACA5oD,GAAAoQ,EAAAzU,QAEAqsH,KACAhoH,GAAAgoH,IAGAhoH,KACAoQ,EAAA+7C,OACArsD,GAAAsQ,EAAA+7C,KAAAwxE,UAAAvtH,EAAAzU,OAEAyU,EAAA+7C,KAAA6lE,QAEA5hH,EAAA+7C,KAAA6lE,MAAA,IAAAz3H,MAAA6V,EAAA+7C,KAAAwxE,YAGAjT,EAAAvpF,SAAA/wB,EAAA+7C,KAAA6lE,MAAAt+C,GAAAjrC,GAEAzoC,GAEAF,KAKA,IAAAsQ,EAAAw4C,QACAx4C,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA8zC,GAAA1zE,GAAAyoC,KAGAu/E,IAAAhoH,GACAyoC,IAAAzoC,GACAoQ,EAAAzU,QAAAqE,IAGAoQ,EAAAzU,QACA,MAAA8hI,EAIArtH,EAAAzU,OAAA,EACAyU,EAAA6rC,KAAAk9E,EAIA,KAAAA,EACA,QAAA/oH,EAAAw4C,MAAA,CACA,OAAAo/D,GACA,MAAAyV,EAGAz9H,GAAA,EAEA,GAEAF,GAAA4zE,GAAAjrC,GAAAzoC,MAGAoQ,EAAA+7C,MAAArsD,IAAAsQ,EAAAzU,OAAA,QAGAyU,EAAA+7C,KAAAhrC,MAAAzf,OAAAgD,aAAA5E,WAEWA,IAAAE,GAAAgoH,IASX,GAPA,IAAA53G,EAAAw4C,QACAx4C,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA8zC,GAAA1zE,GAAAyoC,KAGAu/E,IAAAhoH,GACAyoC,IAAAzoC,GAEAF,GACA,MAAA29H,OAESrtH,EAAA+7C,OACT/7C,EAAA+7C,KAAAhrC,KAAA,MAGA/Q,EAAAzU,OAAA,EACAyU,EAAA6rC,KAAAm9E,EAIA,KAAAA,EACA,QAAAhpH,EAAAw4C,MAAA,CACA,OAAAo/D,GACA,MAAAyV,EAGAz9H,GAAA,EAEA,GACAF,GAAA4zE,GAAAjrC,GAAAzoC,MAGAoQ,EAAA+7C,MAAArsD,IAAAsQ,EAAAzU,OAAA,QAGAyU,EAAA+7C,KAAA8lE,SAAAvwH,OAAAgD,aAAA5E,WAEWA,IAAAE,GAAAgoH,IASX,GAPA,IAAA53G,EAAAw4C,QACAx4C,EAAAwvB,MAAAygF,EAAAjwG,EAAAwvB,MAAA8zC,GAAA1zE,GAAAyoC,KAGAu/E,IAAAhoH,GACAyoC,IAAAzoC,GAEAF,GACA,MAAA29H,OAESrtH,EAAA+7C,OACT/7C,EAAA+7C,KAAA8lE,QAAA,MAGA7hH,EAAA6rC,KAAAo9E,EAIA,KAAAA,EACA,OAAAjpH,EAAAw4C,MAAA,CAEA,KAAA7vC,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA,GAAAyiH,MAAA,MAAAprH,EAAAwvB,OAAA,CACAgpF,EAAAj0D,IAAA,sBACAvkD,EAAA6rC,KAAAy+E,EACA,MAIAc,GAAA,EACAziH,GAAA,EAGA3I,EAAA+7C,OACA/7C,EAAA+7C,KAAA4lE,KAAA3hH,EAAAw4C,OAAA,IACAx4C,EAAA+7C,KAAAsE,MAAA,GAGAm4D,EAAA9uD,MAAA1pD,EAAAwvB,MAAA,EACAxvB,EAAA6rC,KAAAu9E,EACA,MAEA,KAAAF,EAEA,KAAAvgH,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA6vG,EAAA9uD,MAAA1pD,EAAAwvB,MAAAo7F,GAAAQ,IAEAA,GAAA,EACAziH,GAAA,EAEA3I,EAAA6rC,KAAAs9E,EAIA,KAAAA,EACA,OAAAnpH,EAAA8qH,SASA,OAPAtS,EAAAS,SAAAtJ,GACA6I,EAAAQ,UAAAzuG,GACAiuG,EAAAO,QAAA1gF,GACAmgF,EAAAM,SAAAlB,GACA53G,EAAAorH,QACAprH,EAAA2I,QAEAkpG,EAGA2G,EAAA9uD,MAAA1pD,EAAAwvB,MAAA,EAGAxvB,EAAA6rC,KAAAu9E,EAIA,KAAAA,EACA,GAAAjpE,IAAAm0D,GAAAn0D,IAAAqoE,EACA,MAAA6E,EAKA,KAAAhE,EACA,GAAArpH,EAAA9B,KAAA,CAEAktH,MAAA,EAAAziH,GACAA,IAAA,EAAAA,GAEA3I,EAAA6rC,KAAAs+E,EACA,MAIA,KAAAxhH,GAAA,IACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAWA,OAPA3I,EAAA9B,KAAA,EAAAktH,GAKAziH,IAAA,EAEA,GAHAyiH,MAAA,IAKA,OAIAprH,EAAA6rC,KAAAy9E,EACA,MAEA,OAQA,GANAiD,GAAAvsH,GAGAA,EAAA6rC,KAAA+9E,EAGAzpE,IAAAqoE,EAAA,CAEA4C,MAAA,EACAziH,IAAA,EAEA,MAAA0kH,EAGA,MAEA,OAIArtH,EAAA6rC,KAAA49E,EACA,MAEA,OACAjR,EAAAj0D,IAAA,qBACAvkD,EAAA6rC,KAAAy+E,EAIAc,MAAA,EACAziH,IAAA,EAEA,MAEA,KAAA2gH,EAMA,IAJA8B,MAAA,EAAAziH,GACAA,IAAA,EAAAA,GAGAA,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA,UAAAyiH,YAAA,WACA5S,EAAAj0D,IAAA,+BACAvkD,EAAA6rC,KAAAy+E,EACA,MAYA,GATAtqH,EAAAzU,OAAA,MAAA6/H,GAIAA,GAAA,EACAziH,GAAA,EAEA3I,EAAA6rC,KAAA09E,EAEAppE,IAAAqoE,EACA,MAAA6E,EAKA,KAAA9D,EACAvpH,EAAA6rC,KAAA29E,EAIA,KAAAA,EAGA,GAFA55H,GAAAoQ,EAAAzU,OAEA,CASA,GARAqE,GAAAgoH,KACAhoH,GAAAgoH,IAGAhoH,GAAA2a,KACA3a,GAAA2a,IAGA,IAAA3a,GACA,MAAAy9H,EAIA/S,EAAAvpF,SAAAk1B,GAAAqd,GAAAjrC,GAAAzoC,GAAA+/G,IAEAiI,IAAAhoH,GACAyoC,IAAAzoC,GACA2a,IAAA3a,GACA+/G,IAAA//G,GACAoQ,EAAAzU,QAAAqE,GACA,MAIAoQ,EAAA6rC,KAAAu9E,EACA,MAEA,KAAAK,EAEA,KAAA9gH,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EA0BA,GAtBA3I,EAAA0rH,KAEA,KAFA,GAAAN,IAIAA,MAAA,EACAziH,IAAA,EAEA3I,EAAA2rH,MAEA,GAFA,GAAAP,IAIAA,MAAA,EACAziH,IAAA,EAEA3I,EAAAyrH,MAEA,GAFA,GAAAL,IAIAA,MAAA,EACAziH,IAAA,EAGA3I,EAAA0rH,KAAA,KAAA1rH,EAAA2rH,MAAA,IACAnT,EAAAj0D,IAAA,sCACAvkD,EAAA6rC,KAAAy+E,EACA,MAKAtqH,EAAA43G,KAAA,EACA53G,EAAA6rC,KAAA69E,EAIA,KAAAA,EACA,KAAA1pH,EAAA43G,KAAA53G,EAAAyrH,OAAA,CAEA,KAAA9iH,GAAA,IACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA3I,EAAAypG,KAAA5f,GAAA7pF,EAAA43G,SAAA,EAAAwT,GAGAA,MAAA,EACAziH,IAAA,EAGA,KAAA3I,EAAA43G,KAAA,IACA53G,EAAAypG,KAAA5f,GAAA7pF,EAAA43G,SAAA,EAeA,GARA53G,EAAAqrH,QAAArrH,EAAA6rH,OACA7rH,EAAAurH,QAAA,EACArzE,GAAA,CACAvvC,KAAA3I,EAAAurH,SAEAx0H,GAAAqxH,EAAAC,EAAAroH,EAAAypG,KAAA,KAAAzpG,EAAAqrH,QAAA,EAAArrH,EAAA4rH,KAAA1zE,IACAl4C,EAAAurH,QAAArzE,GAAAvvC,KAEA5R,GAAA,CACAyhH,EAAAj0D,IAAA,2BACAvkD,EAAA6rC,KAAAy+E,EACA,MAIAtqH,EAAA43G,KAAA,EACA53G,EAAA6rC,KAAA89E,EAIA,KAAAA,EACA,KAAA3pH,EAAA43G,KAAA53G,EAAA0rH,KAAA1rH,EAAA2rH,OAAA,CACA,KAKAmB,IAJAK,GAAAntH,EAAAqrH,QAAAD,IAAA,GAAAprH,EAAAurH,SAAA,MAIA,OACAwB,GAAA,MAAAI,MAFAN,GAAAM,KAAA,KAIAxkH,KARiB,CAajB,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAGA,GAAAokH,GAAA,GAEA3B,MAAAyB,GACAlkH,IAAAkkH,GAEA7sH,EAAAypG,KAAAzpG,EAAA43G,QAAAmV,OACW,CACX,QAAAA,GAAA,CAIA,IAFAr8H,GAAAm8H,GAAA,EAEAlkH,GAAAjY,IAAA,CACA,OAAAknH,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAQA,GAHAyiH,MAAAyB,GACAlkH,IAAAkkH,GAEA,IAAA7sH,EAAA43G,KAAA,CACAY,EAAAj0D,IAAA,4BACAvkD,EAAA6rC,KAAAy+E,EACA,MAGA56H,GAAAsQ,EAAAypG,KAAAzpG,EAAA43G,KAAA,GACAhoH,GAAA,KAAAw7H,IAGAA,MAAA,EACAziH,IAAA,OACa,QAAAokH,GAAA,CAIb,IAFAr8H,GAAAm8H,GAAA,EAEAlkH,GAAAjY,IAAA,CACA,OAAAknH,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAMAA,IAAAkkH,GAEAn9H,GAAA,EACAE,GAAA,MAJAw7H,MAAAyB,KAOAzB,MAAA,EACAziH,IAAA,MACa,CAIb,IAFAjY,GAAAm8H,GAAA,EAEAlkH,GAAAjY,IAAA,CACA,OAAAknH,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAMAA,IAAAkkH,GAEAn9H,GAAA,EACAE,GAAA,SAJAw7H,MAAAyB,KAOAzB,MAAA,EACAziH,IAAA,EAGA,GAAA3I,EAAA43G,KAAAhoH,GAAAoQ,EAAA0rH,KAAA1rH,EAAA2rH,MAAA,CACAnT,EAAAj0D,IAAA,4BACAvkD,EAAA6rC,KAAAy+E,EACA,MAGA,KAAA16H,MACAoQ,EAAAypG,KAAAzpG,EAAA43G,QAAAloH,IAOA,GAAAsQ,EAAA6rC,OAAAy+E,EACA,MAKA,OAAAtqH,EAAAypG,KAAA,MACA+O,EAAAj0D,IAAA,uCACAvkD,EAAA6rC,KAAAy+E,EACA,MAgBA,GATAtqH,EAAAurH,QAAA,EACArzE,GAAA,CACAvvC,KAAA3I,EAAAurH,SAEAx0H,GAAAqxH,EAAAE,EAAAtoH,EAAAypG,KAAA,EAAAzpG,EAAA0rH,KAAA1rH,EAAAqrH,QAAA,EAAArrH,EAAA4rH,KAAA1zE,IAGAl4C,EAAAurH,QAAArzE,GAAAvvC,KAEA5R,GAAA,CACAyhH,EAAAj0D,IAAA,8BACAvkD,EAAA6rC,KAAAy+E,EACA,MAeA,GAZAtqH,EAAAwrH,SAAA,EAGAxrH,EAAAsrH,SAAAtrH,EAAA8rH,QACA5zE,GAAA,CACAvvC,KAAA3I,EAAAwrH,UAEAz0H,GAAAqxH,EAAAG,EAAAvoH,EAAAypG,KAAAzpG,EAAA0rH,KAAA1rH,EAAA2rH,MAAA3rH,EAAAsrH,SAAA,EAAAtrH,EAAA4rH,KAAA1zE,IAGAl4C,EAAAwrH,SAAAtzE,GAAAvvC,KAEA5R,GAAA,CACAyhH,EAAAj0D,IAAA,wBACAvkD,EAAA6rC,KAAAy+E,EACA,MAMA,GAFAtqH,EAAA6rC,KAAA+9E,EAEAzpE,IAAAqoE,EACA,MAAA6E,EAKA,KAAAzD,EACA5pH,EAAA6rC,KAAAg+E,EAIA,KAAAA,EACA,GAAAjS,IAAA,GAAArtG,IAAA,KAEAiuG,EAAAS,SAAAtJ,GACA6I,EAAAQ,UAAAzuG,GACAiuG,EAAAO,QAAA1gF,GACAmgF,EAAAM,SAAAlB,GACA53G,EAAAorH,QACAprH,EAAA2I,QAEAw/G,EAAA3P,EAAAmU,IAEAhd,GAAA6I,EAAAS,SACAhzD,GAAAuyD,EAAAvyD,OACA17C,GAAAiuG,EAAAQ,UACA3gF,GAAAmgF,EAAAO,QACAz1C,GAAAk1C,EAAAl1C,MACAs0C,GAAAY,EAAAM,SACAsS,GAAAprH,EAAAorH,KACAziH,GAAA3I,EAAA2I,KAEA3I,EAAA6rC,OAAAu9E,IACAppH,EAAAgsH,MAAA,GAGA,MAKA,IAFAhsH,EAAAgsH,KAAA,EAOAc,IAJAK,GAAAntH,EAAAqrH,QAAAD,IAAA,GAAAprH,EAAAurH,SAAA,MAIA,OACAwB,GAAA,MAAAI,MAFAN,GAAAM,KAAA,KAIAxkH,KARe,CAaf,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAGA,GAAAmkH,IAAA,SAAAA,IAAA,CAKA,IAJAE,GAAAH,GACAI,GAAAH,GACAI,GAAAH,GAOAD,IAJAK,GAAAntH,EAAAqrH,QAAA6B,KAAA9B,IAAA,GAAA4B,GAAAC,IAAA,IAEAD,QAEA,OACAD,GAAA,MAAAI,KAEAH,IAJAH,GAAAM,KAAA,KAIAxkH,KARiB,CAajB,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIAyiH,MAAA4B,GACArkH,IAAAqkH,GAEAhtH,EAAAgsH,MAAAgB,GAUA,GANA5B,MAAAyB,GACAlkH,IAAAkkH,GAEA7sH,EAAAgsH,MAAAa,GACA7sH,EAAAzU,OAAAwhI,GAEA,IAAAD,GAAA,CAIA9sH,EAAA6rC,KAAAq+E,EACA,MAGA,MAAA4C,GAAA,CAEA9sH,EAAAgsH,MAAA,EACAhsH,EAAA6rC,KAAAu9E,EACA,MAGA,MAAA0D,GAAA,CACAtU,EAAAj0D,IAAA,8BACAvkD,EAAA6rC,KAAAy+E,EACA,MAGAtqH,EAAA4hH,MAAA,GAAAkL,GACA9sH,EAAA6rC,KAAAi+E,EAIA,KAAAA,EACA,GAAA9pH,EAAA4hH,MAAA,CAIA,IAFAlxH,GAAAsP,EAAA4hH,MAEAj5G,GAAAjY,IAAA,CACA,OAAAknH,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA3I,EAAAzU,QAAA6/H,IAAA,GAAAprH,EAAA4hH,OAAA,EAIAwJ,MAAAprH,EAAA4hH,MACAj5G,IAAA3I,EAAA4hH,MAEA5hH,EAAAgsH,MAAAhsH,EAAA4hH,MAIA5hH,EAAAisH,IAAAjsH,EAAAzU,OACAyU,EAAA6rC,KAAAk+E,EAIA,KAAAA,EACA,KAKA+C,IAJAK,GAAAntH,EAAAsrH,SAAAF,IAAA,GAAAprH,EAAAwrH,UAAA,MAIA,OACAuB,GAAA,MAAAI,MAFAN,GAAAM,KAAA,KAIAxkH,KARe,CAaf,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAGA,YAAAmkH,IAAA,CAKA,IAJAE,GAAAH,GACAI,GAAAH,GACAI,GAAAH,GAOAD,IAJAK,GAAAntH,EAAAsrH,SAAA4B,KAAA9B,IAAA,GAAA4B,GAAAC,IAAA,IAEAD,QAEA,OACAD,GAAA,MAAAI,KAEAH,IAJAH,GAAAM,KAAA,KAIAxkH,KARiB,CAajB,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIAyiH,MAAA4B,GACArkH,IAAAqkH,GAEAhtH,EAAAgsH,MAAAgB,GASA,GALA5B,MAAAyB,GACAlkH,IAAAkkH,GAEA7sH,EAAAgsH,MAAAa,GAEA,GAAAC,GAAA,CACAtU,EAAAj0D,IAAA,wBACAvkD,EAAA6rC,KAAAy+E,EACA,MAGAtqH,EAAAlO,OAAAi7H,GACA/sH,EAAA4hH,MAAA,GAAAkL,GACA9sH,EAAA6rC,KAAAm+E,EAIA,KAAAA,EACA,GAAAhqH,EAAA4hH,MAAA,CAIA,IAFAlxH,GAAAsP,EAAA4hH,MAEAj5G,GAAAjY,IAAA,CACA,OAAAknH,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA3I,EAAAlO,QAAAs5H,IAAA,GAAAprH,EAAA4hH,OAAA,EAIAwJ,MAAAprH,EAAA4hH,MACAj5G,IAAA3I,EAAA4hH,MAEA5hH,EAAAgsH,MAAAhsH,EAAA4hH,MAIA,GAAA5hH,EAAAlO,OAAAkO,EAAA+qH,KAAA,CACAvS,EAAAj0D,IAAA,gCACAvkD,EAAA6rC,KAAAy+E,EACA,MAKAtqH,EAAA6rC,KAAAo+E,EAIA,KAAAA,EACA,OAAA1/G,GACA,MAAA8iH,EAKA,GAFAz9H,GAAA+8H,GAAApiH,GAEAvK,EAAAlO,OAAAlC,GAAA,CAIA,IAFAA,GAAAoQ,EAAAlO,OAAAlC,IAEAoQ,EAAAkrH,OACAlrH,EAAA+rH,KAAA,CACAvT,EAAAj0D,IAAA,gCACAvkD,EAAA6rC,KAAAy+E,EACA,MAmBA16H,GAAAoQ,EAAAmrH,OACAv7H,IAAAoQ,EAAAmrH,MACA38H,GAAAwR,EAAAirH,MAAAr7H,IAEApB,GAAAwR,EAAAmrH,MAAAv7H,GAGAA,GAAAoQ,EAAAzU,SACAqE,GAAAoQ,EAAAzU,QAGAqhI,GAAA5sH,EAAA8B,YAGA8qH,GAAA3mE,GACAz3D,GAAAmhH,GAAA3vG,EAAAlO,OACAlC,GAAAoQ,EAAAzU,OAGAqE,GAAA2a,KACA3a,GAAA2a,IAGAA,IAAA3a,GACAoQ,EAAAzU,QAAAqE,GAEA,GACAq2D,GAAA0pD,MAAAid,GAAAp+H,cACSoB,IAET,IAAAoQ,EAAAzU,SACAyU,EAAA6rC,KAAAg+E,GAGA,MAEA,KAAAK,EACA,OAAA3/G,GACA,MAAA8iH,EAGApnE,GAAA0pD,MAAA3vG,EAAAzU,OACAgf,KACAvK,EAAA6rC,KAAAg+E,EACA,MAEA,KAAAM,EACA,GAAAnqH,EAAAg+C,KAAA,CAEA,KAAAr1C,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KAEAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAgBA,GAZAgkH,IAAApiH,GACAiuG,EAAA2B,WAAAwS,GACA3sH,EAAAiU,OAAA04G,GAEAA,KACAnU,EAAA9uD,MAAA1pD,EAAAwvB,MAEAxvB,EAAAw4C,MAAAy3D,EAAAjwG,EAAAwvB,MAAAy2B,GAAA0mE,GAAAhd,GAAAgd,IAAAnS,EAAAx6G,EAAAwvB,MAAAy2B,GAAA0mE,GAAAhd,GAAAgd,KAGAA,GAAApiH,IAEAvK,EAAAw4C,MAAA4yE,GAAAR,GAAAQ,OAAAprH,EAAAwvB,MAAA,CACAgpF,EAAAj0D,IAAA,uBACAvkD,EAAA6rC,KAAAy+E,EACA,MAIAc,GAAA,EACAziH,GAAA,EAIA3I,EAAA6rC,KAAAu+E,EAIA,KAAAA,EACA,GAAApqH,EAAAg+C,MAAAh+C,EAAAw4C,MAAA,CAEA,KAAA7vC,GAAA,KACA,OAAAivG,GACA,MAAAyV,EAGAzV,KACAwT,IAAA9nD,GAAAjrC,OAAA1vB,GACAA,IAAA,EAIA,GAAAyiH,MAAA,WAAAprH,EAAAiU,OAAA,CACAukG,EAAAj0D,IAAA,yBACAvkD,EAAA6rC,KAAAy+E,EACA,MAIAc,GAAA,EACAziH,GAAA,EAIA3I,EAAA6rC,KAAAw+E,EAIA,KAAAA,EACAtzH,GAAA66G,EACA,MAAAyb,EAEA,KAAA/C,EACAvzH,GAAAi7G,EACA,MAAAqb,EAEA,KAAA9C,EACA,OAAAtY,EAEA,KAAAuY,EAGA,QACA,OAAAzY,EAoBA,OAPAyG,EAAAS,SAAAtJ,GACA6I,EAAAQ,UAAAzuG,GACAiuG,EAAAO,QAAA1gF,GACAmgF,EAAAM,SAAAlB,GACA53G,EAAAorH,QACAprH,EAAA2I,SAEA3I,EAAAirH,OAAA0B,KAAAnU,EAAAQ,WAAAh5G,EAAA6rC,KAAAy+E,IAAAtqH,EAAA6rC,KAAAs+E,GAAAhqE,IAAAk0D,KACAmY,GAAAhU,IAAAvyD,OAAAuyD,EAAAS,SAAA0T,GAAAnU,EAAAQ,YACAh5G,EAAA6rC,KAAA0+E,EACAtY,IAIAya,IAAAlU,EAAAM,SACA6T,IAAAnU,EAAAQ,UACAR,EAAA0B,UAAAwS,GACAlU,EAAA2B,WAAAwS,GACA3sH,EAAAiU,OAAA04G,GAEA3sH,EAAAg+C,MAAA2uE,KACAnU,EAAA9uD,MAAA1pD,EAAAwvB,MAEAxvB,EAAAw4C,MAAAy3D,EAAAjwG,EAAAwvB,MAAAy2B,GAAA0mE,GAAAnU,EAAAS,SAAA0T,IAAAnS,EAAAx6G,EAAAwvB,MAAAy2B,GAAA0mE,GAAAnU,EAAAS,SAAA0T,KAGAnU,EAAA4B,UAAAp6G,EAAA2I,MAAA3I,EAAA9B,KAAA,OAAA8B,EAAA6rC,OAAAu9E,EAAA,QAAAppH,EAAA6rC,OAAA+9E,GAAA5pH,EAAA6rC,OAAA09E,EAAA,QAEA,IAAAmD,IAAA,IAAAC,IAAAxsE,IAAAk0D,IAAAt9G,KAAA46G,IACA56G,GAAAm7G,GAGAn7G,KAkGAtN,EAAAgvH,WA/FA,SAAAD,GACA,IAAAA,MAAAx4G,MAGA,OAAA+xG,EAGA,IAAA/xG,EAAAw4G,EAAAx4G,MAOA,OALAA,EAAA8B,SACA9B,EAAA8B,OAAA,MAGA02G,EAAAx4G,MAAA,KACA2xG,GAkFAloH,EAAA+jI,iBA/EA,SAAAhV,EAAAz8D,GACA,IAAA/7C,EAGA,OAAAw4G,KAAAx4G,MAMA,QAFAA,EAAAw4G,EAAAx4G,OAEAg+C,MACA+zD,GAKA/xG,EAAA+7C,OACAA,EAAAsE,MAAA,EACAsxD,GAbAI,GA2EAtoH,EAAA8vH,qBA3DA,SAAAf,EAAApD,GACA,IACAp1G,EADAuiH,EAAAnN,EAAA7pH,OAMA,OAAAitH,GAEAA,EAAAx4G,MAQA,KAFAA,EAAAw4G,EAAAx4G,OAEAg+C,MAAAh+C,EAAA6rC,OAAAs9E,EACApX,EAKA/xG,EAAA6rC,OAAAs9E,GAMA3O,EALA,EAKApF,EAAAmN,EAAA,KAEAviH,EAAAwvB,MACAwiF,EAOAwa,GAAAhU,EAAApD,EAAAmN,MAGAviH,EAAA6rC,KAAA0+E,EACAtY,IAGAjyG,EAAA8qH,SAAA,EAEAnZ,GApCAI,GAgDAtoH,EAAAgkI,YAAA,mECj/DAjkI,EAAAC,QAAA,SAAA+uH,EAAAllH,GACA,IAAA0M,EAEA0sH,EAIAxuH,EAGAyuH,EAIAjL,EAGAnuH,EAIAw3H,EAIAE,EAGAC,EAGAC,EAIAuC,EAGAtC,EAGAziH,EAGAglH,EAGAC,EAGAC,EAGAC,EAGAX,EAGAY,EAKAr+H,EAGAulE,EAGAzmE,EAGAo+H,EACAtpD,EAAArd,EAIAjmD,EAAAw4G,EAAAx4G,MAEA0sH,EAAAlU,EAAAO,QACAz1C,EAAAk1C,EAAAl1C,MACAplE,EAAAwuH,GAAAlU,EAAAM,SAAA,GACA6T,EAAAnU,EAAAS,SACAhzD,EAAAuyD,EAAAvyD,OACAy7D,EAAAiL,GAAAr5H,EAAAklH,EAAAQ,WACAzlH,EAAAo5H,GAAAnU,EAAAQ,UAAA,KAEA+R,EAAA/qH,EAAA+qH,KAEAE,EAAAjrH,EAAAirH,MACAC,EAAAlrH,EAAAkrH,MACAC,EAAAnrH,EAAAmrH,MACAuC,EAAA1tH,EAAA8B,OACAspH,EAAAprH,EAAAorH,KACAziH,EAAA3I,EAAA2I,KACAglH,EAAA3tH,EAAAqrH,QACAuC,EAAA5tH,EAAAsrH,SACAuC,GAAA,GAAA7tH,EAAAurH,SAAA,EACAuC,GAAA,GAAA9tH,EAAAwrH,UAAA,EAIAhhH,EAAA,GACA7B,EAAA,KACAyiH,GAAA9nD,EAAAopD,MAAA/jH,EACAA,GAAA,EACAyiH,GAAA9nD,EAAAopD,MAAA/jH,EACAA,GAAA,GAGAwkH,EAAAQ,EAAAvC,EAAAyC,GAEAG,EAAA,OAAkB,CAWlB,GANA5C,KAHA2C,EAAAZ,IAAA,GAIAxkH,GAAAolH,EAKA,KAJAA,EAAAZ,IAAA,QASAlnE,EAAA0mE,KAAA,MAAAQ,MAGO,SAAAY,GAiOA,YAAAA,GAAA,CAEPZ,EAAAQ,GAAA,MAAAR,IAEA/B,GAAA,GAAA2C,GAAA,IACA,SAAAC,EACO,MAAAD,EAAA,CAGP/tH,EAAA6rC,KArZA,GAsZA,MAAArhC,EAEAguG,EAAAj0D,IAAA,8BACAvkD,EAAA6rC,KA5ZA,GA6ZA,MAAArhC,EA7OA9a,EAAA,MAAAy9H,GAGAY,GAAA,MAIAplH,EAAAolH,IACA3C,GAAA9nD,EAAAopD,MAAA/jH,EACAA,GAAA,GAGAjZ,GAAA07H,GAAA,GAAA2C,GAAA,EACA3C,KAAA2C,EACAplH,GAAAolH,GAIAplH,EAAA,KACAyiH,GAAA9nD,EAAAopD,MAAA/jH,EACAA,GAAA,EACAyiH,GAAA9nD,EAAAopD,MAAA/jH,EACAA,GAAA,GAGAwkH,EAAAS,EAAAxC,EAAA0C,GAEAG,EAAA,OAAuB,CAWvB,GANA7C,KAHA2C,EAAAZ,IAAA,GAIAxkH,GAAAolH,IAKA,IAJAA,EAAAZ,IAAA,SA+KW,YAAAY,GAAA,CAEXZ,EAAAS,GAAA,MAAAT,IAEA/B,GAAA,GAAA2C,GAAA,IACA,SAAAE,EAEAzV,EAAAj0D,IAAA,wBACAvkD,EAAA6rC,KAzYA,GA0YA,MAAArhC,EAhKA,GAlBAyqD,EAAA,MAAAk4D,EAMAxkH,GAHAolH,GAAA,MAIA3C,GAAA9nD,EAAAopD,MAAA/jH,GACAA,GAAA,GAEAolH,IACA3C,GAAA9nD,EAAAopD,MAAA/jH,EACAA,GAAA,KAIAssD,GAAAm2D,GAAA,GAAA2C,GAAA,GAEAhD,EAAA,CACAvS,EAAAj0D,IAAA,gCACAvkD,EAAA6rC,KA5OA,GA6OA,MAAArhC,EAUA,GANA4gH,KAAA2C,EACAplH,GAAAolH,EAKA94D,GAHA84D,EAAApB,EAAAjL,GAGA,CAKA,IAHAqM,EAAA94D,EAAA84D,GAGA7C,GACAlrH,EAAA+rH,KAAA,CACAvT,EAAAj0D,IAAA,gCACAvkD,EAAA6rC,KA/PA,GAgQA,MAAArhC,EA6BA,GAJAhc,EAAA,EAEAo+H,EAAAc,EAEA,IAAAvC,GAIA,GAFA38H,GAAAy8H,EAAA8C,EAEAA,EAAAr+H,EAAA,CAEAA,GAAAq+H,EAEA,GACA9nE,EAAA0mE,KAAAe,EAAAl/H,aACmBu/H,GAEnBv/H,EAAAm+H,EAAA13D,EAGA23D,EAAA3mE,QAEe,GAAAklE,EAAA4C,GAKf,GAHAv/H,GAAAy8H,EAAAE,EAAA4C,GACAA,GAAA5C,GAEAz7H,EAAA,CAEAA,GAAAq+H,EAEA,GACA9nE,EAAA0mE,KAAAe,EAAAl/H,aACmBu/H,GAInB,GAFAv/H,EAAA,EAEA28H,EAAAz7H,EAAA,CAGAA,GADAq+H,EAAA5C,EAGA,GACAllE,EAAA0mE,KAAAe,EAAAl/H,aACqBu/H,GAErBv/H,EAAAm+H,EAAA13D,EAGA23D,EAAA3mE,SAOA,GAFAz3D,GAAA28H,EAAA4C,EAEAA,EAAAr+H,EAAA,CAEAA,GAAAq+H,EAEA,GACA9nE,EAAA0mE,KAAAe,EAAAl/H,aACmBu/H,GAEnBv/H,EAAAm+H,EAAA13D,EAGA23D,EAAA3mE,EAIA,KAAAv2D,EAAA,GACAu2D,EAAA0mE,KAAAC,EAAAp+H,KACAy3D,EAAA0mE,KAAAC,EAAAp+H,KACAy3D,EAAA0mE,KAAAC,EAAAp+H,KACAkB,GAAA,EAGAA,IACAu2D,EAAA0mE,KAAAC,EAAAp+H,KAEAkB,EAAA,IACAu2D,EAAA0mE,KAAAC,EAAAp+H,WAGa,CACbA,EAAAm+H,EAAA13D,EAGA,GAEAhP,EAAA0mE,KAAA1mE,EAAAz3D,KACAy3D,EAAA0mE,KAAA1mE,EAAAz3D,KACAy3D,EAAA0mE,KAAA1mE,EAAAz3D,KACAkB,GAAA,QACeA,EAAA,GAEfA,IACAu2D,EAAA0mE,KAAA1mE,EAAAz3D,KAEAkB,EAAA,IACAu2D,EAAA0mE,KAAA1mE,EAAAz3D,OAgBA,OAmBA,aAEGk+H,EAAAxuH,GAAAyuH,EAAAp5H,GAKHm5H,GADAh9H,EAAAiZ,GAAA,EAGAyiH,IAAA,IADAziH,GAAAjZ,GAAA,IACA,EAGA8oH,EAAAO,QAAA2T,EACAlU,EAAAS,SAAA0T,EACAnU,EAAAM,SAAA4T,EAAAxuH,IAAAwuH,EAAA,KAAAA,EAAAxuH,GACAs6G,EAAAQ,UAAA2T,EAAAp5H,IAAAo5H,EAAA,SAAAA,EAAAp5H,GACAyM,EAAAorH,OACAprH,EAAA2I,sCClbA,IAAA2xG,EAAY5wH,EAAQ,IASpBwkI,EAAA,CAEA,2FACAC,EAAA,CAEA,8FACAC,EAAA,CAEA,qHACAC,EAAA,CAEA,iGAEA7kI,EAAAC,QAAA,SAAAsG,EAAA05G,EAAA6kB,EAAA5c,EAAA5nD,EAAAykE,EAAA3C,EAAA1zE,GACA,IA8BAs2E,EAGAp5H,EAGAq5H,EAGA5kH,EAGAwuB,EAQA9kC,EASAs5H,EAAAC,EAAAC,EA3DApkH,EAAAuvC,EAAAvvC,KAEAjZ,EAAA,EAGAmM,EAAA,EAGAlI,EAAA,EACAyC,EAAA,EAGAs4H,EAAA,EAGAC,EAAA,EAGAC,EAAA,EAGArkH,EAAA,EAGAskH,EAAA,EAGAC,EAAA,EAkBAv1G,EAAA,KAGAw1G,EAAA,EAKA11G,EAAA,IAAAihG,EAAA7oF,MAAAu9F,IAEAC,EAAA,IAAA3U,EAAA7oF,MAAAu9F,IAEApN,EAAA,KACAsN,EAAA,EAgCA,IAAAx/H,EAAA,EAAeA,GA/Gf,GA+G+BA,IAC/B2pB,EAAA3pB,GAAA,EAGA,IAAAmM,EAAA,EAAeA,EAAA61G,EAAa71G,IAC5Bwd,EAAAowF,EAAA6kB,EAAAzyH,MAOA,IAFA6yH,EAAA/lH,EAEAvS,EA3HA,GA2HqBA,GAAA,GACrB,IAAAijB,EAAAjjB,GAD+BA,KAU/B,GAJAs4H,EAAAt4H,IACAs4H,EAAAt4H,GAGA,IAAAA,EAWA,OANA0zD,EAAAykE,KAAA,SAIAzkE,EAAAykE,KAAA,SACAr2E,EAAAvvC,KAAA,EACA,EAIA,IAAAhV,EAAA,EAAeA,EAAAyC,GACf,IAAAijB,EAAA1lB,GAD0BA,KAc1B,IARA+6H,EAAA/6H,IACA+6H,EAAA/6H,GAKA4W,EAAA,EAEA7a,EAAA,EAAeA,GAlKf,GAkK+BA,IAI/B,GAHA6a,IAAA,GACAA,GAAA8O,EAAA3pB,IAEA,EACA,SAMA,GAAA6a,EAAA,IAzKA,IAyKAxa,GAAA,IAAAqG,GACA,SAQA,IAFA64H,EAAA,KAEAv/H,EAAA,EAAeA,EAtLf,GAsL8BA,IAC9Bu/H,EAAAv/H,EAAA,GAAAu/H,EAAAv/H,GAAA2pB,EAAA3pB,GAKA,IAAAmM,EAAA,EAAeA,EAAA61G,EAAa71G,IAC5B,IAAA4tG,EAAA6kB,EAAAzyH,KACA+vH,EAAAqD,EAAAxlB,EAAA6kB,EAAAzyH,UAoFA,GA9QA,IA6NA9L,GACAwpB,EAAAqoG,EAAAgK,EAGAr4H,EAAA,IAhOA,IAiOGxD,GACHwpB,EAAA20G,EACAa,GAAA,IACAnN,EAAAuM,EACAe,GAAA,IACA37H,EAAA,MAGAgmB,EAAA60G,EACAxM,EAAAyM,EACA96H,GAAA,GAKAu7H,EAAA,EAGAjzH,EAAA,EAGAnM,EAAAiE,EAGA0kC,EAAAk2F,EAGAI,EAAAD,EAGAE,EAAA,EAGAH,GAAA,EAMA5kH,GAHAglH,EAAA,GAAAH,GAGA,EAxQA,IA6QA3+H,GAAA8+H,EAjRA,KAKA,IA4QA9+H,GAAA8+H,EAhRA,IAiRA,SAKA,OAAS,CAEThC,EAAAn9H,EAAAk/H,EAEAhD,EAAA/vH,GAAAtI,GACAu5H,EAAA,EACAC,EAAAnB,EAAA/vH,IACK+vH,EAAA/vH,GAAAtI,GACLu5H,EAAAlL,EAAAsN,EAAAtD,EAAA/vH,IACAkxH,EAAAxzG,EAAAw1G,EAAAnD,EAAA/vH,MAEAixH,EAAA,GAGAC,EAAA,GAKAyB,EAAA,GAAA9+H,EAAAk/H,EAEAj7H,EADAyB,EAAA,GAAAu5H,EAIA,GAEA7kE,EAAAzxB,GAAAy2F,GAAAF,IADAx5H,GAAAo5H,IACA3B,GAAA,GAAAC,GAAA,GAAAC,EAAA,QACK,IAAA33H,GAML,IAFAo5H,EAAA,GAAA9+H,EAAA,EAEAo/H,EAAAN,GACAA,IAAA,EAcA,GAXA,IAAAA,GACAM,GAAAN,EAAA,EACAM,GAAAN,GAEAM,EAAA,EAKAjzH,IAEA,MAAAwd,EAAA3pB,GAAA,CACA,GAAAA,IAAA0G,EACA,MAGA1G,EAAA+5G,EAAA6kB,EAAA1C,EAAA/vH,IAKA,GAAAnM,EAAAg/H,IAAAI,EAAAjlH,KAAA4kH,EAAA,CAgBA,IAdA,IAAAG,IACAA,EAAAF,GAKAr2F,GAAA1kC,EAMA4W,EAAA,IADAokH,EAAAj/H,EAAAk/H,GAGAD,EAAAC,EAAAx4H,MACAmU,GAAA8O,EAAAs1G,EAAAC,KAEA,IAIAD,IACApkH,IAAA,EAOA,GAFAskH,GAAA,GAAAF,EA1WA,IA4WA5+H,GAAA8+H,EAhXA,KAKA,IA2WA9+H,GAAA8+H,EA/WA,IAgXA,SAUA/kE,EALA2kE,EAAAK,EAAAjlH,GAKA6kH,GAAA,GAAAC,GAAA,GAAAt2F,EAAAk2F,EAAA,GAmBA,OAXA,IAAAO,IAIAhlE,EAAAzxB,EAAAy2F,GAAAp/H,EAAAk/H,GAAA,aAMA12E,EAAAvvC,KAAA+lH,EACA,iCCjZAllI,EAAAC,QAAA,CAEAwqH,WAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,SAAA,EACAC,QAAA,EACAkU,QAAA,EAKA7W,KAAA,EACAC,aAAA,EACAC,YAAA,EACAC,SAAA,EACAC,gBAAA,EACAC,cAAA,EAEAE,aAAA,EAIAid,iBAAA,EACAC,aAAA,EACAC,mBAAA,EACA/d,uBAAA,EACAyD,WAAA,EACAC,eAAA,EACAC,MAAA,EACAC,QAAA,EACAC,mBAAA,EAGAsN,SAAA,EACAC,OAAA,EAEAjI,UAAA,EAGAZ,WAAA,kCC5DA,SAAAjrG,EAAA9gB,IAEA,WAIA,WAAA8gB,EAAA0gH,KAAA,CAKA,IAAAC,EAAA,IAEA,WACA,QAAA7+H,EAAA,EAAmBA,EAAA,IAASA,IAAA,CAG5B,IAFA,IAAAuC,EAAAvC,EAEA6M,EAAA,EAAqBA,EAAA,EAAOA,IAC5B,EAAAtK,EACAA,EAAA,WAAAA,IAAA,EAEAA,KAAA,EAIAs8H,EAAA7+H,GAAAuC,IAAA,GAZA,GAwCAzJ,EAAAC,QAdA,WAMA,IAHA,IAAA2nC,EAAArmC,UAAAQ,OACA0H,GAAA,EAEA3H,EAAA,EAAmBA,EAAA8lC,EAAO9lC,IAC1B2H,EAAAu8H,EAAAv8H,EAAA,IAAAnF,EAAA/C,UAAAO,KAIA,OADA2H,IAAA,EAAAA,KAAA,QA1CAzJ,EAAAC,QAAqBC,EAAQ,KAsB7B,SAAA8lI,EAAAv8H,EAAAzB,GAGA,IAFA,IAAA4/B,EAAA5/B,EAAAjG,OAEAmF,EAAA,EAAmBA,EAAA0gC,EAAO1gC,IAC1BuC,EAAAs8H,EAAA,KAAAt8H,EAAAzB,EAAAd,KAAAuC,IAAA,EAGA,OAAAA,GAlCA,iECFA,SAAAnF,GAIA,IAFA,IAAAyhI,EAAA,GAEA7+H,EAAA,EAAeA,EAAA,IAASA,IAAA,CACxB,IAAAuC,EAAAs8H,EAAA7+H,GAAA,IAAA5C,EAAA,GACAmF,EAAAwG,cAAA/I,EAAA,GAEA,QAAA6M,EAAA,EAAiBA,EAAA,EAAOA,IAAA,CACxB,IAAAkyH,EAAA,EAAAx8H,EAAA,GACAy8H,EAAA,EAAAz8H,EAAA,GACA08H,EAAA,EAAA18H,EAAA,GACA28H,EAAA,EAAA38H,EAAA,GACAA,EAAA,GAAAA,EAAA,OAAA28H,EAAA,OACA38H,EAAA,GAAAA,EAAA,OAAA28H,EAAA,QAAAH,EAAA,OACAx8H,EAAA,GAAAA,EAAA,OAAA28H,EAAA,QAAAF,EAAA,OACAz8H,EAAA,GAAAA,EAAA,OAAA28H,EAAA,OAAAD,EAAA,QAIA,SAAAH,EAAAv8H,EAAAzB,GAGA,IAFA,IAAA4/B,EAAA5/B,EAAAjG,OAEAmF,EAAA,EAAiBA,EAAA0gC,EAAO1gC,IAAA,CACxB,IAAAmE,EAAA06H,EAAAt8H,EAAA,GAAAzB,EAAAd,IACAuC,EAAA,GAAA4B,EAAA,GAAA5B,EAAA,GACAA,EAAA,GAAA4B,EAAA,GAAA5B,EAAA,GACAA,EAAA,GAAA4B,EAAA,GAAA5B,EAAA,GACAA,EAAA,GAAA4B,EAAA,IAsBArL,EAAAC,QAlBA,WAGA,IAAA2nC,EAAArmC,UAAAQ,OACA0H,EAAA,IAAAnF,EAAA,GACAmF,EAAAmC,KAAA,KAEA,QAAA9J,EAAA,EAAiBA,EAAA8lC,EAAO9lC,IACxBkkI,EAAAv8H,EAAA,IAAAnF,EAAA/C,UAAAO,KAOA,OAJA2H,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACAA,EAAAoF,aAAA,2DC7CA,SAAAw3H,EAAArmH,GAIA,IAHA,IAAAs4D,EAAAt4D,EAAAje,OACAukI,EAAA,GAEA5lH,GAAA,EAAoBA,GAAA43D,EAAU53D,IAC9B4lH,EAAA5lH,GAAA,GAGA,IAAA9K,EAAA,GAEA,IAAA8K,EAAA,EAAmBA,EAAA43D,EAAS53D,IAC5B,QAAA6sD,EAAA,EAAqBA,EAAA+K,EAAS/K,IAC9B+4D,EAAA5lH,GAAA6sD,KACA+4D,EAAA5lH,GAAA6sD,GAAA,EAEAg5D,EAAA7lH,EAAA6sD,GACAg5D,EAAA7lH,EAAA,EAAA6sD,IACA33D,EAAA1M,KAAAs9H,EAAA9lH,EAAA6sD,EAAA,UAGAg5D,EAAA7lH,EAAA6sD,EAAA,IACA33D,EAAA1M,KAAAs9H,EAAA9lH,EAAA6sD,EAAA,UAMA,OAAA33D,EAEA,SAAA2wH,EAAA7lH,EAAA6sD,GACA,QAAA7sD,EAAA,GAAA6sD,EAAA,GAAA7sD,GAAA43D,GAAA/K,GAAA+K,MACAt4D,EAAAU,GAAA6sD,GAGA,SAAAi5D,EAAAC,EAAAC,EAAAr/H,GACAi/H,EAAAG,GAAAC,GAAA,EACA,IAAAt8H,EAAA,GACAA,EAAAlB,KAAA,KAAAw9H,EAAAD,IACA,IAAA/lH,EAAA+lH,EACAl5D,EAAAm5D,EACAxgI,EAAA,EAEA,GACA,OAAAmB,GACA,YACAi/H,EAAA5lH,GAAA6sD,GAAA,EAEAg5D,EAAA7lH,EAAA6sD,IACA+4D,EAAA5lH,EAAA,GAAA6sD,GAAA,EAEAg5D,EAAA7lH,EAAA,EAAA6sD,IACAnjE,EAAAlB,KAAA,KAAAhD,IACAA,EAAA,EACAmB,EAAA,OAEAnB,IACAqnE,OAGAnjE,EAAAlB,KAAA,KAAAhD,IACAA,EAAA,EACAmB,EAAA,QAGA,MAEA,WACAi/H,EAAA5lH,EAAA,GAAA6sD,EAAA,KAEAg5D,EAAA7lH,EAAA,EAAA6sD,EAAA,IACA+4D,EAAA5lH,GAAA6sD,EAAA,KAEAg5D,EAAA7lH,EAAA6sD,EAAA,IACAnjE,EAAAlB,KAAA,MAAAhD,IACAA,EAAA,EACAmB,EAAA,SAEAnB,IACAqnE,OAGAnjE,EAAAlB,KAAA,MAAAhD,IACAA,EAAA,EACAmB,EAAA,MAGA,MAEA,WACAi/H,EAAA5lH,GAAA6sD,EAAA,KAEAg5D,EAAA7lH,EAAA6sD,EAAA,IACA+4D,EAAA5lH,GAAA6sD,GAAA,EAEAg5D,EAAA7lH,EAAA6sD,IACAnjE,EAAAlB,KAAA,KAAAhD,IACAA,EAAA,EACAmB,EAAA,UAEAnB,IACAwa,OAGAtW,EAAAlB,KAAA,KAAAhD,IACAA,EAAA,EACAmB,EAAA,QAGA,MAEA,SACAi/H,EAAA5lH,EAAA,GAAA6sD,GAAA,EAEAg5D,EAAA7lH,EAAA,EAAA6sD,IACA+4D,EAAA5lH,EAAA,GAAA6sD,EAAA,KAEAg5D,EAAA7lH,EAAA,EAAA6sD,EAAA,IACAnjE,EAAAlB,KAAA,MAAAhD,IACAA,EAAA,EACAmB,EAAA,SAEAnB,IACAwa,OAGAtW,EAAAlB,KAAA,MAAAhD,IACAA,EAAA,EACAmB,EAAA,gBAKKqZ,GAAA+lH,GAAAl5D,GAAAm5D,GAEL,OAAAt8H,GAIA,SAAAu8H,EAAA3mH,EAAA+b,EAAAsjF,GACAgnB,EAAArmH,GAAAzN,QAAA,SAAAq0H,GAGA,IAFA,IAAAx8H,EAAA,GAEA2J,EAAA,EAAmBA,EAAA6yH,EAAA7kI,OAAoBgS,IAAA,CACvC,IAAAqB,EAAAwxH,EAAA7yH,GAEA,OAAAqB,EAAA,IACA,QACAhL,GAAA,KAAAgL,EAAA,GAAAiqG,GAAA,KAAAjqG,EAAA,GAAAiqG,GACA,MAEA,QACAj1G,GAAAgL,EAAAtI,KAAA,KAIA1C,GAAA,IACA2xB,EAAA7yB,KAAAkB,KA6GApK,EAAAC,QAAA,CACAy9F,IAhGA,SAAA19E,EAAA+b,EAAAsjF,EAAA14G,GACA,IAAA84E,EAAAz/D,EAAAje,OAAA,EAAAs9G,EAGA,GAFAtjF,EAAA7yB,KAAA,4CAEAvC,EAAA,GACA,IAAAkgI,EAAApnD,EAAA94E,EACAo1B,EAAA7yB,KAAA,UAAA29H,EAAA,aAAAA,EAAA,MAGA9qG,EAAA7yB,KAAA,gBAAAu2E,EAAA,IAAAA,EAAA,MACA1jD,EAAA7yB,KAAA,aACAy9H,EAAA3mH,EAAA+b,EAAAsjF,GACAtjF,EAAA7yB,KAAA,aACA6yB,EAAA7yB,KAAA,OAoFA49H,IAjFA,SAAA9mH,EAAA+b,EAAAsjF,GACA,IAAA/mC,EAAAt4D,EAAAje,OAEA09E,EADA,GACAnH,EAAA,EAAA+mC,GACAtjF,EAAA7yB,KAAA,iDAAAu2E,EAAA,IAAAA,EAAA,4BAAgG,qCAAsC,aAAiBnH,EAAA+mC,GAAA,yBAAsC,4BAA6Bj1E,YAAA,IAAAt9B,KAAA,OAC1Nu5H,EAAArmH,GAAAzN,QAAA,SAAAq0H,GAGA,IAFA,IAAAx8H,EAAA,GAEA2J,EAAA,EAAmBA,EAAA6yH,EAAA7kI,OAAoBgS,IAAA,CACvC,IAAAqB,EAAAwxH,EAAA7yH,GAEA,OAAAqB,EAAA,IACA,QACAhL,GAAAgL,EAAA,GAAAiqG,EAAA,IAAAjqG,EAAA,SACA,MAEA,QACAhL,GAAAgL,EAAA,OAAAA,EAAA,QAIAhL,GAAA,MACA2xB,EAAA7yB,KAAAkB,KAEA2xB,EAAA7yB,KAAA,iBACA6yB,EAAA7yB,KAAA,OAyDA69H,IAtDA,SAAA/mH,EAAA+b,EAAAsjF,GAEA,IAAA/mC,EAAAt4D,EAAAje,OAEA09E,EADA,GACAnH,EAAA,EAAA+mC,GACA74G,EAAA,qIACAA,EAAA0C,KAAA,wFAAAu2E,EAAA,IAAAA,EAAA,kBACA,IAAA7pE,EAAAw0B,mBACAx0B,GAAAywH,EAAArmH,GAAA5B,IAAA,SAAAwoH,GAIA,IAHA,IACArkI,EAAAC,EADA4H,EAAA,GAGA2J,EAAA,EAAmBA,EAAA6yH,EAAA7kI,OAAoBgS,IAAA,CACvC,IAAAqB,EAAAwxH,EAAA7yH,GAEA,OAAAqB,EAAA,IACA,QAGAhL,IAFA7H,EAAA6S,EAAA,GAAAiqG,GAEA,KADA78G,EAAA81E,EAAAljE,EAAA,GAAAiqG,GACA,MACA,MAEA,QAEAj1G,IADA7H,GAAA6S,EAAA,IACA,IAAA5S,EAAA,MACA,MAEA,QAEA4H,GAAA7H,EAAA,KADAC,GAAA4S,EAAA,IACA,OAMA,OADAhL,GAAA,MAEG0C,KAAA,MACH8I,GAAA,QACApP,EAAA0C,KAAA,sBAAA0M,EAAA7T,OAAA,eAAA6T,EAAA,uBAGA,IAFA,IAAAoxH,EAAA,mCAEAllI,EAAA,EAAA8lC,EAAAphC,EAAA,GAAAzE,OAAqCD,EAAA,EAAOA,IAC5CklI,IAAA,aAAAp/F,GAAAh/B,QAAA,kBACAg/B,GAAAphC,EAAA1E,GAAAC,OAGAyE,EAAA0C,KAAA89H,EAAA,oDAAAp/F,EAAA,aACA7L,EAAA7yB,KAAA1C,EAAAsG,KAAA,KACAivB,EAAA7yB,KAAA,OAOAy2G,WA7GA,SAAA3/F,EAAAq/F,GACA,IAAAtjF,EAAA,GAMA,OALA4qG,EAAA3mH,EAAA+b,EAAAsjF,GACA,CACA14G,KAAAqZ,EAAAje,OAAA,EAAAs9G,EACAzpG,KAAAmmB,EAAA3pB,OAAA0tG,SAAAhzG,KAAA,qCCrKA,IAAA3M,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA8lI,EAA0B/mI,EAAQ,IAElCisD,EAAqBjsD,EAAQ,IAQ7BgnI,EAEA,SAAA7lI,GAQA,SAAA6lI,EAAA3sG,GAKA,YAJA,IAAAA,IACAA,EAAA,KAGAl5B,EAAAa,KAAA9B,KAAA,IAAA+rD,EAAA3qD,QAAA+4B,IAAAn6B,KAGA,OAfAD,EAAA+mI,EAAA7lI,GAeA6lI,EAhBA,CAiBCD,EAAA5sG,mBAEDp6B,EAAAinI,wCC7DC,SAAAjnI,GAeD,IAAAknI,EAAA3mI,OAAAC,gBAAA,CACAC,UAAA,cACGC,OAAA,SAAAL,EAAAC,GACHD,EAAAI,UAAAH,IACG,SAAAD,EAAAC,GACH,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,KAmBA,SAAAwmI,EAAAvlI,EAAA8V,QACA,IAAAA,IACAA,EAAA9V,EAAAd,aAGA,IAAA24D,EAAA50D,MAAA40D,kBACAA,KAAA73D,EAAA8V,GAGA,IAAAhF,EAAA,SAAAtR,GAGA,SAAAsR,EAAAF,GACA,IAAA40H,EAAAjnI,KAAAW,YAEA2R,EAAArR,EAAAa,KAAA9B,KAAAqS,IAAArS,KAQA,OANAI,OAAAU,eAAAwR,EAAA,QACAvR,MAAAkmI,EAAA9/G,KACAzV,YAAA,IAxBA,SAAAjQ,EAAAb,GACA,IAAAP,EAAAD,OAAAC,eACAA,IAAAoB,EAAAb,GAAAa,EAAAnB,UAAAM,EAwBAsmI,CAAA50H,EAAA20H,EAAArmI,WACAomI,EAAA10H,GACAA,EAGA,OAzCA,SAAApS,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHA6mI,EAAA7mI,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,GAkBAX,CAAAwS,EAAAtR,GAgBAsR,EAjBA,CAkBG7N,OAkCH7E,EAAA0S,cACA1S,EAAAsnI,mBAjCA,SAAA5vH,EAAA6vH,GAKA,SAAA70H,IAGA,IAFA,IAAAqF,EAAA,GAEA4oB,EAAA,EAAsBA,EAAAr/B,UAAAQ,OAAuB6+B,IAC7C5oB,EAAA4oB,GAAAr/B,UAAAq/B,GAGA,KAAAxgC,gBAAAuS,GAAA,WAAAA,EAAAmrB,KAAAx8B,MAAAqR,EAAA,SAAA1G,OAAA+L,KACAwvH,EAAAlmI,MAAAlB,KAAA4X,GACAL,EAAArW,MAAAlB,KAAA4X,GACA5X,KAAAmnB,KAAA5P,EAAA4P,MAAAigH,EAAAjgH,KACA6/G,EAAAhnI,KAAAuS,GAGA,YAlBA,IAAA60H,IACAA,EAAA1iI,OAiBAtE,OAAAo/D,iBAAAjtD,EAAA,CACA3R,UAAA,CACAG,MAAAX,OAAAS,OAAAumI,EAAAxmI,UAAA,CACAD,YAAA,CACAI,MAAAwR,EACAZ,UAAA,EACApG,cAAA,SA/F8D87H,CAAAxnI,iCCC9DO,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAumI,EAEA,WACA,SAAAA,KAMA,OAJAA,EAAA3kI,eAAA,SAAA83D,GACA,OAAAA,GAGA6sE,EAPA,GAUAznI,EAAAuB,QAAAkmI,gCCDAlnI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAwzC,EAAkBz0C,EAAQ,IAE1BqoC,EAAkBroC,EAAQ,IAE1B8rD,EAA2B9rD,EAAQ,IAEnCynI,EAAwBznI,EAAQ,KAEhC20C,EAA8B30C,EAAQ,IAEtC0nI,EAAkB1nI,EAAQ,KAE1B2nI,EAA+B3nI,EAAQ,KAEvCi6B,EAA0Bj6B,EAAQ,IAWlC4nI,EAEA,WACA,SAAAA,IACA1nI,KAAA2nI,UAAA,IAAA/7E,EAAAxqD,QAAA+mC,EAAA/mC,QAAAi3B,mBAuJA,OAtIAqvG,EAAA9mI,UAAAgnI,mBAAA,SAAA1oH,EAAA2I,GACA,OAAA7nB,KAAAk1C,gBAAAX,EAAAnzC,QAAA6d,sBAAAC,GAAA2I,IAgBA6/G,EAAA9mI,UAAAs0C,gBAAA,SAAAn2B,EAAA8I,GAEA,IAAAggH,EAAA,IAAAN,EAAAnmI,QAAA2d,GACAo6D,EAAA,KAEA,IACA,OAAAn5E,KAAA8nI,sBAAAD,EAAAhgH,GACK,MAAA5c,GAGLkuE,EAAAluE,EAGA,IAEA48H,EAAAE,SAEAF,EAAAG,WAAA,GAEAH,EAAAI,cAEAJ,EAAAK,wBASAL,EAAAM,SACA,IAAAzzH,EAAA1U,KAAA8nI,sBAAAD,EAAAhgH,GAGA,OADAnT,EAAA2nC,SAAA,IAAA5H,EAAArzC,SAAA,IACAsT,EACK,MAAAzJ,GAIL,UAAAkuE,EACA,MAAAA,EAGA,MAAAluE,IAIAy8H,EAAA9mI,UAAAknI,sBAAA,SAAAD,EAAAhgH,GAUA,IATA,IAAArB,EAAAqhH,EAAAI,cACApyF,EAAAgyF,EAAAK,wBAAAhiE,0BAEAkiE,EAAAP,EAAAQ,gBAEAC,EAAAd,EAAApmI,QAAAmnI,cAAAH,EAAA5hH,EAAAqvB,GAEA2yF,EAAA,EAEAhoG,EAAA,EAAAioG,EAAAH,EAA+C9nG,EAAAioG,EAAA9mI,OAA0B6+B,IAAA,CAEzEgoG,IADAE,EAAAD,EAAAjoG,IACAmoG,sBAMA,IAHA,IAAAC,EAAA,IAAArkI,WAAAikI,GACAK,EAAA,EAEAjoG,EAAA,EAAAkoG,EAAAR,EAA+C1nG,EAAAkoG,EAAAnnI,OAA0Bi/B,IAAA,CACzE,IAAA8nG,EACAK,GADAL,EAAAI,EAAAloG,IACAooG,eACAC,EAAAP,EAAAC,sBACA3oI,KAAAkpI,cAAAH,EAAAE,GAEA,QAAAvnI,EAAA,EAAqBA,EAAAunI,EAAsBvnI,IAC3CknI,EAAAC,KAAAE,EAAArnI,GAKA,OAAA+lI,EAAArmI,QAAAwmB,OAAAghH,EAAApiH,EAAAqvB,EAAAhuB,IAYA6/G,EAAA9mI,UAAAsoI,cAAA,SAAAH,EAAAE,GAGAF,EAAApnI,OAAA,IAEAwnI,EAAA,IAAAnqH,WAAA+pH,GAMA,IACA/oI,KAAA2nI,UAAA//G,OAAAuhH,EAAAJ,EAAApnI,OAAAsnI,GACK,MAAAjgH,GAGL,UAAA+Q,EAAA34B,QAKA,QAAAM,EAAA,EAAmBA,EAAAunI,EAAsBvnI,IACzCqnI,EAAArnI,GAEAynI,EAAAznI,IAIAgmI,EAzJA,GA4JA7nI,EAAAuB,QAAAsmI,gCC3LAtnI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAggD,EAAgBjhD,EAAQ,IAExBm5C,EAA0Bn5C,EAAQ,IAElCspI,EAAiBtpI,EAAQ,KAEzBk6B,EAAwBl6B,EAAQ,GAMhCupI,EAEA,WAKA,SAAAA,EAAAnuF,GACA,IAAAZ,EAAAY,EAAA/6B,YAEA,GAAAm6B,EAAA,WAAAA,GACA,UAAAtgB,EAAA54B,QAGApB,KAAAk7C,YAyOA,OA9NAmuF,EAAAzoI,UAAAsnI,sBAAA,WACA,UAAAloI,KAAAspI,uBAAApkI,IAAAlF,KAAAspI,iBACA,OAAAtpI,KAAAspI,iBAMA,IAFA,IAAAC,EAAA,EAEA7nI,EAAA,EAAmBA,EAAA,EAAOA,IAC1B6nI,EAAAvpI,KAAAwpI,QAAA9nI,EAAA,EAAA6nI,GAIAA,EAAAvpI,KAAAwpI,QAAA,IAAAD,GACAA,EAAAvpI,KAAAwpI,QAAA,IAAAD,GACAA,EAAAvpI,KAAAwpI,QAAA,IAAAD,GAEA,QAAAvhI,EAAA,EAAmBA,GAAA,EAAQA,IAC3BuhI,EAAAvpI,KAAAwpI,QAAA,EAAAxhI,EAAAuhI,GAIA,IAAAjvF,EAAAt6C,KAAAk7C,UAAA/6B,YACAspH,EAAA,EACAC,EAAApvF,EAAA,EAEA,IAAAtyC,EAAAsyC,EAAA,EAA+BtyC,GAAA0hI,EAAW1hI,IAC1CyhI,EAAAzpI,KAAAwpI,QAAA,EAAAxhI,EAAAyhI,GAGA,IAAA/nI,EAAA44C,EAAA,EAA+B54C,EAAA44C,EAAe54C,IAC9C+nI,EAAAzpI,KAAAwpI,QAAA9nI,EAAA,EAAA+nI,GAKA,GAFAzpI,KAAAspI,iBAAArwF,EAAA73C,QAAAqkE,wBAAA8jE,EAAAE,GAEA,OAAAzpI,KAAAspI,iBACA,OAAAtpI,KAAAspI,iBAGA,UAAAtvG,EAAA54B,SAWAioI,EAAAzoI,UAAAqnI,YAAA,WACA,UAAAjoI,KAAA2pI,oBAAAzkI,IAAAlF,KAAA2pI,cACA,OAAA3pI,KAAA2pI,cAGA,IAAArvF,EAAAt6C,KAAAk7C,UAAA/6B,YACA+jC,EAAAp6C,KAAA2F,OAAA6qC,EAAA,OAEA,GAAA4J,GAAA,EACA,OAAAnD,EAAA3/C,QAAAm5C,oBAAA2J,GAOA,IAHA,IAAAxJ,EAAA,EACAkvF,EAAAtvF,EAAA,GAEAtyC,EAAA,EAAmBA,GAAA,EAAQA,IAC3B,QAAAtG,EAAA44C,EAAA,EAAiC54C,GAAAkoI,EAAYloI,IAC7Cg5C,EAAA16C,KAAAwpI,QAAA9nI,EAAAsG,EAAA0yC,GAIA,IAAAmvF,EAAA9oF,EAAA3/C,QAAAq5C,yBAAAC,GAEA,UAAAmvF,KAAA1vF,2BAAAG,EAEA,OADAt6C,KAAA2pI,cAAAE,EACAA,EAIAnvF,EAAA,EAEA,IAAAh5C,EAAA,EAAmBA,GAAA,EAAQA,IAC3B,IAAAsG,EAAAsyC,EAAA,EAAiCtyC,GAAA4hI,EAAY5hI,IAC7C0yC,EAAA16C,KAAAwpI,QAAA9nI,EAAAsG,EAAA0yC,GAMA,WAFAmvF,EAAA9oF,EAAA3/C,QAAAq5C,yBAAAC,KAEAmvF,EAAA1vF,2BAAAG,EAEA,OADAt6C,KAAA2pI,cAAAE,EACAA,EAGA,UAAA7vG,EAAA54B,SAGAioI,EAAAzoI,UAAA4oI,QAAA,SAAA9nI,EAEAsG,EAEA0yC,GAIA,OADA16C,KAAA8pI,SAAA9pI,KAAAk7C,UAAAr7B,IAAA7X,EAAAtG,GAAA1B,KAAAk7C,UAAAr7B,IAAAne,EAAAsG,IACA0yC,GAAA,IAAAA,GAAA,GAYA2uF,EAAAzoI,UAAAynI,cAAA,WACA,IAAA/iE,EAAAtlE,KAAAkoI,wBACA1hH,EAAAxmB,KAAAioI,cAGAziE,EAAA4jE,EAAAhoI,QAAAguB,OAAAvP,IAAAylD,EAAAa,eACA7rB,EAAAt6C,KAAAk7C,UAAA/6B,YACAqlD,EAAAukE,gBAAA/pI,KAAAk7C,UAAAZ,GAQA,IAPA,IAAA0vF,EAAAxjH,EAAAy0B,uBACAgvF,GAAA,EACAv1H,EAAA,IAAAnQ,WAAAiiB,EAAA0zB,qBACA2uF,EAAA,EACAqB,EAAA,EACAC,EAAA,EAEAniI,EAAAsyC,EAAA,EAA+BtyC,EAAA,EAAOA,GAAA,GACtC,IAAAA,GAGAA,IAIA,QAAAynB,EAAA,EAAyBA,EAAA6qB,EAAmB7qB,IAG5C,IAFA,IAAA/tB,EAAAuoI,EAAA3vF,EAAA,EAAA7qB,IAEA09C,EAAA,EAAyBA,EAAA,EAASA,IAElC68D,EAAAnqH,IAAA7X,EAAAmlE,EAAAzrE,KAEAyoI,IACAD,IAAA,EAEAlqI,KAAAk7C,UAAAr7B,IAAA7X,EAAAmlE,EAAAzrE,KACAwoI,GAAA,GAIA,IAAAC,IACAz1H,EAAAm0H,KAEAqB,EACAC,EAAA,EACAD,EAAA,IAMAD,KAGA,GAAApB,IAAAriH,EAAA0zB,oBACA,UAAAlgB,EAAA54B,QAGA,OAAAsT,GAOA20H,EAAAzoI,UAAAmnI,OAAA,WACA,UAAA/nI,KAAAspI,iBAAA,CAIA,IAAA9jE,EAAA4jE,EAAAhoI,QAAAguB,OAAApvB,KAAAspI,iBAAAnjE,eACA7rB,EAAAt6C,KAAAk7C,UAAA/6B,YACAqlD,EAAAukE,gBAAA/pI,KAAAk7C,UAAAZ,KAYA+uF,EAAAzoI,UAAAonI,UAAA,SAAA8B,GACA9pI,KAAA2pI,cAAA,KACA3pI,KAAAspI,iBAAA,KACAtpI,KAAA8pI,YAKAT,EAAAzoI,UAAAunI,OAAA,WAGA,IAFA,IAAAjtF,EAAAl7C,KAAAk7C,UAEA/4C,EAAA,EAAAyc,EAAAs8B,EAAAh7B,WAAiD/d,EAAAyc,EAAWzc,IAC5D,QAAAC,EAAAD,EAAA,EAAA0c,EAAAq8B,EAAA/6B,YAAyD/d,EAAAyc,EAAYzc,IACrE84C,EAAAr7B,IAAA1d,EAAAC,KAAA84C,EAAAr7B,IAAAzd,EAAAD,KACA+4C,EAAAn7B,KAAA3d,EAAAD,GACA+4C,EAAAn7B,KAAA5d,EAAAC,KAMAinI,EArPA,GAwPAxpI,EAAAuB,QAAAioI,gCCzRAjpI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IASA,IAAAqpI,EAEA,WACA,SAAAA,EAAAC,GAKA,IAFA,IAAA9wF,EAAA,GAEA/Y,EAAA,EAAoBA,EAAAr/B,UAAAQ,OAAuB6+B,IAC3C+Y,EAAA/Y,EAAA,GAAAr/B,UAAAq/B,GAGAxgC,KAAAqqI,sBACArqI,KAAAu5C,WA2BA,OAxBA6wF,EAAAxpI,UAAA64C,uBAAA,WACA,OAAAz5C,KAAAqqI,qBAGAD,EAAAxpI,UAAA2iD,aAAA,WAIA,IAHA,IAAAl5B,EAAA,EAGAmW,EAAA,EAAA8pG,EAFAtqI,KAAAu5C,SAE2C/Y,EAAA8pG,EAAA3oI,OAAwB6+B,IAAA,CAEnEnW,GADAigH,EAAA9pG,GACAqZ,WAGA,OAAAxvB,GAGA+/G,EAAAxpI,UAAAuiD,oBAAA,WACA,OAAAnjD,KAAAqqI,oBAAArqI,KAAAujD,gBAGA6mF,EAAAxpI,UAAA+4C,YAAA,WACA,OAAA35C,KAAAu5C,UAGA6wF,EAtCA,GAyCAvqI,EAAAuB,QAAAgpI,gCCrDAhqI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAQA,IAAAwpI,EAEA,WACA,SAAAA,EAAA96G,EAEA+6G,GAGAxqI,KAAAyvB,QACAzvB,KAAAwqI,gBAWA,OARAD,EAAA3pI,UAAAi5C,SAAA,WACA,OAAA75C,KAAAyvB,OAGA86G,EAAA3pI,UAAAk5C,iBAAA,WACA,OAAA95C,KAAAwqI,eAGAD,EAlBA,GAqBA1qI,EAAAuB,QAAAmpI,gCCdA,IAAAE,EAHArqI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,SAAA0pI,GACAA,IAAA,iCACAA,IAAA,iCACAA,IAAA,iCACAA,IAAA,iCACAA,IAAA,iCACAA,IAAA,iCACAA,IAAA,iCACAA,IAAA,iCARA,CASCA,EAAA5qI,EAAA4qI,iBAAA5qI,EAAA4qI,eAAA,KAcD,IAAAC,EAEA,WAEA,SAAAA,EAAA3pI,EAAA4pI,GACA3qI,KAAAe,QACAf,KAAA2qI,WA4GA,OAhGAD,EAAA9pI,UAAAmpI,gBAAA,SAAAhrH,EAAAu7B,GAGA,QAAA54C,EAAA,EAAmBA,EAAA44C,EAAe54C,IAClC,QAAAsG,EAAA,EAAqBA,EAAAsyC,EAAetyC,IACpChI,KAAA2qI,SAAAjpI,EAAAsG,IACA+W,EAAAgB,KAAA/X,EAAAtG,IAMAgpI,EAAAt7G,OAAA,IAAAjM,IAAA,CAIA,CAAAsnH,EAAAG,cAAA,IAAAF,EAAAD,EAAAG,cAAA,SAAAlpI,EAEAsG,GAGA,YAAAtG,EAAAsG,EAAA,MAKA,CAAAyiI,EAAAI,cAAA,IAAAH,EAAAD,EAAAI,cAAA,SAAAnpI,EAEAsG,GAGA,cAAAtG,MAKA,CAAA+oI,EAAAK,cAAA,IAAAJ,EAAAD,EAAAK,cAAA,SAAAppI,EAEAsG,GAGA,OAAAA,EAAA,SAKA,CAAAyiI,EAAAM,cAAA,IAAAL,EAAAD,EAAAM,cAAA,SAAArpI,EAEAsG,GAGA,OAAAtG,EAAAsG,GAAA,SAKA,CAAAyiI,EAAAO,cAAA,IAAAN,EAAAD,EAAAO,cAAA,SAAAtpI,EAEAsG,GAGA,YAAA8B,KAAA2F,MAAA/N,EAAA,GAAAoI,KAAA2F,MAAAzH,EAAA,SAMA,CAAAyiI,EAAAQ,cAAA,IAAAP,EAAAD,EAAAQ,cAAA,SAAAvpI,EAEAsG,GAGA,OAAAtG,EAAAsG,EAAA,SAMA,CAAAyiI,EAAAS,cAAA,IAAAR,EAAAD,EAAAS,cAAA,SAAAxpI,EAEAsG,GAGA,OAAAtG,EAAAsG,EAAA,OAMA,CAAAyiI,EAAAU,cAAA,IAAAT,EAAAD,EAAAU,cAAA,SAAAzpI,EAEAsG,GAGA,YAAAtG,EAAAsG,EAAAtG,EAAAsG,EAAA,UAEA0iI,EAhHA,GAmHA7qI,EAAAuB,QAAAspI,gCCjJAtqI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA2d,EAAiC5e,EAAQ,GAUzCsrI,EAEA,WACA,SAAAA,EAAAnC,EAEAb,GACApoI,KAAAipI,mBACAjpI,KAAAooI,YAmGA,OApFAgD,EAAA7C,cAAA,SAAA8C,EAAA7kH,EAAAqvB,GACA,GAAAw1F,EAAA1pI,SAAA6kB,EAAA0zB,oBACA,UAAAx7B,EAAAtd,QAUA,IALA,IAAAm4C,EAAA/yB,EAAA4zB,oBAAAvE,GAEAy1F,EAAA,EACAC,EAAAhyF,EAAAI,cAEAnZ,EAAA,EAAAgrG,EAAAD,EAAmD/qG,EAAAgrG,EAAA7pI,OAA4B6+B,IAAA,CAE/E8qG,IADA1xF,EAAA4xF,EAAAhrG,IACAqZ,WAOA,IAHA,IAAAnlC,EAAA,IAAAnU,MAAA+qI,GACAG,EAAA,EAEA7qG,EAAA,EAAA8qG,EAAAH,EAAmD3qG,EAAA8qG,EAAA/pI,OAA4Bi/B,IAG/E,IAFA,IAAAgZ,EAAA8xF,EAAA9qG,GAEAl/B,EAAA,EAAqBA,EAAAk4C,EAAAC,WAAwBn4C,IAAA,CAC7C,IAAAunI,EAAArvF,EAAAE,mBACA6xF,EAAApyF,EAAAE,yBAAAwvF,EACAv0H,EAAA+2H,KAAA,IAAAL,EAAAnC,EAAA,IAAA1kI,WAAAonI,IASA,IAHA,IAAAC,EAAAl3H,EAAA,GAAA0zH,UAAAzmI,OACAkqI,EAAAn3H,EAAA/S,OAAA,EAEAkqI,GAAA,IAGA,GAFAn3H,EAAAm3H,GAAAzD,UAAAzmI,SAEAiqI,EACA,MAGAC,IAGAA,IACA,IAAAC,EAAAF,EAAAryF,EAAAE,yBAGAsyF,EAAA,EAEA,IAAArqI,EAAA,EAAmBA,EAAAoqI,EAAmCpqI,IACtD,QAAAsG,EAAA,EAAqBA,EAAAyjI,EAAqBzjI,IAC1C0M,EAAA1M,GAAAogI,UAAA1mI,GAAA2pI,EAAAU,KAKA,IAAA/jI,EAAA6jI,EAAqC7jI,EAAAyjI,EAAqBzjI,IAC1D0M,EAAA1M,GAAAogI,UAAA0D,GAAAT,EAAAU,KAIA,IAAAv/H,EAAAkI,EAAA,GAAA0zH,UAAAzmI,OAEA,IAAAD,EAAAoqI,EAA+CpqI,EAAA8K,EAAS9K,IACxD,IAAAsG,EAAA,EAAqBA,EAAAyjI,EAAqBzjI,IAAA,CAC1C,IAAA6uC,EAAA7uC,EAAA6jI,EAAAnqI,IAAA,EACAgT,EAAA1M,GAAAogI,UAAAvxF,GAAAw0F,EAAAU,KAIA,OAAAr3H,GAGA02H,EAAAxqI,UAAA+nI,oBAAA,WACA,OAAA3oI,KAAAipI,kBAGAmC,EAAAxqI,UAAAooI,aAAA,WACA,OAAAhpI,KAAAooI,WAGAgD,EAxGA,GA2GAvrI,EAAAuB,QAAAgqI,gCC3HAhrI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA8pD,EAAkB/qD,EAAQ,IAE1Bw8C,EAAwBx8C,EAAQ,IAEhCgrD,EAAsBhrD,EAAQ,IAE9B0rD,EAAoB1rD,EAAQ,IAE5BghD,EAAahhD,EAAQ,IAErB2e,EAAsB3e,EAAQ,IAE9BshD,EAAuBthD,EAAQ,IAE/Bk6B,EAAwBl6B,EAAQ,GAqBhCksI,EAEA,WACA,SAAAA,KA0XA,OAxXAA,EAAApkH,OAAA,SAAAta,EAAAkZ,EAAAqvB,EAAAhuB,GACA,IAAA9I,EAAA,IAAA8rC,EAAAzpD,QAAAkM,GACAoH,EAAA,IAAA+J,EAAArd,QACAs0C,EAAA,IAAAn1C,MAGA0rI,GAAA,EACAC,GAAA,EAEA,IACA,IAAAC,EAAA,KACAC,GAAA,EACAnqF,OAAA,EAEA,GAEA,GAAAljC,EAAAw8B,YAAA,EAEA0G,EAAAnB,EAAA1/C,QAAA6mE,eACS,CACT,IAAAokE,EAAAttH,EAAAu8B,SAAA,GACA2G,EAAAnB,EAAA1/C,QAAA0pC,QAAAuhG,GAGA,OAAApqF,GACA,KAAAnB,EAAA1/C,QAAA6mE,WACA,MAEA,KAAAnnB,EAAA1/C,QAAA+mE,oBACA,KAAArnB,EAAA1/C,QAAAgnE,qBAEAgkE,GAAA,EACA,MAEA,KAAAtrF,EAAA1/C,QAAA8mE,kBACA,GAAAnpD,EAAAw8B,YAAA,GACA,UAAAvhB,EAAA54B,QAKA6qI,EAAAltH,EAAAu8B,SAAA,GACA4wF,EAAAntH,EAAAu8B,SAAA,GACA,MAEA,KAAAwF,EAAA1/C,QAAA+mD,IAEA,IAAApnD,EAAAirI,EAAAM,cAAAvtH,GAGA,WAFAotH,EAAA7vF,EAAAl7C,QAAA8/B,0BAAAngC,IAGA,UAAAi5B,EAAA54B,QAGA,MAEA,KAAA0/C,EAAA1/C,QAAAinE,MAGA,IAAAkkE,EAAAxtH,EAAAu8B,SAAA,GACAkxF,EAAAztH,EAAAu8B,SAAA2G,EAAAmC,sBAAA59B,IAEA+lH,IAAAP,EAAAS,eACAT,EAAAU,mBAAA3tH,EAAArK,EAAA83H,GAGA,MAEA,QAGA,IAAA/8G,EAAA1Q,EAAAu8B,SAAA2G,EAAAmC,sBAAA59B,IAEA,OAAAy7B,GACA,KAAAnB,EAAA1/C,QAAAyjD,QACAmnF,EAAAW,qBAAA5tH,EAAArK,EAAA+a,GACA,MAEA,KAAAqxB,EAAA1/C,QAAAwjD,aACAonF,EAAAY,0BAAA7tH,EAAArK,EAAA+a,EAAA28G,GACA,MAEA,KAAAtrF,EAAA1/C,QAAAghD,KACA4pF,EAAAa,kBAAA9tH,EAAArK,EAAA+a,EAAA08G,EAAAz2F,EAAA7tB,GACA,MAEA,KAAAi5B,EAAA1/C,QAAAojD,MACAwnF,EAAAc,mBAAA/tH,EAAArK,EAAA+a,GACA,MAEA,QACA,UAAAuK,EAAA54B,gBAKO6gD,IAAAnB,EAAA1/C,QAAA6mE,YACF,MAAA8kE,GAIL,UAAA/yG,EAAA54B,QAGA,WAAA0pD,EAAA1pD,QAAAkM,EAAAoH,EAAA9R,WAAA,IAAA8yC,EAAA/zC,OAAA,KAAA+zC,EAAA,OAAAG,EAAA,KAAAA,EAAAjzC,WAAAqpI,EAAAC,IAOAF,EAAAU,mBAAA,SAAA3tH,EAAArK,EAAA+a,GAIA,MAAAA,EAAA1Q,EAAAw8B,YACA,UAAAvhB,EAAA54B,QAQA,IAHA,IAAA6E,EAAA,IAAA1B,WAAA,EAAAkrB,GACAvnB,EAAA,EAEAunB,EAAA,IAEA,IAAAu9G,EAAAjuH,EAAAu8B,SAAA,IACA2xF,EAAAD,EAAA,iBAAAA,EAAA,GAIAC,GAFAA,EAAA,IAEA,MAGA,MAGAhnI,EAAAiC,GAEA+kI,GAAA,MACAhnI,EAAAiC,EAAA,GAEA,IAAA+kI,EACA/kI,GAAA,EACAunB,IAGA,IACA/a,EAAAuN,OAAAm/B,EAAAhgD,QAAAwmB,OAAA3hB,EAAAulD,EAAApqD,QAAAwmE,SACK,MAAA5+C,GAGL,UAAAgR,EAAA54B,QAAA4nB,KAIAgjH,EAAAc,mBAAA,SAAA/tH,EAAArK,EAAA+a,GAIA,MAAAA,EAAA1Q,EAAAw8B,YACA,UAAAvhB,EAAA54B,QAQA,IAHA,IAAA6E,EAAA,IAAA1B,WAAA,EAAAkrB,GACAvnB,EAAA,EAEAunB,EAAA,IAEA,IAAAu9G,EAAAjuH,EAAAu8B,SAAA,IACA2xF,EAAAD,EAAA,kBAAAA,EAAA,IAIAC,GAFAA,EAAA,KAEA,MAGA,MAGAhnI,EAAAiC,GAEA+kI,GAAA,EACAhnI,EAAAiC,EAAA,GAEA+kI,EACA/kI,GAAA,EACAunB,IAIA,IACA/a,EAAAuN,OAAAm/B,EAAAhgD,QAAAwmB,OAAA3hB,EAAAulD,EAAApqD,QAAAqmE,YACK,MAAAz+C,GAGL,UAAAgR,EAAA54B,QAAA4nB,KAIAgjH,EAAAa,kBAAA,SAAA9tH,EAAArK,EAAA+a,EAEA08G,EAAAz2F,EAAA7tB,GAEA,KAAA4H,EAAA1Q,EAAAw8B,YACA,UAAAvhB,EAAA54B,QAKA,IAFA,IAQAkE,EARA4nI,EAAA,IAAA3oI,WAAAkrB,GAEA/tB,EAAA,EAAmBA,EAAA+tB,EAAW/tB,IAC9BwrI,EAAAxrI,GAEAqd,EAAAu8B,SAAA,GAWAh2C,EANA,OAAA6mI,EAMA3gF,EAAApqD,QAAAolE,cAAA0mE,EAAArlH,GAEAskH,EAAAnrG,UAGA,IACAtsB,EAAAuN,OAAAm/B,EAAAhgD,QAAAwmB,OAAAslH,EAAA5nI,IACK,MAAA0jB,GAGL,UAAAgR,EAAA54B,QAAA4nB,GAGA0sB,EAAA5sC,KAAAokI,IAGAlB,EAAAmB,mBAAA,SAAApsI,GAGA,GAAAA,GAAAirI,EAAAoB,mBAAAzrI,OACA,UAAAq4B,EAAA54B,QAGA,OAAA4qI,EAAAoB,mBAAArsI,IAGAirI,EAAAY,0BAAA,SAAA7tH,EAAArK,EAAA+a,EAEA28G,GAIA,IAFA,IAAA1iI,EAAAgL,EAAA/S,SAEA8tB,EAAA,IACA,GAAA1Q,EAAAw8B,YAAA,GACA,UAAAvhB,EAAA54B,QAGA,IAAAisI,EAAAtuH,EAAAu8B,SAAA,IACA5mC,EAAAuN,OAAA+pH,EAAAmB,mBAAArjI,KAAA2F,MAAA49H,EAAA,MACA34H,EAAAuN,OAAA+pH,EAAAmB,mBAAAE,EAAA,KACA59G,GAAA,EAGA,OAAAA,EAAA,CAEA,GAAA1Q,EAAAw8B,YAAA,EACA,UAAAvhB,EAAA54B,QAGAsT,EAAAuN,OAAA+pH,EAAAmB,mBAAApuH,EAAAu8B,SAAA,KAIA,GAAA8wF,EAEA,QAAA1qI,EAAAgI,EAAyBhI,EAAAgT,EAAA/S,SAAqBD,IAC9C,MAAAgT,EAAAlB,OAAA9R,KACAA,EAAAgT,EAAA/S,SAAA,SAAA+S,EAAAlB,OAAA9R,EAAA,GAEAgT,EAAAub,aAAAvuB,EAAA,GAGAgT,EAAAwb,UAAAxuB,EAAAgG,OAAAgD,aAAA,OAOAshI,EAAAW,qBAAA,SAAA5tH,EAAArK,EAAA+a,GAIA,KAAAA,GAAA,IAEA,GAAA1Q,EAAAw8B,YAAA,GACA,UAAAvhB,EAAA54B,QAGA,IAAAksI,EAAAvuH,EAAAu8B,SAAA,IAEA,GAAAgyF,GAAA,IACA,UAAAtzG,EAAA54B,QAGAsT,EAAAuN,OAAA+pH,EAAAmB,mBAAArjI,KAAA2F,MAAA69H,EAAA,OACA54H,EAAAuN,OAAA+pH,EAAAmB,mBAAArjI,KAAA2F,MAAA69H,EAAA,SACA54H,EAAAuN,OAAA+pH,EAAAmB,mBAAAG,EAAA,KACA79G,GAAA,EAGA,OAAAA,EAAA,CAEA,GAAA1Q,EAAAw8B,YAAA,EACA,UAAAvhB,EAAA54B,QAGA,IAAAmsI,EAAAxuH,EAAAu8B,SAAA,GAEA,GAAAiyF,GAAA,IACA,UAAAvzG,EAAA54B,QAGAsT,EAAAuN,OAAA+pH,EAAAmB,mBAAArjI,KAAA2F,MAAA89H,EAAA,MACA74H,EAAAuN,OAAA+pH,EAAAmB,mBAAAI,EAAA,UACK,OAAA99G,EAAA,CAEL,GAAA1Q,EAAAw8B,YAAA,EACA,UAAAvhB,EAAA54B,QAGA,IAAAosI,EAAAzuH,EAAAu8B,SAAA,GAEA,GAAAkyF,GAAA,GACA,UAAAxzG,EAAA54B,QAGAsT,EAAAuN,OAAA+pH,EAAAmB,mBAAAK,MAIAxB,EAAAM,cAAA,SAAAvtH,GACA,IAAA1U,EAAA0U,EAAAu8B,SAAA,GAEA,YAAAjxC,GAEA,WAAAA,EAGA,cAAAA,GAGA,UAAAA,IAAA,aADA0U,EAAAu8B,SAAA,GAIA,cAAAjxC,GAGA,UAAAA,IAAA,cADA0U,EAAAu8B,SAAA,IAIA,UAAAthB,EAAA54B,SAOA4qI,EAAAoB,mBAAA,gDACApB,EAAAS,cAAA,EACAT,EA3XA,GA8XAnsI,EAAAuB,QAAA4qI,gCCvaA5rI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAymB,EAAuB1nB,EAAQ,GAE/BqiB,EAAoBriB,EAAQ,GAE5BkrD,EAAuBlrD,EAAQ,IAE/BurD,EAA4BvrD,EAAQ,IAEpCyrD,EAA6BzrD,EAAQ,IAErCkC,EAAkBlC,EAAQ,IAE1BihD,EAAgBjhD,EAAQ,IAExB2tI,EAA4B3tI,EAAQ,KAEpC4tI,EAA+B5tI,EAAQ,KAEvC4nB,EAA0B5nB,EAAQ,GAWlC6tI,EAEA,WACA,SAAAA,EAAAzuH,GACAlf,KAAAkf,QAgZA,OA7YAyuH,EAAA/sI,UAAAgtI,SAAA,WACA,OAAA5tI,KAAAkf,OAGAyuH,EAAA/sI,UAAAitI,uBAAA,WACA,OAAA7tI,KAAAkkC,qBAuBAypG,EAAA/sI,UAAAy0C,OAAA,SAAAxtB,GACA7nB,KAAAkkC,oBAAA,OAAArc,QAAA3iB,IAAA2iB,EAAA,KAEAA,EAAAhI,IAAA2H,EAAApmB,QAAA+nB,4BACA,IACAqjD,EADA,IAAAihE,EAAArsI,QAAApB,KAAAkf,MAAAlf,KAAAkkC,qBACA4pG,KAAAjmH,GACA,OAAA7nB,KAAA+tI,yBAAAvhE,IAGAmhE,EAAA/sI,UAAAmtI,yBAAA,SAAAvhE,GACA,IAAAwhE,EAAAxhE,EAAAyhE,aACAC,EAAA1hE,EAAA2hE,cACA5nE,EAAAiG,EAAA4hE,gBACA73F,EAAAv2C,KAAAquI,oBAAAL,EAAAE,EAAA3nE,GAEA,GAAAhwB,EAAA,EACA,UAAA7uB,EAAAtmB,QAAA,wCAGA,IAAAk5C,EAAAqzF,EAAAW,iBAAAN,EAAAE,EAAA3nE,EAAAhwB,GACA2N,EAAAnD,EAAA3/C,QAAAi5C,kCAAAC,GACAi0F,EAAArqF,EAAA/J,yBAAA,EACAq0F,EAAA,KAEA,GAAAtqF,EAAAjK,6BAAAt4C,OAAA,EAcA,IAZA,IAAA8sI,EAAAP,EAAA7rI,OAAA2rI,EAAA3rI,OAAAkkE,EAAAlkE,OACAqsI,EAAAR,EAAA5rI,OAAA0rI,EAAA1rI,OAAAikE,EAAAjkE,OAGAqsI,EAAA,IAAAJ,EACAK,EAEA9kI,KAAA2F,MAAAu+H,EAAA3rI,OAAAssI,GAAAF,EAAAT,EAAA3rI,SACAwsI,EAEA/kI,KAAA2F,MAAAu+H,EAAA1rI,OAAAqsI,GAAAD,EAAAV,EAAA1rI,SAEAZ,EAAA,EAAqBA,GAAA,GAASA,IAAA,EAC9B,IACA8sI,EAAAxuI,KAAA8uI,sBAAAv4F,EAAAq4F,EAAAC,EAAAntI,GACA,MACS,MAAA+nB,GAGT,KAAAA,aAAA/B,EAAAtmB,SACA,MAAAqoB,EAQA,IAEAnB,EAFA+tC,EAAAs3E,EAAAoB,gBAAAf,EAAAE,EAAA3nE,EAAAioE,EAAAl0F,GACAv7B,EAAA4uH,EAAArlE,WAAAtoE,KAAAkf,MAAAm3C,EAAA/b,GASA,OALAhyB,EADA,OAAAkmH,EACA,CAAAjoE,EAAAynE,EAAAE,GAEA,CAAA3nE,EAAAynE,EAAAE,EAAAM,GAGA,IAAAxjF,EAAA5pD,QAAA2d,EAAAuJ,IAGAqlH,EAAAoB,gBAAA,SAAAf,EAAAE,EAAA3nE,EAAAioE,EAAAl0F,GAGA,IACAm0F,EAGAC,EAGAM,EAGAC,EAVAC,EAAA50F,EAAA,IA0BA,OAbA,OAAAk0F,GACAC,EAAAD,EAAAnsI,OACAqsI,EAAAF,EAAAlsI,OAEA2sI,EADAD,EAAAE,EAAA,IAIAT,EAAAP,EAAA7rI,OAAA2rI,EAAA3rI,OAAAkkE,EAAAlkE,OACAqsI,EAAAR,EAAA5rI,OAAA0rI,EAAA1rI,OAAAikE,EAAAjkE,OACA0sI,EAAAE,EACAD,EAAAC,GAGA3jF,EAAAnqD,QAAAq9C,6BAAA,QAAAywF,EAAA,IAAAF,EAAAC,EAAA,IAAAC,EAAAlB,EAAA3rI,OAAA2rI,EAAA1rI,OAAA4rI,EAAA7rI,OAAA6rI,EAAA5rI,OAAAmsI,EAAAC,EAAAnoE,EAAAlkE,OAAAkkE,EAAAjkE,SAGAqrI,EAAArlE,WAAA,SAAAppD,EAAAm3C,EAAA/b,GAIA,OADA+Q,EAAAjqD,QAAA08C,cACA2rB,wBAAAvqD,EAAAo7B,IAAA+b,IAQAs3E,EAAAW,iBAAA,SAAAN,EAAAE,EAAA3nE,EAAAhwB,GAGA,IAAA44F,EAAAntI,EAAAZ,QAAAizB,MAAAlS,EAAA/gB,QAAA+B,SAAA6qI,EAAAE,GAAA33F,GACA64F,EAAAptI,EAAAZ,QAAAizB,MAAAlS,EAAA/gB,QAAA+B,SAAA6qI,EAAAznE,GAAAhwB,GACA+D,EAAAxwC,KAAA2F,OAAA0/H,EAAAC,GAAA,KAEA,SAAA90F,GAEA,OACAA,IACA,MAGA,OACAA,IACA,MAEA,OACA,UAAA5yB,EAAAtmB,QAAA,kCAGA,OAAAk5C,GAaAqzF,EAAA/sI,UAAAytI,oBAAA,SAAAL,EAAAE,EAAA3nE,GAEA,OAAAvmE,KAAAqvI,0BAAArB,EAAAE,GAAAluI,KAAAqvI,0BAAArB,EAAAznE,IAAA,GASAonE,EAAA/sI,UAAAyuI,0BAAA,SAAAllH,EAAAmlH,GACA,IAAAC,EAAAvvI,KAAAwvI,iCAEA1lI,KAAA2F,MAAA0a,EAAA9nB,QAEAyH,KAAA2F,MAAA0a,EAAA7nB,QAEAwH,KAAA2F,MAAA6/H,EAAAjtI,QAEAyH,KAAA2F,MAAA6/H,EAAAhtI,SACAmtI,EAAAzvI,KAAAwvI,iCAEA1lI,KAAA2F,MAAA6/H,EAAAjtI,QAEAyH,KAAA2F,MAAA6/H,EAAAhtI,QAEAwH,KAAA2F,MAAA0a,EAAA9nB,QAEAyH,KAAA2F,MAAA0a,EAAA7nB,SAEA,OAAA4E,MAAAqoI,GACAE,EAAA,EAGAvoI,MAAAuoI,GACAF,EAAA,GAKAA,EAAAE,GAAA,IASA9B,EAAA/sI,UAAA4uI,iCAAA,SAAAE,EAEAC,EAEAC,EAEAC,GAGA,IAAAn7H,EAAA1U,KAAA8vI,yBAAAJ,EAAAC,EAAAC,EAAAC,GAEA7lG,EAAA,EACA+lG,EAAAL,GAAAE,EAAAF,GAEAK,EAAA,GACA/lG,EAAA0lG,GAEAA,EAAAK,GACAA,EAAA,GACKA,GAAA/vI,KAAAkf,MAAAgB,aACL8pB,GAAAhqC,KAAAkf,MAAAgB,WAAA,EAAAwvH,IAEAK,EAAAL,GACAK,EAAA/vI,KAAAkf,MAAAgB,WAAA,GAGA,IAAA8vH,EAEAlmI,KAAA2F,MAAAkgI,GAAAE,EAAAF,GAAA3lG,GAoBA,OAnBAA,EAAA,EAEAgmG,EAAA,GACAhmG,EAAA2lG,GAEAA,EAAAK,GACAA,EAAA,GACKA,GAAAhwI,KAAAkf,MAAAiB,cACL6pB,GAAAhqC,KAAAkf,MAAAiB,YAAA,EAAAwvH,IAEAK,EAAAL,GACAK,EAAAhwI,KAAAkf,MAAAiB,YAAA,GAGA4vH,EAEAjmI,KAAA2F,MAAAigI,GAAAK,EAAAL,GAAA1lG,IACAt1B,GAAA1U,KAAA8vI,yBAAAJ,EAAAC,EAAAI,EAAAC,IAEA,GAYArC,EAAA/sI,UAAAkvI,yBAAA,SAAAJ,EAEAC,EAEAC,EAEAC,GAKA,IAAAI,EAAAnmI,KAAAy3D,IAAAsuE,EAAAF,GAAA7lI,KAAAy3D,IAAAquE,EAAAF,GAEA,GAAAO,EAAA,CACA,IAAA1sI,EAAAmsI,EACAA,EAAAC,EACAA,EAAApsI,EACAA,EAAAqsI,EACAA,EAAAC,EACAA,EAAAtsI,EAaA,IAVA,IAAA2sI,EAAApmI,KAAAy3D,IAAAquE,EAAAF,GACAS,EAAArmI,KAAAy3D,IAAAsuE,EAAAF,GACA9zG,GAAAq0G,EAAA,EACAE,EAAAV,EAAAE,EAAA,KACAS,EAAAV,EAAAE,EAAA,KAEAz5H,EAAA,EAEAk6H,EAAAV,EAAAQ,EAEAjuI,EAAAutI,EAAAttI,EAAAutI,EAAkCxtI,IAAAmuI,EAAcnuI,GAAAiuI,EAAA,CAChD,IAAAG,EAAAN,EAAA7tI,EAAAD,EACAquI,EAAAP,EAAA9tI,EAAAC,EAIA,OAAAgU,IAAApW,KAAAkf,MAAAW,IAAA0wH,EAAAC,GAAA,CACA,OAAAp6H,EACA,OAAApU,EAAAZ,QAAA+B,SAAAhB,EAAAC,EAAAstI,EAAAC,GAGAv5H,IAKA,IAFAylB,GAAAs0G,GAEA,GACA,GAAA/tI,IAAAytI,EACA,MAGAztI,GAAAiuI,EACAx0G,GAAAq0G,GAOA,WAAA95H,EACApU,EAAAZ,QAAA+B,SAAAysI,EAAAQ,EAAAP,EAAAH,EAAAC,GAIAr7G,KAeAq5G,EAAA/sI,UAAAkuI,sBAAA,SAAA2B,EAEA7B,EAEAC,EAEA6B,GAKA,IAAAC,EAEA7mI,KAAA2F,MAAAihI,EAAAD,GACAG,EAAA9mI,KAAA0C,IAAA,EAAAoiI,EAAA+B,GACAE,EAAA/mI,KAAAC,IAAA/J,KAAAkf,MAAAgB,WAAA,EAAA0uH,EAAA+B,GAEA,GAAAE,EAAAD,EAAA,EAAAH,EACA,UAAA/oH,EAAAtmB,QAAA,gDAGA,IAAA0vI,EAAAhnI,KAAA0C,IAAA,EAAAqiI,EAAA8B,GACAI,EAAAjnI,KAAAC,IAAA/J,KAAAkf,MAAAiB,YAAA,EAAA0uH,EAAA8B,GAEA,GAAAI,EAAAD,EAAA,EAAAL,EACA,UAAA/oH,EAAAtmB,QAAA,mDAIA,OADA,IAAAssI,EAAAtsI,QAAApB,KAAAkf,MAAA0xH,EAAAE,EAAAD,EAAAD,EAAAG,EAAAD,EAAAL,EAAAzwI,KAAAkkC,qBACA4pG,QAGAH,EAlZA,GAqZA9tI,EAAAuB,QAAAusI,gCCzbAvtI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAymB,EAAuB1nB,EAAQ,GAE/BqiB,EAAoBriB,EAAQ,GAE5B2xE,EAAsB3xE,EAAQ,KAE9BkxI,EAA0BlxI,EAAQ,KAElC4nB,EAA0B5nB,EAAQ,GAuBlCmxI,EAEA,WASA,SAAAA,EAAA/xH,EAAAglB,GACAlkC,KAAAkf,QACAlf,KAAAkkC,sBACAlkC,KAAAkxI,gBAAA,GACAlxI,KAAAmxI,qBAAA,IAAAnyH,WAAA,GACAhf,KAAAkkC,sBAqsBA,OAlsBA+sG,EAAArwI,UAAAgtI,SAAA,WACA,OAAA5tI,KAAAkf,OAGA+xH,EAAArwI,UAAAwwI,mBAAA,WACA,OAAApxI,KAAAkxI,iBAGAD,EAAArwI,UAAAktI,KAAA,SAAAjmH,GACA,IAAAY,EAAA,OAAAZ,QAAA3iB,IAAA2iB,QAAA3iB,IAAA2iB,EAAAhI,IAAA2H,EAAApmB,QAAA4mB,YACAqpH,EAAA,OAAAxpH,QAAA3iB,IAAA2iB,QAAA3iB,IAAA2iB,EAAAhI,IAAA2H,EAAApmB,QAAA2zC,cACA71B,EAAAlf,KAAAkf,MACAoyH,EAAApyH,EAAAiB,YACAoxH,EAAAryH,EAAAgB,WAOAsxH,EAAA1nI,KAAA2F,MAAA,EAAA6hI,GAAA,EAAAL,EAAAQ,eAEAD,EAAAP,EAAAS,UAAAjpH,KACA+oH,EAAAP,EAAAS,UAMA,IAHA,IAAAj7E,GAAA,EACAk7E,EAAA,IAAA3yH,WAAA,GAEAtd,EAAA8vI,EAAA,EAA2B9vI,EAAA4vI,IAAA76E,EAAmB/0D,GAAA8vI,EAAA,CAE9CG,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAGA,IAFA,IAAAC,EAAA,EAEA5pI,EAAA,EAAqBA,EAAAupI,EAAUvpI,IAC/B,GAAAkX,EAAAW,IAAA7X,EAAAtG,GAEA,OAAAkwI,IAEAA,IAGAD,EAAAC,UAGA,UAAAA,GAEA,OAAAA,EAEA,GAAAX,EAAAY,kBAAAF,GAAA,CAIA,QAFA3xI,KAAA8xI,qBAAAH,EAAAjwI,EAAAsG,EAAAqpI,GAwBiB,CACjBM,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,KACAA,EAAA,KACAC,EAAA,EACA,SAxBA,GAFAJ,EAAA,GAEA,IAAAxxI,KAAA+xI,WACAt7E,EAAAz2D,KAAAgyI,mCACmB,CACnB,IAAAC,EAAAjyI,KAAAkyI,cAEAD,EAAAN,EAAA,KAQAjwI,GAAAuwI,EAAAN,EAAA,GAAAH,EACAxpI,EAAAupI,EAAA,GAcAK,EAAA,EACAD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,UAGAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,KACAA,EAAA,KACAC,EAAA,OAGAD,IAAAC,UAIAD,EAAAC,KAKA,GAAAX,EAAAY,kBAAAF,IAGA,IAFA3xI,KAAA8xI,qBAAAH,EAAAjwI,EAAA6vI,EAAAF,KAGAG,EAAAG,EAAA,GAEA3xI,KAAA+xI,aAEAt7E,EAAAz2D,KAAAgyI,iCAMA,IAAAG,EAAAnyI,KAAAoyI,qBAEA,OADAjwH,EAAA/gB,QAAAyB,kBAAAsvI,GACA,IAAAnB,EAAA5vI,QAAA+wI,IAQAlB,EAAAoB,cAAA,SAAAV,EAAAhoI,GAGA,OAAAA,EAAAgoI,EAAA,GAAAA,EAAA,GAAAA,EAAA,MASAV,EAAAY,kBAAA,SAAAF,GAGA,IAFA,IAAAW,EAAA,EAEA5wI,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAC1B,IAAA+tB,EAAAkiH,EAAAjwI,GAEA,OAAA+tB,EACA,SAGA6iH,GAAA7iH,EAGA,GAAA6iH,EAAA,EACA,SAGA,IAAA/7F,EAAA+7F,EAAA,EACAC,EAAAh8F,EAAA,EAEA,OAAAzsC,KAAAy3D,IAAAhrB,EAAAo7F,EAAA,IAAAY,GAAAzoI,KAAAy3D,IAAAhrB,EAAAo7F,EAAA,IAAAY,GAAAzoI,KAAAy3D,IAAA,EAAAhrB,EAAAo7F,EAAA,MAAAY,GAAAzoI,KAAAy3D,IAAAhrB,EAAAo7F,EAAA,IAAAY,GAAAzoI,KAAAy3D,IAAAhrB,EAAAo7F,EAAA,IAAAY,GAGAtB,EAAArwI,UAAA4xI,wBAAA,WACA,IAAArB,EAAAnxI,KAAAmxI,qBAMA,OALAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,GAgBAF,EAAArwI,UAAA6xI,mBAAA,SAAAC,EAEAC,EAEAC,EAEAC,GAQA,IALA,IAAAlB,EAAA3xI,KAAAwyI,0BAEA9wI,EAAA,EACAwd,EAAAlf,KAAAkf,MAEAwzH,GAAAhxI,GAAAixI,GAAAjxI,GAAAwd,EAAAW,IAAA8yH,EAAAjxI,EAAAgxI,EAAAhxI,IACAiwI,EAAA,KACAjwI,IAGA,GAAAgxI,EAAAhxI,GAAAixI,EAAAjxI,EACA,SAIA,KAAAgxI,GAAAhxI,GAAAixI,GAAAjxI,IAAAwd,EAAAW,IAAA8yH,EAAAjxI,EAAAgxI,EAAAhxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAIA,GAAAgxI,EAAAhxI,GAAAixI,EAAAjxI,GAAAiwI,EAAA,GAAAiB,EACA,SAIA,KAAAF,GAAAhxI,GAAAixI,GAAAjxI,GAAAwd,EAAAW,IAAA8yH,EAAAjxI,EAAAgxI,EAAAhxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAiwI,EAAA,GAAAiB,EACA,SAGA,IAAAtB,EAAApyH,EAAAiB,YACAoxH,EAAAryH,EAAAgB,WAIA,IAFAxe,EAAA,EAEAgxI,EAAAhxI,EAAA4vI,GAAAqB,EAAAjxI,EAAA6vI,GAAAryH,EAAAW,IAAA8yH,EAAAjxI,EAAAgxI,EAAAhxI,IACAiwI,EAAA,KACAjwI,IAIA,GAAAgxI,EAAAhxI,GAAA4vI,GAAAqB,EAAAjxI,GAAA6vI,EACA,SAGA,KAAAmB,EAAAhxI,EAAA4vI,GAAAqB,EAAAjxI,EAAA6vI,IAAAryH,EAAAW,IAAA8yH,EAAAjxI,EAAAgxI,EAAAhxI,IAAAiwI,EAAA,GAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAgxI,EAAAhxI,GAAA4vI,GAAAqB,EAAAjxI,GAAA6vI,GAAAI,EAAA,IAAAiB,EACA,SAGA,KAAAF,EAAAhxI,EAAA4vI,GAAAqB,EAAAjxI,EAAA6vI,GAAAryH,EAAAW,IAAA8yH,EAAAjxI,EAAAgxI,EAAAhxI,IAAAiwI,EAAA,GAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAiwI,EAAA,IAAAiB,EACA,SAKA,IAAAE,EAAAnB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,OAAA7nI,KAAAy3D,IAAAuxE,EAAAD,GAAA,EAAAA,GAAA5B,EAAAY,kBAAAF,IAeAV,EAAArwI,UAAAmyI,mBAAA,SAAAL,EAEAC,EAEAC,EAEAC,GASA,IANA,IAAA3zH,EAAAlf,KAAAkf,MACAoyH,EAAApyH,EAAAiB,YACAwxH,EAAA3xI,KAAAwyI,0BAEA9wI,EAAAgxI,EAEAhxI,GAAA,GAAAwd,EAAAW,IAAA8yH,EAAAjxI,IACAiwI,EAAA,KACAjwI,IAGA,GAAAA,EAAA,EACA,OAAA4yB,IAGA,KAAA5yB,GAAA,IAAAwd,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAIA,GAAAA,EAAA,GAAAiwI,EAAA,GAAAiB,EACA,OAAAt+G,IAGA,KAAA5yB,GAAA,GAAAwd,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAiwI,EAAA,GAAAiB,EACA,OAAAt+G,IAMA,IAFA5yB,EAAAgxI,EAAA,EAEAhxI,EAAA4vI,GAAApyH,EAAAW,IAAA8yH,EAAAjxI,IACAiwI,EAAA,KACAjwI,IAGA,GAAAA,IAAA4vI,EACA,OAAAh9G,IAGA,KAAA5yB,EAAA4vI,IAAApyH,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,GAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAA,IAAA4vI,GAAAK,EAAA,IAAAiB,EACA,OAAAt+G,IAGA,KAAA5yB,EAAA4vI,GAAApyH,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,GAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAiwI,EAAA,IAAAiB,EACA,OAAAt+G,IAKA,IAAAw+G,EAAAnB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,SAAA7nI,KAAAy3D,IAAAuxE,EAAAD,IAAA,EAAAA,EACAv+G,IAGA28G,EAAAY,kBAAAF,GAAAV,EAAAoB,cAAAV,EAAAjwI,GAAA4yB,KASA28G,EAAArwI,UAAAoyI,qBAAA,SAAAC,EAEAC,EAEAN,EAEAC,GAQA,IALA,IAAA3zH,EAAAlf,KAAAkf,MACAqyH,EAAAryH,EAAAgB,WACAyxH,EAAA3xI,KAAAwyI,0BACAxqI,EAAAirI,EAEAjrI,GAAA,GAAAkX,EAAAW,IAAA7X,EAAAkrI,IACAvB,EAAA,KACA3pI,IAGA,GAAAA,EAAA,EACA,OAAAssB,IAGA,KAAAtsB,GAAA,IAAAkX,EAAAW,IAAA7X,EAAAkrI,IAAAvB,EAAA,IAAAiB,GACAjB,EAAA,KACA3pI,IAGA,GAAAA,EAAA,GAAA2pI,EAAA,GAAAiB,EACA,OAAAt+G,IAGA,KAAAtsB,GAAA,GAAAkX,EAAAW,IAAA7X,EAAAkrI,IAAAvB,EAAA,IAAAiB,GACAjB,EAAA,KACA3pI,IAGA,GAAA2pI,EAAA,GAAAiB,EACA,OAAAt+G,IAKA,IAFAtsB,EAAAirI,EAAA,EAEAjrI,EAAAupI,GAAAryH,EAAAW,IAAA7X,EAAAkrI,IACAvB,EAAA,KACA3pI,IAGA,GAAAA,IAAAupI,EACA,OAAAj9G,IAGA,KAAAtsB,EAAAupI,IAAAryH,EAAAW,IAAA7X,EAAAkrI,IAAAvB,EAAA,GAAAiB,GACAjB,EAAA,KACA3pI,IAGA,GAAAA,IAAAupI,GAAAI,EAAA,IAAAiB,EACA,OAAAt+G,IAGA,KAAAtsB,EAAAupI,GAAAryH,EAAAW,IAAA7X,EAAAkrI,IAAAvB,EAAA,GAAAiB,GACAjB,EAAA,KACA3pI,IAGA,GAAA2pI,EAAA,IAAAiB,EACA,OAAAt+G,IAKA,IAAAw+G,EAAAnB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,SAAA7nI,KAAAy3D,IAAAuxE,EAAAD,MACAv+G,IAGA28G,EAAAY,kBAAAF,GAAAV,EAAAoB,cAAAV,EAAA3pI,GAAAssB,KAsBA28G,EAAArwI,UAAAkxI,qBAAA,SAAAH,EAAAjwI,EAEAsG,EAEAqpI,GACA,IAAAyB,EAAAnB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAgB,EAAA1B,EAAAoB,cAAAV,EAAA3pI,GACAkrI,EAAAlzI,KAAA+yI,mBAAArxI,EAEAoI,KAAA2F,MAAAkjI,GAAAhB,EAAA,GAAAmB,GAEA,IAAA5rI,MAAAgsI,KAEAP,EAAA3yI,KAAAgzI,qBAEAlpI,KAAA2F,MAAAkjI,GAEA7oI,KAAA2F,MAAAyjI,GAAAvB,EAAA,GAAAmB,IAEA5rI,MAAAyrI,MAAAtB,GAAArxI,KAAAyyI,mBAEA3oI,KAAA2F,MAAAyjI,GAEAppI,KAAA2F,MAAAkjI,GAAAhB,EAAA,GAAAmB,KAAA,CAKA,IAJA,IAAAK,EAAAL,EAAA,EACA/qI,GAAA,EACAmpI,EAAAlxI,KAAAkxI,gBAEAx9H,EAAA,EAAA2N,EAAA6vH,EAAAvvI,OAA8D+R,EAAA2N,EAAkB3N,IAAA,CAChF,IAAA4wD,EAAA4sE,EAAAx9H,GAEA,GAAA4wD,EAAA8uE,YAAAD,EAAAD,EAAAP,GAAA,CACAzB,EAAAx9H,GAAA4wD,EAAA+uE,gBAAAH,EAAAP,EAAAQ,GACAprI,GAAA,EACA,OAIA,IAAAA,EAAA,CACA,IAAAurI,EAAA,IAAA7hE,EAAArwE,QAAAuxI,EAAAO,EAAAC,GACAjC,EAAApoI,KAAAwqI,GAEA,OAAAtzI,KAAAkkC,0BAAAh/B,IAAAlF,KAAAkkC,qBACAlkC,KAAAkkC,oBAAAE,yBAAAkvG,GAIA,SAIA,UAUArC,EAAArwI,UAAAsxI,YAAA,WAGA,GAFAlyI,KAAAkxI,gBAAAvvI,QAEA,EACA,SAKA,IAFA,IAAA4xI,EAAA,KAEA/yG,EAAA,EAAAI,EAAA5gC,KAAAkxI,gBAA+C1wG,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CAC/D,IAAA8jC,EAAA1jC,EAAAJ,GAEA,GAAA8jC,EAAAzqB,YAAAo3F,EAAAuC,cAAA,CACA,SAAAD,EASA,OADAvzI,KAAA+xI,YAAA,EAGAjoI,KAAA2F,OAAA3F,KAAAy3D,IAAAgyE,EAAAlxI,OAAAiiE,EAAAjiE,QAAAyH,KAAAy3D,IAAAgyE,EAAAjxI,OAAAgiE,EAAAhiE,SAAA,GAVAixI,EAAAjvE,GAgBA,UASA2sE,EAAArwI,UAAAoxI,6BAAA,WAKA,IAJA,IAAAyB,EAAA,EACAnB,EAAA,EACA9lI,EAAAxM,KAAAkxI,gBAAAvvI,OAEA6+B,EAAA,EAAAI,EAAA5gC,KAAAkxI,gBAA+C1wG,EAAAI,EAAAj/B,OAAgB6+B,IAAA,EAC/DrW,EAAAyW,EAAAJ,IAEAqZ,YAAAo3F,EAAAuC,gBACAC,IACAnB,GAAAnoH,EAAAupH,0BAIA,GAAAD,EAAA,EACA,SAUA,IAHA,IAAArwE,EAAAkvE,EAAA9lI,EACAmnI,EAAA,EAEAzhE,EAAA,EAAAC,EAAAnyE,KAAAkxI,gBAA+Ch/D,EAAAC,EAAAxwE,OAAgBuwE,IAAA,CAC/D,IAAA/nD,EAAAgoD,EAAAD,GACAyhE,GAAA7pI,KAAAy3D,IAAAp3C,EAAAupH,yBAAAtwE,GAGA,OAAAuwE,GAAA,IAAArB,GAUArB,EAAArwI,UAAAwxI,mBAAA,WACA,IAAAwB,EAAA5zI,KAAAkxI,gBAAAvvI,OAEA,GAAAiyI,EAAA,EAEA,UAAAlsH,EAAAtmB,QAGA,IACAgiE,EADA8tE,EAAAlxI,KAAAkxI,gBAKA,GAAA0C,EAAA,GAKA,IAHA,IAAAtB,EAAA,EACAuB,EAAA,EAEArzG,EAAA,EAAAI,EAAA5gC,KAAAkxI,gBAAiD1wG,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACjE,IACAj6B,EADAq6B,EAAAJ,GACAkzG,yBACApB,GAAA/rI,EACAstI,GAAAttI,IAGA68D,EAAAkvE,EAAAsB,EACA,IAAAE,EAAAhqI,KAAA+qB,KAAAg/G,EAAAD,EAAAxwE,KACA8tE,EAAAt4E,KAKA,SAAAm7E,EAAAC,GACA,IAAAC,EAAAnqI,KAAAy3D,IAAAyyE,EAAAN,yBAAAtwE,GACA8wE,EAAApqI,KAAAy3D,IAAAwyE,EAAAL,yBAAAtwE,GACA,OAAA6wE,EAAAC,GAAA,EAAAD,EAAAC,EAAA,MAIA,IAFA,IAAAnkI,EAAAjG,KAAA0C,IAAA,GAAA42D,EAAA0wE,GAEApyI,EAAA,EAAqBA,EAAAwvI,EAAAvvI,QAAAuvI,EAAAvvI,OAAA,EAA0DD,IAAA,CAC/E,IAAAyoB,EAAA+mH,EAAAxvI,GAEAoI,KAAAy3D,IAAAp3C,EAAAupH,yBAAAtwE,GAAArzD,IACAmhI,EAAA9yH,OAAA1c,EAAA,GACAA,MAKA,GAAAwvI,EAAAvvI,OAAA,GAEA2wI,EAAA,EAEA,IAFA,IAEApgE,EAAA,EAAAiiE,EAAAjD,EAA2Dh/D,EAAAiiE,EAAAxyI,OAA+BuwE,IAAA,CAE1FogE,GADA6B,EAAAjiE,GACAwhE,yBAGAtwE,EAAAkvE,EAAApB,EAAAvvI,OACAuvI,EAAAt4E,KAKA,SAAAm7E,EAAAC,GACA,GAAAA,EAAAn6F,aAAAk6F,EAAAl6F,WAAA,CACA,IAAAo6F,EAAAnqI,KAAAy3D,IAAAyyE,EAAAN,yBAAAtwE,GACA8wE,EAAApqI,KAAAy3D,IAAAwyE,EAAAL,yBAAAtwE,GACA,OAAA6wE,EAAAC,EAAA,EAAAD,EAAAC,GAAA,IAEA,OAAAF,EAAAn6F,WAAAk6F,EAAAl6F,aAGAq3F,EAAA9yH,OAAA,GAGA,OAAA8yH,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAGAD,EAAAuC,cAAA,EACAvC,EAAAS,SAAA,EAEAT,EAAAQ,YAAA,GAEAR,EAntBA,GAstBApxI,EAAAuB,QAAA6vI,gCC5vBA,IAAAlxI,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAUAqzI,EAEA,SAAAnzI,GAMA,SAAAmzI,EAAAC,EAEAC,EAEAnB,EAEA1jH,GAGA,IAAAnd,EAAArR,EAAAa,KAAA9B,KAAAq0I,EAAAC,IAAAt0I,KASA,OAPAsS,EAAA6gI,sBACA7gI,EAAAmd,aAEAvqB,IAAAuqB,IACAnd,EAAAmd,MAAA,GAGAnd,EAyDA,OAhFAvS,EAAAq0I,EAAAnzI,GA0BAmzI,EAAAxzI,UAAA8yI,uBAAA,WACA,OAAA1zI,KAAAmzI,qBAGAiB,EAAAxzI,UAAAi5C,SAAA,WACA,OAAA75C,KAAAyvB,OAcA2kH,EAAAxzI,UAAAwyI,YAAA,SAAA78F,EAEA70C,EAEAsG,GAGA,GAAA8B,KAAAy3D,IAAA7/D,EAAA1B,KAAAsC,SAAAi0C,GAAAzsC,KAAAy3D,IAAAv5D,EAAAhI,KAAAqC,SAAAk0C,EAAA,CACA,IAAAg+F,EAAAzqI,KAAAy3D,IAAAhrB,EAAAv2C,KAAAmzI,qBACA,OAAAoB,GAAA,GAAAA,GAAAv0I,KAAAmzI,oBAGA,UASAiB,EAAAxzI,UAAAyyI,gBAAA,SAAA3xI,EAEAsG,EAEAwsI,GAGA,IAAAC,EAAAz0I,KAAAyvB,MAAA,EAIA,WAAA2kH,GAHAp0I,KAAAyvB,MAAAzvB,KAAAqC,OAAA2F,GAAAysI,GACAz0I,KAAAyvB,MAAAzvB,KAAAsC,OAAAZ,GAAA+yI,GACAz0I,KAAAyvB,MAAAzvB,KAAAmzI,oBAAAqB,GAAAC,EACAA,IAGAL,EAjFA,CAZoBt0I,EAAQ,GA8F3BsB,SAEDvB,EAAAuB,QAAAgzI,gCC/HAh0I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IASA,IAAA2zI,EAEA,WACA,SAAAA,EAAAC,GACA30I,KAAAumE,WAAAouE,EAAA,GACA30I,KAAAguI,QAAA2G,EAAA,GACA30I,KAAAkuI,SAAAyG,EAAA,GAeA,OAZAD,EAAA9zI,UAAAwtI,cAAA,WACA,OAAApuI,KAAAumE,YAGAmuE,EAAA9zI,UAAAqtI,WAAA,WACA,OAAAjuI,KAAAguI,SAGA0G,EAAA9zI,UAAAutI,YAAA,WACA,OAAAnuI,KAAAkuI,UAGAwG,EAnBA,GAsBA70I,EAAAuB,QAAAszI,gCClCAt0I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA6zI,EAAyB90I,EAAQ,KAEjC4nB,EAA0B5nB,EAAQ,GAqBlC+0I,EAEA,WAWA,SAAAA,EAAA31H,EAAA41H,EAEAC,EAEAn2H,EAEAC,EAEA03B,EAEArS,GACAlkC,KAAAkf,QACAlf,KAAA80I,SACA90I,KAAA+0I,SACA/0I,KAAA4e,QACA5e,KAAA6e,SACA7e,KAAAu2C,aACAv2C,KAAAkkC,sBACAlkC,KAAAkxI,gBAAA,GAGAlxI,KAAAmxI,qBAAA,IAAAnyH,WAAA,GA2PA,OAhPA61H,EAAAj0I,UAAAktI,KAAA,WAWA,IAVA,IAAAgH,EAAA90I,KAAA80I,OACAj2H,EAAA7e,KAAA6e,OAEA0yH,EAAAuD,EADA90I,KAAA4e,MAEAo2H,EAAAh1I,KAAA+0I,OAAAl2H,EAAA,EAGA8yH,EAAA,IAAA3yH,WAAA,GACAE,EAAAlf,KAAAkf,MAEA+1H,EAAA,EAAsBA,EAAAp2H,EAAeo2H,IAAA,CAErC,IAAAvzI,EAAAszI,GAAA,OAAAC,GAAAnrI,KAAA2F,OAAAwlI,EAAA,OAAAnrI,KAAA2F,OAAAwlI,EAAA,OACAtD,EAAA,KACAA,EAAA,KACAA,EAAA,KAKA,IAJA,IAAA3pI,EAAA8sI,EAIA9sI,EAAAupI,IAAAryH,EAAAW,IAAA7X,EAAAtG,IACAsG,IAKA,IAFA,IAAA4pI,EAAA,EAEA5pI,EAAAupI,GAAA,CACA,GAAAryH,EAAAW,IAAA7X,EAAAtG,GAEA,OAAAkwI,EAEAD,EAAA,UAGA,OAAAC,EAAA,CAIA,IAAAsD,EAFA,GAAAl1I,KAAA6xI,kBAAAF,GAIA,WAFAuD,EAAAl1I,KAAA8xI,qBAAAH,EAAAjwI,EAAAsG,IAGA,OAAAktI,EAIAvD,EAAA,GAAAA,EAAA,GACAA,EAAA,KACAA,EAAA,KACAC,EAAA,OAEAD,IAAAC,UAKA,IAAAA,GAEAA,IAGAD,EAAAC,KAGA5pI,IAGA,GAAAhI,KAAA6xI,kBAAAF,GAGA,WAFAuD,EAAAl1I,KAAA8xI,qBAAAH,EAAAjwI,EAAA6vI,IAGA,OAAA2D,EAOA,OAAAl1I,KAAAkxI,gBAAAvvI,OACA,OAAA3B,KAAAkxI,gBAAA,GAGA,UAAAxpH,EAAAtmB,SAQAyzI,EAAAxC,cAAA,SAAAV,EAAAhoI,GAGA,OAAAA,EAAAgoI,EAAA,GAAAA,EAAA,MASAkD,EAAAj0I,UAAAixI,kBAAA,SAAAF,GAIA,IAHA,IAAAp7F,EAAAv2C,KAAAu2C,WACAg8F,EAAAh8F,EAAA,EAEA70C,EAAA,EAAmBA,EAAA,EAAOA,IAC1B,GAAAoI,KAAAy3D,IAAAhrB,EAAAo7F,EAAAjwI,KAAA6wI,EACA,SAIA,UAeAsC,EAAAj0I,UAAAmyI,mBAAA,SAAAL,EAEAC,EAEAC,EAEAC,GAGA,IAAA3zH,EAAAlf,KAAAkf,MACAoyH,EAAApyH,EAAAiB,YACAwxH,EAAA3xI,KAAAmxI,qBACAQ,EAAA,KACAA,EAAA,KACAA,EAAA,KAIA,IAFA,IAAAjwI,EAAAgxI,EAEAhxI,GAAA,GAAAwd,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAIA,GAAAA,EAAA,GAAAiwI,EAAA,GAAAiB,EACA,OAAAt+G,IAGA,KAAA5yB,GAAA,IAAAwd,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAiwI,EAAA,GAAAiB,EACA,OAAAt+G,IAMA,IAFA5yB,EAAAgxI,EAAA,EAEAhxI,EAAA4vI,GAAApyH,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAA,IAAA4vI,GAAAK,EAAA,GAAAiB,EACA,OAAAt+G,IAGA,KAAA5yB,EAAA4vI,IAAApyH,EAAAW,IAAA8yH,EAAAjxI,IAAAiwI,EAAA,IAAAiB,GACAjB,EAAA,KACAjwI,IAGA,GAAAiwI,EAAA,GAAAiB,EACA,OAAAt+G,IAGA,IAAAw+G,EAAAnB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,SAAA7nI,KAAAy3D,IAAAuxE,EAAAD,IAAA,EAAAA,EACAv+G,IAGAt0B,KAAA6xI,kBAAAF,GAAAkD,EAAAxC,cAAAV,EAAAjwI,GAAA4yB,KAeAugH,EAAAj0I,UAAAkxI,qBAAA,SAAAH,EAAAjwI,EAEAsG,GAGA,IAAA8qI,EAAAnB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAgB,EAAAkC,EAAAxC,cAAAV,EAAA3pI,GACAkrI,EAAAlzI,KAAA+yI,mBAAArxI,EAEAixI,EAAA,EAAAhB,EAAA,GAAAmB,GAEA,IAAA5rI,MAAAgsI,GAAA,CAGA,IAFA,IAAAC,GAAAxB,EAAA,GAAAA,EAAA,GAAAA,EAAA,MAEAnxG,EAAA,EAAAI,EAAA5gC,KAAAkxI,gBAAiD1wG,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACjE,IAAA8jC,EAAA1jC,EAAAJ,GAEA,GAAA8jC,EAAA8uE,YAAAD,EAAAD,EAAAP,GACA,OAAAruE,EAAA+uE,gBAAAH,EAAAP,EAAAQ,GAKA,IAAAG,EAAA,IAAAsB,EAAAxzI,QAAAuxI,EAAAO,EAAAC,GACAnzI,KAAAkxI,gBAAApoI,KAAAwqI,GAEA,OAAAtzI,KAAAkkC,0BAAAh/B,IAAAlF,KAAAkkC,qBACAlkC,KAAAkkC,oBAAAE,yBAAAkvG,GAIA,aAGAuB,EA3RA,GA8RAh1I,EAAAuB,QAAAyzI,gCC3TA,IAAA90I,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IASAo0I,EAEA,SAAAl0I,GAGA,SAAAk0I,EAAAd,EAEAC,EAEAnB,GAGA,IAAA7gI,EAAArR,EAAAa,KAAA9B,KAAAq0I,EAAAC,IAAAt0I,KAGA,OADAsS,EAAA6gI,sBACA7gI,EAyCA,OArDAvS,EAAAo1I,EAAAl0I,GAoBAk0I,EAAAv0I,UAAAwyI,YAAA,SAAA78F,EAEA70C,EAEAsG,GAGA,GAAA8B,KAAAy3D,IAAA7/D,EAAA1B,KAAAsC,SAAAi0C,GAAAzsC,KAAAy3D,IAAAv5D,EAAAhI,KAAAqC,SAAAk0C,EAAA,CACA,IAAAg+F,EAAAzqI,KAAAy3D,IAAAhrB,EAAAv2C,KAAAmzI,qBACA,OAAAoB,GAAA,GAAAA,GAAAv0I,KAAAmzI,oBAGA,UAQAgC,EAAAv0I,UAAAyyI,gBAAA,SAAA3xI,EAEAsG,EAEAwsI,GAMA,WAAAW,GAHAn1I,KAAAqC,OAAA2F,GAAA,GACAhI,KAAAsC,OAAAZ,GAAA,GACA1B,KAAAmzI,oBAAAqB,GAAA,IAIAW,EAtDA,CAXoBr1I,EAAQ,GAkE3BsB,SAEDvB,EAAAuB,QAAA+zI,gCClHA,IAAAp1I,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA8lI,EAA0B/mI,EAAQ,IAElCgsD,EAAyBhsD,EAAQ,IAQjCs1I,EAEA,SAAAn0I,GAQA,SAAAm0I,EAAAj7G,GAKA,YAJA,IAAAA,IACAA,EAAA,KAGAl5B,EAAAa,KAAA9B,KAAA,IAAA8rD,EAAA1qD,QAAA+4B,IAAAn6B,KAGA,OAfAD,EAAAq1I,EAAAn0I,GAeAm0I,EAhBA,CAiBCvO,EAAA5sG,mBAEDp6B,EAAAu1I,4DC7DAh1I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA6qD,EAA2B9rD,EAAQ,IAEnCqoC,EAAkBroC,EAAQ,IAE1BynI,EAAwBznI,EAAQ,KAEhC0nI,EAAkB1nI,EAAQ,KAE1B2nI,EAA+B3nI,EAAQ,KAEvCi6B,EAA0Bj6B,EAAQ,IAyBlC4nI,EAEA,WACA,SAAAA,IACA1nI,KAAA2nI,UAAA,IAAA/7E,EAAAxqD,QAAA+mC,EAAA/mC,QAAAk3B,uBA+EA,OAlEAovG,EAAA9mI,UAAAgnB,OAAA,SAAA7I,GAWA,IATA,IAAA8oH,EAAA,IAAAN,EAAAnmI,QAAA2d,GACAyH,EAAAqhH,EAAAv/E,aAEA8/E,EAAAP,EAAAQ,gBAEAC,EAAAd,EAAApmI,QAAAmnI,cAAAH,EAAA5hH,GAEAgiH,EAAA,EAEAhoG,EAAA,EAAAioG,EAAAH,EAA+C9nG,EAAAioG,EAAA9mI,OAA0B6+B,IAAA,CAEzEgoG,GADAC,EAAAjoG,GACAmoG,sBAMA,IAHA,IAAAC,EAAA,IAAArkI,WAAAikI,GACA6M,EAAA/M,EAAA3mI,OAEAqG,EAAA,EAAmBA,EAAAqtI,EAAqBrtI,IAAA,CACxC,IAAA0gI,EAAAJ,EAAAtgI,GACA+gI,EAAAL,EAAAM,eACAC,EAAAP,EAAAC,sBACA3oI,KAAAkpI,cAAAH,EAAAE,GAEA,QAAAvnI,EAAA,EAAqBA,EAAAunI,EAAsBvnI,IAE3CknI,EAAAlnI,EAAA2zI,EAAArtI,GAAA+gI,EAAArnI,GAKA,OAAA+lI,EAAArmI,QAAAwmB,OAAAghH,IAYAlB,EAAA9mI,UAAAsoI,cAAA,SAAAH,EAAAE,GACAF,EAAApnI,OAAA,IAEAwnI,EAAA,IAAAnqH,WAAA+pH,GAIA,IACA/oI,KAAA2nI,UAAA//G,OAAAuhH,EAAAJ,EAAApnI,OAAAsnI,GACK,MAAAjgH,GAGL,UAAA+Q,EAAA34B,QAKA,QAAAM,EAAA,EAAmBA,EAAAunI,EAAsBvnI,IACzCqnI,EAAArnI,GAAAynI,EAAAznI,IAIAgmI,EAjFA,GAoFA7nI,EAAAuB,QAAAsmI,gCC7HAtnI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAwzC,EAAkBz0C,EAAQ,IAE1BihD,EAAgBjhD,EAAQ,KAExBk6B,EAAwBl6B,EAAQ,GAEhC4e,EAAiC5e,EAAQ,GAsBzCupI,EAEA,WAKA,SAAAA,EAAAnuF,GACA,IAAAZ,EAAAY,EAAA/6B,YAEA,GAAAm6B,EAAA,GAAAA,EAAA,YAAAA,GACA,UAAAtgB,EAAA54B,QAGApB,KAAAwmB,QAAA6iH,EAAApB,YAAA/sF,GACAl7C,KAAAs1I,iBAAAt1I,KAAAu1I,kBAAAr6F,GACAl7C,KAAAw1I,kBAAA,IAAAjhG,EAAAnzC,QAAApB,KAAAs1I,iBAAAp1H,WAAAlgB,KAAAs1I,iBAAAn1H,aA0eA,OAveAkpH,EAAAzoI,UAAA0nD,WAAA,WACA,OAAAtoD,KAAAwmB,SAeA6iH,EAAApB,YAAA,SAAA/sF,GACA,IAAAu6F,EAAAv6F,EAAA/6B,YACAu1H,EAAAx6F,EAAAh7B,WACA,OAAA6gC,EAAA3/C,QAAAu0I,wBAAAF,EAAAC,IAYArM,EAAAzoI,UAAAynI,cAAA,WACA,IAAA3zH,EAAA,IAAAkhI,UAAA51I,KAAAwmB,QAAA0zB,qBACA2uF,EAAA,EACAvoH,EAAA,EACAu1H,EAAA,EACAJ,EAAAz1I,KAAAs1I,iBAAAn1H,YACAu1H,EAAA11I,KAAAs1I,iBAAAp1H,WACA41H,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEA,GAEA,GAAA31H,IAAAm1H,GAAA,IAAAI,GAAAC,EAKO,GAAAx1H,IAAAm1H,EAAA,OAAAI,GAAA,OAAAH,IAAAK,EAKA,GAAAz1H,IAAAm1H,EAAA,OAAAI,GAAA,OAAAH,IAAAM,EAKA,GAAA11H,IAAAm1H,EAAA,OAAAI,GAAA,OAAAH,IAAAO,EAKA,CAEP,GACA31H,EAAAm1H,GAAAI,GAAA,IAAA71I,KAAAw1I,kBAAA31H,IAAAg2H,EAAAv1H,KACA5L,EAAAm0H,KAAA,IAAA7oI,KAAAk2I,SAAA51H,EAAAu1H,EAAAJ,EAAAC,IAGAp1H,GAAA,EACAu1H,GAAA,QACSv1H,GAAA,GAAAu1H,EAAAH,GAETp1H,GAAA,EACAu1H,GAAA,EAEA,GACAv1H,GAAA,GAAAu1H,EAAAH,IAAA11I,KAAAw1I,kBAAA31H,IAAAg2H,EAAAv1H,KACA5L,EAAAm0H,KAAA,IAAA7oI,KAAAk2I,SAAA51H,EAAAu1H,EAAAJ,EAAAC,IAGAp1H,GAAA,EACAu1H,GAAA,QACSv1H,EAAAm1H,GAAAI,GAAA,GAETv1H,GAAA,EACAu1H,GAAA,OA5BAnhI,EAAAm0H,KAAA,IAAA7oI,KAAAm2I,YAAAV,EAAAC,GACAp1H,GAAA,EACAu1H,GAAA,EACAI,GAAA,OARAvhI,EAAAm0H,KAAA,IAAA7oI,KAAAo2I,YAAAX,EAAAC,GACAp1H,GAAA,EACAu1H,GAAA,EACAG,GAAA,OARAthI,EAAAm0H,KAAA,IAAA7oI,KAAAq2I,YAAAZ,EAAAC,GACAp1H,GAAA,EACAu1H,GAAA,EACAE,GAAA,OARArhI,EAAAm0H,KAAA,IAAA7oI,KAAAs2I,YAAAb,EAAAC,GACAp1H,GAAA,EACAu1H,GAAA,EACAC,GAAA,QA0CKx1H,EAAAm1H,GAAAI,EAAAH,GAEL,GAAA7M,IAAA7oI,KAAAwmB,QAAA0zB,oBACA,UAAAlgB,EAAA54B,QAGA,OAAAsT,GAaA20H,EAAAzoI,UAAA21I,WAAA,SAAAj2H,EAAAu1H,EAAAJ,EAAAC,GAaA,OAXAp1H,EAAA,IACAA,GAAAm1H,EACAI,GAAA,GAAAJ,EAAA,MAGAI,EAAA,IACAA,GAAAH,EACAp1H,GAAA,GAAAo1H,EAAA,MAGA11I,KAAAw1I,kBAAA5kI,IAAAilI,EAAAv1H,GACAtgB,KAAAs1I,iBAAAz1H,IAAAg2H,EAAAv1H,IAeA+oH,EAAAzoI,UAAAs1I,SAAA,SAAA51H,EAAAu1H,EAAAJ,EAAAC,GACA,IAAAxL,EAAA,EAgDA,OA9CAlqI,KAAAu2I,WAAAj2H,EAAA,EAAAu1H,EAAA,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAA,EAAAu1H,EAAA,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAA,EAAAu1H,EAAA,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAA,EAAAu1H,EAAA,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAA,EAAAu1H,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAAu1H,EAAA,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAAu1H,EAAA,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAj2H,EAAAu1H,EAAAJ,EAAAC,KACAxL,GAAA,GAGAA,GAaAb,EAAAzoI,UAAA01I,YAAA,SAAAb,EAAAC,GACA,IAAAxL,EAAA,EAgDA,OA9CAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,GAaAb,EAAAzoI,UAAAy1I,YAAA,SAAAZ,EAAAC,GACA,IAAAxL,EAAA,EAgDA,OA9CAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,GAaAb,EAAAzoI,UAAAw1I,YAAA,SAAAX,EAAAC,GACA,IAAAxL,EAAA,EAgDA,OA9CAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,EAAAC,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,GAaAb,EAAAzoI,UAAAu1I,YAAA,SAAAV,EAAAC,GACA,IAAAxL,EAAA,EAgDA,OA9CAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAAd,EAAA,IAAAA,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,IAAA,EAEAlqI,KAAAu2I,WAAA,EAAAb,EAAA,EAAAD,EAAAC,KACAxL,GAAA,GAGAA,GAWAb,EAAAzoI,UAAA20I,kBAAA,SAAAr6F,GACA,IAAAs7F,EAAAx2I,KAAAwmB,QAAAiwH,oBACAC,EAAA12I,KAAAwmB,QAAAmwH,uBAEA,GAAAz7F,EAAA/6B,cAAAq2H,EACA,UAAA93H,EAAAtd,QAAA,sDAWA,IARA,IAAAw1I,EAAA52I,KAAAwmB,QAAAqwH,wBACAC,EAAA92I,KAAAwmB,QAAAuwH,2BACAC,EAAAR,EAAAI,EAAA,EACAK,EAAAP,EAAAI,EAAA,EACAI,EAAAF,EAAAJ,EACAO,EAAAF,EAAAH,EACAM,EAAA,IAAA7iG,EAAAnzC,QAAA+1I,EAAAD,GAEAG,EAAA,EAA+BA,EAAAL,IAAmCK,EAGlE,IAFA,IAAAC,EAAAD,EAAAT,EAEAW,EAAA,EAAoCA,EAAAN,IAAyCM,EAG7E,IAFA,IAAAC,EAAAD,EAAAT,EAEAp1I,EAAA,EAAuBA,EAAAk1I,IAAwBl1I,EAI/C,IAHA,IAAA+1I,EAAAJ,GAAAT,EAAA,KAAAl1I,EACAg2I,EAAAJ,EAAA51I,EAEAsG,EAAA,EAAyBA,EAAA8uI,IAA2B9uI,EAAA,CACpD,IAAA2vI,EAAAJ,GAAAT,EAAA,KAAA9uI,EAEA,GAAAkzC,EAAAr7B,IAAA83H,EAAAF,GAAA,CACA,IAAAG,EAAAJ,EAAAxvI,EACAovI,EAAAxmI,IAAAgnI,EAAAF,IAOA,OAAAN,GAGA/N,EAxfA,GA2fAxpI,EAAAuB,QAAAioI,gCC7hBAjpI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAi5B,EAAwBl6B,EAAQ,GAyBhCsqI,EAEA,WACA,SAAAA,EAAA5wF,EAAAq+F,EAAAC,GACA93I,KAAAw5C,cACAx5C,KAAAu5C,SAAA,CAAAs+F,GACAC,GAAA93I,KAAAu5C,SAAAzwC,KAAAgvI,GAWA,OARA1N,EAAAxpI,UAAAm3I,eAAA,WACA,OAAA/3I,KAAAw5C,aAGA4wF,EAAAxpI,UAAA+4C,YAAA,WACA,OAAA35C,KAAAu5C,UAGA6wF,EAfA,GAkBAvqI,EAAAuqI,WAOA,IAAAG,EAEA,WACA,SAAAA,EAAA96G,EAAA+6G,GACAxqI,KAAAyvB,QACAzvB,KAAAwqI,gBAWA,OARAD,EAAA3pI,UAAAi5C,SAAA,WACA,OAAA75C,KAAAyvB,OAGA86G,EAAA3pI,UAAAk5C,iBAAA,WACA,OAAA95C,KAAAwqI,eAGAD,EAdA,GAiBA1qI,EAAA0qI,MAQA,IAAAnxF,EAEA,WACA,SAAAA,EAAAC,EAAAm9F,EAAAE,EAAAE,EAAAE,EAAAv9F,GACAv5C,KAAAq5C,gBACAr5C,KAAAw2I,iBACAx2I,KAAA02I,oBACA12I,KAAA42I,qBACA52I,KAAA82I,wBACA92I,KAAAu5C,WAMA,IAJA,IAAAlvB,EAAA,EACAmvB,EAAAD,EAAAw+F,iBAGAv3G,EAAA,EAAAkZ,EAFAH,EAAAI,cAE2CnZ,EAAAkZ,EAAA/3C,OAAwB6+B,IAAA,CACnE,IAAAoZ,EAAAF,EAAAlZ,GACAnW,GAAAuvB,EAAAC,YAAAD,EAAAE,mBAAAN,GAGAx5C,KAAA+5C,eAAA1vB,EAsEA,OAnEA+uB,EAAAx4C,UAAAo5C,iBAAA,WACA,OAAAh6C,KAAAq5C,eAGAD,EAAAx4C,UAAA61I,kBAAA,WACA,OAAAz2I,KAAAw2I,gBAGAp9F,EAAAx4C,UAAA+1I,qBAAA,WACA,OAAA32I,KAAA02I,mBAGAt9F,EAAAx4C,UAAAi2I,sBAAA,WACA,OAAA72I,KAAA42I,oBAGAx9F,EAAAx4C,UAAAm2I,yBAAA,WACA,OAAA/2I,KAAA82I,uBAGA19F,EAAAx4C,UAAAs5C,kBAAA,WACA,OAAAl6C,KAAA+5C,gBAGAX,EAAAx4C,UAAA+4C,YAAA,WACA,OAAA35C,KAAAu5C,UAYAH,EAAAu8F,wBAAA,SAAAF,EAAAC,GACA,UAAAD,IAAA,OAAAC,GACA,UAAA17G,EAAA54B,QAGA,QAAAo/B,EAAA,EAAAI,EAAAwY,EAAAoB,SAA2Cha,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CAC3D,IAAAha,EAAAoa,EAAAJ,GAEA,GAAAha,EAAAgwH,iBAAAf,GAAAjvH,EAAAkwH,oBAAAhB,EACA,OAAAlvH,EAIA,UAAAwT,EAAA54B,SAIAg4C,EAAAx4C,UAAAgC,SAAA,WACA,SAAA5C,KAAAq5C,eAOAD,EAAA4+F,cAAA,WACA,WAAA5+F,EAAA,gBAAAgxF,EAAA,MAAAG,EAAA,WAAAnxF,EAAA,kBAAAgxF,EAAA,MAAAG,EAAA,WAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,WAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,kBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,qBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,qBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,qBAAAgxF,EAAA,OAAAG,EAAA,aAAAnxF,EAAA,qBAAAgxF,EAAA,OAAAG,EAAA,WAAAA,EAAA,aAAAnxF,EAAA,iBAAAgxF,EAAA,MAAAG,EAAA,WAAAnxF,EAAA,iBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,YAAAnxF,EAAA,mBAAAgxF,EAAA,OAAAG,EAAA,UAGAnxF,EAAAoB,SAAApB,EAAA4+F,gBACA5+F,EAxFA,GA2FAv5C,EAAAuB,QAAAg4C,gCChLAh5C,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA2d,EAAiC5e,EAAQ,GA0BzCsrI,EAEA,WACA,SAAAA,EAAAnC,EAAAb,GACApoI,KAAAipI,mBACAjpI,KAAAooI,YA2FA,OA7EAgD,EAAA7C,cAAA,SAAA8C,EAAA7kH,GAOA,IALA,IAAA+yB,EAAA/yB,EAAAmzB,cAEA2xF,EAAA,EACAC,EAAAhyF,EAAAI,cAEAnZ,EAAA,EAAAgrG,EAAAD,EAAmD/qG,EAAAgrG,EAAA7pI,OAA4B6+B,IAAA,CAE/E8qG,IADA1xF,EAAA4xF,EAAAhrG,IACAqZ,WAOA,IAHA,IAAAnlC,EAAA,IAAAnU,MAAA+qI,GACAG,EAAA,EAEA7qG,EAAA,EAAA8qG,EAAAH,EAAmD3qG,EAAA8qG,EAAA/pI,OAA4Bi/B,IAG/E,IAFA,IAAAgZ,EAAA8xF,EAAA9qG,GAEAl/B,EAAA,EAAqBA,EAAAk4C,EAAAC,WAAwBn4C,IAAA,CAC7C,IAAAunI,EAAArvF,EAAAE,mBACA6xF,EAAApyF,EAAAw+F,iBAAA9O,EACAv0H,EAAA+2H,KAAA,IAAAL,EAAAnC,EAAA,IAAA1kI,WAAAonI,IAOA,IAEAsM,EAFAvjI,EAAA,GAAA0zH,UAAAzmI,OAEA43C,EAAAw+F,iBACAjM,EAAAmM,EAAA,EAGAlM,EAAA,EAEA,IAAArqI,EAAA,EAAmBA,EAAAoqI,EAAmCpqI,IACtD,QAAAsG,EAAA,EAAqBA,EAAAyjI,EAAqBzjI,IAC1C0M,EAAA1M,GAAAogI,UAAA1mI,GAAA2pI,EAAAU,KAKA,IAAAmM,EAAA,KAAA1xH,EAAAwzB,mBACAm+F,EAAAD,EAAA,EAAAzM,EAEA,IAAAzjI,EAAA,EAAmBA,EAAAmwI,EAAqBnwI,IACxC0M,EAAA1M,GAAAogI,UAAA6P,EAAA,GAAA5M,EAAAU,KAIA,IAAAv/H,EAAAkI,EAAA,GAAA0zH,UAAAzmI,OAEA,IAAAD,EAAAu2I,EAA8Cv2I,EAAA8K,EAAS9K,IACvD,IAAAsG,EAAA,EAAqBA,EAAAyjI,EAAqBzjI,IAAA,CAC1C,IAAAowI,EAAAF,GAAAlwI,EAAA,GAAAyjI,EAAAzjI,EACA6uC,EAAAqhG,GAAAE,EAAA,EAAA12I,EAAA,EAAAA,EACAgT,EAAA0jI,GAAAhQ,UAAAvxF,GAAAw0F,EAAAU,KAIA,GAAAA,IAAAV,EAAA1pI,OACA,UAAA+c,EAAAtd,QAGA,OAAAsT,GAGA02H,EAAAxqI,UAAA+nI,oBAAA,WACA,OAAA3oI,KAAAipI,kBAGAmC,EAAAxqI,UAAAooI,aAAA,WACA,OAAAhpI,KAAAooI,WAGAgD,EA9FA,GAiGAvrI,EAAAuB,QAAAgqI,gCCjIAhrI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IA8BAgnE,EA9BAjd,EAAsBhrD,EAAQ,IAE9B+qD,EAAkB/qD,EAAQ,IAE1B2e,EAAsB3e,EAAQ,IAE9BshD,EAAuBthD,EAAQ,IAE/Bu4I,EAAUv4I,EAAQ,IAElBk6B,EAAwBl6B,EAAQ,GAEhCm3C,EAA8Bn3C,EAAQ,KAoBtC,SAAAioE,GACAA,IAAA,2BACAA,IAAA,+BACAA,IAAA,2BACAA,IAAA,6BACAA,IAAA,mCACAA,IAAA,mCACAA,IAAA,mCAPA,CAQCA,MAAA,KAYD,IAAAikE,EAEA,WACA,SAAAA,KAsjBA,OApjBAA,EAAApkH,OAAA,SAAAta,GACA,IAAAyR,EAAA,IAAA8rC,EAAAzpD,QAAAkM,GACAoH,EAAA,IAAA+J,EAAArd,QACAk3I,EAAA,IAAA75H,EAAArd,QACAs0C,EAAA,IAAAn1C,MACA0hD,EAAA8lB,EAAAwwE,aAEA,GACA,GAAAt2F,IAAA8lB,EAAAwwE,aACAt2F,EAAAjiD,KAAAw4I,mBAAAz5H,EAAArK,EAAA4jI,OACO,CACP,OAAAr2F,GACA,KAAA8lB,EAAA0wE,WACAz4I,KAAA04I,iBAAA35H,EAAArK,GACA,MAEA,KAAAqzD,EAAA4wE,YACA34I,KAAA44I,kBAAA75H,EAAArK,GACA,MAEA,KAAAqzD,EAAA8wE,eACA74I,KAAA84I,qBAAA/5H,EAAArK,GACA,MAEA,KAAAqzD,EAAAgxE,eACA/4I,KAAAg5I,qBAAAj6H,EAAArK,GACA,MAEA,KAAAqzD,EAAAkxE,eACAj5I,KAAAk5I,qBAAAn6H,EAAArK,EAAAghC,GACA,MAEA,QACA,UAAA1b,EAAA54B,QAGA6gD,EAAA8lB,EAAAwwE,oBAEKt2F,IAAA8lB,EAAAoxE,YAAAp6H,EAAAw8B,YAAA,GAML,OAJA+8F,EAAA32I,SAAA,GACA+S,EAAAuN,OAAAq2H,EAAA11I,YAGA,IAAAkoD,EAAA1pD,QAAAkM,EAAAoH,EAAA9R,WAAA,IAAA8yC,EAAA/zC,OAAA,KAAA+zC,EAAA,OAOAs2F,EAAAwM,mBAAA,SAAAz5H,EAAArK,EAAA4jI,GACA,IAAAc,GAAA,EAEA,GACA,IAAAC,EAAAt6H,EAAAu8B,SAAA,GAEA,OAAA+9F,EACA,UAAAr/G,EAAA54B,QACO,GAAAi4I,GAAA,IAOP,OALAD,IACAC,GAAA,KAGA3kI,EAAAuN,OAAAva,OAAAgD,aAAA2uI,EAAA,IACAtxE,EAAAwwE,aACO,SAAAc,EAEP,OAAAtxE,EAAAoxE,WACO,GAAAE,GAAA,KAEP,IAAAt4I,EAAAs4I,EAAA,IAEAt4I,EAAA,IAEA2T,EAAAuN,OAAA,KAGAvN,EAAAuN,OAAA,GAAAlhB,QAEA,OAAAs4I,GACA,SAEA,OAAAtxE,EAAA0wE,WAEA,SAEA,OAAA1wE,EAAAkxE,eAEA,SAEAvkI,EAAAuN,OAAAva,OAAAgD,aAAA,KAEA,MAEA,SAEA,SAIA,MAEA,SAEA0uI,GAAA,EACA,MAEA,SAEA1kI,EAAAuN,OAAA,iBACAq2H,EAAAnoH,OAAA,cACA,MAEA,SAEAzb,EAAAuN,OAAA,iBACAq2H,EAAAnoH,OAAA,cACA,MAEA,SAEA,OAAA43C,EAAA8wE,eAEA,SAEA,OAAA9wE,EAAA4wE,YAEA,SAEA,OAAA5wE,EAAAgxE,eAEA,SAKA,MAEA,QAGA,SAAAM,GAAA,IAAAt6H,EAAAw8B,YACA,UAAAvhB,EAAA54B,eAMK2d,EAAAw8B,YAAA,GAEL,OAAAwsB,EAAAwwE,cAOAvM,EAAA0M,iBAAA,SAAA35H,EAAArK,GAIA,IAAA0kI,GAAA,EACAE,EAAA,GACAtyG,EAAA,EAEA,GAEA,OAAAjoB,EAAAw8B,YACA,OAGA,IAAAlxC,EAAA0U,EAAAu8B,SAAA,GAEA,SAAAjxC,EAEA,OAGArK,KAAAu5I,cAAAlvI,EAAA0U,EAAAu8B,SAAA,GAAAg+F,GAEA,QAAA53I,EAAA,EAAqBA,EAAA,EAAOA,IAAA,CAC5B,IAAA83I,EAAAF,EAAA53I,GAEA,OAAAslC,GACA,OACA,GAAAwyG,EAAA,EACAxyG,EAAAwyG,EAAA,MACa,MAAAA,EAAAx5I,KAAAy5I,oBAAA93I,QAUb,UAAAq4B,EAAA54B,QATA,IAAAs4I,EAAA15I,KAAAy5I,oBAAAD,GAEAJ,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAAgvI,EAAA3wI,WAAA,SACAqwI,GAAA,GAEA1kI,EAAAuN,OAAAy3H,GAMA,MAEA,OACAN,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,EAAA,MACAJ,GAAA,GAEA1kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,IAGAxyG,EAAA,EACA,MAEA,OACA,GAAAwyG,EAAAx5I,KAAA25I,qBAAAh4I,OAAA,CACA+3I,EAAA15I,KAAA25I,qBAAAH,GAEAJ,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAAgvI,EAAA3wI,WAAA,SACAqwI,GAAA,GAEA1kI,EAAAuN,OAAAy3H,QAGA,OAAAF,GACA,QAEA9kI,EAAAuN,OAAAva,OAAAgD,aAAA,KAEA,MAEA,QAEA0uI,GAAA,EACA,MAEA,QACA,UAAAp/G,EAAA54B,QAIA4lC,EAAA,EACA,MAEA,OACAoyG,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,EAAA,MACAJ,GAAA,GAEA1kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,EAAA,KAGAxyG,EAAA,EACA,MAEA,QACA,UAAAhN,EAAA54B,gBAGK2d,EAAAw8B,YAAA,IAOLywF,EAAA4M,kBAAA,SAAA75H,EAAArK,GAIA,IAAA0kI,GAAA,EACAE,EAAA,GACAtyG,EAAA,EAEA,GAEA,OAAAjoB,EAAAw8B,YACA,OAGA,IAAAlxC,EAAA0U,EAAAu8B,SAAA,GAEA,SAAAjxC,EAEA,OAGArK,KAAAu5I,cAAAlvI,EAAA0U,EAAAu8B,SAAA,GAAAg+F,GAEA,QAAA53I,EAAA,EAAqBA,EAAA,EAAOA,IAAA,CAC5B,IAAA83I,EAAAF,EAAA53I,GAEA,OAAAslC,GACA,OACA,GAAAwyG,EAAA,EACAxyG,EAAAwyG,EAAA,MACa,MAAAA,EAAAx5I,KAAA45I,qBAAAj4I,QAUb,UAAAq4B,EAAA54B,QATA,IAAAy4I,EAAA75I,KAAA45I,qBAAAJ,GAEAJ,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAAmvI,EAAA9wI,WAAA,SACAqwI,GAAA,GAEA1kI,EAAAuN,OAAA43H,GAMA,MAEA,OACAT,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,EAAA,MACAJ,GAAA,GAEA1kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,IAGAxyG,EAAA,EACA,MAEA,OAEA,GAAAwyG,EAAAx5I,KAAA85I,sBAAAn4I,OAAA,CACAk4I,EAAA75I,KAAA85I,sBAAAN,GAEAJ,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAAmvI,EAAA9wI,WAAA,SACAqwI,GAAA,GAEA1kI,EAAAuN,OAAA43H,QAGA,OAAAL,GACA,QAEA9kI,EAAAuN,OAAAva,OAAAgD,aAAA,KAEA,MAEA,QAEA0uI,GAAA,EACA,MAEA,QACA,UAAAp/G,EAAA54B,QAIA4lC,EAAA,EACA,MAEA,OACA,KAAAwyG,EAAAx5I,KAAA+5I,sBAAAp4I,QAYA,UAAAq4B,EAAA54B,QAXAy4I,EAAA75I,KAAA+5I,sBAAAP,GAEAJ,GACA1kI,EAAAuN,OAAAva,OAAAgD,aAAAmvI,EAAA9wI,WAAA,SACAqwI,GAAA,GAEA1kI,EAAAuN,OAAA43H,GAGA7yG,EAAA,EAKA,MAEA,QACA,UAAAhN,EAAA54B,gBAGK2d,EAAAw8B,YAAA,IAOLywF,EAAA8M,qBAAA,SAAA/5H,EAAArK,GAGA,IAAA4kI,EAAA,GAEA,GAEA,OAAAv6H,EAAAw8B,YACA,OAGA,IAAAlxC,EAAA0U,EAAAu8B,SAAA,GAEA,SAAAjxC,EAEA,OAGArK,KAAAu5I,cAAAlvI,EAAA0U,EAAAu8B,SAAA,GAAAg+F,GAEA,QAAA53I,EAAA,EAAqBA,EAAA,EAAOA,IAAA,CAC5B,IAAA83I,EAAAF,EAAA53I,GAEA,OAAA83I,GACA,OAEA9kI,EAAAuN,OAAA,MACA,MAEA,OAEAvN,EAAAuN,OAAA,KACA,MAEA,OAEAvN,EAAAuN,OAAA,KACA,MAEA,OAEAvN,EAAAuN,OAAA,KACA,MAEA,QACA,GAAAu3H,EAAA,GAEA9kI,EAAAuN,OAAAva,OAAAgD,aAAA8uI,EAAA,SACa,MAAAA,EAAA,IAIb,UAAAx/G,EAAA54B,QAFAsT,EAAAuN,OAAAva,OAAAgD,aAAA8uI,EAAA,cAQKz6H,EAAAw8B,YAAA,IAGLywF,EAAAuN,cAAA,SAAAlvI,EAAAJ,EAAAyK,GACA,IAAAslI,GAAA3vI,GAAA,GAAAJ,EAAA,EACA1G,EAAAuG,KAAA2F,MAAAuqI,EAAA,MACAtlI,EAAA,GAAAnR,EACAy2I,GAAA,KAAAz2I,EACAA,EAAAuG,KAAA2F,MAAAuqI,EAAA,IACAtlI,EAAA,GAAAnR,EACAmR,EAAA,GAAAslI,EAAA,GAAAz2I,GAOAyoI,EAAAgN,qBAAA,SAAAj6H,EAAArK,GACA,GAEA,GAAAqK,EAAAw8B,aAAA,GACA,OAGA,QAAA75C,EAAA,EAAqBA,EAAA,EAAOA,IAAA,CAC5B,IAAAu4I,EAAAl7H,EAAAu8B,SAAA,GAEA,QAAA2+F,EAAA,CAGA,IAAAz+F,EAAA,EAAAz8B,EAAAq8B,eAMA,YAJA,IAAAI,GACAz8B,EAAAu8B,SAAAE,IAMA,QAAAy+F,KAEAA,GAAA,IAGAvlI,EAAAuN,OAAAva,OAAAgD,aAAAuvI,WAEKl7H,EAAAw8B,YAAA,IAOLywF,EAAAkN,qBAAA,SAAAn6H,EAAArK,EAAAghC,GAEA,IAGAjmB,EAHAyqH,EAAA,EAAAn7H,EAAAs8B,gBAEA8+F,EAAAn6I,KAAAo6I,oBAAAr7H,EAAAu8B,SAAA,GAAA4+F,KAaA,IARAzqH,EAFA,IAAA0qH,EAEAp7H,EAAAw8B,YAAA,IACK4+F,EAAA,IACLA,EAEA,KAAAA,EAAA,KAAAn6I,KAAAo6I,oBAAAr7H,EAAAu8B,SAAA,GAAA4+F,MAIA,EACA,UAAAlgH,EAAA54B,QAKA,IAFA,IAAAkM,EAAA,IAAA/I,WAAAkrB,GAEA/tB,EAAA,EAAmBA,EAAA+tB,EAAW/tB,IAAA,CAG9B,GAAAqd,EAAAw8B,YAAA,EACA,UAAAvhB,EAAA54B,QAGAkM,EAAA5L,GAAA1B,KAAAo6I,oBAAAr7H,EAAAu8B,SAAA,GAAA4+F,KAGAxkG,EAAA5sC,KAAAwE,GAEA,IACAoH,EAAAuN,OAAAm/B,EAAAhgD,QAAAwmB,OAAAta,EAAA+qI,EAAA5sF,YAAAic,WACK,MAAA3f,GACL,UAAA9Q,EAAA71C,QAAA,gDAAA2mD,EAAA11C,WAQA25H,EAAAoO,oBAAA,SAAAC,EAAAC,GACA,IACAC,EAAAF,GADA,IAAAC,EAAA,OAEA,OAAAC,GAAA,EAAAA,IAAA,KAQAvO,EAAAyN,oBAAA,kKACAzN,EAAA2N,qBAAA,qEAAoI,0CAMpI3N,EAAA4N,qBAAA,kKAEA5N,EAAA8N,sBAAA9N,EAAA2N,qBACA3N,EAAA+N,sBAAA,iHAA2L,QAAU,IAAAryI,OAAAgD,aAAA,MACrMshI,EAvjBA,GA0jBAnsI,EAAAuB,QAAA4qI,gCCpnBA5rI,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAohB,EAAoBriB,EAAQ,GAE5BkrD,EAAuBlrD,EAAQ,IAE/BurD,EAA4BvrD,EAAQ,IAEpCkC,EAAkBlC,EAAQ,IAE1B4rD,EAA+B5rD,EAAQ,KAEvC4nB,EAA0B5nB,EAAQ,GAyBlC6tI,EAEA,WACA,SAAAA,EAAAzuH,GACAlf,KAAAkf,QACAlf,KAAAw6I,kBAAA,IAAA9uF,EAAAtqD,QAAA8d,GA+SA,OArSAyuH,EAAA/sI,UAAAy0C,OAAA,WACA,IAAAolG,EAAAz6I,KAAAw6I,kBAAAnlG,SACAtyC,EAAA03I,EAAA,GACAz3I,EAAAy3I,EAAA,GACAx3I,EAAAw3I,EAAA,GACAC,EAAAD,EAAA,GAIA1jG,EAAA,GACAA,EAAAjuC,KAAA9I,KAAA26I,mBAAA53I,EAAAC,IACA+zC,EAAAjuC,KAAA9I,KAAA26I,mBAAA53I,EAAAE,IACA8zC,EAAAjuC,KAAA9I,KAAA26I,mBAAA33I,EAAA03I,IACA3jG,EAAAjuC,KAAA9I,KAAA26I,mBAAA13I,EAAAy3I,IACA3jG,EAAA6hB,KAAAgiF,EAAAC,sCAGA,IAAAC,EAAA/jG,EAAA,GACAgkG,EAAAhkG,EAAA,GAGAikG,EAAA,IAAA73H,IACAwqH,EAAAp3D,UAAAykE,EAAAF,EAAAG,WACAtN,EAAAp3D,UAAAykE,EAAAF,EAAAI,SACAvN,EAAAp3D,UAAAykE,EAAAD,EAAAE,WACAtN,EAAAp3D,UAAAykE,EAAAD,EAAAG,SAKA,IAJA,IAAAC,EAAA,KACA50E,EAAA,KACA60E,EAAA,KAEA56G,EAAA,EAAAI,EAAArgC,MAAAqE,KAAAo2I,EAAAj9H,WAA2DyiB,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CAC3E,IAAA0xC,EAAAtxC,EAAAJ,GACA8yG,EAAAphE,EAAA,GAGA,IAFAA,EAAA,GAGA3L,EAAA+sE,EAGA,MAAA6H,EACAA,EAAA7H,EAEA8H,EAAA9H,EAKA,SAAA6H,GAAA,MAAA50E,GAAA,MAAA60E,EACA,UAAA1zH,EAAAtmB,QAIA,IAAAi6I,EAAA,CAAAF,EAAA50E,EAAA60E,GAEAj5H,EAAA/gB,QAAAyB,kBAAAw4I,GAEA,IAAAC,EAAAD,EAAA,GACA90E,EAAA80E,EAAA,GACA,IAEAnN,EAFAF,EAAAqN,EAAA,GAWAnN,EAPA8M,EAAAt6F,IAAA39C,GAEKi4I,EAAAt6F,IAAA19C,GAEAg4I,EAAAt6F,IAAAz9C,GAGLy3I,EAFAz3I,EAFAD,EAFAD,EAgBA,IAgBAgc,EACAw8H,EAjBAC,EAAAx7I,KAAA26I,mBAAA3M,EAAAE,GAAAuN,iBACAC,EAAA17I,KAAA26I,mBAAAW,EAAApN,GAAAuN,iBAoBA,GAlBA,OAAAD,IAEAA,IAKA,OAAAE,IAEAA,IASA,GAbAF,GAAA,IAaA,GANAE,GAAA,IAMA,EAAAA,GAAA,EAAAF,EAIA,OAFAD,EAAAv7I,KAAA27I,2BAAAp1E,EAAA+0E,EAAAtN,EAAAE,EAAAsN,EAAAE,MAGAH,EAAArN,GAMA,QAHAsN,EAAAx7I,KAAA26I,mBAAA3M,EAAAuN,GAAAE,oBAKAD,IAGA,QAPAE,EAAA17I,KAAA26I,mBAAAW,EAAAC,GAAAE,oBASAC,IAGA38H,EAAA4uH,EAAArlE,WAAAtoE,KAAAkf,MAAA8uH,EAAAznE,EAAA+0E,EAAAC,EAAAC,EAAAE,OACK,CAEL,IAAAphG,EAAAxwC,KAAAC,IAAA2xI,EAAAF,GAIA,OAFAD,EAAAv7I,KAAA47I,gBAAAr1E,EAAA+0E,EAAAtN,EAAAE,EAAA5zF,MAGAihG,EAAArN,GAIA,IAAA2N,EAAA/xI,KAAA0C,IAAAxM,KAAA26I,mBAAA3M,EAAAuN,GAAAE,iBAAAz7I,KAAA26I,mBAAAW,EAAAC,GAAAE,kBAGA,SAFAI,IAGAA,IAGA98H,EAAA4uH,EAAArlE,WAAAtoE,KAAAkf,MAAA8uH,EAAAznE,EAAA+0E,EAAAC,EAAAM,KAGA,WAAA7wF,EAAA5pD,QAAA2d,EAAA,CAAAivH,EAAAznE,EAAA+0E,EAAAC,KAQA5N,EAAA/sI,UAAA+6I,2BAAA,SAAAp1E,EAAA+0E,EAAAtN,EAAAE,EAAAsN,EAAAE,GACA,IAAAI,EAAAnO,EAAAxqI,SAAAojE,EAAA+0E,GAAAE,EACAO,EAAApO,EAAAxqI,SAAA6qI,EAAAE,GACA1sE,GAAA0sE,EAAA7rI,OAAA2rI,EAAA3rI,QAAA05I,EACAt6E,GAAAysE,EAAA5rI,OAAA0rI,EAAA1rI,QAAAy5I,EACAC,EAAA,IAAA75H,EAAA/gB,QAAA8sI,EAAA7rI,OAAAy5I,EAAAt6E,EAAA0sE,EAAA5rI,OAAAw5I,EAAAr6E,GACAq6E,EAAAnO,EAAAxqI,SAAAojE,EAAAynE,GAAA0N,EACAK,EAAApO,EAAAxqI,SAAAm4I,EAAApN,GACA1sE,GAAA0sE,EAAA7rI,OAAAi5I,EAAAj5I,QAAA05I,EACAt6E,GAAAysE,EAAA5rI,OAAAg5I,EAAAh5I,QAAAy5I,EACA,IAAAE,EAAA,IAAA95H,EAAA/gB,QAAA8sI,EAAA7rI,OAAAy5I,EAAAt6E,EAAA0sE,EAAA5rI,OAAAw5I,EAAAr6E,GAEA,OAAAzhE,KAAAk8I,QAAAF,GAQAh8I,KAAAk8I,QAAAD,GAIAnyI,KAAAy3D,IAAAi6E,EAAAx7I,KAAA26I,mBAAA3M,EAAAgO,GAAAP,kBAAA3xI,KAAAy3D,IAAAm6E,EAAA17I,KAAA26I,mBAAAW,EAAAU,GAAAP,mBACA3xI,KAAAy3D,IAAAi6E,EAAAx7I,KAAA26I,mBAAA3M,EAAAiO,GAAAR,kBAAA3xI,KAAAy3D,IAAAm6E,EAAA17I,KAAA26I,mBAAAW,EAAAW,GAAAR,kBAGAO,EAGAC,EAVAD,EARAh8I,KAAAk8I,QAAAD,GACAA,EAGA,MAsBAtO,EAAA/sI,UAAAg7I,gBAAA,SAAAr1E,EAAA+0E,EAAAtN,EAAAE,EAAA5zF,GACA,IAAAwhG,EAAAnO,EAAAxqI,SAAAojE,EAAA+0E,GAAAhhG,EACAyhG,EAAApO,EAAAxqI,SAAA6qI,EAAAE,GACA1sE,GAAA0sE,EAAA7rI,OAAA2rI,EAAA3rI,QAAA05I,EACAt6E,GAAAysE,EAAA5rI,OAAA0rI,EAAA1rI,QAAAy5I,EACAC,EAAA,IAAA75H,EAAA/gB,QAAA8sI,EAAA7rI,OAAAy5I,EAAAt6E,EAAA0sE,EAAA5rI,OAAAw5I,EAAAr6E,GACAq6E,EAAAnO,EAAAxqI,SAAAojE,EAAAynE,GAAA1zF,EACAyhG,EAAApO,EAAAxqI,SAAAm4I,EAAApN,GACA1sE,GAAA0sE,EAAA7rI,OAAAi5I,EAAAj5I,QAAA05I,EACAt6E,GAAAysE,EAAA5rI,OAAAg5I,EAAAh5I,QAAAy5I,EACA,IAAAE,EAAA,IAAA95H,EAAA/gB,QAAA8sI,EAAA7rI,OAAAy5I,EAAAt6E,EAAA0sE,EAAA5rI,OAAAw5I,EAAAr6E,GAEA,OAAAzhE,KAAAk8I,QAAAF,GAQAh8I,KAAAk8I,QAAAD,GAIAnyI,KAAAy3D,IAAAvhE,KAAA26I,mBAAA3M,EAAAgO,GAAAP,iBAAAz7I,KAAA26I,mBAAAW,EAAAU,GAAAP,mBACA3xI,KAAAy3D,IAAAvhE,KAAA26I,mBAAA3M,EAAAiO,GAAAR,iBAAAz7I,KAAA26I,mBAAAW,EAAAW,GAAAR,kBACAO,EAAAC,EALAD,EARAh8I,KAAAk8I,QAAAD,GACAA,EAGA,MAYAtO,EAAA/sI,UAAAs7I,QAAA,SAAA17I,GACA,OAAAA,EAAA6B,QAAA,GAAA7B,EAAA6B,OAAArC,KAAAkf,MAAAgB,YAAA1f,EAAA8B,OAAA,GAAA9B,EAAA8B,OAAAtC,KAAAkf,MAAAiB,aAGAwtH,EAAAxqI,SAAA,SAAAyI,EAAAzL,GACA,OAAA6B,EAAAZ,QAAAizB,MAAAlS,EAAA/gB,QAAA+B,SAAAyI,EAAAzL,KAOAwtI,EAAAp3D,UAAA,SAAArW,EAAAr+D,GACA,IAAAd,EAAAm/D,EAAArgD,IAAAhe,GACAq+D,EAAAtvD,IAAA/O,EAAA,MAAAd,EAAA,EAAAA,EAAA,IAGA4sI,EAAArlE,WAAA,SAAAppD,EAAA8uH,EAAAznE,EAAA+0E,EAAApN,EAAA3lE,EAAAC,GAEA,OADAnd,EAAAjqD,QAAA08C,cACAwqB,WAAAppD,EAAAqpD,EAAAC,EAAA,MAAAD,EAAA,MAAAA,EAAA,GAAAC,EAAA,MAAAA,EAAA,GAAAwlE,EAAA3rI,OAAA2rI,EAAA1rI,OAAA4rI,EAAA7rI,OAAA6rI,EAAA5rI,OAAAg5I,EAAAj5I,OAAAi5I,EAAAh5I,OAAAikE,EAAAlkE,OAAAkkE,EAAAjkE,SAOAqrI,EAAA/sI,UAAA+5I,mBAAA,SAAA/1I,EAAAkP,GAEA,IAAA47H,EAAA,EAAA9qI,EAAAvC,OACAstI,EAAA,EAAA/qI,EAAAtC,OACAstI,EAAA,EAAA97H,EAAAzR,OACAwtI,EAAA,EAAA/7H,EAAAxR,OACA2tI,EAAAnmI,KAAAy3D,IAAAsuE,EAAAF,GAAA7lI,KAAAy3D,IAAAquE,EAAAF,GAEA,GAAAO,EAAA,CACA,IAAA1sI,EAAAmsI,EACAA,EAAAC,EACAA,EAAApsI,EACAA,EAAAqsI,EACAA,EAAAC,EACAA,EAAAtsI,EAWA,IARA,IAAA2sI,EAAApmI,KAAAy3D,IAAAquE,EAAAF,GACAS,EAAArmI,KAAAy3D,IAAAsuE,EAAAF,GACA9zG,GAAAq0G,EAAA,EACAG,EAAAV,EAAAE,EAAA,KACAO,EAAAV,EAAAE,EAAA,KACA74F,EAAA,EACAD,EAAA92C,KAAAkf,MAAAW,IAAAowH,EAAAN,EAAAD,EAAAO,EAAAP,EAAAC,GAEAxtI,EAAAutI,EAAAttI,EAAAutI,EAAkCxtI,IAAAytI,EAAWztI,GAAAiuI,EAAA,CAC7C,IAAA+L,EAAAn8I,KAAAkf,MAAAW,IAAAowH,EAAA7tI,EAAAD,EAAA8tI,EAAA9tI,EAAAC,GASA,GAPA+5I,IAAArlG,IACAC,IACAD,EAAAqlG,IAGAtgH,GAAAs0G,GAEA,GACA,GAAA/tI,IAAAytI,EACA,MAGAztI,GAAAiuI,EACAx0G,GAAAq0G,GAIA,WAAA0K,EAAAh2I,EAAAkP,EAAAijC,IAGA42F,EAlTA,GAqTA9tI,EAAAuB,QAAAusI,EAEA,IAAAiN,EAEA,WACA,SAAAA,EAAAh2I,EAAAkP,EAAAijC,GACA/2C,KAAA4E,OACA5E,KAAA8T,KACA9T,KAAA+2C,cAwBA,OArBA6jG,EAAAh6I,UAAAq6I,QAAA,WACA,OAAAj7I,KAAA4E,MAGAg2I,EAAAh6I,UAAAs6I,MAAA,WACA,OAAAl7I,KAAA8T,IAGA8mI,EAAAh6I,UAAA66I,eAAA,WACA,OAAAz7I,KAAA+2C,aAIA6jG,EAAAh6I,UAAAgC,SAAA,WACA,OAAA5C,KAAA4E,KAAA,IAAA5E,KAAA8T,GAAA,IAAA9T,KAAA+2C,aAGA6jG,EAAAC,qCAAA,SAAAuB,EAAAC,GACA,OAAAD,EAAAX,iBAAAY,EAAAZ,kBAGAb,EA5BA,iCClWAx6I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA6/C,EAAuB9gD,EAAQ,IAE/BssD,EAAgBtsD,EAAQ,IAExBosD,EAA6BpsD,EAAQ,IAErC4e,EAAiC5e,EAAQ,GAEzCm3C,EAA8Bn3C,EAAQ,IAMtCw8I,EAEA,WACA,SAAAA,KAkJA,OAvIAA,EAAA17I,UAAA6E,MAAA,SAAA2zE,EAAAx6D,EAAAC,EAAAgJ,GAKA,QAJA,IAAAA,IACAA,EAAA,MAGA,IAAAuxD,EAAAz3E,OACA,UAAA+c,EAAAtd,QAAA,wBAMA,GAAAwd,EAAA,GAAAC,EAAA,EACA,UAAAH,EAAAtd,QAAA,uCAAAwd,EAAA,IAAAC,GAGA,IAAA0mD,EAAArZ,EAAA9qD,QAAAspC,EACA2uC,EAAAijE,EAAAhjE,gBAEA,OAAAzxD,SACA3iB,IAAA2iB,EAAAhI,IAAA+gC,EAAAx/C,QAAAm4E,oBACAhU,EAAArZ,EAAA9qD,QAAAuE,WAAAkiB,EAAAhI,IAAA+gC,EAAAx/C,QAAAm4E,kBAAA32E,kBAGAsC,IAAA2iB,EAAAhI,IAAA+gC,EAAAx/C,QAAAo4E,UACAH,EAAAlxE,OAAAI,SAAAsf,EAAAhI,IAAA+gC,EAAAx/C,QAAAo4E,QAAA52E,WAAA,MAIA,IAAAiO,EAAAu7C,EAAAhrD,QAAAu7C,OAAAy8B,EAAA7T,EAAA19C,GACA,OAAA7nB,KAAAy5E,aAAA5oE,EAAA+N,EAAAC,EAAAw6D,IAOAijE,EAAA17I,UAAA27I,WAAA,SAAAC,EAAApjE,EAAAx6D,EAAAC,EAAAgJ,QACA,IAAAA,IACAA,EAAA,MAGA,kBAAA20H,IACAA,EAAArkI,SAAAskI,cAAAD,IAGA,IAAAE,EAAA18I,KAAAyF,MAAA2zE,EAAAx6D,EAAAC,EAAAgJ,GACA20H,KAAA1+C,YAAA4+C,IAQAJ,EAAA17I,UAAA64E,aAAA,SAAA5oE,EAAA+N,EAEAC,EAEAw6D,GAGA,IAAAK,EAAA7oE,EAAA2uB,YAEA,UAAAk6C,EACA,UAAAziC,EAAA71C,QAkBA,IAfA,IAAAu4E,EAAAD,EAAAx5D,WACA05D,EAAAF,EAAAv5D,YACA05D,EAAAF,EAAA,EAAAN,EACAS,EAAAF,EAAA,EAAAP,EACAU,EAAAjwE,KAAA0C,IAAAoS,EAAAi7D,GACAG,EAAAlwE,KAAA0C,IAAAqS,EAAAi7D,GACAG,EAAAnwE,KAAAC,IAAAD,KAAA2F,MAAAsqE,EAAAF,GAAA/vE,KAAA2F,MAAAuqE,EAAAF,IAKAI,EAAApwE,KAAA2F,OAAAsqE,EAAAJ,EAAAM,GAAA,GACAE,EAAArwE,KAAA2F,OAAAuqE,EAAAJ,EAAAK,GAAA,GACAyiE,EAAA18I,KAAA28I,iBAAA5iE,EAAAC,GAEAI,EAAA,EAAAC,EAAAF,EAA8CC,EAAAR,EAAsBQ,IAAAC,GAAAJ,EAEpE,QAAAK,EAAA,EAAAC,EAAAL,EAAiDI,EAAAX,EAAqBW,IAAAC,GAAAN,EACtE,OAAAP,EAAA75D,IAAAy6D,EAAAF,GAAA,CACA,IAAAwiE,EAAA58I,KAAA68I,qBAAAtiE,EAAAF,EAAAJ,KACAyiE,EAAA5+C,YAAA8+C,GAKA,OAAAF,GAUAJ,EAAA17I,UAAA+7I,iBAAA,SAAA7vG,EAAAmQ,GACA,IAAAy/F,EAAAvkI,SAAA46F,gBAAAupC,EAAAQ,OAAA,OAGA,OAFAJ,EAAA9uD,eAAA,cAAA9gD,EAAAlqC,YACA85I,EAAA9uD,eAAA,aAAA3wC,EAAAr6C,YACA85I,GAYAJ,EAAA17I,UAAAi8I,qBAAA,SAAA16I,EAAAC,EAAA0qC,EAAAmQ,GACA,IAAA8/F,EAAA5kI,SAAA46F,gBAAAupC,EAAAQ,OAAA,QAMA,OALAC,EAAAnvD,eAAA,SAAAzrF,EAAAS,YACAm6I,EAAAnvD,eAAA,SAAAxrF,EAAAQ,YACAm6I,EAAAnvD,eAAA,cAAA9gD,EAAAlqC,YACAm6I,EAAAnvD,eAAA,aAAA3wC,EAAAr6C,YACAm6I,EAAAnvD,eAAA,uBACAmvD,GAGAT,EAAAhjE,gBAAA,EAKAgjE,EAAAQ,OAAA,6BACAR,EAnJA,GAsJAz8I,EAAAy8I,uDC3JAl8I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAMA,IAAAyd,EAAe1e,EAAQ,IAEvB2e,EAAsB3e,EAAQ,IAS9Bk9I,EAEA,WACA,SAAAA,EAAAp+H,EAEAC,GAGA7e,KAAA4e,QACA5e,KAAA6e,SAGA,IAFA,IAAAvR,EAAA,IAAA/M,MAAAse,GAEAnd,EAAA,EAAmBA,IAAAmd,EAAcnd,IACjC4L,EAAA5L,GAAA,IAAA6C,WAAAqa,GAGA5e,KAAAsN,QAuHA,OApHA0vI,EAAAp8I,UAAAuf,UAAA,WACA,OAAAngB,KAAA6e,QAGAm+H,EAAAp8I,UAAAsf,SAAA,WACA,OAAAlgB,KAAA4e,OAGAo+H,EAAAp8I,UAAAif,IAAA,SAAA1d,EAEAC,GAGA,OAAApC,KAAAsN,MAAAlL,GAAAD,IAOA66I,EAAAp8I,UAAAgsE,SAAA,WACA,OAAA5sE,KAAAsN,OAIA0vI,EAAAp8I,UAAAq8I,UAAA,SAAA96I,EAEAC,EAEArB,GAGAf,KAAAsN,MAAAlL,GAAAD,GAAApB,GAMAi8I,EAAAp8I,UAAAs8I,WAAA,SAAA/6I,EAEAC,EAEArB,GACAf,KAAAsN,MAAAlL,GAAAD,GAEApB,EAAA,KAGAi8I,EAAAp8I,UAAA6f,MAAA,SAAA1f,GAGA,QAAAy/B,EAAA,EAAAI,EAAA5gC,KAAAsN,MAAqCkzB,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACrD,IAAA28G,EAAAv8G,EAAAJ,GACAhiB,EAAApd,QAAAwyC,eAAAupG,EAAAp8I,KAIAi8I,EAAAp8I,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAk7H,GACA,SAGA,IAAAx6I,EAAAsf,EAEA,GAAA9hB,KAAA4e,QAAApc,EAAAoc,MACA,SAGA,GAAA5e,KAAA6e,SAAArc,EAAAqc,OACA,SAGA,QAAAzc,EAAA,EAAAyc,EAAA7e,KAAA6e,OAAyCzc,EAAAyc,IAAYzc,EAIrD,IAHA,IAAAg7I,EAAAp9I,KAAAsN,MAAAlL,GACAi7I,EAAA76I,EAAA8K,MAAAlL,GAEAD,EAAA,EAAAyc,EAAA5e,KAAA4e,MAAyCzc,EAAAyc,IAAWzc,EACpD,GAAAi7I,EAAAj7I,KAAAk7I,EAAAl7I,GACA,SAKA,UAKA66I,EAAAp8I,UAAAgC,SAAA,WAGA,IAFA,IAAA8R,EAAA,IAAA+J,EAAArd,QAEAgB,EAAA,EAAAyc,EAAA7e,KAAA6e,OAAyCzc,EAAAyc,IAAYzc,EAAA,CAGrD,IAFA,IAAAg7I,EAAAp9I,KAAAsN,MAAAlL,GAEAD,EAAA,EAAAyc,EAAA5e,KAAA4e,MAAyCzc,EAAAyc,IAAWzc,EACpD,OAAAi7I,EAAAj7I,IACA,OACAuS,EAAAuN,OAAA,MACA,MAEA,OACAvN,EAAAuN,OAAA,MACA,MAEA,QACAvN,EAAAuN,OAAA,MAKAvN,EAAAuN,OAAA,MAGA,OAAAvN,EAAA9R,YAGAo6I,EArIA,GAwIAn9I,EAAAuB,QAAA47I,gCC5JA58I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAud,EAAiBxe,EAAQ,IAEzBk1B,EAAgBl1B,EAAQ,IAExBohD,EAAephD,EAAQ,IAEvBkhD,EAAiBlhD,EAAQ,KAEzBwhD,EAAwBxhD,EAAQ,IAEhC4e,EAAiC5e,EAAQ,GAOzCw9I,EAEA,WACA,SAAAA,KAgaA,OAzZAA,EAAAC,YAAA,SAAA39H,GAEAA,EAAAa,MAIA,MAKA68H,EAAAv5F,YAAA,SAAAvB,EAAA3M,EAAArvB,EAAAo9B,EAEAhkC,GACA09H,EAAAC,YAAA39H,GACA09H,EAAAE,mBAAAh3H,EAAA5G,GAEA09H,EAAAG,cAAA5nG,EAAA+N,EAAAhkC,GAEA09H,EAAAI,sBAAAl3H,EAAA5G,GAEA09H,EAAAK,cAAAn7F,EAAAoB,EAAAhkC,IASA09H,EAAAE,mBAAA,SAAAh3H,EAAA5G,GAEA09H,EAAAM,4CAAAh+H,GAEA09H,EAAAO,+BAAAj+H,GAEA09H,EAAAQ,qCAAAt3H,EAAA5G,GAEA09H,EAAAS,oBAAAn+H,IAIA09H,EAAAG,cAAA,SAAA5nG,EAAA+N,EAEAhkC,GACA,IAAAo+H,EAAA,IAAA1/H,EAAAld,QACAk8I,EAAAW,iBAAApoG,EAAA+N,EAAAo6F,GAEA,QAAAt8I,EAAA,EAAA6E,EAAAy3I,EAAAj9H,UAAkDrf,EAAA6E,IAAU7E,EAAA,CAG5D,IAAAggB,EAAAs8H,EAAAn+H,IAAAm+H,EAAAj9H,UAAA,EAAArf,GAEAw8I,EAAAZ,EAAAa,sBAAAz8I,GACAk9C,EAAAs/F,EAAA,GACAr/F,EAAAq/F,EAAA,GAGA,GAFAt+H,EAAAs9H,WAAAt+F,EAAAC,EAAAn9B,GAEAhgB,EAAA,GAEA,IAAAo9C,EAAAl/B,EAAAM,WAAAxe,EAAA,EACAq9C,EAAA,EACAn/B,EAAAs9H,WAAAp+F,EAAAC,EAAAr9B,OACO,CAEPo9B,EAAA,EACAC,EAAAn/B,EAAAO,YAAA,GAAAze,EAAA,GACAke,EAAAs9H,WAAAp+F,EAAAC,EAAAr9B,MAOA47H,EAAAI,sBAAA,SAAAl3H,EAAA5G,GACA,KAAA4G,EAAAwzB,mBAAA,IAKA,IAAAokG,EAAA,IAAA9/H,EAAAld,QACAk8I,EAAAe,oBAAA73H,EAAA43H,GAGA,IAFA,IAAAE,EAAA,GAEA58I,EAAA,EAAmBA,EAAA,IAAOA,EAC1B,QAAAsG,EAAA,EAAqBA,EAAA,IAAOA,EAAA,CAE5B,IAAA0Z,EAAA08H,EAAAv+H,IAAAy+H,GACAA,IAEA1+H,EAAAs9H,WAAAx7I,EAAAke,EAAAO,YAAA,GAAAnY,EAAA0Z,GAEA9B,EAAAs9H,WAAAt9H,EAAAO,YAAA,GAAAnY,EAAAtG,EAAAggB,MAQA47H,EAAAK,cAAA,SAAAn7F,EAAAoB,EAEAhkC,GAOA,IANA,IAAA0+H,EAAA,EACAC,GAAA,EAEAp8I,EAAAyd,EAAAM,WAAA,EACA9d,EAAAwd,EAAAO,YAAA,EAEAhe,EAAA,IAMA,IAJA,IAAAA,IACAA,GAAA,GAGAC,GAAA,GAAAA,EAAAwd,EAAAO,aAAA,CACA,QAAAze,EAAA,EAAuBA,EAAA,IAAOA,EAAA,CAC9B,IAAA+hE,EAAAthE,EAAAT,EAEA,GAAA47I,EAAAkB,QAAA5+H,EAAAC,IAAA4jD,EAAArhE,IAAA,CAIA,IAAAsf,OAAA,EAEA48H,EAAA97F,EAAAzhC,WACAW,EAAA8gC,EAAA3iC,IAAAy+H,KACAA,GAIA58H,GAAA,EAIA,MAAAkiC,GAAA5C,EAAA5/C,QAAAmsE,eAAA3pB,EAAA6f,EAAArhE,KACAsf,MAGA9B,EAAAs9H,WAAAz5E,EAAArhE,EAAAsf,IAGAtf,GAAAm8I,EAKAn8I,GAFAm8I,KAGAp8I,GAAA,EAIA,GAAAm8I,IAAA97F,EAAAzhC,UACA,UAAAugC,EAAAlgD,QAAA,0BAAAk9I,EAAA,IAAA97F,EAAAzhC,YASAu8H,EAAAmB,WAAA,SAAA19I,GAGA,UAAAi0B,EAAA5zB,QAAA4mC,qBAAAjnC,IA4BAu8I,EAAAoB,iBAAA,SAAA39I,EAEAs2C,GAGA,OAAAA,EACA,UAAA34B,EAAAtd,QAAA,gBAKA,IAAAu9I,EAAArB,EAAAmB,WAAApnG,GAGA,IAFAt2C,IAAA49I,EAAA,EAEArB,EAAAmB,WAAA19I,IAAA49I,GACA59I,GAAAs2C,GAAAimG,EAAAmB,WAAA19I,GAAA49I,EAIA,OAAA59I,GAMAu8I,EAAAW,iBAAA,SAAApoG,EAAA+N,EAEA7kC,GACA,IAAAmiC,EAAA9/C,QAAAonD,mBAAA5E,GACA,UAAAtC,EAAAlgD,QAAA,wBAGA,IAAAw9I,EAAA/oG,EAAApL,WAAA,EAAAmZ,EACA7kC,EAAAgX,WAAA6oH,EAAA,GACA,IAAAC,EAAAvB,EAAAoB,iBAAAE,EAAAtB,EAAAwB,gBACA//H,EAAAgX,WAAA8oH,EAAA,IACA,IAAAE,EAAA,IAAAzgI,EAAAld,QAIA,GAHA29I,EAAAhpH,WAAAunH,EAAA0B,uBAAA,IACAjgI,EAAAiB,IAAA++H,GAEA,KAAAhgI,EAAAgC,UAEA,UAAAugC,EAAAlgD,QAAA,iCAAA2d,EAAAgC,YAMAu8H,EAAAe,oBAAA,SAAA73H,EAAAzH,GACAA,EAAAgX,WAAAvP,EAAAwzB,mBAAA,GACA,IAAA6kG,EAAAvB,EAAAoB,iBAAAl4H,EAAAwzB,mBAAAsjG,EAAA2B,mBAGA,GAFAlgI,EAAAgX,WAAA8oH,EAAA,IAEA,KAAA9/H,EAAAgC,UAEA,UAAAugC,EAAAlgD,QAAA,iCAAA2d,EAAAgC,YAKAu8H,EAAAkB,QAAA,SAAAz9I,GAGA,aAAAA,GAGAu8I,EAAAS,oBAAA,SAAAn+H,GAGA,QAAAle,EAAA,EAAmBA,EAAAke,EAAAM,WAAA,IAA2Bxe,EAAA,CAC9C,IAAAggB,GAAAhgB,EAAA,KAEA47I,EAAAkB,QAAA5+H,EAAAC,IAAAne,EAAA,KACAke,EAAAq9H,UAAAv7I,EAAA,EAAAggB,GAIA47H,EAAAkB,QAAA5+H,EAAAC,IAAA,EAAAne,KACAke,EAAAq9H,UAAA,EAAAv7I,EAAAggB,KAMA47H,EAAAO,+BAAA,SAAAj+H,GACA,OAAAA,EAAAC,IAAA,EAAAD,EAAAO,YAAA,GACA,UAAAmhC,EAAAlgD,QAGAwe,EAAAq9H,UAAA,EAAAr9H,EAAAO,YAAA,MAGAm9H,EAAA4B,iCAAA,SAAAC,EAEAC,EAEAx/H,GACA,QAAAzd,EAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,IAAAm7I,EAAAkB,QAAA5+H,EAAAC,IAAAs/H,EAAAh9I,EAAAi9I,IACA,UAAA99F,EAAAlgD,QAGAwe,EAAAq9H,UAAAkC,EAAAh9I,EAAAi9I,EAAA,KAIA9B,EAAA+B,+BAAA,SAAAF,EAEAC,EAEAx/H,GACA,QAAAxd,EAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,IAAAk7I,EAAAkB,QAAA5+H,EAAAC,IAAAs/H,EAAAC,EAAAh9I,IACA,UAAAk/C,EAAAlgD,QAGAwe,EAAAq9H,UAAAkC,EAAAC,EAAAh9I,EAAA,KAIAk7I,EAAAgC,+BAAA,SAAAH,EAEAC,EAEAx/H,GACA,QAAAxd,EAAA,EAAmBA,EAAA,IAAOA,EAG1B,IAFA,IAAAm9I,EAAAjC,EAAAkC,4BAAAp9I,GAEAD,EAAA,EAAqBA,EAAA,IAAOA,EAC5Byd,EAAAq9H,UAAAkC,EAAAh9I,EAAAi9I,EAAAh9I,EAAAm9I,EAAAp9I,KAKAm7I,EAAAmC,8BAAA,SAAAN,EAEAC,EAEAx/H,GACA,QAAAxd,EAAA,EAAmBA,EAAA,IAAOA,EAG1B,IAFA,IAAAm9I,EAAAjC,EAAAoC,2BAAAt9I,GAEAD,EAAA,EAAqBA,EAAA,IAAOA,EAC5Byd,EAAAq9H,UAAAkC,EAAAh9I,EAAAi9I,EAAAh9I,EAAAm9I,EAAAp9I,KAMAm7I,EAAAM,4CAAA,SAAAh+H,GAEA,IAAA+/H,EAAArC,EAAAoC,2BAAA,GAAA/9I,OAEA27I,EAAAmC,8BAAA,IAAA7/H,GAEA09H,EAAAmC,8BAAA7/H,EAAAM,WAAAy/H,EAAA,EAAA//H,GAEA09H,EAAAmC,8BAAA,EAAA7/H,EAAAM,WAAAy/H,EAAA//H,GAIA09H,EAAA4B,iCAAA,EAAAU,EAAAhgI,GAEA09H,EAAA4B,iCAAAt/H,EAAAM,WAJA,EAIA0/H,EAAAhgI,GAEA09H,EAAA4B,iCAAA,EAAAt/H,EAAAM,WANA,EAMAN,GAIA09H,EAAA+B,+BAFA,EAEA,EAAAz/H,GAEA09H,EAAA+B,+BAAAz/H,EAAAO,YAJA,EAIA,IAAAP,GAEA09H,EAAA+B,+BANA,EAMAz/H,EAAAO,YANA,EAMAP,IAIA09H,EAAAQ,qCAAA,SAAAt3H,EAAA5G,GACA,KAAA4G,EAAAwzB,mBAAA,GAQA,IAHA,IAAAtmC,EAAA8S,EAAAwzB,mBAAA,EACAkkG,EAAAZ,EAAAuC,6CAAAnsI,GAEAhS,EAAA,EAAA2f,EAAA68H,EAAAv8I,OAAkDD,IAAA2f,EAAgB3f,IAAA,CAClE,IAAAU,EAAA87I,EAAAx8I,GAEA,GAAAU,GAAA,EACA,QAAA4F,EAAA,EAAuBA,IAAAqZ,EAAgBrZ,IAAA,CACvC,IAAA7F,EAAA+7I,EAAAl2I,GAEA7F,GAAA,GAAAm7I,EAAAkB,QAAA5+H,EAAAC,IAAA1d,EAAAC,KAIAk7I,EAAAgC,+BAAAn9I,EAAA,EAAAC,EAAA,EAAAwd,MAOA09H,EAAAoC,2BAAAn/I,MAAAqE,KAAA,CAAAoa,WAAApa,KAAA,iBAAAoa,WAAApa,KAAA,iBAAAoa,WAAApa,KAAA,iBAAAoa,WAAApa,KAAA,iBAAAoa,WAAApa,KAAA,iBAAAoa,WAAApa,KAAA,iBAAAoa,WAAApa,KAAA,mBACA04I,EAAAkC,4BAAAj/I,MAAAqE,KAAA,CAAAoa,WAAApa,KAAA,aAAAoa,WAAApa,KAAA,aAAAoa,WAAApa,KAAA,aAAAoa,WAAApa,KAAA,aAAAoa,WAAApa,KAAA,eAEA04I,EAAAuC,6CAAAt/I,MAAAqE,KAAA,CAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,uBAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,wBAAAoa,WAAApa,KAAA,yBAAAoa,WAAApa,KAAA,yBAAAoa,WAAApa,KAAA,yBAAAoa,WAAApa,KAAA,yBAAAoa,WAAApa,KAAA,yBAAAoa,WAAApa,KAAA,yBAAAoa,WAAApa,KAAA,0BAAAoa,WAAApa,KAAA,0BAAAoa,WAAApa,KAAA,0BAAAoa,WAAApa,KAAA,0BAAAoa,WAAApa,KAAA,0BAAAoa,WAAApa,KAAA,4BAEA04I,EAAAa,sBAAA59I,MAAAqE,KAAA,CAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,OAAAoa,WAAApa,KAAA,SAEA04I,EAAA2B,kBAAA,KAGA3B,EAAAwB,eAAA,KACAxB,EAAA0B,uBAAA,MACA1B,EAjaA,GAoaAz9I,EAAAuB,QAAAk8I,gCC5bAl9I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAA++I,EAEA,WACA,SAAAA,EAAAn5F,EAAAo5F,GACA//I,KAAA2mD,YACA3mD,KAAA+/I,uBAWA,OARAD,EAAAl/I,UAAAmmD,aAAA,WACA,OAAA/mD,KAAA2mD,WAGAm5F,EAAAl/I,UAAAqmD,wBAAA,WACA,OAAAjnD,KAAA+/I,sBAGAD,EAdA,GAiBAjgJ,EAAAuB,QAAA0+I,gCCvCA,IAAA//I,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA8lI,EAA0B/mI,EAAQ,IAElC+sD,EAA8B/sD,EAAQ,IAQtCkgJ,EAEA,SAAA/+I,GASA,SAAA++I,EAAA7lH,EAAAtS,GAKA,YAJA,IAAAsS,IACAA,EAAA,KAGAl5B,EAAAa,KAAA9B,KAAA,IAAA6sD,EAAAzrD,QAAAymB,GAAAsS,EAAAtS,IAAA7nB,KAGA,OAhBAD,EAAAigJ,EAAA/+I,GAgBA++I,EAjBA,CAkBCnZ,EAAA5sG,mBAEDp6B,EAAAmgJ,qDC9DA,IAAAjgJ,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAmiC,EAAmBpjC,EAAQ,IAE3B4nB,EAA0B5nB,EAAQ,GAElCkC,EAAkBlC,EAAQ,IAE1BmgJ,EAEA,SAAAh/I,GAGA,SAAAg/I,IACA,IAAA3tI,EAAArR,EAAAa,KAAA9B,YAQA,OANAsS,EAAA4tI,qBAAA,IAAA3/I,MAAA,GACA+R,EAAA6tI,sBAAA,IAAA5/I,MAAA,GACA+R,EAAA0hE,kBAAA,IAAAzzE,MAAA,GACA+R,EAAA4hE,mBAAA,IAAA3zE,MAAA,GACA+R,EAAAshE,UAAA,IAAArzE,MAAA+R,EAAA6tI,sBAAAx+I,OAAA,GACA2Q,EAAAwhE,WAAA,IAAAvzE,MAAA+R,EAAA6tI,sBAAAx+I,OAAA,GACA2Q,EA2GA,OAtHAvS,EAAAkgJ,EAAAh/I,GAcAg/I,EAAAr/I,UAAA60E,wBAAA,WACA,OAAAz1E,KAAAkgJ,sBAGAD,EAAAr/I,UAAA4yE,yBAAA,WACA,OAAAxzE,KAAAmgJ,uBAGAF,EAAAr/I,UAAAqzE,qBAAA,WACA,OAAAj0E,KAAAg0E,mBAGAisE,EAAAr/I,UAAAuzE,sBAAA,WACA,OAAAn0E,KAAAk0E,oBAGA+rE,EAAAr/I,UAAAizE,aAAA,WACA,OAAA7zE,KAAA4zE,WAGAqsE,EAAAr/I,UAAAmzE,cAAA,WACA,OAAA/zE,KAAA8zE,YAGAmsE,EAAAr/I,UAAAk1E,iBAAA,SAAAlsD,EAAAw2H,GACA,QAAAr/I,EAAA,EAAuBA,EAAAq/I,EAAAz+I,OAA+BZ,IACtD,GAAAmiC,EAAA9hC,QAAA8oB,qBAAAN,EAAAw2H,EAAAr/I,GAAAk/I,EAAAh6G,yBAAAg6G,EAAA/5G,iBACA,OAAAnlC,EAIA,UAAA2mB,EAAAtmB,SASA6+I,EAAAxwH,MAAA,SAAA1qB,GACA,OAAA/C,EAAAZ,QAAA0zB,IAAA,IAAA9V,WAAAja,KAGAk7I,EAAA1pE,UAAA,SAAAxxE,EAAAs7I,GAIA,IAHA,IAAA3sI,EAAA,EACA4sI,EAAAD,EAAA,GAEA3+I,EAAA,EAAmBA,EAAAqD,EAAApD,OAAkBD,IACrC2+I,EAAA3+I,GAAA4+I,IACAA,EAAAD,EAAA3+I,GACAgS,EAAAhS,GAIAqD,EAAA2O,MAGAusI,EAAAzpE,UAAA,SAAAzxE,EAAAs7I,GAIA,IAHA,IAAA3sI,EAAA,EACA4sI,EAAAD,EAAA,GAEA3+I,EAAA,EAAmBA,EAAAqD,EAAApD,OAAkBD,IACrC2+I,EAAA3+I,GAAA4+I,IACAA,EAAAD,EAAA3+I,GACAgS,EAAAhS,GAIAqD,EAAA2O,MAGAusI,EAAAvqE,gBAAA,SAAA9rD,GACA,IAAA22H,EAAA32H,EAAA,GAAAA,EAAA,GAEA42H,EAAAD,GADAA,EAAA32H,EAAA,GAAAA,EAAA,IAGA,GAAA42H,GAAAP,EAAAQ,0BAAAD,GAAAP,EAAAS,yBAAA,CAKA,IAHA,IAAAzxE,EAAA9mE,OAAAqsB,iBACAmsH,EAAAx4I,OAAAosB,iBAEAiM,EAAA,EAAA0uC,EAAAtlD,EAA6C4W,EAAA0uC,EAAAvtE,OAAwB6+B,IAAA,CACrE,IAAA9V,EAAAwkD,EAAA1uC,GAEA9V,EAAAi2H,IACAA,EAAAj2H,GAGAA,EAAAukD,IACAA,EAAAvkD,GAIA,OAAAi2H,EAAA,GAAA1xE,EAGA,UAGAgxE,EAAA/5G,iBAAA,GACA+5G,EAAAh6G,wBAAA,IACAg6G,EAAAQ,yBAAA,OACAR,EAAAS,yBAAA,QACAT,EAvHA,CAwHC/8G,EAAA9hC,SAEDvB,EAAAuB,QAAA6+I,gCChKA,IAAAlgJ,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAEA6/I,EAEA,SAAA3/I,GAGA,SAAA2/I,EAAA7/I,EAAA0zE,EAAAosE,GACA,IAAAvuI,EAAArR,EAAAa,KAAA9B,KAAAe,EAAA0zE,IAAAz0E,KAIA,OAFAsS,EAAAmd,MAAA,EACAnd,EAAAuuI,gBACAvuI,EAeA,OAtBAvS,EAAA6gJ,EAAA3/I,GAUA2/I,EAAAhgJ,UAAAgyE,iBAAA,WACA,OAAA5yE,KAAA6gJ,eAGAD,EAAAhgJ,UAAAi5C,SAAA,WACA,OAAA75C,KAAAyvB,OAGAmxH,EAAAhgJ,UAAA4xE,eAAA,WACAxyE,KAAAyvB,SAGAmxH,EAvBA,CAJsB9gJ,EAAQ,KA4B7BsB,SAEDvB,EAAAuB,QAAAw/I,gCC5DAxgJ,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAohB,EAAoBriB,EAAQ,GAE5Bs0I,EAEA,WACA,SAAAA,EAAArzI,EAAAkyE,EAAAvpE,EAAAC,EAAAmf,GACA9oB,KAAAe,QACAf,KAAAizE,WACAjzE,KAAAe,QACAf,KAAAizE,WACAjzE,KAAAwiB,aAAA,IAAAjiB,MACAP,KAAAwiB,aAAA1Z,KAAA,IAAAqZ,EAAA/gB,QAAAsI,EAAAof,IACA9oB,KAAAwiB,aAAA1Z,KAAA,IAAAqZ,EAAA/gB,QAAAuI,EAAAmf,IA4BA,OAzBAsrH,EAAAxzI,UAAAqgC,SAAA,WACA,OAAAjhC,KAAAe,OAGAqzI,EAAAxzI,UAAA6yE,YAAA,WACA,OAAAzzE,KAAAizE,UAGAmhE,EAAAxzI,UAAAmiB,gBAAA,WACA,OAAA/iB,KAAAwiB,cAGA4xH,EAAAxzI,UAAA2B,OAAA,SAAAuf,GACA,KAAAA,aAAAsyH,GACA,SAGA,IAAA/vI,EAAAyd,EACA,OAAA9hB,KAAAe,QAAAsD,EAAAtD,OAGAqzI,EAAAxzI,UAAA8B,SAAA,WACA,OAAA1C,KAAAe,OAGAqzI,EApCA,GAuCAv0I,EAAAuB,QAAAgzI,gCC/CAh0I,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAMA,IAAA+/I,EAEA,WACA,SAAAA,KA+EA,OA7EAA,EAAAlgJ,UAAAkgJ,SAAA,aAEAA,EAAAhsE,YAAA,SAAAtxC,EAAAu9G,EAAAC,GAGA,IAFA,IAAAl6I,EAAA,EAEA05B,EAAA,EAAAygH,EAAAz9G,EAAuChD,EAAAygH,EAAAt/I,OAAsB6+B,IAAA,CAE7D15B,GADAm6I,EAAAzgH,GAQA,IAJA,IAAAt6B,EAAA,EACAg7I,EAAA,EACAC,EAAA39G,EAAA7hC,OAEAy/I,EAAA,EAAqBA,EAAAD,EAAA,EAAoBC,IAAA,CACzC,IAAAC,OAAA,EAEA,IAAAA,EAAA,EAAAH,GAAA,GAAAE,EAAgDC,EAAA79G,EAAA49G,GAAwBC,IAAAH,KAAA,GAAAE,GAAA,CACxE,IAAAE,EAAAR,EAAAS,QAAAz6I,EAAAu6I,EAAA,EAAAF,EAAAC,EAAA,GAMA,GAJAJ,GAAA,IAAAE,GAAAp6I,EAAAu6I,GAAAF,EAAAC,EAAA,IAAAD,EAAAC,EAAA,IACAE,GAAAR,EAAAS,QAAAz6I,EAAAu6I,GAAAF,EAAAC,GAAAD,EAAAC,EAAA,IAGAD,EAAAC,EAAA,KAGA,IAFA,IAAAI,EAAA,EAEAC,EAAA36I,EAAAu6I,GAAAF,EAAAC,EAAA,GAAoEK,EAAAV,EAAuBU,IAC3FD,GAAAV,EAAAS,QAAAz6I,EAAAu6I,EAAAI,EAAA,EAAAN,EAAAC,EAAA,GAGAE,GAAAE,GAAAL,EAAA,EAAAC,QACSt6I,EAAAu6I,EAAAN,GACTO,IAGAp7I,GAAAo7I,EAGAx6I,GAAAu6I,EAGA,OAAAn7I,GAGA46I,EAAAS,QAAA,SAAAz6I,EAAAqxC,GACA,IAAAupG,EACAC,EAEA76I,EAAAqxC,KACAwpG,EAAAxpG,EACAupG,EAAA56I,EAAAqxC,IAEAwpG,EAAA76I,EAAAqxC,EACAupG,EAAAvpG,GAMA,IAHA,IAAAjyC,EAAA,EACA8B,EAAA,EAEAtG,EAAAoF,EAAmBpF,EAAAggJ,EAAchgJ,IACjCwE,GAAAxE,EAEAsG,GAAA25I,IACAz7I,GAAA8B,EACAA,KAIA,KAAAA,GAAA25I,GACAz7I,GAAA8B,EACAA,IAGA,OAAA9B,GAGA46I,EAhFA,GAmFAjhJ,EAAAuB,QAAA0/I,gCC7EA,IAAA/gJ,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAiiC,EAAsBljC,EAAQ,GAE9B0nB,EAAuB1nB,EAAQ,GAE/BojC,EAAmBpjC,EAAQ,IAE3BysD,EAAoBzsD,EAAQ,KAE5B8hJ,EAAmB9hJ,EAAQ,KAE3B4nB,EAA0B5nB,EAAQ,GAUlC+hJ,EAEA,SAAA5gJ,GAGA,SAAA4gJ,EAAAh6H,GACA,IAAAvV,EAAArR,EAAAa,KAAA9B,YAEAipD,EAAA,MAAAphC,EAAA,KAAAA,EAAAhI,IAAA2H,EAAApmB,QAAA8nD,kBACAF,EAAA,GAmBA,OAjBA,MAAAC,IACAA,EAAA7hD,QAAA47B,EAAA5hC,QAAAqkC,SAAA,GACAujB,EAAAlgD,KAAA,IAAAyjD,EAAAnrD,SAGA6nD,EAAA7hD,QAAA47B,EAAA5hC,QAAAioD,QAAA,GACAL,EAAAlgD,KAAA,IAAA84I,EAAAxgJ,UAKA,IAAA4nD,EAAArnD,SACAqnD,EAAAlgD,KAAA,IAAAyjD,EAAAnrD,SACA4nD,EAAAlgD,KAAA,IAAA84I,EAAAxgJ,UAGAkR,EAAA02C,UACA12C,EAuBA,OAhDAvS,EAAA8hJ,EAAA5gJ,GA4BA4gJ,EAAAjhJ,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAAuH,GACA,QAAA2Y,EAAA,EAAAI,EAAA5gC,KAAAgpD,QAAuCxoB,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACvD,IAAAtG,EAAA0G,EAAAJ,GAEA,IACA,OAAAtG,EAAA1Q,UAAAV,EAAAxI,EAAAuH,GACO,MAAAoM,KAIP,UAAAvM,EAAAtmB,SAGAygJ,EAAAjhJ,UAAA2nB,MAAA,WACA,QAAAiY,EAAA,EAAAI,EAAA5gC,KAAAgpD,QAAuCxoB,EAAAI,EAAAj/B,OAAgB6+B,IAAA,CACvDI,EAAAJ,GACAjY,UAIAs5H,EAjDA,CAkDC3+G,EAAA9hC,SAEDvB,EAAAuB,QAAAygJ,gCCxGAzhJ,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAo3E,EAAqBr4E,EAAQ,IAE7BgiJ,EAAgChiJ,EAAQ,KAExCiiJ,EAAgCjiJ,EAAQ,KAExCkiJ,EAEA,WACA,SAAAA,KAeA,OAbAA,EAAAx4H,UAAA,SAAAV,EAAAxI,EAAAkkB,GACA,IAAAy9G,EAAA9pE,EAAA/2E,QAAA0iC,iBAAAxjB,EAAAkkB,GAAA,EAAAxkC,KAAAkiJ,wBAAA,IAAA3hJ,MAAAP,KAAAkiJ,wBAAAvgJ,QAAA6J,KAAA,IAEA,IAEA,OADA,IAAAs2I,EAAA1gJ,SACAooB,UAAAV,EAAAxI,EAAA2hI,GACK,MAAAhuH,GAEL,OADA,IAAA8tH,EAAA3gJ,SACAooB,UAAAV,EAAAxI,EAAA2hI,KAIAD,EAAAE,wBAAA,QACAF,EAhBA,GAmBAniJ,EAAAuB,QAAA4gJ,gCC/BA5hJ,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAiiC,EAAsBljC,EAAQ,GAE9Bq4E,EAAqBr4E,EAAQ,IAE7BmjC,EAAenjC,EAAQ,IAEvBqiB,EAAoBriB,EAAQ,GAE5B2nB,EAA2B3nB,EAAQ,IAEnC4nB,EAA0B5nB,EAAQ,GAMlCqiJ,EAEA,WACA,SAAAA,IACAniJ,KAAAoiJ,sBAAA,4BACApiJ,KAAAo4E,qBAAA,UACAp4E,KAAAqjC,sBAAA,GAmJA,OAhJA8+G,EAAAvhJ,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAA2hI,GACA,IAAAvtI,EAAA1U,KAAAqjC,sBACA15B,EAAA3J,KAAAskC,aAAAhkB,EAAA2hI,EAAAvtI,GACA+vB,EAAA/vB,EAAA9R,WACAy/I,EAAAF,EAAAG,qBAAA79G,GACAjiB,EAAA,KAAAL,EAAA/gB,SAAA6gJ,EAAA,GAAAA,EAAA,MAAAn5H,GAAA,IAAA3G,EAAA/gB,QAAAuI,EAAAmf,IACAsc,EAAA,IAAAnC,EAAA7hC,QAAAqjC,EAAA,OAAAjiB,EAAAwgB,EAAA5hC,QAAAikC,mBAAA,IAAAvyB,MAAAoyB,WAMA,OAJA,MAAAm9G,GACAj9G,EAAAhiB,eAAAi/H,GAGAj9G,GAGA+8G,EAAAvhJ,UAAA0jC,aAAA,SAAAhkB,EAAAsjB,EAAAa,GACA,IAAA7a,EAAA5pB,KAAAo4E,qBACAxuD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAKA,IAJA,IAAAjgB,EAAA2W,EAAAS,UACAyjB,EAAAZ,EAAA,GACAy0C,EAAA,EAEAl2E,EAAA,EAAmBA,EAAA,GAAAqiC,EAAA76B,EAA0BxH,IAAA,CAC7C,IAAAkkC,EAAA8xC,EAAA/2E,QAAA+kC,YAAA7lB,EAAAsJ,EAAA4a,EAAA2zC,EAAA/2E,QAAAkiC,kBACAmB,GAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAAs9B,EAAA,IAEA,QAAA7F,EAAA,EAAA0uC,EAAAtlD,EAA6C4W,EAAA0uC,EAAAvtE,OAAwB6+B,IAAA,CAErEgE,GADA0qC,EAAA1uC,GAIA6F,GAAA,KACAgyC,GAAA,KAAAl2E,GAGA,IAAAA,IAEAqiC,EAAAlkB,EAAAgV,WAAAkP,GACAA,EAAAlkB,EAAAmV,aAAA+O,IAIA,OAAAC,EAAA9iC,OACA,UAAA+lB,EAAAtmB,QAGA,IAAAsxE,EAAA1yE,KAAAuiJ,oBAAAlqE,GAEA,GAAA8pE,EAAAK,kBAAA/9G,EAAA7hC,cAAA8vE,EACA,UAAAhrD,EAAAtmB,QAGA,OAAAojC,GAGA29G,EAAAK,kBAAA,SAAAxyH,GAIA,IAHA,IAAAruB,EAAAquB,EAAAruB,OACAmzB,EAAA,EAEApzB,EAAAC,EAAA,EAA4BD,GAAA,EAAQA,GAAA,EACpCozB,GAAA9E,EAAAxc,OAAA9R,GAAAqH,WAAA,OAAAA,WAAA,GAGA+rB,GAAA,EAEA,IAAApzB,EAAAC,EAAA,EAA4BD,GAAA,EAAQA,GAAA,EACpCozB,GAAA9E,EAAAxc,OAAA9R,GAAAqH,WAAA,OAAAA,WAAA,GAIA,OADA+rB,GAAA,GACA,IAGAqtH,EAAAvhJ,UAAA2hJ,oBAAA,SAAAlqE,GACA,QAAAn4E,EAAA,EAAmBA,EAAA,GAAQA,IAC3B,GAAAm4E,IAAAr4E,KAAAoiJ,sBAAAliJ,GACA,OAAAA,EAIA,UAAAwnB,EAAAtmB,SAGA+gJ,EAAAG,qBAAA,SAAAG,GACA,OAAAA,EAAA9gJ,OACA,YAGA,IAAAZ,EAAAohJ,EAAAO,sBAAAD,GAEA,aAAA1hJ,EACA,KAGA,IAAAoiB,IAAA,EAAAsE,EAAArmB,QAAAuhJ,gBAAA5hJ,MAGAohJ,EAAAO,sBAAA,SAAAD,GACA,IAAAG,EAEA,OAAAH,EAAAjvI,OAAA,IACA,QACAovI,EAAA,OACA,MAEA,QACAA,EAAA,IACA,MAEA,QAEA,OAAAH,GACA,YAEA,YAEA,YAEA,aAEA,YACA,aAIAG,EAAA,GACA,MAEA,QACAA,EAAA,GAIA,IAAAC,EAAAt6I,SAAAk6I,EAAA5lI,UAAA,IAEAimI,EAAAD,EAAA,IAGA,OAAAD,GAJAC,EAAA,KAAAjgJ,WAIA,KAFAkgJ,EAAA,OAAAA,IAAAlgJ,aAKAu/I,EAvJA,GA0JAtiJ,EAAAuB,QAAA+gJ,gCChLA/hJ,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAiiC,EAAsBljC,EAAQ,GAE9Bq4E,EAAqBr4E,EAAQ,IAE7BmjC,EAAenjC,EAAQ,IAEvBqiB,EAAoBriB,EAAQ,GAE5B2nB,EAA2B3nB,EAAQ,IAEnC4nB,EAA0B5nB,EAAQ,GAMlCijJ,EAEA,WACA,SAAAA,IACA/iJ,KAAAo4E,qBAAA,UACAp4E,KAAAqjC,sBAAA,GAmEA,OAhEA0/G,EAAAniJ,UAAA4oB,UAAA,SAAAV,EAAAxI,EAAA2hI,GACA,IAAAvtI,EAAA1U,KAAAqjC,sBACA15B,EAAA3J,KAAAskC,aAAAhkB,EAAA2hI,EAAAvtI,GACA+vB,EAAA/vB,EAAA9R,WACAy/I,EAAAU,EAAAT,qBAAA79G,GACAjiB,EAAA,KAAAL,EAAA/gB,SAAA6gJ,EAAA,GAAAA,EAAA,MAAAn5H,GAAA,IAAA3G,EAAA/gB,QAAAuI,EAAAmf,IACAsc,EAAA,IAAAnC,EAAA7hC,QAAAqjC,EAAA,OAAAjiB,EAAAwgB,EAAA5hC,QAAAikC,mBAAA,IAAAvyB,MAAAoyB,WAMA,OAJA,MAAAm9G,GACAj9G,EAAAhiB,eAAAi/H,GAGAj9G,GAGA29G,EAAAniJ,UAAA0jC,aAAA,SAAAhkB,EAAAsjB,EAAAa,GACA,IAAA7a,EAAA5pB,KAAAo4E,qBACAxuD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAKA,IAJA,IAAAjgB,EAAA2W,EAAAS,UACAyjB,EAAAZ,EAAA,GACAo/G,EAAA,EAEA7gJ,EAAA,EAAmBA,EAAA,GAAAqiC,EAAA76B,EAA0BxH,IAAA,CAC7C,IAAAkkC,EAAA8xC,EAAA/2E,QAAA+kC,YAAA7lB,EAAAsJ,EAAA4a,EAAA2zC,EAAA/2E,QAAAkiC,kBACAmB,GAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAAs9B,EAAA,IAEA,QAAA7F,EAAA,EAAA0uC,EAAAtlD,EAA6C4W,EAAA0uC,EAAAvtE,OAAwB6+B,IAAA,CAErEgE,GADA0qC,EAAA1uC,GAIA6F,GAAA,KACA28G,GAAA,KAAA7gJ,GAGA,IAAAA,IAEAqiC,EAAAlkB,EAAAgV,WAAAkP,GACAA,EAAAlkB,EAAAmV,aAAA+O,IAIA,OAAAC,EAAA9iC,OACA,UAAA+lB,EAAAtmB,QAGA,GAAAmH,SAAAk8B,EAAA7hC,YAAA,IAAAogJ,EACA,UAAAt7H,EAAAtmB,QAGA,OAAAojC,GAGAu+G,EAAAT,qBAAA,SAAAG,GACA,WAAAA,EAAA9gJ,OACA,KAGA,IAAAwhB,IAAA,EAAAsE,EAAArmB,QAAA6hJ,aAAA16I,SAAAk6I,OAGAM,EAtEA,GAyEAljJ,EAAAuB,QAAA2hJ,gCC/FA,IAAAhjJ,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAAiiC,EAAsBljC,EAAQ,GAE9Bq4E,EAAqBr4E,EAAQ,IAQ7BojJ,EAEA,SAAAjiJ,GAGA,SAAAiiJ,IACA,IAAA5wI,EAAArR,EAAAa,KAAA9B,YAGA,OADAsS,EAAA8lE,qBAAA,UACA9lE,EA6CA,OAnDAvS,EAAAmjJ,EAAAjiJ,GASAiiJ,EAAAtiJ,UAAA0jC,aAAA,SAAAhkB,EAAAsjB,EAAAa,GACA,IAAA7a,EAAA5pB,KAAAo4E,qBACAxuD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAIA,IAHA,IAAAjgB,EAAA2W,EAAAS,UACAyjB,EAAAZ,EAAA,GAEAzhC,EAAA,EAAmBA,EAAA,GAAAqiC,EAAA76B,EAA0BxH,IAAA,CAC7C,IAAAkkC,EAAA8xC,EAAA/2E,QAAA+kC,YAAA7lB,EAAAsJ,EAAA4a,EAAA2zC,EAAA/2E,QAAAmiC,YACAkB,GAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAAs9B,GAEA,QAAA7F,EAAA,EAAA0uC,EAAAtlD,EAA6C4W,EAAA0uC,EAAAvtE,OAAwB6+B,IAAA,CAErEgE,GADA0qC,EAAA1uC,IAMAgE,EADA2zC,EAAA/2E,QAAA0iC,iBAAAxjB,EAAAkkB,GAAA,EAAA2zC,EAAA/2E,QAAAklC,eAAA,IAAA/lC,MAAA43E,EAAA/2E,QAAAklC,eAAA3kC,QAAA6J,KAAA,IACA,GAEA,IAAArJ,EAAA,EAAmBA,EAAA,GAAAqiC,EAAA76B,EAA0BxH,IAAA,CAC7CkkC,EAAA8xC,EAAA/2E,QAAA+kC,YAAA7lB,EAAAsJ,EAAA4a,EAAA2zC,EAAA/2E,QAAAmiC,YACAkB,GAAA/8B,OAAAgD,aAAA,IAAA3B,WAAA,GAAAs9B,GAEA,QAAAzF,EAAA,EAAA23C,EAAA3uD,EAA6CgX,EAAA23C,EAAA52E,OAAwBi/B,IAAA,CAErE4D,GADA+zC,EAAA33C,IAKA,OACA4D,YACAC,iBAIAy+G,EAAAtiJ,UAAAoiB,iBAAA,WACA,OAAAggB,EAAA5hC,QAAAioD,OAGA65F,EApDA,CAqDC/qE,EAAA/2E,SAEDvB,EAAAuB,QAAA8hJ,gCChHA,IAAAnjJ,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAGA,IAAA8lI,EAA0B/mI,EAAQ,IAElCuqD,EAA0BvqD,EAAQ,KAElCqjJ,EAEA,SAAAliJ,GAGA,SAAAkiJ,EAAAt7H,EAAAsS,QACA,IAAAtS,IACAA,EAAA,WAGA,IAAAsS,IACAA,EAAA,KAGA,IAEAD,EAAA,IAAAmwB,EAAAjpD,QAGA,OAFA84B,EAAAu+C,SAAA5wD,GACA5mB,EAAAa,KAAA9B,KAAAk6B,EAAAC,IAAAn6B,KAaA,OA5BAD,EAAAojJ,EAAAliJ,GAwBAkiJ,EAAAviJ,UAAAm9B,aAAA,SAAAF,GACA,OAAA79B,KAAAk6B,OAAAy+C,gBAAA96C,IAGAslH,EA7BA,CA8BCtc,EAAA5sG,mBAEDp6B,EAAAsjJ,yDCrDA/iJ,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAaA,IAAAirD,EAAqBlsD,EAAQ,KAE7BkjC,EAAsBljC,EAAQ,GAE9B4e,EAAiC5e,EAAQ,GAWzC0qD,EAEA,WACA,SAAAA,KAmEA,OAvDAA,EAAA5pD,UAAA+7C,OAAA,SAAAy8B,EAAA32D,EAAA7D,EAEAC,EAEAgJ,GACA,IAAAu7H,EAEA,OAAA3gI,GAaA,KAAAugB,EAAA5hC,QAAAq0C,QACA2tG,EAAA,IAAAp3F,EAAA5qD,QACA,MA0BA,QACA,UAAAsd,EAAAtd,QAAA,mCAAAqhB,GAGA,OAAA2gI,EAAAzmG,OAAAy8B,EAAA32D,EAAA7D,EAAAC,EAAAgJ,IAGA2iC,EApEA,GAuEA3qD,EAAAuB,QAAAopD,gCCtGA,IAAAzqD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIA,IAAAwd,EAAeze,EAAQ,IAEvBsqD,EAAwBtqD,EAAQ,IAEhCqqD,EAAgCrqD,EAAQ,IAExC4e,EAAiC5e,EAAQ,GAazC4qD,EAEA,SAAAzpD,GAGA,SAAAypD,EAAA24F,EAAAC,EAEAC,EAEA5iI,EAEAC,EAEAhC,EAEAC,EAEA2kI,GACA,IAAAlxI,EAAArR,EAAAa,KAAA9B,KAAA4e,EAAAC,IAAA7e,KAQA,GANAsS,EAAA+wI,UACA/wI,EAAAgxI,YACAhxI,EAAAixI,aACAjxI,EAAAqO,OACArO,EAAAsO,MAEAD,EAAA/B,EAAA0kI,GAAA1iI,EAAA/B,EAAA0kI,EACA,UAAA7kI,EAAAtd,QAAA,kDAOA,OAJAoiJ,GACAlxI,EAAAkxI,kBAAA5kI,EAAAC,GAGAvM,EAqIA,OApKAvS,EAAA2qD,EAAAzpD,GAoCAypD,EAAA9pD,UAAA2f,OAAA,SAAAne,EAEAke,GACA,GAAAle,EAAA,GAAAA,GAAApC,KAAAmgB,YACA,UAAAzB,EAAAtd,QAAA,uCAAAgB,GAGA,IAAAwc,EAAA5e,KAAAkgB,YAEA,OAAAI,QAAApb,IAAAob,KAAA3e,OAAAid,KACA0B,EAAA,IAAAof,kBAAA9gB,IAGA,IAAA1W,GAAA9F,EAAApC,KAAA4gB,KAAA5gB,KAAAsjJ,UAAAtjJ,KAAA2gB,KAEA,OADApC,EAAAnd,QAAAqR,UAAAzS,KAAAqjJ,QAAAn7I,EAAAoY,EAAA,EAAA1B,GACA0B,GAKAoqC,EAAA9pD,UAAA4+B,UAAA,WACA,IAAA5gB,EAAA5e,KAAAkgB,WACArB,EAAA7e,KAAAmgB,YAGA,GAAAvB,IAAA5e,KAAAsjJ,WAAAzkI,IAAA7e,KAAAujJ,WACA,OAAAvjJ,KAAAqjJ,QAGA,IAAAhiD,EAAAziF,EAAAC,EACAe,EAAA,IAAA8f,kBAAA2hE,GACAoiD,EAAAzjJ,KAAA4gB,IAAA5gB,KAAAsjJ,UAAAtjJ,KAAA2gB,KAEA,GAAA/B,IAAA5e,KAAAsjJ,UAEA,OADA/kI,EAAAnd,QAAAqR,UAAAzS,KAAAqjJ,QAAAI,EAAA7jI,EAAA,EAAAyhF,GACAzhF,EAIA,QAAAxd,EAAA,EAAmBA,EAAAyc,EAAYzc,IAAA,CAC/B,IAAAshJ,EAAAthJ,EAAAwc,EACAL,EAAAnd,QAAAqR,UAAAzS,KAAAqjJ,QAAAI,EAAA7jI,EAAA8jI,EAAA9kI,GACA6kI,GAAAzjJ,KAAAsjJ,UAGA,OAAA1jI,GAKA8qC,EAAA9pD,UAAA++B,gBAAA,WACA,UAKA+qB,EAAA9pD,UAAAg/B,KAAA,SAAAjf,EAEAC,EAEAhC,EAEAC,GAGA,WAAA6rC,EAAA1qD,KAAAqjJ,QAAArjJ,KAAAsjJ,UAAAtjJ,KAAAujJ,WAAAvjJ,KAAA2gB,OAAA3gB,KAAA4gB,MAAAhC,EAAAC,GAAA,IAGA6rC,EAAA9pD,UAAA+iJ,gBAAA,WAOA,IANA,IAAA/kI,EAAA5e,KAAAkgB,WAAAwqC,EAAAk5F,uBACA/kI,EAAA7e,KAAAmgB,YAAAuqC,EAAAk5F,uBACAC,EAAA,IAAA7kI,WAAAJ,EAAAC,GACAilI,EAAA9jJ,KAAAqjJ,QACAI,EAAAzjJ,KAAA4gB,IAAA5gB,KAAAsjJ,UAAAtjJ,KAAA2gB,KAEAve,EAAA,EAAmBA,EAAAyc,EAAYzc,IAAA,CAG/B,IAFA,IAAAshJ,EAAAthJ,EAAAwc,EAEAzc,EAAA,EAAqBA,EAAAyc,EAAWzc,IAAA,CAChC,IAAAs7D,EAAA,IAAAqmF,EAAAL,EAAAthJ,EAAAuoD,EAAAk5F,wBACAC,EAAAH,EAAAvhJ,GAAA,iBAAAs7D,EAGAgmF,GAAAzjJ,KAAAsjJ,UAAA54F,EAAAk5F,uBAGA,OAAAC,GAOAn5F,EAAA9pD,UAAAmjJ,kBAAA,WACA,OAAA/jJ,KAAAkgB,WAAAwqC,EAAAk5F,wBAOAl5F,EAAA9pD,UAAAojJ,mBAAA,WACA,OAAAhkJ,KAAAmgB,YAAAuqC,EAAAk5F,wBAGAl5F,EAAA9pD,UAAA4iJ,kBAAA,SAAA5kI,EAEAC,GAKA,IAFA,IAAAwkI,EAAArjJ,KAAAqjJ,QAEAjhJ,EAAA,EAAA6hJ,EAAAjkJ,KAAA4gB,IAAA5gB,KAAAsjJ,UAAAtjJ,KAAA2gB,KAAqEve,EAAAyc,EAAYzc,IAAA6hJ,GAAAjkJ,KAAAsjJ,UAGjF,IAFA,IAAA36H,EAAAs7H,EAAArlI,EAAA,EAEAggC,EAAAqlG,EAAAnlG,EAAAmlG,EAAArlI,EAAA,EAAwDggC,EAAAj2B,EAAai2B,IAAAE,IAAA,CACrE,IAAAv7C,EAAA8/I,EAAAzkG,GACAykG,EAAAzkG,GAAAykG,EAAAvkG,GACAukG,EAAAvkG,GAAAv7C,IAKAmnD,EAAA9pD,UAAAi/B,OAAA,WACA,WAAAsqB,EAAA/oD,QAAApB,OAGA0qD,EAAAk5F,uBAAA,EACAl5F,EArKA,CAsKCN,EAAAhpD,SAEDvB,EAAAuB,QAAAspD,gCC5NA,IAAA3qD,EAAAC,WAAAD,WAAA,WACA,IAAAE,EAAA,SAAAC,EAAAC,GAWA,OAVAF,EAAAG,OAAAC,gBAAA,CACAC,UAAA,cACKC,OAAA,SAAAL,EAAAC,GACLD,EAAAI,UAAAH,IACK,SAAAD,EAAAC,GACL,QAAAK,KAAAL,EACAA,EAAAM,eAAAD,KAAAN,EAAAM,GAAAL,EAAAK,MAIAN,EAAAC,IAGA,gBAAAD,EAAAC,GAGA,SAAAO,IACAV,KAAAW,YAAAT,EAHAD,EAAAC,EAAAC,GAMAD,EAAAU,UAAA,OAAAT,EAAAC,OAAAS,OAAAV,IAAAO,EAAAE,UAAAT,EAAAS,UAAA,IAAAF,IAtBA,GA0BAN,OAAAU,eAAAjB,EAAA,cACAkB,OAAA,IAIAjB,EAAQ,IAGR,IAAAqqD,EAAgCrqD,EAAQ,IAExCsqD,EAAwBtqD,EAAQ,IAEhCye,EAAeze,EAAQ,IAEvB4e,EAAiC5e,EAAQ,GAUzC8qD,EAEA,SAAA3pD,GAGA,SAAA2pD,EAAAsX,EAAAtjD,EAEAC,EAEAykI,EAEAC,EAEA5iI,EAEAC,GAGA,IAAAtO,EAAArR,EAAAa,KAAA9B,KAAA4e,EAAAC,IAAA7e,KAOA,GALAsS,EAAAgxI,YACAhxI,EAAAixI,aACAjxI,EAAAqO,OACArO,EAAAsO,MAEA,IAAAshD,EAAAgiF,kBAAA,CAKA,IAHA,IAAA39I,EAAAqY,EAAAC,EACAslI,EAAA,IAAAzkH,kBAAAn5B,GAEA2B,EAAA,EAA0BA,EAAA3B,EAAe2B,IAAA,CACzC,IAAAw7D,EAAAxB,EAAAh6D,GACAiwC,EAAAurB,GAAA,OAEA0gF,EAAA1gF,GAAA,MAEAvjE,EAAA,IAAAujE,EAGAygF,EAAAj8I,IAEAiwC,EAAAisG,EAAAjkJ,GAAA,MAGAmS,EAAA4vD,WAAAiiF,OAEA7xI,EAAA4vD,aAmBA,QAhBAh9D,IAAAo+I,IACAhxI,EAAAgxI,UAAA1kI,QAGA1Z,IAAAq+I,IACAjxI,EAAAixI,WAAA1kI,QAGA3Z,IAAAyb,IACArO,EAAAqO,KAAA,QAGAzb,IAAA0b,IACAtO,EAAAsO,IAAA,GAGAtO,EAAAqO,KAAA/B,EAAAtM,EAAAgxI,WAAAhxI,EAAAsO,IAAA/B,EAAAvM,EAAAixI,WACA,UAAA7kI,EAAAtd,QAAA,kDAGA,OAAAkR,EA6EA,OA/IAvS,EAAA6qD,EAAA3pD,GAuEA2pD,EAAAhqD,UAAA2f,OAAA,SAAAne,EAEAke,GACA,GAAAle,EAAA,GAAAA,GAAApC,KAAAmgB,YACA,UAAAzB,EAAAtd,QAAA,uCAAAgB,GAGA,IAAAwc,EAAA5e,KAAAkgB,YAEA,OAAAI,QAAApb,IAAAob,KAAA3e,OAAAid,KACA0B,EAAA,IAAAof,kBAAA9gB,IAGA,IAAA1W,GAAA9F,EAAApC,KAAA4gB,KAAA5gB,KAAAsjJ,UAAAtjJ,KAAA2gB,KAEA,OADApC,EAAAnd,QAAAqR,UAAAzS,KAAAkiE,WAAAh6D,EAAAoY,EAAA,EAAA1B,GACA0B,GAKAsqC,EAAAhqD,UAAA4+B,UAAA,WACA,IAAA5gB,EAAA5e,KAAAkgB,WACArB,EAAA7e,KAAAmgB,YAGA,GAAAvB,IAAA5e,KAAAsjJ,WAAAzkI,IAAA7e,KAAAujJ,WACA,OAAAvjJ,KAAAkiE,WAGA,IAAAm/B,EAAAziF,EAAAC,EACAe,EAAA,IAAA8f,kBAAA2hE,GACAoiD,EAAAzjJ,KAAA4gB,IAAA5gB,KAAAsjJ,UAAAtjJ,KAAA2gB,KAEA,GAAA/B,IAAA5e,KAAAsjJ,UAEA,OADA/kI,EAAAnd,QAAAqR,UAAAzS,KAAAkiE,WAAAuhF,EAAA7jI,EAAA,EAAAyhF,GACAzhF,EAIA,QAAAxd,EAAA,EAAmBA,EAAAyc,EAAYzc,IAAA,CAC/B,IAAAshJ,EAAAthJ,EAAAwc,EACAL,EAAAnd,QAAAqR,UAAAzS,KAAAkiE,WAAAuhF,EAAA7jI,EAAA8jI,EAAA9kI,GACA6kI,GAAAzjJ,KAAAsjJ,UAGA,OAAA1jI,GAKAgrC,EAAAhqD,UAAA++B,gBAAA,WACA,UAKAirB,EAAAhqD,UAAAg/B,KAAA,SAAAjf,EAEAC,EAEAhC,EAEAC,GAGA,WAAA+rC,EAAA5qD,KAAAkiE,WAAAtjD,EAAAC,EAAA7e,KAAAsjJ,UAAAtjJ,KAAAujJ,WAAAvjJ,KAAA2gB,OAAA3gB,KAAA4gB,QAGAgqC,EAAAhqD,UAAAi/B,OAAA,WACA,WAAAsqB,EAAA/oD,QAAApB,OAGA4qD,EAhJA,CAiJCR,EAAAhpD,SAEDvB,EAAAuB,QAAAwpD","file":"static/js/2.7aa23f62.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar NotFoundException =\n/** @class */\nfunction (_super) {\n  __extends(NotFoundException, _super);\n\n  function NotFoundException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return NotFoundException;\n}(Exception_1.default);\n\nexports.default = NotFoundException;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar IllegalArgumentException =\n/** @class */\nfunction (_super) {\n  __extends(IllegalArgumentException, _super);\n\n  function IllegalArgumentException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return IllegalArgumentException;\n}(Exception_1.default);\n\nexports.default = IllegalArgumentException;","\"use strict\";\n/*\r\n * Direct port to TypeScript of ZXing by Adrian Toșcă\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/*namespace com.google.zxing {*/\n\n/**\r\n * Enumerates barcode formats known to this package. Please keep alphabetized.\r\n *\r\n * @author Sean Owen\r\n */\n\nvar BarcodeFormat;\n\n(function (BarcodeFormat) {\n  /** Aztec 2D barcode format. */\n  BarcodeFormat[BarcodeFormat[\"AZTEC\"] = 0] = \"AZTEC\";\n  /** CODABAR 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"CODABAR\"] = 1] = \"CODABAR\";\n  /** Code 39 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"CODE_39\"] = 2] = \"CODE_39\";\n  /** Code 93 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"CODE_93\"] = 3] = \"CODE_93\";\n  /** Code 128 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"CODE_128\"] = 4] = \"CODE_128\";\n  /** Data Matrix 2D barcode format. */\n\n  BarcodeFormat[BarcodeFormat[\"DATA_MATRIX\"] = 5] = \"DATA_MATRIX\";\n  /** EAN-8 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"EAN_8\"] = 6] = \"EAN_8\";\n  /** EAN-13 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"EAN_13\"] = 7] = \"EAN_13\";\n  /** ITF (Interleaved Two of Five) 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"ITF\"] = 8] = \"ITF\";\n  /** MaxiCode 2D barcode format. */\n\n  BarcodeFormat[BarcodeFormat[\"MAXICODE\"] = 9] = \"MAXICODE\";\n  /** PDF417 format. */\n\n  BarcodeFormat[BarcodeFormat[\"PDF_417\"] = 10] = \"PDF_417\";\n  /** QR Code 2D barcode format. */\n\n  BarcodeFormat[BarcodeFormat[\"QR_CODE\"] = 11] = \"QR_CODE\";\n  /** RSS 14 */\n\n  BarcodeFormat[BarcodeFormat[\"RSS_14\"] = 12] = \"RSS_14\";\n  /** RSS EXPANDED */\n\n  BarcodeFormat[BarcodeFormat[\"RSS_EXPANDED\"] = 13] = \"RSS_EXPANDED\";\n  /** UPC-A 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"UPC_A\"] = 14] = \"UPC_A\";\n  /** UPC-E 1D format. */\n\n  BarcodeFormat[BarcodeFormat[\"UPC_E\"] = 15] = \"UPC_E\";\n  /** UPC/EAN extension format. Not a stand-alone format. */\n\n  BarcodeFormat[BarcodeFormat[\"UPC_EAN_EXTENSION\"] = 16] = \"UPC_EAN_EXTENSION\";\n})(BarcodeFormat || (BarcodeFormat = {}));\n\nexports.default = BarcodeFormat;","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\nvar MathUtils_1 = require(\"./common/detector/MathUtils\");\n\nvar Float_1 = require(\"./util/Float\");\n/**\r\n * <p>Encapsulates a point of interest in an image containing a barcode. Typically, this\r\n * would be the location of a finder pattern or the corner of the barcode, for example.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar ResultPoint =\n/** @class */\nfunction () {\n  function ResultPoint(x\n  /*float*/\n  , y\n  /*float*/\n  ) {\n    this.x = x;\n    this.y = y;\n  }\n\n  ResultPoint.prototype.getX = function () {\n    return this.x;\n  };\n\n  ResultPoint.prototype.getY = function () {\n    return this.y;\n  };\n  /*@Override*/\n\n\n  ResultPoint.prototype.equals = function (other) {\n    if (other instanceof ResultPoint) {\n      var otherPoint = other;\n      return this.x === otherPoint.x && this.y === otherPoint.y;\n    }\n\n    return false;\n  };\n  /*@Override*/\n\n\n  ResultPoint.prototype.hashCode = function () {\n    return 31 * Float_1.default.floatToIntBits(this.x) + Float_1.default.floatToIntBits(this.y);\n  };\n  /*@Override*/\n\n\n  ResultPoint.prototype.toString = function () {\n    return '(' + this.x + ',' + this.y + ')';\n  };\n  /**\r\n   * Orders an array of three ResultPoints in an order [A,B,C] such that AB is less than AC\r\n   * and BC is less than AC, and the angle between BC and BA is less than 180 degrees.\r\n   *\r\n   * @param patterns array of three {@code ResultPoint} to order\r\n   */\n\n\n  ResultPoint.orderBestPatterns = function (patterns) {\n    // Find distances between pattern centers\n    var zeroOneDistance = this.distance(patterns[0], patterns[1]);\n    var oneTwoDistance = this.distance(patterns[1], patterns[2]);\n    var zeroTwoDistance = this.distance(patterns[0], patterns[2]);\n    var pointA;\n    var pointB;\n    var pointC; // Assume one closest to other two is B; A and C will just be guesses at first\n\n    if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n      pointB = patterns[0];\n      pointA = patterns[1];\n      pointC = patterns[2];\n    } else if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n      pointB = patterns[1];\n      pointA = patterns[0];\n      pointC = patterns[2];\n    } else {\n      pointB = patterns[2];\n      pointA = patterns[0];\n      pointC = patterns[1];\n    } // Use cross product to figure out whether A and C are correct or flipped.\n    // This asks whether BC x BA has a positive z component, which is the arrangement\n    // we want for A, B, C. If it's negative, then we've got it flipped around and\n    // should swap A and C.\n\n\n    if (this.crossProductZ(pointA, pointB, pointC) < 0.0) {\n      var temp = pointA;\n      pointA = pointC;\n      pointC = temp;\n    }\n\n    patterns[0] = pointA;\n    patterns[1] = pointB;\n    patterns[2] = pointC;\n  };\n  /**\r\n   * @param pattern1 first pattern\r\n   * @param pattern2 second pattern\r\n   * @return distance between two points\r\n   */\n\n\n  ResultPoint.distance = function (pattern1, pattern2) {\n    return MathUtils_1.default.distance(pattern1.x, pattern1.y, pattern2.x, pattern2.y);\n  };\n  /**\r\n   * Returns the z component of the cross product between vectors BC and BA.\r\n   */\n\n\n  ResultPoint.crossProductZ = function (pointA, pointB, pointC) {\n    var bX = pointB.x;\n    var bY = pointB.y;\n    return (pointC.x - bX) * (pointA.y - bY) - (pointC.y - bY) * (pointA.x - bX);\n  };\n\n  return ResultPoint;\n}();\n\nexports.default = ResultPoint;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\n/**\r\n * Encapsulates a type of hint that a caller may pass to a barcode reader to help it\r\n * more quickly or accurately decode it. It is up to implementations to decide what,\r\n * if anything, to do with the information that is supplied.\r\n *\r\n * @author Sean Owen\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n * @see Reader#decode(BinaryBitmap,java.util.Map)\r\n */\n\nvar DecodeHintType;\n\n(function (DecodeHintType) {\n  /**\r\n   * Unspecified, application-specific hint. Maps to an unspecified {@link Object}.\r\n   */\n  DecodeHintType[DecodeHintType[\"OTHER\"] = 0] = \"OTHER\";\n  /*(Object.class)*/\n\n  /**\r\n   * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;\r\n   * use {@link Boolean#TRUE}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"PURE_BARCODE\"] = 1] = \"PURE_BARCODE\";\n  /*(Void.class)*/\n\n  /**\r\n   * Image is known to be of one of a few possible formats.\r\n   * Maps to a {@link List} of {@link BarcodeFormat}s.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"POSSIBLE_FORMATS\"] = 2] = \"POSSIBLE_FORMATS\";\n  /*(List.class)*/\n\n  /**\r\n   * Spend more time to try to find a barcode; optimize for accuracy, not speed.\r\n   * Doesn't matter what it maps to; use {@link Boolean#TRUE}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"TRY_HARDER\"] = 3] = \"TRY_HARDER\";\n  /*(Void.class)*/\n\n  /**\r\n   * Specifies what character encoding to use when decoding, where applicable (type String)\r\n   */\n\n  DecodeHintType[DecodeHintType[\"CHARACTER_SET\"] = 4] = \"CHARACTER_SET\";\n  /*(String.class)*/\n\n  /**\r\n   * Allowed lengths of encoded data -- reject anything else. Maps to an {@code Int32Array}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"ALLOWED_LENGTHS\"] = 5] = \"ALLOWED_LENGTHS\";\n  /*(Int32Array.class)*/\n\n  /**\r\n   * Assume Code 39 codes employ a check digit. Doesn't matter what it maps to;\r\n   * use {@link Boolean#TRUE}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"ASSUME_CODE_39_CHECK_DIGIT\"] = 6] = \"ASSUME_CODE_39_CHECK_DIGIT\";\n  /*(Void.class)*/\n\n  /**\r\n   * Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed.\r\n   * For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;\r\n   * use {@link Boolean#TRUE}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"ASSUME_GS1\"] = 7] = \"ASSUME_GS1\";\n  /*(Void.class)*/\n\n  /**\r\n   * If true, return the start and end digits in a Codabar barcode instead of stripping them. They\r\n   * are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them\r\n   * to not be. Doesn't matter what it maps to; use {@link Boolean#TRUE}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"RETURN_CODABAR_START_END\"] = 8] = \"RETURN_CODABAR_START_END\";\n  /*(Void.class)*/\n\n  /**\r\n   * The caller needs to be notified via callback when a possible {@link ResultPoint}\r\n   * is found. Maps to a {@link ResultPointCallback}.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"NEED_RESULT_POINT_CALLBACK\"] = 9] = \"NEED_RESULT_POINT_CALLBACK\";\n  /*(ResultPointCallback.class)*/\n\n  /**\r\n   * Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this.\r\n   * Maps to an {@code Int32Array} of the allowed extension lengths, for example [2], [5], or [2, 5].\r\n   * If it is optional to have an extension, do not set this hint. If this is set,\r\n   * and a UPC or EAN barcode is found but an extension is not, then no result will be returned\r\n   * at all.\r\n   */\n\n  DecodeHintType[DecodeHintType[\"ALLOWED_EAN_EXTENSIONS\"] = 10] = \"ALLOWED_EAN_EXTENSIONS\";\n  /*(Int32Array.class)*/\n  // End of enumeration values.\n\n  /**\r\n   * Data type the hint is expecting.\r\n   * Among the possible values the {@link Void} stands out as being used for\r\n   * hints that do not expect a value to be supplied (flag hints). Such hints\r\n   * will possibly have their value ignored, or replaced by a\r\n   * {@link Boolean#TRUE}. Hint suppliers should probably use\r\n   * {@link Boolean#TRUE} as directed by the actual hint documentation.\r\n   */\n  // private valueType: Class<?>\n  // DecodeHintType(valueType: Class<?>) {\n  //   this.valueType = valueType\n  // }\n  // public getValueType(): Class<?> {\n  //   return valueType\n  // }\n})(DecodeHintType || (DecodeHintType = {}));\n\nexports.default = DecodeHintType;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar FormatException =\n/** @class */\nfunction (_super) {\n  __extends(FormatException, _super);\n\n  function FormatException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return FormatException;\n}(Exception_1.default);\n\nexports.default = FormatException;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ts_custom_error_1 = require(\"ts-custom-error\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar Exception =\n/** @class */\nfunction (_super) {\n  __extends(Exception, _super);\n  /**\r\n   * Allows Exception to be constructed directly\r\n   * with some message and prototype definition.\r\n   */\n\n\n  function Exception(message) {\n    if (message === void 0) {\n      message = undefined;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.message = message;\n    return _this;\n  }\n\n  return Exception;\n}(ts_custom_error_1.CustomError);\n\nexports.default = Exception;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar System =\n/** @class */\nfunction () {\n  function System() {} // public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)\n\n  /**\r\n   * Makes a copy of a array.\r\n   */\n\n\n  System.arraycopy = function (src, srcPos, dest, destPos, length) {\n    // TODO: better use split or set?\n    while (length--) {\n      dest[destPos++] = src[srcPos++];\n    }\n  };\n  /**\r\n   * Returns the current time in milliseconds.\r\n   */\n\n\n  System.currentTimeMillis = function () {\n    return Date.now();\n  };\n\n  return System;\n}();\n\nexports.default = System;","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n}\n\nexport default invariant;","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash = void 0;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\n\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\n\nfunction hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n}\n\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\n\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\n\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\n\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\n\nfunction isExtraneousPopstateEvent(event) {\n  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\n/*import java.util.Arrays;*/\n\nvar BitArray_1 = require(\"./BitArray\");\n\nvar System_1 = require(\"../util/System\");\n\nvar Arrays_1 = require(\"../util/Arrays\");\n\nvar StringBuilder_1 = require(\"../util/StringBuilder\");\n\nvar IllegalArgumentException_1 = require(\"../IllegalArgumentException\");\n/**\r\n * <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common\r\n * module, x is the column position, and y is the row position. The ordering is always x, y.\r\n * The origin is at the top-left.</p>\r\n *\r\n * <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins\r\n * with a new int. This is done intentionally so that we can copy out a row into a BitArray very\r\n * efficiently.</p>\r\n *\r\n * <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,\r\n * meaning they represent lower x values. This is compatible with BitArray's implementation.</p>\r\n *\r\n * @author Sean Owen\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar BitMatrix\n/*implements Cloneable*/\n=\n/** @class */\nfunction () {\n  /**\r\n   * Creates an empty square {@link BitMatrix}.\r\n   *\r\n   * @param dimension height and width\r\n   */\n  // public constructor(dimension: number /*int*/) {\n  //   this(dimension, dimension)\n  // }\n\n  /**\r\n   * Creates an empty {@link BitMatrix}.\r\n   *\r\n   * @param width bit matrix width\r\n   * @param height bit matrix height\r\n   */\n  // public constructor(width: number /*int*/, height: number /*int*/) {\n  //   if (width < 1 || height < 1) {\n  //     throw new IllegalArgumentException(\"Both dimensions must be greater than 0\")\n  //   }\n  //   this.width = width\n  //   this.height = height\n  //   this.rowSize = (width + 31) / 32\n  //   bits = new int[rowSize * height];\n  // }\n  function BitMatrix(width\n  /*int*/\n  , height\n  /*int*/\n  , rowSize\n  /*int*/\n  , bits) {\n    this.width = width;\n    this.height = height;\n    this.rowSize = rowSize;\n    this.bits = bits;\n\n    if (undefined === height || null === height) {\n      height = width;\n    }\n\n    this.height = height;\n\n    if (width < 1 || height < 1) {\n      throw new IllegalArgumentException_1.default('Both dimensions must be greater than 0');\n    }\n\n    if (undefined === rowSize || null === rowSize) {\n      rowSize = Math.floor((width + 31) / 32);\n    }\n\n    this.rowSize = rowSize;\n\n    if (undefined === bits || null === bits) {\n      this.bits = new Int32Array(this.rowSize * this.height);\n    }\n  }\n  /**\r\n   * Interprets a 2D array of booleans as a {@link BitMatrix}, where \"true\" means an \"on\" bit.\r\n   *\r\n   * @param image bits of the image, as a row-major 2D array. Elements are arrays representing rows\r\n   * @return {@link BitMatrix} representation of image\r\n   */\n\n\n  BitMatrix.parseFromBooleanArray = function (image) {\n    var height = image.length;\n    var width = image[0].length;\n    var bits = new BitMatrix(width, height);\n\n    for (var i = 0; i < height; i++) {\n      var imageI = image[i];\n\n      for (var j = 0; j < width; j++) {\n        if (imageI[j]) {\n          bits.set(j, i);\n        }\n      }\n    }\n\n    return bits;\n  };\n\n  BitMatrix.parseFromString = function (stringRepresentation, setString, unsetString) {\n    if (stringRepresentation === null) {\n      throw new IllegalArgumentException_1.default('stringRepresentation cannot be null');\n    }\n\n    var bits = new Array(stringRepresentation.length);\n    var bitsPos = 0;\n    var rowStartPos = 0;\n    var rowLength = -1;\n    var nRows = 0;\n    var pos = 0;\n\n    while (pos < stringRepresentation.length) {\n      if (stringRepresentation.charAt(pos) === '\\n' || stringRepresentation.charAt(pos) === '\\r') {\n        if (bitsPos > rowStartPos) {\n          if (rowLength === -1) {\n            rowLength = bitsPos - rowStartPos;\n          } else if (bitsPos - rowStartPos !== rowLength) {\n            throw new IllegalArgumentException_1.default('row lengths do not match');\n          }\n\n          rowStartPos = bitsPos;\n          nRows++;\n        }\n\n        pos++;\n      } else if (stringRepresentation.substring(pos, pos + setString.length) === setString) {\n        pos += setString.length;\n        bits[bitsPos] = true;\n        bitsPos++;\n      } else if (stringRepresentation.substring(pos, pos + unsetString.length) === unsetString) {\n        pos += unsetString.length;\n        bits[bitsPos] = false;\n        bitsPos++;\n      } else {\n        throw new IllegalArgumentException_1.default('illegal character encountered: ' + stringRepresentation.substring(pos));\n      }\n    } // no EOL at end?\n\n\n    if (bitsPos > rowStartPos) {\n      if (rowLength === -1) {\n        rowLength = bitsPos - rowStartPos;\n      } else if (bitsPos - rowStartPos !== rowLength) {\n        throw new IllegalArgumentException_1.default('row lengths do not match');\n      }\n\n      nRows++;\n    }\n\n    var matrix = new BitMatrix(rowLength, nRows);\n\n    for (var i = 0; i < bitsPos; i++) {\n      if (bits[i]) {\n        matrix.set(Math.floor(i % rowLength), Math.floor(i / rowLength));\n      }\n    }\n\n    return matrix;\n  };\n  /**\r\n   * <p>Gets the requested bit, where true means black.</p>\r\n   *\r\n   * @param x The horizontal component (i.e. which column)\r\n   * @param y The vertical component (i.e. which row)\r\n   * @return value of given bit in matrix\r\n   */\n\n\n  BitMatrix.prototype.get = function (x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    var offset = y * this.rowSize + Math.floor(x / 32);\n    return (this.bits[offset] >>> (x & 0x1f) & 1) !== 0;\n  };\n  /**\r\n   * <p>Sets the given bit to true.</p>\r\n   *\r\n   * @param x The horizontal component (i.e. which column)\r\n   * @param y The vertical component (i.e. which row)\r\n   */\n\n\n  BitMatrix.prototype.set = function (x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    var offset = y * this.rowSize + Math.floor(x / 32);\n    this.bits[offset] |= 1 << (x & 0x1f) & 0xFFFFFFFF;\n  };\n\n  BitMatrix.prototype.unset = function (x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    var offset = y * this.rowSize + Math.floor(x / 32);\n    this.bits[offset] &= ~(1 << (x & 0x1f) & 0xFFFFFFFF);\n  };\n  /**\r\n   * <p>Flips the given bit.</p>\r\n   *\r\n   * @param x The horizontal component (i.e. which column)\r\n   * @param y The vertical component (i.e. which row)\r\n   */\n\n\n  BitMatrix.prototype.flip = function (x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    var offset = y * this.rowSize + Math.floor(x / 32);\n    this.bits[offset] ^= 1 << (x & 0x1f) & 0xFFFFFFFF;\n  };\n  /**\r\n   * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding\r\n   * mask bit is set.\r\n   *\r\n   * @param mask XOR mask\r\n   */\n\n\n  BitMatrix.prototype.xor = function (mask) {\n    if (this.width !== mask.getWidth() || this.height !== mask.getHeight() || this.rowSize !== mask.getRowSize()) {\n      throw new IllegalArgumentException_1.default('input matrix dimensions do not match');\n    }\n\n    var rowArray = new BitArray_1.default(Math.floor(this.width / 32) + 1);\n    var rowSize = this.rowSize;\n    var bits = this.bits;\n\n    for (var y = 0, height = this.height; y < height; y++) {\n      var offset = y * rowSize;\n      var row = mask.getRow(y, rowArray).getBitArray();\n\n      for (var x = 0; x < rowSize; x++) {\n        bits[offset + x] ^= row[x];\n      }\n    }\n  };\n  /**\r\n   * Clears all bits (sets to false).\r\n   */\n\n\n  BitMatrix.prototype.clear = function () {\n    var bits = this.bits;\n    var max = bits.length;\n\n    for (var i = 0; i < max; i++) {\n      bits[i] = 0;\n    }\n  };\n  /**\r\n   * <p>Sets a square region of the bit matrix to true.</p>\r\n   *\r\n   * @param left The horizontal position to begin at (inclusive)\r\n   * @param top The vertical position to begin at (inclusive)\r\n   * @param width The width of the region\r\n   * @param height The height of the region\r\n   */\n\n\n  BitMatrix.prototype.setRegion = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    if (top < 0 || left < 0) {\n      throw new IllegalArgumentException_1.default('Left and top must be nonnegative');\n    }\n\n    if (height < 1 || width < 1) {\n      throw new IllegalArgumentException_1.default('Height and width must be at least 1');\n    }\n\n    var right = left + width;\n    var bottom = top + height;\n\n    if (bottom > this.height || right > this.width) {\n      throw new IllegalArgumentException_1.default('The region must fit inside the matrix');\n    }\n\n    var rowSize = this.rowSize;\n    var bits = this.bits;\n\n    for (var y = top; y < bottom; y++) {\n      var offset = y * rowSize;\n\n      for (var x = left; x < right; x++) {\n        bits[offset + Math.floor(x / 32)] |= 1 << (x & 0x1f) & 0xFFFFFFFF;\n      }\n    }\n  };\n  /**\r\n   * A fast method to retrieve one row of data from the matrix as a BitArray.\r\n   *\r\n   * @param y The row to retrieve\r\n   * @param row An optional caller-allocated BitArray, will be allocated if null or too small\r\n   * @return The resulting BitArray - this reference should always be used even when passing\r\n   *         your own row\r\n   */\n\n\n  BitMatrix.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    if (row === null || row === undefined || row.getSize() < this.width) {\n      row = new BitArray_1.default(this.width);\n    } else {\n      row.clear();\n    }\n\n    var rowSize = this.rowSize;\n    var bits = this.bits;\n    var offset = y * rowSize;\n\n    for (var x = 0; x < rowSize; x++) {\n      row.setBulk(x * 32, bits[offset + x]);\n    }\n\n    return row;\n  };\n  /**\r\n   * @param y row to set\r\n   * @param row {@link BitArray} to copy from\r\n   */\n\n\n  BitMatrix.prototype.setRow = function (y\n  /*int*/\n  , row) {\n    System_1.default.arraycopy(row.getBitArray(), 0, this.bits, y * this.rowSize, this.rowSize);\n  };\n  /**\r\n   * Modifies this {@code BitMatrix} to represent the same but rotated 180 degrees\r\n   */\n\n\n  BitMatrix.prototype.rotate180 = function () {\n    var width = this.getWidth();\n    var height = this.getHeight();\n    var topRow = new BitArray_1.default(width);\n    var bottomRow = new BitArray_1.default(width);\n\n    for (var i = 0, length_1 = Math.floor((height + 1) / 2); i < length_1; i++) {\n      topRow = this.getRow(i, topRow);\n      bottomRow = this.getRow(height - 1 - i, bottomRow);\n      topRow.reverse();\n      bottomRow.reverse();\n      this.setRow(i, bottomRow);\n      this.setRow(height - 1 - i, topRow);\n    }\n  };\n  /**\r\n   * This is useful in detecting the enclosing rectangle of a 'pure' barcode.\r\n   *\r\n   * @return {@code left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white\r\n   */\n\n\n  BitMatrix.prototype.getEnclosingRectangle = function () {\n    var width = this.width;\n    var height = this.height;\n    var rowSize = this.rowSize;\n    var bits = this.bits;\n    var left = width;\n    var top = height;\n    var right = -1;\n    var bottom = -1;\n\n    for (var y = 0; y < height; y++) {\n      for (var x32 = 0; x32 < rowSize; x32++) {\n        var theBits = bits[y * rowSize + x32];\n\n        if (theBits !== 0) {\n          if (y < top) {\n            top = y;\n          }\n\n          if (y > bottom) {\n            bottom = y;\n          }\n\n          if (x32 * 32 < left) {\n            var bit = 0;\n\n            while ((theBits << 31 - bit & 0xFFFFFFFF) === 0) {\n              bit++;\n            }\n\n            if (x32 * 32 + bit < left) {\n              left = x32 * 32 + bit;\n            }\n          }\n\n          if (x32 * 32 + 31 > right) {\n            var bit = 31;\n\n            while (theBits >>> bit === 0) {\n              bit--;\n            }\n\n            if (x32 * 32 + bit > right) {\n              right = x32 * 32 + bit;\n            }\n          }\n        }\n      }\n    }\n\n    if (right < left || bottom < top) {\n      return null;\n    }\n\n    return Int32Array.from([left, top, right - left + 1, bottom - top + 1]);\n  };\n  /**\r\n   * This is useful in detecting a corner of a 'pure' barcode.\r\n   *\r\n   * @return {@code x,y} coordinate of top-left-most 1 bit, or null if it is all white\r\n   */\n\n\n  BitMatrix.prototype.getTopLeftOnBit = function () {\n    var rowSize = this.rowSize;\n    var bits = this.bits;\n    var bitsOffset = 0;\n\n    while (bitsOffset < bits.length && bits[bitsOffset] === 0) {\n      bitsOffset++;\n    }\n\n    if (bitsOffset === bits.length) {\n      return null;\n    }\n\n    var y = bitsOffset / rowSize;\n    var x = bitsOffset % rowSize * 32;\n    var theBits = bits[bitsOffset];\n    var bit = 0;\n\n    while ((theBits << 31 - bit & 0xFFFFFFFF) === 0) {\n      bit++;\n    }\n\n    x += bit;\n    return Int32Array.from([x, y]);\n  };\n\n  BitMatrix.prototype.getBottomRightOnBit = function () {\n    var rowSize = this.rowSize;\n    var bits = this.bits;\n    var bitsOffset = bits.length - 1;\n\n    while (bitsOffset >= 0 && bits[bitsOffset] === 0) {\n      bitsOffset--;\n    }\n\n    if (bitsOffset < 0) {\n      return null;\n    }\n\n    var y = Math.floor(bitsOffset / rowSize);\n    var x = Math.floor(bitsOffset % rowSize) * 32;\n    var theBits = bits[bitsOffset];\n    var bit = 31;\n\n    while (theBits >>> bit === 0) {\n      bit--;\n    }\n\n    x += bit;\n    return Int32Array.from([x, y]);\n  };\n  /**\r\n   * @return The width of the matrix\r\n   */\n\n\n  BitMatrix.prototype.getWidth = function () {\n    return this.width;\n  };\n  /**\r\n   * @return The height of the matrix\r\n   */\n\n\n  BitMatrix.prototype.getHeight = function () {\n    return this.height;\n  };\n  /**\r\n   * @return The row size of the matrix\r\n   */\n\n\n  BitMatrix.prototype.getRowSize = function () {\n    return this.rowSize;\n  };\n  /*@Override*/\n\n\n  BitMatrix.prototype.equals = function (o) {\n    if (!(o instanceof BitMatrix)) {\n      return false;\n    }\n\n    var other = o;\n    return this.width === other.width && this.height === other.height && this.rowSize === other.rowSize && Arrays_1.default.equals(this.bits, other.bits);\n  };\n  /*@Override*/\n\n\n  BitMatrix.prototype.hashCode = function () {\n    var hash = this.width;\n    hash = 31 * hash + this.width;\n    hash = 31 * hash + this.height;\n    hash = 31 * hash + this.rowSize;\n    hash = 31 * hash + Arrays_1.default.hashCode(this.bits);\n    return hash;\n  };\n  /**\r\n   * @return string representation using \"X\" for set and \" \" for unset bits\r\n   */\n\n  /*@Override*/\n  // public toString(): string {\n  //   return toString(\": \"X, \"  \")\n  // }\n\n  /**\r\n   * @param setString representation of a set bit\r\n   * @param unsetString representation of an unset bit\r\n   * @return string representation of entire matrix utilizing given strings\r\n   */\n  // public toString(setString: string = \"X \", unsetString: string = \"  \"): string {\n  //   return this.buildToString(setString, unsetString, \"\\n\")\n  // }\n\n  /**\r\n   * @param setString representation of a set bit\r\n   * @param unsetString representation of an unset bit\r\n   * @param lineSeparator newline character in string representation\r\n   * @return string representation of entire matrix utilizing given strings and line separator\r\n   * @deprecated call {@link #toString(String,String)} only, which uses \\n line separator always\r\n   */\n  // @Deprecated\n\n\n  BitMatrix.prototype.toString = function (setString, unsetString, lineSeparator) {\n    if (setString === void 0) {\n      setString = 'x';\n    }\n\n    if (unsetString === void 0) {\n      unsetString = ' ';\n    }\n\n    if (lineSeparator === void 0) {\n      lineSeparator = '\\n';\n    }\n\n    return this.buildToString(setString, unsetString, lineSeparator);\n  };\n\n  BitMatrix.prototype.buildToString = function (setString, unsetString, lineSeparator) {\n    var result = new StringBuilder_1.default();\n    result.append(lineSeparator);\n\n    for (var y = 0, height = this.height; y < height; y++) {\n      for (var x = 0, width = this.width; x < width; x++) {\n        result.append(this.get(x, y) ? setString : unsetString);\n      }\n\n      result.append(lineSeparator);\n    }\n\n    return result.toString();\n  };\n  /*@Override*/\n\n\n  BitMatrix.prototype.clone = function () {\n    return new BitMatrix(this.width, this.height, this.rowSize, this.bits.slice());\n  };\n\n  return BitMatrix;\n}();\n\nexports.default = BitMatrix;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\n/*import java.util.EnumMap;*/\n\n/*import java.util.Map;*/\n\nvar ResultPoint_1 = require(\"./ResultPoint\");\n\nvar System_1 = require(\"./util/System\");\n/**\r\n * <p>Encapsulates the result of decoding a barcode within an image.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Result =\n/** @class */\nfunction () {\n  // public constructor(private text: string,\n  //               Uint8Array rawBytes,\n  //               ResultPoconst resultPoints: Int32Array,\n  //               BarcodeFormat format) {\n  //   this(text, rawBytes, resultPoints, format, System.currentTimeMillis())\n  // }\n  // public constructor(text: string,\n  //               Uint8Array rawBytes,\n  //               ResultPoconst resultPoints: Int32Array,\n  //               BarcodeFormat format,\n  //               long timestamp) {\n  //   this(text, rawBytes, rawBytes == null ? 0 : 8 * rawBytes.length,\n  //        resultPoints, format, timestamp)\n  // }\n  function Result(text, rawBytes, numBits\n  /*int*/\n  , resultPoints, format, timestamp\n  /*long*/\n  ) {\n    this.text = text;\n    this.rawBytes = rawBytes;\n    this.numBits = numBits;\n    this.resultPoints = resultPoints;\n    this.format = format;\n    this.timestamp = timestamp;\n    this.text = text;\n    this.rawBytes = rawBytes;\n\n    if (undefined === numBits || null === numBits) {\n      this.numBits = rawBytes === null || rawBytes === undefined ? 0 : 8 * rawBytes.length;\n    } else {\n      this.numBits = numBits;\n    }\n\n    this.resultPoints = resultPoints;\n    this.format = format;\n    this.resultMetadata = null;\n\n    if (undefined === timestamp || null === timestamp) {\n      this.timestamp = System_1.default.currentTimeMillis();\n    } else {\n      this.timestamp = timestamp;\n    }\n  }\n  /**\r\n   * @return raw text encoded by the barcode\r\n   */\n\n\n  Result.prototype.getText = function () {\n    return this.text;\n  };\n  /**\r\n   * @return raw bytes encoded by the barcode, if applicable, otherwise {@code null}\r\n   */\n\n\n  Result.prototype.getRawBytes = function () {\n    return this.rawBytes;\n  };\n  /**\r\n   * @return how many bits of {@link #getRawBytes()} are valid; typically 8 times its length\r\n   * @since 3.3.0\r\n   */\n\n\n  Result.prototype.getNumBits = function () {\n    return this.numBits;\n  };\n  /**\r\n   * @return points related to the barcode in the image. These are typically points\r\n   *         identifying finder patterns or the corners of the barcode. The exact meaning is\r\n   *         specific to the type of barcode that was decoded.\r\n   */\n\n\n  Result.prototype.getResultPoints = function () {\n    return this.resultPoints;\n  };\n  /**\r\n   * @return {@link BarcodeFormat} representing the format of the barcode that was decoded\r\n   */\n\n\n  Result.prototype.getBarcodeFormat = function () {\n    return this.format;\n  };\n  /**\r\n   * @return {@link Map} mapping {@link ResultMetadataType} keys to values. May be\r\n   *   {@code null}. This contains optional metadata about what was detected about the barcode,\r\n   *   like orientation.\r\n   */\n\n\n  Result.prototype.getResultMetadata = function () {\n    return this.resultMetadata;\n  };\n\n  Result.prototype.putMetadata = function (type, value) {\n    if (this.resultMetadata === null) {\n      this.resultMetadata = new Map();\n    }\n\n    this.resultMetadata.set(type, value);\n  };\n\n  Result.prototype.putAllMetadata = function (metadata) {\n    if (metadata !== null) {\n      if (this.resultMetadata === null) {\n        this.resultMetadata = metadata;\n      } else {\n        this.resultMetadata = new Map(metadata);\n      }\n    }\n  };\n\n  Result.prototype.addResultPoints = function (newPoints) {\n    var oldPoints = this.resultPoints;\n\n    if (oldPoints === null) {\n      this.resultPoints = newPoints;\n    } else if (newPoints !== null && newPoints.length > 0) {\n      var allPoints = new ResultPoint_1.default[oldPoints.length + newPoints.length]();\n      System_1.default.arraycopy(oldPoints, 0, allPoints, 0, oldPoints.length);\n      System_1.default.arraycopy(newPoints, 0, allPoints, oldPoints.length, newPoints.length);\n      this.resultPoints = allPoints;\n    }\n  };\n\n  Result.prototype.getTimestamp = function () {\n    return this.timestamp;\n  };\n  /*@Override*/\n\n\n  Result.prototype.toString = function () {\n    return this.text;\n  };\n\n  return Result;\n}();\n\nexports.default = Result;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BitArray_1 = require(\"../common/BitArray\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * Encapsulates functionality and implementation that is common to all families\r\n * of one-dimensional barcodes.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n * @author Sean Owen\r\n */\n\n\nvar OneDReader =\n/** @class */\nfunction () {\n  function OneDReader() {}\n  /*\r\n  @Override\r\n  public Result decode(BinaryBitmap image) throws NotFoundException, FormatException {\r\n    return decode(image, null);\r\n  }\r\n  */\n  // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n  // @Override\n\n\n  OneDReader.prototype.decode = function (image, hints) {\n    try {\n      return this.doDecode(image, hints);\n    } catch (nfe) {\n      var tryHarder = hints && hints.get(DecodeHintType_1.default.TRY_HARDER) === true;\n\n      if (tryHarder && image.isRotateSupported()) {\n        var rotatedImage = image.rotateCounterClockwise();\n        var result = this.doDecode(rotatedImage, hints); // Record that we found it rotated 90 degrees CCW / 270 degrees CW\n\n        var metadata = result.getResultMetadata();\n        var orientation_1 = 270;\n\n        if (metadata !== null && metadata.get(ResultMetadataType_1.default.ORIENTATION) === true) {\n          // But if we found it reversed in doDecode(), add in that result here:\n          orientation_1 = orientation_1 + metadata.get(ResultMetadataType_1.default.ORIENTATION) % 360;\n        }\n\n        result.putMetadata(ResultMetadataType_1.default.ORIENTATION, orientation_1); // Update result points\n\n        var points = result.getResultPoints();\n\n        if (points !== null) {\n          var height = rotatedImage.getHeight();\n\n          for (var i = 0; i < points.length; i++) {\n            points[i] = new ResultPoint_1.default(height - points[i].getY() - 1, points[i].getX());\n          }\n        }\n\n        return result;\n      } else {\n        throw new NotFoundException_1.default();\n      }\n    }\n  }; // @Override\n\n\n  OneDReader.prototype.reset = function () {// do nothing\n  };\n  /**\r\n   * We're going to examine rows from the middle outward, searching alternately above and below the\r\n   * middle, and farther out each time. rowStep is the number of rows between each successive\r\n   * attempt above and below the middle. So we'd scan row middle, then middle - rowStep, then\r\n   * middle + rowStep, then middle - (2 * rowStep), etc.\r\n   * rowStep is bigger as the image is taller, but is always at least 1. We've somewhat arbitrarily\r\n   * decided that moving up and down by about 1/16 of the image is pretty good; we try more of the\r\n   * image if \"trying harder\".\r\n   *\r\n   * @param image The image to decode\r\n   * @param hints Any hints that were requested\r\n   * @return The contents of the decoded barcode\r\n   * @throws NotFoundException Any spontaneous errors which occur\r\n   */\n\n\n  OneDReader.prototype.doDecode = function (image, hints) {\n    var width = image.getWidth();\n    var height = image.getHeight();\n    var row = new BitArray_1.default(width);\n    var tryHarder = hints && hints.get(DecodeHintType_1.default.TRY_HARDER) === true;\n    var rowStep = Math.max(1, height >> (tryHarder ? 8 : 5));\n    var maxLines;\n\n    if (tryHarder) {\n      maxLines = height; // Look at the whole image, not just the center\n    } else {\n      maxLines = 15; // 15 rows spaced 1/32 apart is roughly the middle half of the image\n    }\n\n    var middle = Math.trunc(height / 2);\n\n    for (var x = 0; x < maxLines; x++) {\n      // Scanning from the middle out. Determine which row we're looking at next:\n      var rowStepsAboveOrBelow = Math.trunc((x + 1) / 2);\n      var isAbove = (x & 0x01) === 0; // i.e. is x even?\n\n      var rowNumber = middle + rowStep * (isAbove ? rowStepsAboveOrBelow : -rowStepsAboveOrBelow);\n\n      if (rowNumber < 0 || rowNumber >= height) {\n        // Oops, if we run off the top or bottom, stop\n        break;\n      } // Estimate black point for this row and load it:\n\n\n      try {\n        row = image.getBlackRow(rowNumber, row);\n      } catch (ignored) {\n        continue;\n      }\n\n      var _loop_1 = function _loop_1(attempt) {\n        if (attempt === 1) {\n          // trying again?\n          row.reverse(); // reverse the row and continue\n          // This means we will only ever draw result points *once* in the life of this method\n          // since we want to avoid drawing the wrong points after flipping the row, and,\n          // don't want to clutter with noise from every single row scan -- just the scans\n          // that start on the center line.\n\n          if (hints && hints.get(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK) === true) {\n            var newHints_1 = new Map();\n            hints.forEach(function (hint, key) {\n              return newHints_1.set(key, hint);\n            });\n            newHints_1.delete(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK);\n            hints = newHints_1;\n          }\n        }\n\n        try {\n          // Look for a barcode\n          var result = this_1.decodeRow(rowNumber, row, hints); // We found our barcode\n\n          if (attempt === 1) {\n            // But it was upside down, so note that\n            result.putMetadata(ResultMetadataType_1.default.ORIENTATION, 180); // And remember to flip the result points horizontally.\n\n            var points = result.getResultPoints();\n\n            if (points !== null) {\n              points[0] = new ResultPoint_1.default(width - points[0].getX() - 1, points[0].getY());\n              points[1] = new ResultPoint_1.default(width - points[1].getX() - 1, points[1].getY());\n            }\n          }\n\n          return {\n            value: result\n          };\n        } catch (re) {// continue -- just couldn't decode this row\n        }\n      };\n\n      var this_1 = this; // While we have the image data in a BitArray, it's fairly cheap to reverse it in place to\n      // handle decoding upside down barcodes.\n\n      for (var attempt = 0; attempt < 2; attempt++) {\n        var state_1 = _loop_1(attempt);\n\n        if (typeof state_1 === \"object\") return state_1.value;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n  /**\r\n   * Records the size of successive runs of white and black pixels in a row, starting at a given point.\r\n   * The values are recorded in the given array, and the number of runs recorded is equal to the size\r\n   * of the array. If the row starts on a white pixel at the given start point, then the first count\r\n   * recorded is the run of white pixels starting from that point; likewise it is the count of a run\r\n   * of black pixels if the row begin on a black pixels at that point.\r\n   *\r\n   * @param row row to count from\r\n   * @param start offset into row to start at\r\n   * @param counters array into which to record counts\r\n   * @throws NotFoundException if counters cannot be filled entirely from row before running out\r\n   *  of pixels\r\n   */\n\n\n  OneDReader.recordPattern = function (row, start, counters) {\n    var numCounters = counters.length;\n\n    for (var index = 0; index < numCounters; index++) {\n      counters[index] = 0;\n    }\n\n    var end = row.getSize();\n\n    if (start >= end) {\n      throw new NotFoundException_1.default();\n    }\n\n    var isWhite = !row.get(start);\n    var counterPosition = 0;\n    var i = start;\n\n    while (i < end) {\n      if (row.get(i) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (++counterPosition === numCounters) {\n          break;\n        } else {\n          counters[counterPosition] = 1;\n          isWhite = !isWhite;\n        }\n      }\n\n      i++;\n    } // If we read fully the last section of pixels and filled up our counters -- or filled\n    // the last counter but ran off the side of the image, OK. Otherwise, a problem.\n\n\n    if (!(counterPosition === numCounters || counterPosition === numCounters - 1 && i === end)) {\n      throw new NotFoundException_1.default();\n    }\n  };\n\n  OneDReader.recordPatternInReverse = function (row, start, counters) {\n    // This could be more efficient I guess\n    var numTransitionsLeft = counters.length;\n    var last = row.get(start);\n\n    while (start > 0 && numTransitionsLeft >= 0) {\n      if (row.get(--start) !== last) {\n        numTransitionsLeft--;\n        last = !last;\n      }\n    }\n\n    if (numTransitionsLeft >= 0) {\n      throw new NotFoundException_1.default();\n    }\n\n    OneDReader.recordPattern(row, start + 1, counters);\n  };\n  /**\r\n   * Determines how closely a set of observed counts of runs of black/white values matches a given\r\n   * target pattern. This is reported as the ratio of the total variance from the expected pattern\r\n   * proportions across all pattern elements, to the length of the pattern.\r\n   *\r\n   * @param counters observed counters\r\n   * @param pattern expected pattern\r\n   * @param maxIndividualVariance The most any counter can differ before we give up\r\n   * @return ratio of total variance between counters and pattern compared to total pattern size\r\n   */\n\n\n  OneDReader.patternMatchVariance = function (counters, pattern, maxIndividualVariance) {\n    var numCounters = counters.length;\n    var total = 0;\n    var patternLength = 0;\n\n    for (var i = 0; i < numCounters; i++) {\n      total += counters[i];\n      patternLength += pattern[i];\n    }\n\n    if (total < patternLength) {\n      // If we don't even have one pixel per unit of bar width, assume this is too small\n      // to reliably match, so fail:\n      return Number.POSITIVE_INFINITY;\n    }\n\n    var unitBarWidth = total / patternLength;\n    maxIndividualVariance *= unitBarWidth;\n    var totalVariance = 0.0;\n\n    for (var x = 0; x < numCounters; x++) {\n      var counter = counters[x];\n      var scaledPattern = pattern[x] * unitBarWidth;\n      var variance = counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;\n\n      if (variance > maxIndividualVariance) {\n        return Number.POSITIVE_INFINITY;\n      }\n\n      totalVariance += variance;\n    }\n\n    return totalVariance / total;\n  };\n\n  return OneDReader;\n}();\n\nexports.default = OneDReader;","import createContext from 'create-react-context';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport { createMemoryHistory, createLocation, locationsAreEqual, createPath } from 'history';\nimport invariant from 'tiny-invariant';\nimport pathToRegexp from 'path-to-regexp';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { isValidElementType } from 'react-is';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport hoistStatics from 'hoist-non-react-statics'; // TODO: Replace with React.createContext once we can assume React 16+\n\nvar createNamedContext = function createNamedContext(name) {\n  var context = createContext();\n  context.Provider.displayName = name + \".Provider\";\n  context.Consumer.displayName = name + \".Consumer\";\n  return context;\n};\n\nvar context =\n/*#__PURE__*/\ncreateNamedContext('Router');\n/**\n * The public API for putting history on context.\n */\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Router, _React$Component);\n\n  Router.computeRootMatch = function computeRootMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  function Router(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      location: props.history.location\n    }; // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n\n    _this._isMounted = false;\n    _this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      _this.unlisten = props.history.listen(function (location) {\n        if (_this._isMounted) {\n          _this.setState({\n            location: location\n          });\n        } else {\n          _this._pendingLocation = location;\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Router.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({\n        location: this._pendingLocation\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  };\n\n  _proto.render = function render() {\n    return React.createElement(context.Provider, {\n      children: this.props.children || null,\n      value: {\n        history: this.props.history,\n        location: this.state.location,\n        match: Router.computeRootMatch(this.state.location.pathname),\n        staticContext: this.props.staticContext\n      }\n    });\n  };\n\n  return Router;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(prevProps.history === this.props.history, \"You cannot change <Router history>\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\n\nvar MemoryRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createMemoryHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = MemoryRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return MemoryRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<MemoryRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\") : void 0;\n  };\n}\n\nvar Lifecycle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Lifecycle, _React$Component);\n\n  function Lifecycle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Lifecycle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Lifecycle;\n}(React.Component);\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\n\n\nfunction Prompt(_ref) {\n  var message = _ref.message,\n      _ref$when = _ref.when,\n      when = _ref$when === void 0 ? true : _ref$when;\n  return React.createElement(context.Consumer, null, function (context$$1) {\n    !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Prompt> outside a <Router>\") : invariant(false) : void 0;\n    if (!when || context$$1.staticContext) return null;\n    var method = context$$1.history.block;\n    return React.createElement(Lifecycle, {\n      onMount: function onMount(self) {\n        self.release = method(message);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (prevProps.message !== message) {\n          self.release();\n          self.release = method(message);\n        }\n      },\n      onUnmount: function onUnmount(self) {\n        self.release();\n      },\n      message: message\n    });\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n  var generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\n\n\nfunction generatePath(path, params) {\n  if (path === void 0) {\n    path = \"/\";\n  }\n\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path === \"/\" ? path : compilePath(path)(params, {\n    pretty: true\n  });\n}\n/**\n * The public API for navigating programmatically with a component.\n */\n\n\nfunction Redirect(_ref) {\n  var computedMatch = _ref.computedMatch,\n      to = _ref.to,\n      _ref$push = _ref.push,\n      push = _ref$push === void 0 ? false : _ref$push;\n  return React.createElement(context.Consumer, null, function (context$$1) {\n    !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Redirect> outside a <Router>\") : invariant(false) : void 0;\n    var history = context$$1.history,\n        staticContext = context$$1.staticContext;\n    var method = push ? history.push : history.replace;\n    var location = createLocation(computedMatch ? typeof to === \"string\" ? generatePath(to, computedMatch.params) : _extends({}, to, {\n      pathname: generatePath(to.pathname, computedMatch.params)\n    }) : to); // When rendering in a static context,\n    // set the new location immediately.\n\n    if (staticContext) {\n      method(location);\n      return null;\n    }\n\n    return React.createElement(Lifecycle, {\n      onMount: function onMount() {\n        method(location);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (!locationsAreEqual(prevProps.to, location)) {\n          method(location);\n        }\n      },\n      to: to\n    });\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nvar cache$1 = {};\nvar cacheLimit$1 = 10000;\nvar cacheCount$1 = 0;\n\nfunction compilePath$1(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});\n  if (pathCache[path]) return pathCache[path];\n  var keys = [];\n  var regexp = pathToRegexp(path, keys, options);\n  var result = {\n    regexp: regexp,\n    keys: keys\n  };\n\n  if (cacheCount$1 < cacheLimit$1) {\n    pathCache[path] = result;\n    cacheCount$1++;\n  }\n\n  return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */\n\n\nfunction matchPath(pathname, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === void 0 ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === void 0 ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;\n  var paths = [].concat(path);\n  return paths.reduce(function (matched, path) {\n    if (matched) return matched;\n\n    var _compilePath = compilePath$1(path, {\n      end: exact,\n      strict: strict,\n      sensitive: sensitive\n    }),\n        regexp = _compilePath.regexp,\n        keys = _compilePath.keys;\n\n    var match = regexp.exec(pathname);\n    if (!match) return null;\n    var url = match[0],\n        values = match.slice(1);\n    var isExact = pathname === url;\n    if (exact && !isExact) return null;\n    return {\n      path: path,\n      // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url,\n      // the matched portion of the URL\n      isExact: isExact,\n      // whether or not we matched exactly\n      params: keys.reduce(function (memo, key, index) {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Route, _React$Component);\n\n  function Route() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Route.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Route> outside a <Router>\") : invariant(false) : void 0;\n      var location = _this.props.location || context$$1.location;\n      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us\n      : _this.props.path ? matchPath(location.pathname, _this.props) : context$$1.match;\n\n      var props = _extends({}, context$$1, {\n        location: location,\n        match: match\n      });\n\n      var _this$props = _this.props,\n          children = _this$props.children,\n          component = _this$props.component,\n          render = _this$props.render; // Preact uses an empty array as children by\n      // default, so use null if that's the case.\n\n      if (Array.isArray(children) && children.length === 0) {\n        children = null;\n      }\n\n      if (typeof children === \"function\") {\n        children = children(props);\n\n        if (children === undefined) {\n          if (process.env.NODE_ENV !== \"production\") {\n            var path = _this.props.path;\n            process.env.NODE_ENV !== \"production\" ? warning(false, \"You returned `undefined` from the `children` function of \" + (\"<Route\" + (path ? \" path=\\\"\" + path + \"\\\"\" : \"\") + \">, but you \") + \"should have returned a React element or `null`\") : void 0;\n          }\n\n          children = null;\n        }\n      }\n\n      return React.createElement(context.Provider, {\n        value: props\n      }, children && !isEmptyChildren(children) ? children : props.match ? component ? React.createElement(component, props) : render ? render(props) : null : null);\n    });\n  };\n\n  return Route;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: function component(props, propName) {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\"Invalid prop 'component' supplied to 'Route': the prop is not a valid React component\");\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\") : void 0;\n  };\n\n  Route.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : void 0;\n  };\n}\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n  return _extends({}, location, {\n    pathname: addLeadingSlash(basename) + location.pathname\n  });\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n  var base = addLeadingSlash(basename);\n  if (location.pathname.indexOf(base) !== 0) return location;\n  return _extends({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return function () {\n    process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot %s with <StaticRouter>\", methodName) : invariant(false);\n  };\n}\n\nfunction noop() {}\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\n\nvar StaticRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handlePush = function (location) {\n      return _this.navigateTo(location, \"PUSH\");\n    };\n\n    _this.handleReplace = function (location) {\n      return _this.navigateTo(location, \"REPLACE\");\n    };\n\n    _this.handleListen = function () {\n      return noop;\n    };\n\n    _this.handleBlock = function () {\n      return noop;\n    };\n\n    return _this;\n  }\n\n  var _proto = StaticRouter.prototype;\n\n  _proto.navigateTo = function navigateTo(location, action) {\n    var _this$props = this.props,\n        _this$props$basename = _this$props.basename,\n        basename = _this$props$basename === void 0 ? \"\" : _this$props$basename,\n        context = _this$props.context;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$basename = _this$props2.basename,\n        basename = _this$props2$basename === void 0 ? \"\" : _this$props2$basename,\n        _this$props2$context = _this$props2.context,\n        context = _this$props2$context === void 0 ? {} : _this$props2$context,\n        _this$props2$location = _this$props2.location,\n        location = _this$props2$location === void 0 ? \"/\" : _this$props2$location,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"basename\", \"context\", \"location\"]);\n\n    var history = {\n      createHref: function createHref(path) {\n        return addLeadingSlash(basename + createURL(path));\n      },\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n    return React.createElement(Router, _extends({}, rest, {\n      history: history,\n      staticContext: context\n    }));\n  };\n\n  return StaticRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<StaticRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { StaticRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\n\nvar Switch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Switch, _React$Component);\n\n  function Switch() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Switch.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Switch> outside a <Router>\") : invariant(false) : void 0;\n      var location = _this.props.location || context$$1.location;\n      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()\n      // here because toArray adds keys to all child elements and we do not want\n      // to trigger an unmount/remount for two <Route>s that render the same\n      // component at different URLs.\n\n      React.Children.forEach(_this.props.children, function (child) {\n        if (match == null && React.isValidElement(child)) {\n          element = child;\n          var path = child.props.path || child.props.from;\n          match = path ? matchPath(location.pathname, _extends({}, child.props, {\n            path: path\n          })) : context$$1.match;\n        }\n      });\n      return match ? React.cloneElement(element, {\n        location: location,\n        computedMatch: match\n      }) : null;\n    });\n  };\n\n  return Switch;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : void 0;\n  };\n}\n/**\n * A public higher-order component to access the imperative API\n */\n\n\nfunction withRouter(Component) {\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutPropertiesLoose(props, [\"wrappedComponentRef\"]);\n\n    return React.createElement(Route, {\n      children: function children(routeComponentProps) {\n        return React.createElement(Component, _extends({}, remainingProps, routeComponentProps, {\n          ref: wrappedComponentRef\n        }));\n      }\n    });\n  };\n\n  C.displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n  C.WrappedComponent = Component;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.func\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== \"undefined\") {\n    var global = window;\n    var key = \"__react_router_build__\";\n    var buildNames = {\n      cjs: \"CommonJS\",\n      esm: \"ES modules\",\n      umd: \"UMD\"\n    };\n\n    if (global[key] && global[key] !== \"esm\") {\n      var initialBuildName = buildNames[global[key]];\n      var secondaryBuildName = buildNames[\"esm\"]; // TODO: Add link to article that explains in detail how to avoid\n      // loading 2 different builds.\n\n      throw new Error(\"You are loading the \" + secondaryBuildName + \" build of React Router \" + (\"on a page that is already running the \" + initialBuildName + \" \") + \"build, so things won't work right.\");\n    }\n\n    global[key] = \"esm\";\n  }\n}\n\nexport { MemoryRouter, Prompt, Redirect, Route, Router, StaticRouter, Switch, generatePath, matchPath, withRouter, context as __RouterContext };","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StringBuilder =\n/** @class */\nfunction () {\n  function StringBuilder(value) {\n    if (value === void 0) {\n      value = '';\n    }\n\n    this.value = value;\n  }\n\n  StringBuilder.prototype.append = function (s) {\n    if (typeof s === 'string') {\n      this.value += s.toString();\n    } else {\n      this.value += String.fromCharCode(s);\n    }\n\n    return this;\n  };\n\n  StringBuilder.prototype.length = function () {\n    return this.value.length;\n  };\n\n  StringBuilder.prototype.charAt = function (n) {\n    return this.value.charAt(n);\n  };\n\n  StringBuilder.prototype.deleteCharAt = function (n) {\n    this.value = this.value.substr(0, n) + this.value.substring(n + 1);\n  };\n\n  StringBuilder.prototype.setCharAt = function (n, c) {\n    this.value = this.value.substr(0, n) + c + this.value.substr(n + 1);\n  };\n\n  StringBuilder.prototype.toString = function () {\n    return this.value;\n  };\n\n  StringBuilder.prototype.insert = function (n, c) {\n    this.value = this.value.substr(0, n) + c + this.value.substr(n + c.length);\n  };\n\n  return StringBuilder;\n}();\n\nexports.default = StringBuilder;","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { Router, __RouterContext, Route } from 'react-router';\nexport * from 'react-router';\nimport { createBrowserHistory, createHashHistory, createLocation } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Link, _React$Component);\n\n  function Link() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.handleClick = function handleClick(event, history) {\n    if (this.props.onClick) this.props.onClick(event);\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // ignore everything but left clicks\n    !this.props.target || this.props.target === \"_self\") && // let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n        event.preventDefault();\n        var method = this.props.replace ? history.replace : history.push;\n        method(this.props.to);\n      }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        replace = _this$props.replace,\n        to = _this$props.to,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"replace\", \"to\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(__RouterContext.Consumer, null, function (context) {\n      !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n      var location = typeof to === \"string\" ? createLocation(to, null, null, context.location) : to;\n      var href = location ? context.history.createHref(location) : \"\";\n      return React.createElement(\"a\", _extends({}, rest, {\n        onClick: function onClick(event) {\n          return _this.handleClick(event, context.history);\n        },\n        href: href,\n        ref: innerRef\n      }));\n    });\n  };\n\n  return Link;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);\n  var innerRefType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.propTypes = {\n    innerRef: innerRefType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nfunction NavLink(_ref) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      location = _ref.location,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"strict\", \"style\", \"to\"]);\n\n  var path = typeof to === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n      var isActive = !!(isActiveProp ? isActiveProp(match, location) : match);\n      var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n      var style = isActive ? _extends({}, styleProp, activeStyle) : styleProp;\n      return React.createElement(Link, _extends({\n        \"aria-current\": isActive && ariaCurrent || null,\n        className: className,\n        style: style,\n        to: to\n      }, rest));\n    }\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: Route.propTypes.exact,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: Route.propTypes.strict,\n    style: PropTypes.object\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n/*<replacement>*/\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  if (options && options.readable === false) this.readable = false;\n  if (options && options.writable === false) this.writable = false;\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n  pna.nextTick(cb, err);\n};","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar ChecksumException =\n/** @class */\nfunction (_super) {\n  __extends(ChecksumException, _super);\n\n  function ChecksumException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return ChecksumException;\n}(Exception_1.default);\n\nexports.default = ChecksumException;","\"use strict\";\n/*\r\n * Copyright 2012 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common.detector {*/\n\n/**\r\n * General math-related and numeric utility functions.\r\n */\n\nvar MathUtils =\n/** @class */\nfunction () {\n  function MathUtils() {}\n\n  MathUtils.prototype.MathUtils = function () {};\n  /**\r\n   * Ends up being a bit faster than {@link Math#round(float)}. This merely rounds its\r\n   * argument to the nearest int, where x.5 rounds up to x+1. Semantics of this shortcut\r\n   * differ slightly from {@link Math#round(float)} in that half rounds down for negative\r\n   * values. -2.5 rounds to -3, not -2. For purposes here it makes no difference.\r\n   *\r\n   * @param d real value to round\r\n   * @return nearest {@code int}\r\n   */\n\n\n  MathUtils.round = function (d\n  /*float*/\n  ) {\n    if (NaN === d) return 0;\n    if (d <= Number.MIN_SAFE_INTEGER) return Number.MIN_SAFE_INTEGER;\n    if (d >= Number.MAX_SAFE_INTEGER) return Number.MAX_SAFE_INTEGER;\n    return (\n      /*(int) */\n      d + (d < 0.0 ? -0.5 : 0.5) | 0\n    );\n  }; // TYPESCRIPTPORT: maybe remove round method and call directly Math.round, it looks like it doesn't make sense for js\n\n  /**\r\n   * @param aX point A x coordinate\r\n   * @param aY point A y coordinate\r\n   * @param bX point B x coordinate\r\n   * @param bY point B y coordinate\r\n   * @return Euclidean distance between points A and B\r\n   */\n\n\n  MathUtils.distance = function (aX\n  /*float|int*/\n  , aY\n  /*float|int*/\n  , bX\n  /*float|int*/\n  , bY\n  /*float|int*/\n  ) {\n    var xDiff = aX - bX;\n    var yDiff = aY - bY;\n    return (\n      /*(float) */\n      Math.sqrt(xDiff * xDiff + yDiff * yDiff)\n    );\n  };\n  /**\r\n   * @param aX point A x coordinate\r\n   * @param aY point A y coordinate\r\n   * @param bX point B x coordinate\r\n   * @param bY point B y coordinate\r\n   * @return Euclidean distance between points A and B\r\n   */\n  // public static distance(aX: number /*int*/, aY: number /*int*/, bX: number /*int*/, bY: number /*int*/): float {\n  //   const xDiff = aX - bX\n  //   const yDiff = aY - bY\n  //   return (float) Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n  // }\n\n  /**\r\n   * @param array values to sum\r\n   * @return sum of values in array\r\n   */\n\n\n  MathUtils.sum = function (array) {\n    var count = 0;\n\n    for (var i = 0, length_1 = array.length; i !== length_1; i++) {\n      var a = array[i];\n      count += a;\n    }\n\n    return count;\n  };\n\n  return MathUtils;\n}();\n\nexports.default = MathUtils;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\n/**\r\n * Represents some type of metadata about the result of the decoding that the decoder\r\n * wishes to communicate back to the caller.\r\n *\r\n * @author Sean Owen\r\n */\n\nvar ResultMetadataType;\n\n(function (ResultMetadataType) {\n  /**\r\n   * Unspecified, application-specific metadata. Maps to an unspecified {@link Object}.\r\n   */\n  ResultMetadataType[ResultMetadataType[\"OTHER\"] = 0] = \"OTHER\";\n  /**\r\n   * Denotes the likely approximate orientation of the barcode in the image. This value\r\n   * is given as degrees rotated clockwise from the normal, upright orientation.\r\n   * For example a 1D barcode which was found by reading top-to-bottom would be\r\n   * said to have orientation \"90\". This key maps to an {@link Integer} whose\r\n   * value is in the range [0,360).\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"ORIENTATION\"] = 1] = \"ORIENTATION\";\n  /**\r\n   * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode'\r\n   * which is sometimes used to encode binary data. While {@link Result} makes available\r\n   * the complete raw bytes in the barcode for these formats, it does not offer the bytes\r\n   * from the byte segments alone.</p>\r\n   *\r\n   * <p>This maps to a {@link java.util.List} of byte arrays corresponding to the\r\n   * raw bytes in the byte segments in the barcode, in order.</p>\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"BYTE_SEGMENTS\"] = 2] = \"BYTE_SEGMENTS\";\n  /**\r\n   * Error correction level used, if applicable. The value type depends on the\r\n   * format, but is typically a String.\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"ERROR_CORRECTION_LEVEL\"] = 3] = \"ERROR_CORRECTION_LEVEL\";\n  /**\r\n   * For some periodicals, indicates the issue number as an {@link Integer}.\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"ISSUE_NUMBER\"] = 4] = \"ISSUE_NUMBER\";\n  /**\r\n   * For some products, indicates the suggested retail price in the barcode as a\r\n   * formatted {@link String}.\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"SUGGESTED_PRICE\"] = 5] = \"SUGGESTED_PRICE\";\n  /**\r\n   * For some products, the possible country of manufacture as a {@link String} denoting the\r\n   * ISO country code. Some map to multiple possible countries, like \"US/CA\".\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"POSSIBLE_COUNTRY\"] = 6] = \"POSSIBLE_COUNTRY\";\n  /**\r\n   * For some products, the extension text\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"UPC_EAN_EXTENSION\"] = 7] = \"UPC_EAN_EXTENSION\";\n  /**\r\n   * PDF417-specific metadata\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"PDF417_EXTRA_METADATA\"] = 8] = \"PDF417_EXTRA_METADATA\";\n  /**\r\n   * If the code format supports structured append and the current scanned code is part of one then the\r\n   * sequence number is given with it.\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"STRUCTURED_APPEND_SEQUENCE\"] = 9] = \"STRUCTURED_APPEND_SEQUENCE\";\n  /**\r\n   * If the code format supports structured append and the current scanned code is part of one then the\r\n   * parity is given with it.\r\n   */\n\n  ResultMetadataType[ResultMetadataType[\"STRUCTURED_APPEND_PARITY\"] = 10] = \"STRUCTURED_APPEND_PARITY\";\n})(ResultMetadataType || (ResultMetadataType = {}));\n\nexports.default = ResultMetadataType;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\n/*import java.util.Arrays;*/\n\nvar System_1 = require(\"../util/System\");\n\nvar Integer_1 = require(\"../util/Integer\");\n\nvar Arrays_1 = require(\"../util/Arrays\");\n\nvar IllegalArgumentException_1 = require(\"../IllegalArgumentException\");\n/**\r\n * <p>A simple, fast array of bits, represented compactly by an array of ints internally.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar BitArray\n/*implements Cloneable*/\n=\n/** @class */\nfunction () {\n  // public constructor() {\n  //   this.size = 0\n  //   this.bits = new Int32Array(1)\n  // }\n  // public constructor(size?: number /*int*/) {\n  //   if (undefined === size) {\n  //     this.size = 0\n  //   } else {\n  //     this.size = size\n  //   }\n  //   this.bits = this.makeArray(size)\n  // }\n  // For testing only\n  function BitArray(size\n  /*int*/\n  , bits) {\n    if (undefined === size) {\n      this.size = 0;\n      this.bits = new Int32Array(1);\n    } else {\n      this.size = size;\n\n      if (undefined === bits || null === bits) {\n        this.bits = BitArray.makeArray(size);\n      } else {\n        this.bits = bits;\n      }\n    }\n  }\n\n  BitArray.prototype.getSize = function () {\n    return this.size;\n  };\n\n  BitArray.prototype.getSizeInBytes = function () {\n    return Math.floor((this.size + 7) / 8);\n  };\n\n  BitArray.prototype.ensureCapacity = function (size\n  /*int*/\n  ) {\n    if (size > this.bits.length * 32) {\n      var newBits = BitArray.makeArray(size);\n      System_1.default.arraycopy(this.bits, 0, newBits, 0, this.bits.length);\n      this.bits = newBits;\n    }\n  };\n  /**\r\n   * @param i bit to get\r\n   * @return true iff bit i is set\r\n   */\n\n\n  BitArray.prototype.get = function (i\n  /*int*/\n  ) {\n    return (this.bits[Math.floor(i / 32)] & 1 << (i & 0x1F)) !== 0;\n  };\n  /**\r\n   * Sets bit i.\r\n   *\r\n   * @param i bit to set\r\n   */\n\n\n  BitArray.prototype.set = function (i\n  /*int*/\n  ) {\n    this.bits[Math.floor(i / 32)] |= 1 << (i & 0x1F);\n  };\n  /**\r\n   * Flips bit i.\r\n   *\r\n   * @param i bit to set\r\n   */\n\n\n  BitArray.prototype.flip = function (i\n  /*int*/\n  ) {\n    this.bits[Math.floor(i / 32)] ^= 1 << (i & 0x1F);\n  };\n  /**\r\n   * @param from first bit to check\r\n   * @return index of first bit that is set, starting from the given index, or size if none are set\r\n   *  at or beyond this given index\r\n   * @see #getNextUnset(int)\r\n   */\n\n\n  BitArray.prototype.getNextSet = function (from\n  /*int*/\n  ) {\n    var size = this.size;\n\n    if (from >= size) {\n      return size;\n    }\n\n    var bits = this.bits;\n    var bitsOffset = Math.floor(from / 32);\n    var currentBits = bits[bitsOffset]; // mask off lesser bits first\n\n    currentBits &= ~((1 << (from & 0x1F)) - 1);\n    var length = bits.length;\n\n    while (currentBits === 0) {\n      if (++bitsOffset === length) {\n        return size;\n      }\n\n      currentBits = bits[bitsOffset];\n    }\n\n    var result = bitsOffset * 32 + Integer_1.default.numberOfTrailingZeros(currentBits);\n    return result > size ? size : result;\n  };\n  /**\r\n   * @param from index to start looking for unset bit\r\n   * @return index of next unset bit, or {@code size} if none are unset until the end\r\n   * @see #getNextSet(int)\r\n   */\n\n\n  BitArray.prototype.getNextUnset = function (from\n  /*int*/\n  ) {\n    var size = this.size;\n\n    if (from >= size) {\n      return size;\n    }\n\n    var bits = this.bits;\n    var bitsOffset = Math.floor(from / 32);\n    var currentBits = ~bits[bitsOffset]; // mask off lesser bits first\n\n    currentBits &= ~((1 << (from & 0x1F)) - 1);\n    var length = bits.length;\n\n    while (currentBits === 0) {\n      if (++bitsOffset === length) {\n        return size;\n      }\n\n      currentBits = ~bits[bitsOffset];\n    }\n\n    var result = bitsOffset * 32 + Integer_1.default.numberOfTrailingZeros(currentBits);\n    return result > size ? size : result;\n  };\n  /**\r\n   * Sets a block of 32 bits, starting at bit i.\r\n   *\r\n   * @param i first bit to set\r\n   * @param newBits the new value of the next 32 bits. Note again that the least-significant bit\r\n   * corresponds to bit i, the next-least-significant to i+1, and so on.\r\n   */\n\n\n  BitArray.prototype.setBulk = function (i\n  /*int*/\n  , newBits\n  /*int*/\n  ) {\n    this.bits[Math.floor(i / 32)] = newBits;\n  };\n  /**\r\n   * Sets a range of bits.\r\n   *\r\n   * @param start start of range, inclusive.\r\n   * @param end end of range, exclusive\r\n   */\n\n\n  BitArray.prototype.setRange = function (start\n  /*int*/\n  , end\n  /*int*/\n  ) {\n    if (end < start || start < 0 || end > this.size) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    if (end === start) {\n      return;\n    }\n\n    end--; // will be easier to treat this as the last actually set bit -- inclusive\n\n    var firstInt = Math.floor(start / 32);\n    var lastInt = Math.floor(end / 32);\n    var bits = this.bits;\n\n    for (var i = firstInt; i <= lastInt; i++) {\n      var firstBit = i > firstInt ? 0 : start & 0x1F;\n      var lastBit = i < lastInt ? 31 : end & 0x1F; // Ones from firstBit to lastBit, inclusive\n\n      var mask = (2 << lastBit) - (1 << firstBit);\n      bits[i] |= mask;\n    }\n  };\n  /**\r\n   * Clears all bits (sets to false).\r\n   */\n\n\n  BitArray.prototype.clear = function () {\n    var max = this.bits.length;\n    var bits = this.bits;\n\n    for (var i = 0; i < max; i++) {\n      bits[i] = 0;\n    }\n  };\n  /**\r\n   * Efficient method to check if a range of bits is set, or not set.\r\n   *\r\n   * @param start start of range, inclusive.\r\n   * @param end end of range, exclusive\r\n   * @param value if true, checks that bits in range are set, otherwise checks that they are not set\r\n   * @return true iff all bits are set or not set in range, according to value argument\r\n   * @throws IllegalArgumentException if end is less than start or the range is not contained in the array\r\n   */\n\n\n  BitArray.prototype.isRange = function (start\n  /*int*/\n  , end\n  /*int*/\n  , value) {\n    if (end < start || start < 0 || end > this.size) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    if (end === start) {\n      return true; // empty range matches\n    }\n\n    end--; // will be easier to treat this as the last actually set bit -- inclusive\n\n    var firstInt = Math.floor(start / 32);\n    var lastInt = Math.floor(end / 32);\n    var bits = this.bits;\n\n    for (var i = firstInt; i <= lastInt; i++) {\n      var firstBit = i > firstInt ? 0 : start & 0x1F;\n      var lastBit = i < lastInt ? 31 : end & 0x1F; // Ones from firstBit to lastBit, inclusive\n\n      var mask = (2 << lastBit) - (1 << firstBit) & 0xFFFFFFFF; // TYPESCRIPTPORT: & 0xFFFFFFFF added to discard anything after 32 bits, as ES has 53 bits\n      // Return false if we're looking for 1s and the masked bits[i] isn't all 1s (is: that,\n      // equals the mask, or we're looking for 0s and the masked portion is not all 0s\n\n      if ((bits[i] & mask) !== (value ? mask : 0)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  BitArray.prototype.appendBit = function (bit) {\n    this.ensureCapacity(this.size + 1);\n\n    if (bit) {\n      this.bits[Math.floor(this.size / 32)] |= 1 << (this.size & 0x1F);\n    }\n\n    this.size++;\n  };\n  /**\r\n   * Appends the least-significant bits, from value, in order from most-significant to\r\n   * least-significant. For example, appending 6 bits from 0x000001E will append the bits\r\n   * 0, 1, 1, 1, 1, 0 in that order.\r\n   *\r\n   * @param value {@code int} containing bits to append\r\n   * @param numBits bits from value to append\r\n   */\n\n\n  BitArray.prototype.appendBits = function (value\n  /*int*/\n  , numBits\n  /*int*/\n  ) {\n    if (numBits < 0 || numBits > 32) {\n      throw new IllegalArgumentException_1.default('Num bits must be between 0 and 32');\n    }\n\n    this.ensureCapacity(this.size + numBits);\n    var appendBit = this.appendBit;\n\n    for (var numBitsLeft = numBits; numBitsLeft > 0; numBitsLeft--) {\n      this.appendBit((value >> numBitsLeft - 1 & 0x01) === 1);\n    }\n  };\n\n  BitArray.prototype.appendBitArray = function (other) {\n    var otherSize = other.size;\n    this.ensureCapacity(this.size + otherSize);\n    var appendBit = this.appendBit;\n\n    for (var i = 0; i < otherSize; i++) {\n      this.appendBit(other.get(i));\n    }\n  };\n\n  BitArray.prototype.xor = function (other) {\n    if (this.size !== other.size) {\n      throw new IllegalArgumentException_1.default('Sizes don\\'t match');\n    }\n\n    var bits = this.bits;\n\n    for (var i = 0, length_1 = bits.length; i < length_1; i++) {\n      // The last int could be incomplete (i.e. not have 32 bits in\n      // it) but there is no problem since 0 XOR 0 == 0.\n      bits[i] ^= other.bits[i];\n    }\n  };\n  /**\r\n   *\r\n   * @param bitOffset first bit to start writing\r\n   * @param array array to write into. Bytes are written most-significant byte first. This is the opposite\r\n   *  of the internal representation, which is exposed by {@link #getBitArray()}\r\n   * @param offset position in array to start writing\r\n   * @param numBytes how many bytes to write\r\n   */\n\n\n  BitArray.prototype.toBytes = function (bitOffset\n  /*int*/\n  , array, offset\n  /*int*/\n  , numBytes\n  /*int*/\n  ) {\n    for (var i = 0; i < numBytes; i++) {\n      var theByte = 0;\n\n      for (var j = 0; j < 8; j++) {\n        if (this.get(bitOffset)) {\n          theByte |= 1 << 7 - j;\n        }\n\n        bitOffset++;\n      }\n\n      array[offset + i] =\n      /*(byte)*/\n      theByte;\n    }\n  };\n  /**\r\n   * @return underlying array of ints. The first element holds the first 32 bits, and the least\r\n   *         significant bit is bit 0.\r\n   */\n\n\n  BitArray.prototype.getBitArray = function () {\n    return this.bits;\n  };\n  /**\r\n   * Reverses all bits in the array.\r\n   */\n\n\n  BitArray.prototype.reverse = function () {\n    var newBits = new Int32Array(this.bits.length); // reverse all int's first\n\n    var len = Math.floor((this.size - 1) / 32);\n    var oldBitsLen = len + 1;\n    var bits = this.bits;\n\n    for (var i = 0; i < oldBitsLen; i++) {\n      var x = bits[i];\n      x = x >> 1 & 0x55555555 | (x & 0x55555555) << 1;\n      x = x >> 2 & 0x33333333 | (x & 0x33333333) << 2;\n      x = x >> 4 & 0x0f0f0f0f | (x & 0x0f0f0f0f) << 4;\n      x = x >> 8 & 0x00ff00ff | (x & 0x00ff00ff) << 8;\n      x = x >> 16 & 0x0000ffff | (x & 0x0000ffff) << 16;\n      newBits[len - i] =\n      /*(int)*/\n      x;\n    } // now correct the int's if the bit size isn't a multiple of 32\n\n\n    if (this.size !== oldBitsLen * 32) {\n      var leftOffset = oldBitsLen * 32 - this.size;\n      var currentInt = newBits[0] >>> leftOffset;\n\n      for (var i = 1; i < oldBitsLen; i++) {\n        var nextInt = newBits[i];\n        currentInt |= nextInt << 32 - leftOffset;\n        newBits[i - 1] = currentInt;\n        currentInt = nextInt >>> leftOffset;\n      }\n\n      newBits[oldBitsLen - 1] = currentInt;\n    }\n\n    this.bits = newBits;\n  };\n\n  BitArray.makeArray = function (size\n  /*int*/\n  ) {\n    return new Int32Array(Math.floor((size + 31) / 32));\n  };\n  /*@Override*/\n\n\n  BitArray.prototype.equals = function (o) {\n    if (!(o instanceof BitArray)) {\n      return false;\n    }\n\n    var other = o;\n    return this.size === other.size && Arrays_1.default.equals(this.bits, other.bits);\n  };\n  /*@Override*/\n\n\n  BitArray.prototype.hashCode = function () {\n    return 31 * this.size + Arrays_1.default.hashCode(this.bits);\n  };\n  /*@Override*/\n\n\n  BitArray.prototype.toString = function () {\n    var result = '';\n\n    for (var i = 0, size = this.size; i < size; i++) {\n      if ((i & 0x07) === 0) {\n        result += ' ';\n      }\n\n      result += this.get(i) ? 'X' : '.';\n    }\n\n    return result;\n  };\n  /*@Override*/\n\n\n  BitArray.prototype.clone = function () {\n    return new BitArray(this.size, this.bits.slice());\n  };\n\n  return BitArray;\n}();\n\nexports.default = BitArray;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common.reedsolomon {*/\n\nvar GenericGFPoly_1 = require(\"./GenericGFPoly\");\n\nvar Integer_1 = require(\"../../util/Integer\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n\nvar ArithmeticException_1 = require(\"../../ArithmeticException\");\n/**\r\n * <p>This class contains utility methods for performing mathematical operations over\r\n * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\r\n *\r\n * <p>Throughout this package, elements of the GF are represented as an {@code int}\r\n * for convenience and speed (but at the cost of memory).\r\n * </p>\r\n *\r\n * @author Sean Owen\r\n * @author David Olivier\r\n */\n\n\nvar GenericGF =\n/** @class */\nfunction () {\n  /**\r\n   * Create a representation of GF(size) using the given primitive polynomial.\r\n   *\r\n   * @param primitive irreducible polynomial whose coefficients are represented by\r\n   *  the bits of an int, where the least-significant bit represents the constant\r\n   *  coefficient\r\n   * @param size the size of the field\r\n   * @param b the factor b in the generator polynomial can be 0- or 1-based\r\n   *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).\r\n   *  In most cases it should be 1, but for QR code it is 0.\r\n   */\n  function GenericGF(primitive\n  /*int*/\n  , size\n  /*int*/\n  , generatorBase\n  /*int*/\n  ) {\n    this.primitive = primitive;\n    this.size = size;\n    this.generatorBase = generatorBase;\n    var expTable = new Int32Array(size);\n    var x = 1;\n\n    for (var i = 0; i < size; i++) {\n      expTable[i] = x;\n      x *= 2; // we're assuming the generator alpha is 2\n\n      if (x >= size) {\n        x ^= primitive;\n        x &= size - 1;\n      }\n    }\n\n    this.expTable = expTable;\n    var logTable = new Int32Array(size);\n\n    for (var i = 0; i < size - 1; i++) {\n      logTable[expTable[i]] = i;\n    }\n\n    this.logTable = logTable; // logTable[0] == 0 but this should never be used\n\n    this.zero = new GenericGFPoly_1.default(this, Int32Array.from([0]));\n    this.one = new GenericGFPoly_1.default(this, Int32Array.from([1]));\n  }\n\n  GenericGF.prototype.getZero = function () {\n    return this.zero;\n  };\n\n  GenericGF.prototype.getOne = function () {\n    return this.one;\n  };\n  /**\r\n   * @return the monomial representing coefficient * x^degree\r\n   */\n\n\n  GenericGF.prototype.buildMonomial = function (degree\n  /*int*/\n  , coefficient\n  /*int*/\n  ) {\n    if (degree < 0) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    if (coefficient === 0) {\n      return this.zero;\n    }\n\n    var coefficients = new Int32Array(degree + 1);\n    coefficients[0] = coefficient;\n    return new GenericGFPoly_1.default(this, coefficients);\n  };\n  /**\r\n   * Implements both addition and subtraction -- they are the same in GF(size).\r\n   *\r\n   * @return sum/difference of a and b\r\n   */\n\n\n  GenericGF.addOrSubtract = function (a\n  /*int*/\n  , b\n  /*int*/\n  ) {\n    return a ^ b;\n  };\n  /**\r\n   * @return 2 to the power of a in GF(size)\r\n   */\n\n\n  GenericGF.prototype.exp = function (a\n  /*int*/\n  ) {\n    return this.expTable[a];\n  };\n  /**\r\n   * @return base 2 log of a in GF(size)\r\n   */\n\n\n  GenericGF.prototype.log = function (a\n  /*int*/\n  ) {\n    if (a === 0) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    return this.logTable[a];\n  };\n  /**\r\n   * @return multiplicative inverse of a\r\n   */\n\n\n  GenericGF.prototype.inverse = function (a\n  /*int*/\n  ) {\n    if (a === 0) {\n      throw new ArithmeticException_1.default();\n    }\n\n    return this.expTable[this.size - this.logTable[a] - 1];\n  };\n  /**\r\n   * @return product of a and b in GF(size)\r\n   */\n\n\n  GenericGF.prototype.multiply = function (a\n  /*int*/\n  , b\n  /*int*/\n  ) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n  };\n\n  GenericGF.prototype.getSize = function () {\n    return this.size;\n  };\n\n  GenericGF.prototype.getGeneratorBase = function () {\n    return this.generatorBase;\n  };\n  /*@Override*/\n\n\n  GenericGF.prototype.toString = function () {\n    return 'GF(0x' + Integer_1.default.toHexString(this.primitive) + ',' + this.size + ')';\n  };\n\n  GenericGF.prototype.equals = function (o) {\n    return o === this;\n  };\n\n  GenericGF.AZTEC_DATA_12 = new GenericGF(0x1069, 4096, 1); // x^12 + x^6 + x^5 + x^3 + 1\n\n  GenericGF.AZTEC_DATA_10 = new GenericGF(0x409, 1024, 1); // x^10 + x^3 + 1\n\n  GenericGF.AZTEC_DATA_6 = new GenericGF(0x43, 64, 1); // x^6 + x + 1\n\n  GenericGF.AZTEC_PARAM = new GenericGF(0x13, 16, 1); // x^4 + x + 1\n\n  GenericGF.QR_CODE_FIELD_256 = new GenericGF(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n\n  GenericGF.DATA_MATRIX_FIELD_256 = new GenericGF(0x012D, 256, 1); // x^8 + x^5 + x^3 + x^2 + 1\n\n  GenericGF.AZTEC_DATA_8 = GenericGF.DATA_MATRIX_FIELD_256;\n  GenericGF.MAXICODE_FIELD_64 = GenericGF.AZTEC_DATA_6;\n  return GenericGF;\n}();\n\nexports.default = GenericGF;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n\n  return objectToString(arg) === '[object Array]';\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return objectToString(e) === '[object Error]' || e instanceof Error;\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar HTMLCanvasElementLuminanceSource_1 = require(\"./HTMLCanvasElementLuminanceSource\");\n\nvar VideoInputDevice_1 = require(\"./VideoInputDevice\");\n\nvar BinaryBitmap_1 = require(\"../core/BinaryBitmap\");\n\nvar HybridBinarizer_1 = require(\"../core/common/HybridBinarizer\");\n\nvar NotFoundException_1 = require(\"../core/NotFoundException\");\n\nvar ArgumentException_1 = require(\"../core/ArgumentException\");\n\nvar ChecksumException_1 = require(\"../core/ChecksumException\");\n\nvar FormatException_1 = require(\"../core/FormatException\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * Base class for browser code reader.\r\n */\n\n\nvar BrowserCodeReader =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of BrowserCodeReader.\r\n   * @param {Reader} reader The reader instance to decode the barcode\r\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\r\n   *\r\n   * @memberOf BrowserCodeReader\r\n   */\n  function BrowserCodeReader(reader, timeBetweenScansMillis, hints) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    this.reader = reader;\n    this.timeBetweenScansMillis = timeBetweenScansMillis;\n    this.hints = hints;\n  }\n  /**\r\n   * Obtain the list of available devices with type 'videoinput'.\r\n   *\r\n   * @returns {Promise<VideoInputDevice[]>} an array of available video input devices\r\n   *\r\n   * @memberOf BrowserCodeReader\r\n   */\n\n\n  BrowserCodeReader.prototype.getVideoInputDevices = function () {\n    return new Promise(function (resolve, reject) {\n      navigator.mediaDevices.enumerateDevices().then(function (devices) {\n        var sources = new Array();\n        var c = 0;\n\n        for (var i = 0, length_1 = devices.length; i !== length_1; i++) {\n          var device = devices[i];\n\n          if (device.kind === 'videoinput') {\n            sources.push(new VideoInputDevice_1.VideoInputDevice(device.deviceId, device.label || \"Video source \" + c));\n            c++;\n          }\n        }\n\n        resolve(sources);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  };\n  /**\r\n   * Decodes the barcode from the device specified by deviceId while showing the video in the specified video element.\r\n   *\r\n   * @param {string} [deviceId] the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\r\n   * @param {(string|HTMLVideoElement)} [videoElement] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\r\n   * @returns {Promise<Result>} The decoding result.\r\n   *\r\n   * @memberOf BrowserCodeReader\r\n   */\n\n\n  BrowserCodeReader.prototype.decodeFromInputVideoDevice = function (deviceId, videoElement) {\n    var _this = this;\n\n    this.reset();\n    this.prepareVideoElement(videoElement);\n    var constraints;\n\n    if (undefined === deviceId) {\n      constraints = {\n        video: {\n          facingMode: 'environment'\n        }\n      };\n    } else {\n      constraints = {\n        video: {\n          deviceId: {\n            exact: deviceId\n          }\n        }\n      };\n    }\n\n    return new Promise(function (resolve, reject) {\n      var callback = function callback() {\n        _this.decodeOnceWithDelay(resolve, reject);\n      };\n\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        return _this.startDecodeFromStream(stream, callback);\n      }).catch(function (error) {\n        return reject(error);\n      });\n    });\n  };\n  /**\r\n   * Sets the new stream and request a new decoding-with-delay.\r\n   *\r\n   * @param stream The stream to be shown in the video element.\r\n   * @param callbackFn A callback for the decode method.\r\n   *\r\n   * @todo Return Promise<Result>\r\n   */\n\n\n  BrowserCodeReader.prototype.startDecodeFromStream = function (stream, callbackFn) {\n    this.stream = stream;\n\n    if (!this.videoElement && this.stream.active) {\n      return this.reset();\n    }\n\n    this.bindVideoSrc(this.videoElement, stream);\n    this.bindEvents(this.videoElement, callbackFn);\n  };\n  /**\r\n   * Binds listeners and callbacks to the videoElement.\r\n   *\r\n   * @param videoElement\r\n   * @param callbackFn\r\n   */\n\n\n  BrowserCodeReader.prototype.bindEvents = function (videoElement, listener) {\n    this.videoPlayingEventListener = listener;\n    videoElement.addEventListener('playing', this.videoPlayingEventListener);\n\n    this.videoLoadedMetadataEventListener = function () {\n      return videoElement.play();\n    };\n\n    videoElement.addEventListener('loadedmetadata', this.videoLoadedMetadataEventListener);\n  };\n  /**\r\n   * Decodes a barcode form a video url.\r\n   *\r\n   * @param {string} videoUrl The video url to decode from, required.\r\n   * @param {(string|HTMLVideoElement)} [videoElement] The video element where to play the video while decoding. Can be undefined in which case no video is shown.\r\n   * @returns {Promise<Result>} The decoding result.\r\n   *\r\n   * @memberOf BrowserCodeReader\r\n   */\n\n\n  BrowserCodeReader.prototype.decodeFromVideoSource = function (videoUrl, videoElement) {\n    var _this = this;\n\n    this.reset();\n    this.prepareVideoElement(videoElement);\n    return new Promise(function (resolve, reject) {\n      _this.videoPlayEndedEventListener = function () {\n        _this.stopStreams();\n\n        reject(new NotFoundException_1.default());\n      };\n\n      _this.videoElement.addEventListener('ended', _this.videoPlayEndedEventListener);\n\n      _this.videoPlayingEventListener = function () {\n        _this.decodeOnceWithDelay(resolve, reject);\n      };\n\n      _this.videoElement.addEventListener('playing', _this.videoPlayingEventListener);\n\n      _this.videoElement.setAttribute('autoplay', 'true');\n\n      _this.videoElement.setAttribute('src', videoUrl);\n    });\n  };\n  /**\r\n   * Sets a HTMLVideoElement for scanning or creates a new one.\r\n   *\r\n   * @param videoElement The HTMLVideoElement to be set.\r\n   */\n\n\n  BrowserCodeReader.prototype.prepareVideoElement = function (videoElement) {\n    if (!videoElement && typeof document !== 'undefined') {\n      videoElement = document.createElement('video');\n      videoElement.width = 200;\n      videoElement.height = 200;\n    }\n\n    if (typeof videoElement === 'string') {\n      videoElement = this.getMediaElement(videoElement, 'video');\n    } // Needed for iOS 11\n\n\n    videoElement.setAttribute('autoplay', 'true');\n    videoElement.setAttribute('muted', 'true');\n    videoElement.setAttribute('playsinline', 'true');\n    videoElement.setAttribute('autofocus', 'true');\n    this.videoElement = videoElement;\n  };\n\n  BrowserCodeReader.prototype.getMediaElement = function (mediaElementId, type) {\n    var mediaElement = document.getElementById(mediaElementId);\n\n    if (null === mediaElement) {\n      throw new ArgumentException_1.default(\"element with id '\" + mediaElementId + \"' not found\");\n    }\n\n    if (mediaElement.nodeName.toLowerCase() !== type.toLowerCase()) {\n      throw new ArgumentException_1.default(\"element with id '\" + mediaElementId + \"' must be an \" + type + \" element\");\n    }\n\n    return mediaElement;\n  };\n  /**\r\n   * Decodes the barcode from an image.\r\n   *\r\n   * @param {(string|HTMLImageElement)} [imageElement] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\r\n   * @param {string} [imageUrl]\r\n   * @returns {Promise<Result>} The decoding result.\r\n   *\r\n   * @memberOf BrowserCodeReader\r\n   */\n\n\n  BrowserCodeReader.prototype.decodeFromImage = function (imageElement, imageUrl) {\n    var _this = this;\n\n    this.reset();\n\n    if (undefined === imageElement && undefined === imageUrl) {\n      throw new ArgumentException_1.default('either imageElement with a src set or an url must be provided');\n    }\n\n    this.prepareImageElement(imageElement);\n    return new Promise(function (resolve, reject) {\n      if (undefined !== imageUrl) {\n        _this.imageLoadedEventListener = function () {\n          _this.decodeOnce(resolve, reject, false, true);\n        };\n\n        _this.imageElement.addEventListener('load', _this.imageLoadedEventListener);\n\n        _this.imageElement.src = imageUrl;\n      } else if (_this.isImageLoaded(_this.imageElement)) {\n        _this.decodeOnce(resolve, reject, false, true);\n      } else {\n        throw new ArgumentException_1.default(\"either src or a loaded img should be provided\");\n      }\n    });\n  };\n\n  BrowserCodeReader.prototype.isImageLoaded = function (img) {\n    // During the onload event, IE correctly identifies any images that\n    // weren’t downloaded as not complete. Others should too. Gecko-based\n    // browsers act like NS4 in that they report this incorrectly.\n    if (!img.complete) {\n      return false;\n    } // However, they do have two very useful properties: naturalWidth and\n    // naturalHeight. These give the true size of the image. If it failed\n    // to load, either of these should be zero.\n\n\n    if (img.naturalWidth === 0) {\n      return false;\n    } // No other way of checking: assume it’s ok.\n\n\n    return true;\n  };\n\n  BrowserCodeReader.prototype.prepareImageElement = function (imageElement) {\n    if (typeof imageElement === 'undefined') {\n      imageElement = document.createElement('img');\n      imageElement.width = 200;\n      imageElement.height = 200;\n    }\n\n    if (typeof imageElement === 'string') {\n      imageElement = this.getMediaElement(imageElement, 'img');\n    }\n\n    this.imageElement = imageElement;\n  };\n\n  BrowserCodeReader.prototype.decodeOnceWithDelay = function (resolve, reject) {\n    this.timeoutHandler = window.setTimeout(this.decodeOnce.bind(this, resolve, reject), this.timeBetweenScansMillis);\n  };\n\n  BrowserCodeReader.prototype.decodeOnce = function (resolve, reject, retryIfNotFound, retryIfChecksumOrFormatError) {\n    if (retryIfNotFound === void 0) {\n      retryIfNotFound = true;\n    }\n\n    if (retryIfChecksumOrFormatError === void 0) {\n      retryIfChecksumOrFormatError = true;\n    }\n\n    try {\n      var result = this.decode();\n      resolve(result);\n    } catch (re) {\n      if (retryIfNotFound && re instanceof NotFoundException_1.default) {\n        // Not found, trying again\n        this.decodeOnceWithDelay(resolve, reject);\n      } else if (retryIfChecksumOrFormatError && (re instanceof ChecksumException_1.default || re instanceof FormatException_1.default)) {\n        // checksum or format error, trying again\n        this.decodeOnceWithDelay(resolve, reject);\n      } else {\n        reject(re);\n      }\n    }\n  };\n  /**\r\n   * Gets the BinaryBitmap for ya! (and decodes it)\r\n   */\n\n\n  BrowserCodeReader.prototype.decode = function () {\n    // get binary bitmap for decode function\n    var binaryBitmap = this.createBinaryBitmap(this.videoElement || this.imageElement);\n    return this.decodeBitmap(binaryBitmap);\n  };\n  /**\r\n   * Creates a binaryBitmap based in some image source.\r\n   *\r\n   * @param mediaElement HTML element containing drawable image source.\r\n   */\n\n\n  BrowserCodeReader.prototype.createBinaryBitmap = function (mediaElement) {\n    if (undefined === this.canvasElementContext) {\n      this.prepareCaptureCanvas();\n    }\n\n    this.drawImageOnCanvas(this.canvasElementContext, mediaElement);\n    var luminanceSource = new HTMLCanvasElementLuminanceSource_1.HTMLCanvasElementLuminanceSource(this.canvasElement);\n    var hybridBinarizer = new HybridBinarizer_1.default(luminanceSource);\n    return new BinaryBitmap_1.default(hybridBinarizer);\n  };\n  /**\r\n   * Ovewriting this allows you to manipulate the snapshot image in anyway you want before decode.\r\n   */\n\n\n  BrowserCodeReader.prototype.drawImageOnCanvas = function (canvasElementContext, srcElement) {\n    canvasElementContext.drawImage(srcElement, 0, 0);\n  };\n  /**\r\n   * Call the encapsulated readers decode\r\n   */\n\n\n  BrowserCodeReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decode(binaryBitmap, this.hints);\n  };\n  /**\r\n   * 🖌 Prepares the canvas for capture and scan frames.\r\n   */\n\n\n  BrowserCodeReader.prototype.prepareCaptureCanvas = function () {\n    if (typeof document === 'undefined') {\n      this.canvasElement = undefined;\n      this.canvasElementContext = undefined;\n      return;\n    }\n\n    var canvasElement = document.createElement('canvas');\n    var width;\n    var height;\n\n    if (typeof this.videoElement !== 'undefined') {\n      width = this.videoElement.videoWidth;\n      height = this.videoElement.videoHeight;\n    }\n\n    if (!width && !height && typeof this.imageElement !== 'undefined') {\n      width = this.imageElement.naturalWidth || this.imageElement.width;\n      height = this.imageElement.naturalHeight || this.imageElement.height;\n    }\n\n    canvasElement.style.width = width + 'px';\n    canvasElement.style.height = height + 'px';\n    canvasElement.width = width;\n    canvasElement.height = height;\n    this.canvasElement = canvasElement;\n    this.canvasElementContext = canvasElement.getContext('2d');\n  };\n  /**\r\n   * Stops the continuous scan and cleans the stream.\r\n   */\n\n\n  BrowserCodeReader.prototype.stopStreams = function () {\n    if (this.stream) {\n      this.stream.getVideoTracks().forEach(function (t) {\n        return t.stop();\n      });\n      this.stream = undefined;\n    }\n  };\n  /**\r\n   * Resets the code reader to the initial state. Cancels any ongoing barcode scanning from video or camera.\r\n   *\r\n   * @memberOf BrowserCodeReader\r\n   */\n\n\n  BrowserCodeReader.prototype.reset = function () {\n    window.clearTimeout(this.timeoutHandler); // stops the camera, preview and scan 🔴\n\n    this.stopStreams();\n\n    if (undefined !== this.videoPlayEndedEventListener && undefined !== this.videoElement) {\n      this.videoElement.removeEventListener('ended', this.videoPlayEndedEventListener);\n    }\n\n    if (undefined !== this.videoPlayingEventListener && undefined !== this.videoElement) {\n      this.videoElement.removeEventListener('playing', this.videoPlayingEventListener);\n    }\n\n    if (undefined !== this.videoElement) {\n      this.unbindVideoSrc(this.videoElement);\n      this.videoElement = undefined;\n    }\n\n    if (undefined !== this.videoPlayEndedEventListener && undefined !== this.imageElement) {\n      this.imageElement.removeEventListener('load', this.imageLoadedEventListener);\n    }\n\n    if (undefined !== this.imageElement) {\n      this.imageElement.src = undefined;\n      this.imageElement.removeAttribute('src');\n      this.imageElement = undefined;\n    }\n\n    this.canvasElementContext = undefined;\n    this.canvasElement = undefined;\n  };\n  /**\r\n   * Defines what the videoElement src will be.\r\n   *\r\n   * @param videoElement\r\n   * @param stream\r\n   */\n\n\n  BrowserCodeReader.prototype.bindVideoSrc = function (videoElement, stream) {\n    // Older browsers may not have `srcObject`\n    try {\n      // @NOTE Throws Exception if interrupted by a new loaded request\n      videoElement.srcObject = stream;\n    } catch (err) {\n      // @NOTE Avoid using this in new browsers, as it is going away.\n      videoElement.src = window.URL.createObjectURL(stream);\n    }\n  };\n  /**\r\n   * Unbinds a HTML video src property.\r\n   *\r\n   * @param videoElement\r\n   */\n\n\n  BrowserCodeReader.prototype.unbindVideoSrc = function (videoElement) {\n    try {\n      videoElement.srcObject = null;\n    } catch (err) {\n      videoElement.src = '';\n    }\n  };\n\n  return BrowserCodeReader;\n}();\n\nexports.BrowserCodeReader = BrowserCodeReader;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar LuminanceSource_1 = require(\"./LuminanceSource\");\n/*namespace com.google.zxing {*/\n\n/**\r\n * A wrapper implementation of {@link LuminanceSource} which inverts the luminances it returns -- black becomes\r\n * white and vice versa, and each value becomes (255-value).\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar InvertedLuminanceSource =\n/** @class */\nfunction (_super) {\n  __extends(InvertedLuminanceSource, _super);\n\n  function InvertedLuminanceSource(delegate) {\n    var _this = _super.call(this, delegate.getWidth(), delegate.getHeight()) || this;\n\n    _this.delegate = delegate;\n    return _this;\n  }\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    var sourceRow = this.delegate.getRow(y, row);\n    var width = this.getWidth();\n\n    for (var i = 0; i < width; i++) {\n      sourceRow[i] =\n      /*(byte)*/\n      255 - (sourceRow[i] & 0xFF);\n    }\n\n    return sourceRow;\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.getMatrix = function () {\n    var matrix = this.delegate.getMatrix();\n    var length = this.getWidth() * this.getHeight();\n    var invertedMatrix = new Uint8ClampedArray(length);\n\n    for (var i = 0; i < length; i++) {\n      invertedMatrix[i] =\n      /*(byte)*/\n      255 - (matrix[i] & 0xFF);\n    }\n\n    return invertedMatrix;\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.isCropSupported = function () {\n    return this.delegate.isCropSupported();\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    return new InvertedLuminanceSource(this.delegate.crop(left, top, width, height));\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.isRotateSupported = function () {\n    return this.delegate.isRotateSupported();\n  };\n  /**\r\n   * @return original delegate {@link LuminanceSource} since invert undoes itself\r\n   */\n\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.invert = function () {\n    return this.delegate;\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.rotateCounterClockwise = function () {\n    return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise());\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise45());\n  };\n\n  return InvertedLuminanceSource;\n}(LuminanceSource_1.default);\n\nexports.default = InvertedLuminanceSource;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StringBuilder_1 = require(\"./util/StringBuilder\");\n\nvar UnsupportedOperationException_1 = require(\"./UnsupportedOperationException\");\n/*namespace com.google.zxing {*/\n\n/**\r\n * The purpose of this class hierarchy is to abstract different bitmap implementations across\r\n * platforms into a standard interface for requesting greyscale luminance values. The interface\r\n * only provides immutable methods; therefore crop and rotation create copies. This is to ensure\r\n * that one Reader does not modify the original luminance source and leave it in an unknown state\r\n * for other Readers in the chain.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar LuminanceSource =\n/** @class */\nfunction () {\n  function LuminanceSource(width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    this.width = width;\n    this.height = height;\n  }\n  /**\r\n   * @return The width of the bitmap.\r\n   */\n\n\n  LuminanceSource.prototype.getWidth = function () {\n    return this.width;\n  };\n  /**\r\n   * @return The height of the bitmap.\r\n   */\n\n\n  LuminanceSource.prototype.getHeight = function () {\n    return this.height;\n  };\n  /**\r\n   * @return Whether this subclass supports cropping.\r\n   */\n\n\n  LuminanceSource.prototype.isCropSupported = function () {\n    return false;\n  };\n  /**\r\n   * Returns a new object with cropped image data. Implementations may keep a reference to the\r\n   * original data rather than a copy. Only callable if isCropSupported() is true.\r\n   *\r\n   * @param left The left coordinate, which must be in [0,getWidth())\r\n   * @param top The top coordinate, which must be in [0,getHeight())\r\n   * @param width The width of the rectangle to crop.\r\n   * @param height The height of the rectangle to crop.\r\n   * @return A cropped version of this object.\r\n   */\n\n\n  LuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    throw new UnsupportedOperationException_1.default('This luminance source does not support cropping.');\n  };\n  /**\r\n   * @return Whether this subclass supports counter-clockwise rotation.\r\n   */\n\n\n  LuminanceSource.prototype.isRotateSupported = function () {\n    return false;\n  };\n  /**\r\n   * Returns a new object with rotated image data by 90 degrees counterclockwise.\r\n   * Only callable if {@link #isRotateSupported()} is true.\r\n   *\r\n   * @return A rotated version of this object.\r\n   */\n\n\n  LuminanceSource.prototype.rotateCounterClockwise = function () {\n    throw new UnsupportedOperationException_1.default('This luminance source does not support rotation by 90 degrees.');\n  };\n  /**\r\n   * Returns a new object with rotated image data by 45 degrees counterclockwise.\r\n   * Only callable if {@link #isRotateSupported()} is true.\r\n   *\r\n   * @return A rotated version of this object.\r\n   */\n\n\n  LuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    throw new UnsupportedOperationException_1.default('This luminance source does not support rotation by 45 degrees.');\n  };\n  /*@Override*/\n\n\n  LuminanceSource.prototype.toString = function () {\n    var row = new Uint8ClampedArray(this.width);\n    var result = new StringBuilder_1.default();\n\n    for (var y = 0; y < this.height; y++) {\n      var sourceRow = this.getRow(y, row);\n\n      for (var x = 0; x < this.width; x++) {\n        var luminance = sourceRow[x] & 0xFF;\n        var c = void 0;\n\n        if (luminance < 0x40) {\n          c = '#';\n        } else if (luminance < 0x80) {\n          c = '+';\n        } else if (luminance < 0xC0) {\n          c = '.';\n        } else {\n          c = ' ';\n        }\n\n        result.append(c);\n      }\n\n      result.append('\\n');\n    }\n\n    return result.toString();\n  };\n\n  return LuminanceSource;\n}();\n\nexports.default = LuminanceSource;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar IllegalStateException =\n/** @class */\nfunction (_super) {\n  __extends(IllegalStateException, _super);\n\n  function IllegalStateException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return IllegalStateException;\n}(Exception_1.default);\n\nexports.default = IllegalStateException;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\nvar FormatException_1 = require(\"../FormatException\");\n/*import java.util.HashMap;*/\n\n/*import java.util.Map;*/\n\n\nvar CharacterSetValueIdentifiers;\n\n(function (CharacterSetValueIdentifiers) {\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp437\"] = 0] = \"Cp437\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_1\"] = 1] = \"ISO8859_1\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_2\"] = 2] = \"ISO8859_2\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_3\"] = 3] = \"ISO8859_3\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_4\"] = 4] = \"ISO8859_4\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_5\"] = 5] = \"ISO8859_5\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_6\"] = 6] = \"ISO8859_6\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_7\"] = 7] = \"ISO8859_7\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_8\"] = 8] = \"ISO8859_8\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_9\"] = 9] = \"ISO8859_9\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_10\"] = 10] = \"ISO8859_10\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_11\"] = 11] = \"ISO8859_11\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_13\"] = 12] = \"ISO8859_13\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_14\"] = 13] = \"ISO8859_14\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_15\"] = 14] = \"ISO8859_15\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_16\"] = 15] = \"ISO8859_16\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"SJIS\"] = 16] = \"SJIS\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1250\"] = 17] = \"Cp1250\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1251\"] = 18] = \"Cp1251\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1252\"] = 19] = \"Cp1252\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1256\"] = 20] = \"Cp1256\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"UnicodeBigUnmarked\"] = 21] = \"UnicodeBigUnmarked\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"UTF8\"] = 22] = \"UTF8\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ASCII\"] = 23] = \"ASCII\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Big5\"] = 24] = \"Big5\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"GB18030\"] = 25] = \"GB18030\";\n  CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"EUC_KR\"] = 26] = \"EUC_KR\";\n})(CharacterSetValueIdentifiers = exports.CharacterSetValueIdentifiers || (exports.CharacterSetValueIdentifiers = {}));\n/**\r\n * Encapsulates a Character Set ECI, according to \"Extended Channel Interpretations\" 5.3.1.1\r\n * of ISO 18004.\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar CharacterSetECI =\n/** @class */\nfunction () {\n  function CharacterSetECI(valueIdentifier, valuesParam, name) {\n    var otherEncodingNames = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      otherEncodingNames[_i - 3] = arguments[_i];\n    }\n\n    this.valueIdentifier = valueIdentifier;\n    this.name = name;\n\n    if (typeof valuesParam === 'number') {\n      this.values = Int32Array.from([valuesParam]);\n    } else {\n      this.values = valuesParam;\n    }\n\n    this.otherEncodingNames = otherEncodingNames;\n    CharacterSetECI.VALUE_IDENTIFIER_TO_ECI.set(valueIdentifier, this);\n    CharacterSetECI.NAME_TO_ECI.set(name, this);\n    var values = this.values;\n\n    for (var i = 0, length_1 = values.length; i !== length_1; i++) {\n      var v = values[i];\n      CharacterSetECI.VALUES_TO_ECI.set(v, this);\n    }\n\n    for (var _a = 0, otherEncodingNames_1 = otherEncodingNames; _a < otherEncodingNames_1.length; _a++) {\n      var otherName = otherEncodingNames_1[_a];\n      CharacterSetECI.NAME_TO_ECI.set(otherName, this);\n    }\n  } // CharacterSetECI(value: number /*int*/) {\n  //   this(new Int32Array {value})\n  // }\n  // CharacterSetECI(value: number /*int*/, String... otherEncodingNames) {\n  //   this.values = new Int32Array {value}\n  //   this.otherEncodingNames = otherEncodingNames\n  // }\n  // CharacterSetECI(values: Int32Array, String... otherEncodingNames) {\n  //   this.values = values\n  //   this.otherEncodingNames = otherEncodingNames\n  // }\n\n\n  CharacterSetECI.prototype.getValueIdentifier = function () {\n    return this.valueIdentifier;\n  };\n\n  CharacterSetECI.prototype.getName = function () {\n    return this.name;\n  };\n\n  CharacterSetECI.prototype.getValue = function () {\n    return this.values[0];\n  };\n  /**\r\n   * @param value character set ECI value\r\n   * @return {@code CharacterSetECI} representing ECI of given value, or null if it is legal but\r\n   *   unsupported\r\n   * @throws FormatException if ECI value is invalid\r\n   */\n\n\n  CharacterSetECI.getCharacterSetECIByValue = function (value\n  /*int*/\n  ) {\n    if (value < 0 || value >= 900) {\n      throw new FormatException_1.default('incorect value');\n    }\n\n    var characterSet = CharacterSetECI.VALUES_TO_ECI.get(value);\n\n    if (undefined === characterSet) {\n      throw new FormatException_1.default('incorect value');\n    }\n\n    return characterSet;\n  };\n  /**\r\n   * @param name character set ECI encoding name\r\n   * @return CharacterSetECI representing ECI for character encoding, or null if it is legal\r\n   *   but unsupported\r\n   */\n\n\n  CharacterSetECI.getCharacterSetECIByName = function (name) {\n    var characterSet = CharacterSetECI.NAME_TO_ECI.get(name);\n\n    if (undefined === characterSet) {\n      throw new FormatException_1.default('incorect value');\n    }\n\n    return characterSet;\n  };\n\n  CharacterSetECI.prototype.equals = function (o) {\n    if (!(o instanceof CharacterSetECI)) {\n      return false;\n    }\n\n    var other = o;\n    return this.getName() === other.getName();\n  };\n\n  CharacterSetECI.VALUE_IDENTIFIER_TO_ECI = new Map();\n  CharacterSetECI.VALUES_TO_ECI = new Map();\n  CharacterSetECI.NAME_TO_ECI = new Map(); // Enum name is a Java encoding valid for java.lang and java.io\n  // TYPESCRIPTPORT: changed the main label for ISO as the TextEncoder did not recognized them in the form from java\n  // (eg ISO8859_1 must be ISO88591 or ISO8859-1 or ISO-8859-1)\n  // later on: well, except 16 wich does not work with ISO885916 so used ISO-8859-1 form for default\n\n  CharacterSetECI.Cp437 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp437, Int32Array.from([0, 2]), 'Cp437');\n  CharacterSetECI.ISO8859_1 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_1, Int32Array.from([1, 3]), 'ISO-8859-1', 'ISO88591', 'ISO8859_1');\n  CharacterSetECI.ISO8859_2 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_2, 4, 'ISO-8859-2', 'ISO88592', 'ISO8859_2');\n  CharacterSetECI.ISO8859_3 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_3, 5, 'ISO-8859-3', 'ISO88593', 'ISO8859_3');\n  CharacterSetECI.ISO8859_4 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_4, 6, 'ISO-8859-4', 'ISO88594', 'ISO8859_4');\n  CharacterSetECI.ISO8859_5 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_5, 7, 'ISO-8859-5', 'ISO88595', 'ISO8859_5');\n  CharacterSetECI.ISO8859_6 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_6, 8, 'ISO-8859-6', 'ISO88596', 'ISO8859_6');\n  CharacterSetECI.ISO8859_7 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_7, 9, 'ISO-8859-7', 'ISO88597', 'ISO8859_7');\n  CharacterSetECI.ISO8859_8 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_8, 10, 'ISO-8859-8', 'ISO88598', 'ISO8859_8');\n  CharacterSetECI.ISO8859_9 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_9, 11, 'ISO-8859-9', 'ISO88599', 'ISO8859_9');\n  CharacterSetECI.ISO8859_10 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_10, 12, 'ISO-8859-10', 'ISO885910', 'ISO8859_10');\n  CharacterSetECI.ISO8859_11 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_11, 13, 'ISO-8859-11', 'ISO885911', 'ISO8859_11');\n  CharacterSetECI.ISO8859_13 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_13, 15, 'ISO-8859-13', 'ISO885913', 'ISO8859_13');\n  CharacterSetECI.ISO8859_14 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_14, 16, 'ISO-8859-14', 'ISO885914', 'ISO8859_14');\n  CharacterSetECI.ISO8859_15 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_15, 17, 'ISO-8859-15', 'ISO885915', 'ISO8859_15');\n  CharacterSetECI.ISO8859_16 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_16, 18, 'ISO-8859-16', 'ISO885916', 'ISO8859_16');\n  CharacterSetECI.SJIS = new CharacterSetECI(CharacterSetValueIdentifiers.SJIS, 20, 'SJIS', 'Shift_JIS');\n  CharacterSetECI.Cp1250 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1250, 21, 'Cp1250', 'windows-1250');\n  CharacterSetECI.Cp1251 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1251, 22, 'Cp1251', 'windows-1251');\n  CharacterSetECI.Cp1252 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1252, 23, 'Cp1252', 'windows-1252');\n  CharacterSetECI.Cp1256 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1256, 24, 'Cp1256', 'windows-1256');\n  CharacterSetECI.UnicodeBigUnmarked = new CharacterSetECI(CharacterSetValueIdentifiers.UnicodeBigUnmarked, 25, 'UnicodeBigUnmarked', 'UTF-16BE', 'UnicodeBig');\n  CharacterSetECI.UTF8 = new CharacterSetECI(CharacterSetValueIdentifiers.UTF8, 26, 'UTF8', 'UTF-8');\n  CharacterSetECI.ASCII = new CharacterSetECI(CharacterSetValueIdentifiers.ASCII, Int32Array.from([27, 170]), 'ASCII', 'US-ASCII');\n  CharacterSetECI.Big5 = new CharacterSetECI(CharacterSetValueIdentifiers.Big5, 28, 'Big5');\n  CharacterSetECI.GB18030 = new CharacterSetECI(CharacterSetValueIdentifiers.GB18030, 29, 'GB18030', 'GB2312', 'EUC_CN', 'GBK');\n  CharacterSetECI.EUC_KR = new CharacterSetECI(CharacterSetValueIdentifiers.EUC_KR, 30, 'EUC_KR', 'EUC-KR');\n  return CharacterSetECI;\n}();\n\nexports.default = CharacterSetECI;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar UPCEANExtensionSupport_1 = require(\"./UPCEANExtensionSupport\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n\nvar ChecksumException_1 = require(\"../ChecksumException\");\n/**\r\n * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\r\n * of one-dimensional barcodes.</p>\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n * @author Sean Owen\r\n * @author alasdair@google.com (Alasdair Mackintosh)\r\n */\n\n\nvar UPCEANReader =\n/** @class */\nfunction (_super) {\n  __extends(UPCEANReader, _super); // private final UPCEANExtensionSupport extensionReader;\n  // private final EANManufacturerOrgSupport eanManSupport;\n\n\n  function UPCEANReader() {\n    var _this = _super.call(this) || this;\n\n    _this.decodeRowStringBuffer = '';\n    _this.decodeRowStringBuffer = '';\n    UPCEANReader.L_AND_G_PATTERNS = UPCEANReader.L_PATTERNS.map(function (arr) {\n      return arr.slice();\n    });\n\n    for (var i = 10; i < 20; i++) {\n      var widths = UPCEANReader.L_PATTERNS[i - 10];\n      var reversedWidths = new Array(widths.length);\n\n      for (var j = 0; j < widths.length; j++) {\n        reversedWidths[j] = widths[widths.length - j - 1];\n      }\n\n      UPCEANReader.L_AND_G_PATTERNS[i] = reversedWidths;\n    }\n\n    return _this;\n  }\n  /*\r\n  protected UPCEANReader() {\r\n      decodeRowStringBuffer = new StringBuilder(20);\r\n      extensionReader = new UPCEANExtensionSupport();\r\n      eanManSupport = new EANManufacturerOrgSupport();\r\n  }\r\n  */\n\n\n  UPCEANReader.findStartGuardPattern = function (row) {\n    var foundStart = false;\n    var startRange = null;\n    var nextStart = 0;\n    var counters = [0, 0, 0];\n\n    while (!foundStart) {\n      counters = [0, 0, 0];\n      startRange = UPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n      var start = startRange[0];\n      nextStart = startRange[1];\n      var quietStart = start - (nextStart - start);\n\n      if (quietStart >= 0) {\n        foundStart = row.isRange(quietStart, start, false);\n      }\n    }\n\n    return startRange;\n  };\n\n  UPCEANReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    var startGuardRange = UPCEANReader.findStartGuardPattern(row);\n    var resultPointCallback = hints == null ? null : hints.get(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK);\n\n    if (resultPointCallback != null) {\n      var resultPoint_1 = new ResultPoint_1.default((startGuardRange[0] + startGuardRange[1]) / 2.0, rowNumber);\n      resultPointCallback.foundPossibleResultPoint(resultPoint_1);\n    }\n\n    var budello = this.decodeMiddle(row, startGuardRange, this.decodeRowStringBuffer);\n    var endStart = budello.rowOffset;\n    var result = budello.resultString;\n\n    if (resultPointCallback != null) {\n      var resultPoint_2 = new ResultPoint_1.default(endStart, rowNumber);\n      resultPointCallback.foundPossibleResultPoint(resultPoint_2);\n    }\n\n    var endRange = UPCEANReader.decodeEnd(row, endStart);\n\n    if (resultPointCallback != null) {\n      var resultPoint_3 = new ResultPoint_1.default((endRange[0] + endRange[1]) / 2.0, rowNumber);\n      resultPointCallback.foundPossibleResultPoint(resultPoint_3);\n    } // Make sure there is a quiet zone at least as big as the end pattern after the barcode. The\n    // spec might want more whitespace, but in practice this is the maximum we can count on.\n\n\n    var end = endRange[1];\n    var quietEnd = end + (end - endRange[0]);\n\n    if (quietEnd >= row.getSize() || !row.isRange(end, quietEnd, false)) {\n      throw new NotFoundException_1.default();\n    }\n\n    var resultString = result.toString(); // UPC/EAN should never be less than 8 chars anyway\n\n    if (resultString.length < 8) {\n      throw new FormatException_1.default();\n    }\n\n    if (!UPCEANReader.checkChecksum(resultString)) {\n      throw new ChecksumException_1.default();\n    }\n\n    var left = (startGuardRange[1] + startGuardRange[0]) / 2.0;\n    var right = (endRange[1] + endRange[0]) / 2.0;\n    var format = this.getBarcodeFormat();\n    var resultPoint = [new ResultPoint_1.default(left, rowNumber), new ResultPoint_1.default(right, rowNumber)];\n    var decodeResult = new Result_1.default(resultString, null, 0, resultPoint, format, new Date().getTime());\n    var extensionLength = 0;\n\n    try {\n      var extensionResult = UPCEANExtensionSupport_1.default.decodeRow(rowNumber, row, endRange[1]);\n      decodeResult.putMetadata(ResultMetadataType_1.default.UPC_EAN_EXTENSION, extensionResult.getText());\n      decodeResult.putAllMetadata(extensionResult.getResultMetadata());\n      decodeResult.addResultPoints(extensionResult.getResultPoints());\n      extensionLength = extensionResult.getText().length;\n    } catch (err) {}\n\n    var allowedExtensions = hints == null ? null : hints.get(DecodeHintType_1.default.ALLOWED_EAN_EXTENSIONS);\n\n    if (allowedExtensions != null) {\n      var valid = false;\n\n      for (var length_1 in allowedExtensions) {\n        if (extensionLength.toString() === length_1) {\n          // check me\n          valid = true;\n          break;\n        }\n      }\n\n      if (!valid) {\n        throw new NotFoundException_1.default();\n      }\n    }\n\n    if (format === BarcodeFormat_1.default.EAN_13 || format === BarcodeFormat_1.default.UPC_A) {// let countryID = eanManSupport.lookupContryIdentifier(resultString); todo\n      // if (countryID != null) {\n      //     decodeResult.putMetadata(ResultMetadataType.POSSIBLE_COUNTRY, countryID);\n      // }\n    }\n\n    return decodeResult;\n  };\n\n  UPCEANReader.checkChecksum = function (s) {\n    return UPCEANReader.checkStandardUPCEANChecksum(s);\n  };\n\n  UPCEANReader.checkStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    if (length === 0) return false;\n    var check = parseInt(s.charAt(length - 1), 10);\n    return UPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n  };\n\n  UPCEANReader.getStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    sum *= 3;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    return (1000 - sum) % 10;\n  };\n\n  UPCEANReader.decodeEnd = function (row, endStart) {\n    return UPCEANReader.findGuardPattern(row, endStart, false, UPCEANReader.START_END_PATTERN, new Array(UPCEANReader.START_END_PATTERN.length).fill(0));\n  };\n\n  UPCEANReader.findGuardPattern = function (row, rowOffset, whiteFirst, pattern, counters) {\n    var width = row.getSize();\n    rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n    var patternLength = pattern.length;\n    var isWhite = whiteFirst;\n\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          if (OneDReader_1.default.patternMatchVariance(counters, pattern, UPCEANReader.MAX_INDIVIDUAL_VARIANCE) < UPCEANReader.MAX_AVG_VARIANCE) {\n            return [patternStart, x];\n          }\n\n          patternStart += counters[0] + counters[1];\n          var slice = counters.slice(2, counters.length);\n\n          for (var i = 0; i < counterPosition - 1; i++) {\n            counters[i] = slice[i];\n          }\n\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  UPCEANReader.decodeDigit = function (row, counters, rowOffset, patterns) {\n    this.recordPattern(row, rowOffset, counters);\n    var bestVariance = this.MAX_AVG_VARIANCE;\n    var bestMatch = -1;\n    var max = patterns.length;\n\n    for (var i = 0; i < max; i++) {\n      var pattern = patterns[i];\n      var variance = OneDReader_1.default.patternMatchVariance(counters, pattern, UPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = i;\n      }\n    }\n\n    if (bestMatch >= 0) {\n      return bestMatch;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  }; // These two values are critical for determining how permissive the decoding will be.\n  // We've arrived at these values through a lot of trial and error. Setting them any higher\n  // lets false positives creep in quickly.\n\n\n  UPCEANReader.MAX_AVG_VARIANCE = 0.48;\n  UPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n  /**\r\n   * Start/end guard pattern.\r\n   */\n\n  UPCEANReader.START_END_PATTERN = [1, 1, 1];\n  /**\r\n   * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\r\n   */\n\n  UPCEANReader.MIDDLE_PATTERN = [1, 1, 1, 1, 1];\n  /**\r\n   * end guard pattern.\r\n   */\n\n  UPCEANReader.END_PATTERN = [1, 1, 1, 1, 1, 1];\n  /**\r\n   * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\r\n   */\n\n  UPCEANReader.L_PATTERNS = [[3, 2, 1, 1], [2, 2, 2, 1], [2, 1, 2, 2], [1, 4, 1, 1], [1, 1, 3, 2], [1, 2, 3, 1], [1, 1, 1, 4], [1, 3, 1, 2], [1, 2, 1, 3], [3, 1, 1, 2]];\n  return UPCEANReader;\n}(OneDReader_1.default);\n\nexports.default = UPCEANReader;","'use strict';\n\nif (!process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = {\n    nextTick: nextTick\n  };\n} else {\n  module.exports = process;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n\n  var len = arguments.length;\n  var args, i;\n\n  switch (len) {\n    case 0:\n    case 1:\n      return process.nextTick(fn);\n\n    case 2:\n      return process.nextTick(function afterTickOne() {\n        fn.call(null, arg1);\n      });\n\n    case 3:\n      return process.nextTick(function afterTickTwo() {\n        fn.call(null, arg1, arg2);\n      });\n\n    case 4:\n      return process.nextTick(function afterTickThree() {\n        fn.call(null, arg1, arg2, arg3);\n      });\n\n    default:\n      args = new Array(len - 1);\n      i = 0;\n\n      while (i < args.length) {\n        args[i++] = arguments[i];\n      }\n\n      return process.nextTick(function afterTick() {\n        fn.apply(null, args);\n      });\n  }\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n} // Copy static methods from Buffer\n\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};","'use strict';\n\nvar TYPED_OK = typeof Uint8Array !== 'undefined' && typeof Uint16Array !== 'undefined' && typeof Int32Array !== 'undefined';\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  while (sources.length) {\n    var source = sources.shift();\n\n    if (!source) {\n      continue;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n}; // reduce buffer size, avoiding mem copy\n\n\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) {\n    return buf;\n  }\n\n  if (buf.subarray) {\n    return buf.subarray(0, size);\n  }\n\n  buf.length = size;\n  return buf;\n};\n\nvar fnTyped = {\n  arraySet: function arraySet(dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    } // Fallback to ordinary array\n\n\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function flattenChunks(chunks) {\n    var i, l, len, pos, chunk, result; // calculate data length\n\n    len = 0;\n\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    } // join chunks\n\n\n    result = new Uint8Array(len);\n    pos = 0;\n\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\nvar fnUntyped = {\n  arraySet: function arraySet(dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function flattenChunks(chunks) {\n    return [].concat.apply([], chunks);\n  }\n}; // Enable/Disable typed arrays use, for testing\n//\n\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8 = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8 = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Integer =\n/** @class */\nfunction () {\n  function Integer() {}\n\n  Integer.numberOfTrailingZeros = function (i) {\n    var y;\n    if (i === 0) return 32;\n    var n = 31;\n    y = i << 16;\n\n    if (y !== 0) {\n      n -= 16;\n      i = y;\n    }\n\n    y = i << 8;\n\n    if (y !== 0) {\n      n -= 8;\n      i = y;\n    }\n\n    y = i << 4;\n\n    if (y !== 0) {\n      n -= 4;\n      i = y;\n    }\n\n    y = i << 2;\n\n    if (y !== 0) {\n      n -= 2;\n      i = y;\n    }\n\n    return n - (i << 1 >>> 31);\n  };\n\n  Integer.numberOfLeadingZeros = function (i) {\n    // HD, Figure 5-6\n    if (i === 0) {\n      return 32;\n    }\n\n    var n = 1;\n\n    if (i >>> 16 === 0) {\n      n += 16;\n      i <<= 16;\n    }\n\n    if (i >>> 24 === 0) {\n      n += 8;\n      i <<= 8;\n    }\n\n    if (i >>> 28 === 0) {\n      n += 4;\n      i <<= 4;\n    }\n\n    if (i >>> 30 === 0) {\n      n += 2;\n      i <<= 2;\n    }\n\n    n -= i >>> 31;\n    return n;\n  };\n\n  Integer.toHexString = function (i) {\n    return i.toString(16);\n  }; // Returns the number of one-bits in the two's complement binary representation of the specified int value. This function is sometimes referred to as the population count.\n  // Returns:\n  // the number of one-bits in the two's complement binary representation of the specified int value.\n\n\n  Integer.bitCount = function (i) {\n    // HD, Figure 5-2\n    i = i - (i >>> 1 & 0x55555555);\n    i = (i & 0x33333333) + (i >>> 2 & 0x33333333);\n    i = i + (i >>> 4) & 0x0f0f0f0f;\n    i = i + (i >>> 8);\n    i = i + (i >>> 16);\n    return i & 0x3f;\n  };\n\n  Integer.MIN_VALUE_32_BITS = -2147483648;\n  return Integer;\n}();\n\nexports.default = Integer;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common.reedsolomon {*/\n\nvar GenericGF_1 = require(\"./GenericGF\");\n\nvar System_1 = require(\"../../util/System\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\r\n * <p>Represents a polynomial whose coefficients are elements of a GF.\r\n * Instances of this class are immutable.</p>\r\n *\r\n * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\r\n * port of his C++ Reed-Solomon implementation.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar GenericGFPoly =\n/** @class */\nfunction () {\n  /**\r\n   * @param field the {@link GenericGF} instance representing the field to use\r\n   * to perform computations\r\n   * @param coefficients coefficients as ints representing elements of GF(size), arranged\r\n   * from most significant (highest-power term) coefficient to least significant\r\n   * @throws IllegalArgumentException if argument is null or empty,\r\n   * or if leading coefficient is 0 and this is not a\r\n   * constant polynomial (that is, it is not the monomial \"0\")\r\n   */\n  function GenericGFPoly(field, coefficients) {\n    if (coefficients.length === 0) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    this.field = field;\n    var coefficientsLength = coefficients.length;\n\n    if (coefficientsLength > 1 && coefficients[0] === 0) {\n      // Leading term must be non-zero for anything except the constant polynomial \"0\"\n      var firstNonZero = 1;\n\n      while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n        firstNonZero++;\n      }\n\n      if (firstNonZero === coefficientsLength) {\n        this.coefficients = Int32Array.from([0]);\n      } else {\n        this.coefficients = new Int32Array(coefficientsLength - firstNonZero);\n        System_1.default.arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n      }\n    } else {\n      this.coefficients = coefficients;\n    }\n  }\n\n  GenericGFPoly.prototype.getCoefficients = function () {\n    return this.coefficients;\n  };\n  /**\r\n   * @return degree of this polynomial\r\n   */\n\n\n  GenericGFPoly.prototype.getDegree = function () {\n    return this.coefficients.length - 1;\n  };\n  /**\r\n   * @return true iff this polynomial is the monomial \"0\"\r\n   */\n\n\n  GenericGFPoly.prototype.isZero = function () {\n    return this.coefficients[0] === 0;\n  };\n  /**\r\n   * @return coefficient of x^degree term in this polynomial\r\n   */\n\n\n  GenericGFPoly.prototype.getCoefficient = function (degree\n  /*int*/\n  ) {\n    return this.coefficients[this.coefficients.length - 1 - degree];\n  };\n  /**\r\n   * @return evaluation of this polynomial at a given point\r\n   */\n\n\n  GenericGFPoly.prototype.evaluateAt = function (a\n  /*int*/\n  ) {\n    if (a === 0) {\n      // Just return the x^0 coefficient\n      return this.getCoefficient(0);\n    }\n\n    var coefficients = this.coefficients;\n    var result;\n\n    if (a === 1) {\n      // Just the sum of the coefficients\n      result = 0;\n\n      for (var i = 0, length_1 = coefficients.length; i !== length_1; i++) {\n        var coefficient = coefficients[i];\n        result = GenericGF_1.default.addOrSubtract(result, coefficient);\n      }\n\n      return result;\n    }\n\n    result = coefficients[0];\n    var size = coefficients.length;\n    var field = this.field;\n\n    for (var i = 1; i < size; i++) {\n      result = GenericGF_1.default.addOrSubtract(field.multiply(a, result), coefficients[i]);\n    }\n\n    return result;\n  };\n\n  GenericGFPoly.prototype.addOrSubtract = function (other) {\n    if (!this.field.equals(other.field)) {\n      throw new IllegalArgumentException_1.default('GenericGFPolys do not have same GenericGF field');\n    }\n\n    if (this.isZero()) {\n      return other;\n    }\n\n    if (other.isZero()) {\n      return this;\n    }\n\n    var smallerCoefficients = this.coefficients;\n    var largerCoefficients = other.coefficients;\n\n    if (smallerCoefficients.length > largerCoefficients.length) {\n      var temp = smallerCoefficients;\n      smallerCoefficients = largerCoefficients;\n      largerCoefficients = temp;\n    }\n\n    var sumDiff = new Int32Array(largerCoefficients.length);\n    var lengthDiff = largerCoefficients.length - smallerCoefficients.length; // Copy high-order terms only found in higher-degree polynomial's coefficients\n\n    System_1.default.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n\n    for (var i = lengthDiff; i < largerCoefficients.length; i++) {\n      sumDiff[i] = GenericGF_1.default.addOrSubtract(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n    }\n\n    return new GenericGFPoly(this.field, sumDiff);\n  };\n\n  GenericGFPoly.prototype.multiply = function (other) {\n    if (!this.field.equals(other.field)) {\n      throw new IllegalArgumentException_1.default('GenericGFPolys do not have same GenericGF field');\n    }\n\n    if (this.isZero() || other.isZero()) {\n      return this.field.getZero();\n    }\n\n    var aCoefficients = this.coefficients;\n    var aLength = aCoefficients.length;\n    var bCoefficients = other.coefficients;\n    var bLength = bCoefficients.length;\n    var product = new Int32Array(aLength + bLength - 1);\n    var field = this.field;\n\n    for (var i = 0; i < aLength; i++) {\n      var aCoeff = aCoefficients[i];\n\n      for (var j = 0; j < bLength; j++) {\n        product[i + j] = GenericGF_1.default.addOrSubtract(product[i + j], field.multiply(aCoeff, bCoefficients[j]));\n      }\n    }\n\n    return new GenericGFPoly(field, product);\n  };\n\n  GenericGFPoly.prototype.multiplyScalar = function (scalar\n  /*int*/\n  ) {\n    if (scalar === 0) {\n      return this.field.getZero();\n    }\n\n    if (scalar === 1) {\n      return this;\n    }\n\n    var size = this.coefficients.length;\n    var field = this.field;\n    var product = new Int32Array(size);\n    var coefficients = this.coefficients;\n\n    for (var i = 0; i < size; i++) {\n      product[i] = field.multiply(coefficients[i], scalar);\n    }\n\n    return new GenericGFPoly(field, product);\n  };\n\n  GenericGFPoly.prototype.multiplyByMonomial = function (degree\n  /*int*/\n  , coefficient\n  /*int*/\n  ) {\n    if (degree < 0) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    if (coefficient === 0) {\n      return this.field.getZero();\n    }\n\n    var coefficients = this.coefficients;\n    var size = coefficients.length;\n    var product = new Int32Array(size + degree);\n    var field = this.field;\n\n    for (var i = 0; i < size; i++) {\n      product[i] = field.multiply(coefficients[i], coefficient);\n    }\n\n    return new GenericGFPoly(field, product);\n  };\n\n  GenericGFPoly.prototype.divide = function (other) {\n    if (!this.field.equals(other.field)) {\n      throw new IllegalArgumentException_1.default('GenericGFPolys do not have same GenericGF field');\n    }\n\n    if (other.isZero()) {\n      throw new IllegalArgumentException_1.default('Divide by 0');\n    }\n\n    var field = this.field;\n    var quotient = field.getZero();\n    var remainder = this;\n    var denominatorLeadingTerm = other.getCoefficient(other.getDegree());\n    var inverseDenominatorLeadingTerm = field.inverse(denominatorLeadingTerm);\n\n    while (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n      var degreeDifference = remainder.getDegree() - other.getDegree();\n      var scale = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n      var term = other.multiplyByMonomial(degreeDifference, scale);\n      var iterationQuotient = field.buildMonomial(degreeDifference, scale);\n      quotient = quotient.addOrSubtract(iterationQuotient);\n      remainder = remainder.addOrSubtract(term);\n    }\n\n    return [quotient, remainder];\n  };\n  /*@Override*/\n\n\n  GenericGFPoly.prototype.toString = function () {\n    var result = '';\n\n    for (var degree = this.getDegree(); degree >= 0; degree--) {\n      var coefficient = this.getCoefficient(degree);\n\n      if (coefficient !== 0) {\n        if (coefficient < 0) {\n          result += ' - ';\n          coefficient = -coefficient;\n        } else {\n          if (result.length > 0) {\n            result += ' + ';\n          }\n        }\n\n        if (degree === 0 || coefficient !== 1) {\n          var alphaPower = this.field.log(coefficient);\n\n          if (alphaPower === 0) {\n            result += '1';\n          } else if (alphaPower === 1) {\n            result += 'a';\n          } else {\n            result += 'a^';\n            result += alphaPower;\n          }\n        }\n\n        if (degree !== 0) {\n          if (degree === 1) {\n            result += 'x';\n          } else {\n            result += 'x^';\n            result += degree;\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  return GenericGFPoly;\n}();\n\nexports.default = GenericGFPoly;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.decoder {*/\n\nvar ArgumentException_1 = require(\"../../ArgumentException\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n\nvar ErrorCorrectionLevelValues;\n\n(function (ErrorCorrectionLevelValues) {\n  ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"L\"] = 0] = \"L\";\n  ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"M\"] = 1] = \"M\";\n  ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"Q\"] = 2] = \"Q\";\n  ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"H\"] = 3] = \"H\";\n})(ErrorCorrectionLevelValues = exports.ErrorCorrectionLevelValues || (exports.ErrorCorrectionLevelValues = {}));\n/**\r\n * <p>See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels\r\n * defined by the QR code standard.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar ErrorCorrectionLevel =\n/** @class */\nfunction () {\n  function ErrorCorrectionLevel(value, stringValue, bits\n  /*int*/\n  ) {\n    this.value = value;\n    this.stringValue = stringValue;\n    this.bits = bits;\n    ErrorCorrectionLevel.FOR_BITS.set(bits, this);\n    ErrorCorrectionLevel.FOR_VALUE.set(value, this);\n  }\n\n  ErrorCorrectionLevel.prototype.getValue = function () {\n    return this.value;\n  };\n\n  ErrorCorrectionLevel.prototype.getBits = function () {\n    return this.bits;\n  };\n\n  ErrorCorrectionLevel.fromString = function (s) {\n    switch (s) {\n      case 'L':\n        return ErrorCorrectionLevel.L;\n\n      case 'M':\n        return ErrorCorrectionLevel.M;\n\n      case 'Q':\n        return ErrorCorrectionLevel.Q;\n\n      case 'H':\n        return ErrorCorrectionLevel.H;\n\n      default:\n        throw new ArgumentException_1.default(s + 'not available');\n    }\n  };\n\n  ErrorCorrectionLevel.prototype.toString = function () {\n    return this.stringValue;\n  };\n\n  ErrorCorrectionLevel.prototype.equals = function (o) {\n    if (!(o instanceof ErrorCorrectionLevel)) {\n      return false;\n    }\n\n    var other = o;\n    return this.value === other.value;\n  };\n  /**\r\n   * @param bits int containing the two bits encoding a QR Code's error correction level\r\n   * @return ErrorCorrectionLevel representing the encoded error correction level\r\n   */\n\n\n  ErrorCorrectionLevel.forBits = function (bits\n  /*int*/\n  ) {\n    if (bits < 0 || bits >= ErrorCorrectionLevel.FOR_BITS.size) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    return ErrorCorrectionLevel.FOR_BITS.get(bits);\n  };\n\n  ErrorCorrectionLevel.FOR_BITS = new Map();\n  ErrorCorrectionLevel.FOR_VALUE = new Map();\n  /** L = ~7% correction */\n\n  ErrorCorrectionLevel.L = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.L, 'L', 0x01);\n  /** M = ~15% correction */\n\n  ErrorCorrectionLevel.M = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.M, 'M', 0x00);\n  /** Q = ~25% correction */\n\n  ErrorCorrectionLevel.Q = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.Q, 'Q', 0x03);\n  /** H = ~30% correction */\n\n  ErrorCorrectionLevel.H = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.H, 'H', 0x02);\n  return ErrorCorrectionLevel;\n}();\n\nexports.default = ErrorCorrectionLevel;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\n/**\r\n * These are a set of hints that you may pass to Writers to specify their behavior.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\nvar EncodeHintType;\n\n(function (EncodeHintType) {\n  /**\r\n   * Specifies what degree of error correction to use, for example in QR Codes.\r\n   * Type depends on the encoder. For example for QR codes it's type\r\n   * {@link com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ErrorCorrectionLevel}.\r\n   * For Aztec it is of type {@link Integer}, representing the minimal percentage of error correction words.\r\n   * For PDF417 it is of type {@link Integer}, valid values being 0 to 8.\r\n   * In all cases, it can also be a {@link String} representation of the desired value as well.\r\n   * Note: an Aztec symbol should have a minimum of 25% EC words.\r\n   */\n  EncodeHintType[EncodeHintType[\"ERROR_CORRECTION\"] = 0] = \"ERROR_CORRECTION\";\n  /**\r\n   * Specifies what character encoding to use where applicable (type {@link String})\r\n   */\n\n  EncodeHintType[EncodeHintType[\"CHARACTER_SET\"] = 1] = \"CHARACTER_SET\";\n  /**\r\n   * Specifies the matrix shape for Data Matrix (type {@link com.google.zxing.datamatrix.encoder.SymbolShapeHint})\r\n   */\n\n  EncodeHintType[EncodeHintType[\"DATA_MATRIX_SHAPE\"] = 2] = \"DATA_MATRIX_SHAPE\";\n  /**\r\n   * Specifies a minimum barcode size (type {@link Dimension}). Only applicable to Data Matrix now.\r\n   *\r\n   * @deprecated use width/height params in\r\n   * {@link com.google.zxing.datamatrix.DataMatrixWriter#encode(String, BarcodeFormat, int, int)}\r\n   */\n\n  /*@Deprecated*/\n\n  EncodeHintType[EncodeHintType[\"MIN_SIZE\"] = 3] = \"MIN_SIZE\";\n  /**\r\n   * Specifies a maximum barcode size (type {@link Dimension}). Only applicable to Data Matrix now.\r\n   *\r\n   * @deprecated without replacement\r\n   */\n\n  /*@Deprecated*/\n\n  EncodeHintType[EncodeHintType[\"MAX_SIZE\"] = 4] = \"MAX_SIZE\";\n  /**\r\n   * Specifies margin, in pixels, to use when generating the barcode. The meaning can vary\r\n   * by format; for example it controls margin before and after the barcode horizontally for\r\n   * most 1D formats. (Type {@link Integer}, or {@link String} representation of the integer value).\r\n   */\n\n  EncodeHintType[EncodeHintType[\"MARGIN\"] = 5] = \"MARGIN\";\n  /**\r\n   * Specifies whether to use compact mode for PDF417 (type {@link Boolean}, or \"true\" or \"false\"\r\n   * {@link String} value).\r\n   */\n\n  EncodeHintType[EncodeHintType[\"PDF417_COMPACT\"] = 6] = \"PDF417_COMPACT\";\n  /**\r\n   * Specifies what compaction mode to use for PDF417 (type\r\n   * {@link com.google.zxing.pdf417.encoder.Compaction Compaction} or {@link String} value of one of its\r\n   * enum values).\r\n   */\n\n  EncodeHintType[EncodeHintType[\"PDF417_COMPACTION\"] = 7] = \"PDF417_COMPACTION\";\n  /**\r\n   * Specifies the minimum and maximum number of rows and columns for PDF417 (type\r\n   * {@link com.google.zxing.pdf417.encoder.Dimensions Dimensions}).\r\n   */\n\n  EncodeHintType[EncodeHintType[\"PDF417_DIMENSIONS\"] = 8] = \"PDF417_DIMENSIONS\";\n  /**\r\n   * Specifies the required number of layers for an Aztec code.\r\n   * A negative number (-1, -2, -3, -4) specifies a compact Aztec code.\r\n   * 0 indicates to use the minimum number of layers (the default).\r\n   * A positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code.\r\n   * (Type {@link Integer}, or {@link String} representation of the integer value).\r\n   */\n\n  EncodeHintType[EncodeHintType[\"AZTEC_LAYERS\"] = 9] = \"AZTEC_LAYERS\";\n  /**\r\n   * Specifies the exact version of QR code to be encoded.\r\n   * (Type {@link Integer}, or {@link String} representation of the integer value).\r\n   */\n\n  EncodeHintType[EncodeHintType[\"QR_VERSION\"] = 10] = \"QR_VERSION\";\n})(EncodeHintType || (EncodeHintType = {}));\n\nexports.default = EncodeHintType;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = $getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  var args = [];\n\n  for (var i = 0; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  var isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm; // cast to ints.\n\n  this.highWaterMark = Math.floor(this.highWaterMark); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end'); // TODO: defer error events consistently everywhere, not just the cb\n\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      stream.emit('error', err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar UnsupportedOperationException =\n/** @class */\nfunction (_super) {\n  __extends(UnsupportedOperationException, _super);\n\n  function UnsupportedOperationException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return UnsupportedOperationException;\n}(Exception_1.default);\n\nexports.default = UnsupportedOperationException;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar System_1 = require(\"./System\");\n\nvar Arrays =\n/** @class */\nfunction () {\n  function Arrays() {}\n\n  Arrays.equals = function (first, second) {\n    if (!first) {\n      return false;\n    }\n\n    if (!second) {\n      return false;\n    }\n\n    if (!first.length) {\n      return false;\n    }\n\n    if (!second.length) {\n      return false;\n    }\n\n    if (first.length !== second.length) {\n      return false;\n    }\n\n    for (var i = 0, length_1 = first.length; i < length_1; i++) {\n      if (first[i] !== second[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Arrays.hashCode = function (a) {\n    if (a === null) {\n      return 0;\n    }\n\n    var result = 1;\n\n    for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {\n      var element = a_1[_i];\n      result = 31 * result + element;\n    }\n\n    return result;\n  };\n\n  Arrays.fillUint8Array = function (a, value) {\n    for (var i = 0; i !== a.length; i++) {\n      a[i] = value;\n    }\n  };\n\n  Arrays.copyOf = function (original, newLength) {\n    var copy = new Int32Array(newLength);\n    System_1.default.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));\n    return copy;\n  };\n  /*\r\n  * Returns the index of of the element in a sorted array or (-n-1) where n is the insertion point\r\n  * for the new element.\r\n  * Parameters:\r\n  *     ar - A sorted array\r\n  *     el - An element to search for\r\n  *     comparator - A comparator function. The function takes two arguments: (a, b) and returns:\r\n  *        a negative number  if a is less than b;\r\n  *        0 if a is equal to b;\r\n  *        a positive number of a is greater than b.\r\n  * The array may contain duplicate elements. If there are more than one equal elements in the array,\r\n  * the returned value can be the index of any one of the equal elements.\r\n  *\r\n  * http://jsfiddle.net/aryzhov/pkfst550/\r\n  */\n\n\n  Arrays.binarySearch = function (ar, el, comparator) {\n    if (undefined === comparator) {\n      comparator = Arrays.numberComparator;\n    }\n\n    var m = 0;\n    var n = ar.length - 1;\n\n    while (m <= n) {\n      var k = n + m >> 1;\n      var cmp = comparator(el, ar[k]);\n\n      if (cmp > 0) {\n        m = k + 1;\n      } else if (cmp < 0) {\n        n = k - 1;\n      } else {\n        return k;\n      }\n    }\n\n    return -m - 1;\n  };\n\n  Arrays.numberComparator = function (a, b) {\n    return a - b;\n  };\n\n  return Arrays;\n}();\n\nexports.default = Arrays;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar ArgumentException =\n/** @class */\nfunction (_super) {\n  __extends(ArgumentException, _super);\n\n  function ArgumentException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return ArgumentException;\n}(Exception_1.default);\n\nexports.default = ArgumentException;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar BitMatrix_1 = require(\"../common/BitMatrix\");\n\nvar Decoder_1 = require(\"./decoder/Decoder\");\n\nvar QRCodeDecoderMetaData_1 = require(\"./decoder/QRCodeDecoderMetaData\");\n\nvar Detector_1 = require(\"./detector/Detector\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/*import java.util.List;*/\n\n/*import java.util.Map;*/\n\n/**\r\n * This implementation can detect and decode QR Codes in an image.\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar QRCodeReader =\n/** @class */\nfunction () {\n  function QRCodeReader() {\n    this.decoder = new Decoder_1.default();\n  }\n\n  QRCodeReader.prototype.getDecoder = function () {\n    return this.decoder;\n  };\n  /**\r\n   * Locates and decodes a QR code in an image.\r\n   *\r\n   * @return a representing: string the content encoded by the QR code\r\n   * @throws NotFoundException if a QR code cannot be found\r\n   * @throws FormatException if a QR code cannot be decoded\r\n   * @throws ChecksumException if error correction fails\r\n   */\n\n  /*@Override*/\n  // public decode(image: BinaryBitmap): Result /*throws NotFoundException, ChecksumException, FormatException */ {\n  //   return this.decode(image, null)\n  // }\n\n  /*@Override*/\n\n\n  QRCodeReader.prototype.decode = function (image, hints) {\n    var decoderResult;\n    var points;\n\n    if (hints !== undefined && hints !== null && undefined !== hints.get(DecodeHintType_1.default.PURE_BARCODE)) {\n      var bits = QRCodeReader.extractPureBits(image.getBlackMatrix());\n      decoderResult = this.decoder.decodeBitMatrix(bits, hints);\n      points = QRCodeReader.NO_POINTS;\n    } else {\n      var detectorResult = new Detector_1.default(image.getBlackMatrix()).detect(hints);\n      decoderResult = this.decoder.decodeBitMatrix(detectorResult.getBits(), hints);\n      points = detectorResult.getPoints();\n    } // If the code was mirrored: swap the bottom-left and the top-right points.\n\n\n    if (decoderResult.getOther() instanceof QRCodeDecoderMetaData_1.default) {\n      decoderResult.getOther().applyMirroredCorrection(points);\n    }\n\n    var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat_1.default.QR_CODE, undefined);\n    var byteSegments = decoderResult.getByteSegments();\n\n    if (byteSegments !== null) {\n      result.putMetadata(ResultMetadataType_1.default.BYTE_SEGMENTS, byteSegments);\n    }\n\n    var ecLevel = decoderResult.getECLevel();\n\n    if (ecLevel !== null) {\n      result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, ecLevel);\n    }\n\n    if (decoderResult.hasStructuredAppend()) {\n      result.putMetadata(ResultMetadataType_1.default.STRUCTURED_APPEND_SEQUENCE, decoderResult.getStructuredAppendSequenceNumber());\n      result.putMetadata(ResultMetadataType_1.default.STRUCTURED_APPEND_PARITY, decoderResult.getStructuredAppendParity());\n    }\n\n    return result;\n  };\n  /*@Override*/\n\n\n  QRCodeReader.prototype.reset = function () {// do nothing\n  };\n  /**\r\n   * This method detects a code in a \"pure\" image -- that is, pure monochrome image\r\n   * which contains only an unrotated, unskewed, image of a code, with some white border\r\n   * around it. This is a specialized method that works exceptionally fast in this special\r\n   * case.\r\n   *\r\n   * @see com.google.zxing.datamatrix.DataMatrixReader#extractPureBits(BitMatrix)\r\n   */\n\n\n  QRCodeReader.extractPureBits = function (image) {\n    var leftTopBlack = image.getTopLeftOnBit();\n    var rightBottomBlack = image.getBottomRightOnBit();\n\n    if (leftTopBlack === null || rightBottomBlack === null) {\n      throw new NotFoundException_1.default();\n    }\n\n    var moduleSize = this.moduleSize(leftTopBlack, image);\n    var top = leftTopBlack[1];\n    var bottom = rightBottomBlack[1];\n    var left = leftTopBlack[0];\n    var right = rightBottomBlack[0]; // Sanity check!\n\n    if (left >= right || top >= bottom) {\n      throw new NotFoundException_1.default();\n    }\n\n    if (bottom - top !== right - left) {\n      // Special case, where bottom-right module wasn't black so we found something else in the last row\n      // Assume it's a square, so use height as the width\n      right = left + (bottom - top);\n\n      if (right >= image.getWidth()) {\n        // Abort if that would not make sense -- off image\n        throw new NotFoundException_1.default();\n      }\n    }\n\n    var matrixWidth = Math.round((right - left + 1) / moduleSize);\n    var matrixHeight = Math.round((bottom - top + 1) / moduleSize);\n\n    if (matrixWidth <= 0 || matrixHeight <= 0) {\n      throw new NotFoundException_1.default();\n    }\n\n    if (matrixHeight !== matrixWidth) {\n      // Only possibly decode square regions\n      throw new NotFoundException_1.default();\n    } // Push in the \"border\" by half the module width so that we start\n    // sampling in the middle of the module. Just in case the image is a\n    // little off, this will help recover.\n\n\n    var nudge =\n    /*(int) */\n    Math.floor(moduleSize / 2.0);\n    top += nudge;\n    left += nudge; // But careful that this does not sample off the edge\n    // \"right\" is the farthest-right valid pixel location -- right+1 is not necessarily\n    // This is positive by how much the inner x loop below would be too large\n\n    var nudgedTooFarRight = left +\n    /*(int) */\n    Math.floor((matrixWidth - 1) * moduleSize) - right;\n\n    if (nudgedTooFarRight > 0) {\n      if (nudgedTooFarRight > nudge) {\n        // Neither way fits; abort\n        throw new NotFoundException_1.default();\n      }\n\n      left -= nudgedTooFarRight;\n    } // See logic above\n\n\n    var nudgedTooFarDown = top +\n    /*(int) */\n    Math.floor((matrixHeight - 1) * moduleSize) - bottom;\n\n    if (nudgedTooFarDown > 0) {\n      if (nudgedTooFarDown > nudge) {\n        // Neither way fits; abort\n        throw new NotFoundException_1.default();\n      }\n\n      top -= nudgedTooFarDown;\n    } // Now just read off the bits\n\n\n    var bits = new BitMatrix_1.default(matrixWidth, matrixHeight);\n\n    for (var y = 0; y < matrixHeight; y++) {\n      var iOffset = top +\n      /*(int) */\n      Math.floor(y * moduleSize);\n\n      for (var x = 0; x < matrixWidth; x++) {\n        if (image.get(left +\n        /*(int) */\n        Math.floor(x * moduleSize), iOffset)) {\n          bits.set(x, y);\n        }\n      }\n    }\n\n    return bits;\n  };\n\n  QRCodeReader.moduleSize = function (leftTopBlack, image) {\n    var height = image.getHeight();\n    var width = image.getWidth();\n    var x = leftTopBlack[0];\n    var y = leftTopBlack[1];\n    var inBlack = true;\n    var transitions = 0;\n\n    while (x < width && y < height) {\n      if (inBlack !== image.get(x, y)) {\n        if (++transitions === 5) {\n          break;\n        }\n\n        inBlack = !inBlack;\n      }\n\n      x++;\n      y++;\n    }\n\n    if (x === width || y === height) {\n      throw new NotFoundException_1.default();\n    }\n\n    return (x - leftTopBlack[0]) / 7.0;\n  };\n\n  QRCodeReader.NO_POINTS = new Array();\n  return QRCodeReader;\n}();\n\nexports.default = QRCodeReader;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common.reedsolomon {*/\n\nvar GenericGF_1 = require(\"./GenericGF\");\n\nvar GenericGFPoly_1 = require(\"./GenericGFPoly\");\n\nvar ReedSolomonException_1 = require(\"../../ReedSolomonException\");\n\nvar IllegalStateException_1 = require(\"../../IllegalStateException\");\n/**\r\n * <p>Implements Reed-Solomon decoding, as the name implies.</p>\r\n *\r\n * <p>The algorithm will not be explained here, but the following references were helpful\r\n * in creating this implementation:</p>\r\n *\r\n * <ul>\r\n * <li>Bruce Maggs.\r\n * <a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/pscico-guyb/realworld/www/rs_decode.ps\">\r\n * \"Decoding Reed-Solomon Codes\"</a> (see discussion of Forney's Formula)</li>\r\n * <li>J.I. Hall. <a href=\"www.mth.msu.edu/~jhall/classes/codenotes/GRS.pdf\">\r\n * \"Chapter 5. Generalized Reed-Solomon Codes\"</a>\r\n * (see discussion of Euclidean algorithm)</li>\r\n * </ul>\r\n *\r\n * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\r\n * port of his C++ Reed-Solomon implementation.</p>\r\n *\r\n * @author Sean Owen\r\n * @author William Rucklidge\r\n * @author sanfordsquires\r\n */\n\n\nvar ReedSolomonDecoder =\n/** @class */\nfunction () {\n  function ReedSolomonDecoder(field) {\n    this.field = field;\n  }\n  /**\r\n   * <p>Decodes given set of received codewords, which include both data and error-correction\r\n   * codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place,\r\n   * in the input.</p>\r\n   *\r\n   * @param received data and error-correction codewords\r\n   * @param twoS number of error-correction codewords available\r\n   * @throws ReedSolomonException if decoding fails for any reason\r\n   */\n\n\n  ReedSolomonDecoder.prototype.decode = function (received, twoS\n  /*int*/\n  ) {\n    var field = this.field;\n    var poly = new GenericGFPoly_1.default(field, received);\n    var syndromeCoefficients = new Int32Array(twoS);\n    var noError = true;\n\n    for (var i = 0; i < twoS; i++) {\n      var evalResult = poly.evaluateAt(field.exp(i + field.getGeneratorBase()));\n      syndromeCoefficients[syndromeCoefficients.length - 1 - i] = evalResult;\n\n      if (evalResult !== 0) {\n        noError = false;\n      }\n    }\n\n    if (noError) {\n      return;\n    }\n\n    var syndrome = new GenericGFPoly_1.default(field, syndromeCoefficients);\n    var sigmaOmega = this.runEuclideanAlgorithm(field.buildMonomial(twoS, 1), syndrome, twoS);\n    var sigma = sigmaOmega[0];\n    var omega = sigmaOmega[1];\n    var errorLocations = this.findErrorLocations(sigma);\n    var errorMagnitudes = this.findErrorMagnitudes(omega, errorLocations);\n\n    for (var i = 0; i < errorLocations.length; i++) {\n      var position = received.length - 1 - field.log(errorLocations[i]);\n\n      if (position < 0) {\n        throw new ReedSolomonException_1.default('Bad error location');\n      }\n\n      received[position] = GenericGF_1.default.addOrSubtract(received[position], errorMagnitudes[i]);\n    }\n  };\n\n  ReedSolomonDecoder.prototype.runEuclideanAlgorithm = function (a, b, R\n  /*int*/\n  ) {\n    // Assume a's degree is >= b's\n    if (a.getDegree() < b.getDegree()) {\n      var temp = a;\n      a = b;\n      b = temp;\n    }\n\n    var field = this.field;\n    var rLast = a;\n    var r = b;\n    var tLast = field.getZero();\n    var t = field.getOne(); // Run Euclidean algorithm until r's degree is less than R/2\n\n    while (r.getDegree() >= (R / 2 | 0)) {\n      var rLastLast = rLast;\n      var tLastLast = tLast;\n      rLast = r;\n      tLast = t; // Divide rLastLast by rLast, with quotient in q and remainder in r\n\n      if (rLast.isZero()) {\n        // Oops, Euclidean algorithm already terminated?\n        throw new ReedSolomonException_1.default('r_{i-1} was zero');\n      }\n\n      r = rLastLast;\n      var q = field.getZero();\n      var denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n      var dltInverse = field.inverse(denominatorLeadingTerm);\n\n      while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n        var degreeDiff = r.getDegree() - rLast.getDegree();\n        var scale = field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n        q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n        r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n      }\n\n      t = q.multiply(tLast).addOrSubtract(tLastLast);\n\n      if (r.getDegree() >= rLast.getDegree()) {\n        throw new IllegalStateException_1.default('Division algorithm failed to reduce polynomial?');\n      }\n    }\n\n    var sigmaTildeAtZero = t.getCoefficient(0);\n\n    if (sigmaTildeAtZero === 0) {\n      throw new ReedSolomonException_1.default('sigmaTilde(0) was zero');\n    }\n\n    var inverse = field.inverse(sigmaTildeAtZero);\n    var sigma = t.multiplyScalar(inverse);\n    var omega = r.multiplyScalar(inverse);\n    return [sigma, omega];\n  };\n\n  ReedSolomonDecoder.prototype.findErrorLocations = function (errorLocator) {\n    // This is a direct application of Chien's search\n    var numErrors = errorLocator.getDegree();\n\n    if (numErrors === 1) {\n      // shortcut\n      return Int32Array.from([errorLocator.getCoefficient(1)]);\n    }\n\n    var result = new Int32Array(numErrors);\n    var e = 0;\n    var field = this.field;\n\n    for (var i = 1; i < field.getSize() && e < numErrors; i++) {\n      if (errorLocator.evaluateAt(i) === 0) {\n        result[e] = field.inverse(i);\n        e++;\n      }\n    }\n\n    if (e !== numErrors) {\n      throw new ReedSolomonException_1.default('Error locator degree does not match number of roots');\n    }\n\n    return result;\n  };\n\n  ReedSolomonDecoder.prototype.findErrorMagnitudes = function (errorEvaluator, errorLocations) {\n    // This is directly applying Forney's Formula\n    var s = errorLocations.length;\n    var result = new Int32Array(s);\n    var field = this.field;\n\n    for (var i = 0; i < s; i++) {\n      var xiInverse = field.inverse(errorLocations[i]);\n      var denominator = 1;\n\n      for (var j = 0; j < s; j++) {\n        if (i !== j) {\n          // denominator = field.multiply(denominator,\n          //    GenericGF.addOrSubtract(1, field.multiply(errorLocations[j], xiInverse)))\n          // Above should work but fails on some Apple and Linux JDKs due to a Hotspot bug.\n          // Below is a funny-looking workaround from Steven Parkes\n          var term = field.multiply(errorLocations[j], xiInverse);\n          var termPlus1 = (term & 0x1) === 0 ? term | 1 : term & ~1;\n          denominator = field.multiply(denominator, termPlus1);\n        }\n      }\n\n      result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n\n      if (field.getGeneratorBase() !== 0) {\n        result[i] = field.multiply(result[i], xiInverse);\n      }\n    }\n\n    return result;\n  };\n\n  return ReedSolomonDecoder;\n}();\n\nexports.default = ReedSolomonDecoder;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.decoder {*/\n\nvar BitMatrix_1 = require(\"../../common/BitMatrix\");\n\nvar FormatInformation_1 = require(\"./FormatInformation\");\n\nvar ECBlocks_1 = require(\"./ECBlocks\");\n\nvar ECB_1 = require(\"./ECB\");\n\nvar FormatException_1 = require(\"../../FormatException\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\r\n * See ISO 18004:2006 Annex D\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Version =\n/** @class */\nfunction () {\n  function Version(versionNumber\n  /*int*/\n  , alignmentPatternCenters) {\n    var ecBlocks = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      ecBlocks[_i - 2] = arguments[_i];\n    }\n\n    this.versionNumber = versionNumber;\n    this.alignmentPatternCenters = alignmentPatternCenters;\n    this.ecBlocks = ecBlocks;\n    var total = 0;\n    var ecCodewords = ecBlocks[0].getECCodewordsPerBlock();\n    var ecbArray = ecBlocks[0].getECBlocks();\n\n    for (var _a = 0, ecbArray_1 = ecbArray; _a < ecbArray_1.length; _a++) {\n      var ecBlock = ecbArray_1[_a];\n      total += ecBlock.getCount() * (ecBlock.getDataCodewords() + ecCodewords);\n    }\n\n    this.totalCodewords = total;\n  }\n\n  Version.prototype.getVersionNumber = function () {\n    return this.versionNumber;\n  };\n\n  Version.prototype.getAlignmentPatternCenters = function () {\n    return this.alignmentPatternCenters;\n  };\n\n  Version.prototype.getTotalCodewords = function () {\n    return this.totalCodewords;\n  };\n\n  Version.prototype.getDimensionForVersion = function () {\n    return 17 + 4 * this.versionNumber;\n  };\n\n  Version.prototype.getECBlocksForLevel = function (ecLevel) {\n    return this.ecBlocks[ecLevel.getValue()]; // TYPESCRIPTPORT: original was using ordinal, and using the order of levels as defined in ErrorCorrectionLevel enum (LMQH)\n    // I will use the direct value from ErrorCorrectionLevelValues enum which in typescript goes to a number\n  };\n  /**\r\n   * <p>Deduces version information purely from QR Code dimensions.</p>\r\n   *\r\n   * @param dimension dimension in modules\r\n   * @return Version for a QR Code of that dimension\r\n   * @throws FormatException if dimension is not 1 mod 4\r\n   */\n\n\n  Version.getProvisionalVersionForDimension = function (dimension\n  /*int*/\n  ) {\n    if (dimension % 4 !== 1) {\n      throw new FormatException_1.default();\n    }\n\n    try {\n      return this.getVersionForNumber((dimension - 17) / 4);\n    } catch (ignored\n    /*: IllegalArgumentException*/\n    ) {\n      throw new FormatException_1.default();\n    }\n  };\n\n  Version.getVersionForNumber = function (versionNumber\n  /*int*/\n  ) {\n    if (versionNumber < 1 || versionNumber > 40) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    return Version.VERSIONS[versionNumber - 1];\n  };\n\n  Version.decodeVersionInformation = function (versionBits\n  /*int*/\n  ) {\n    var bestDifference = Number.MAX_SAFE_INTEGER;\n    var bestVersion = 0;\n\n    for (var i = 0; i < Version.VERSION_DECODE_INFO.length; i++) {\n      var targetVersion = Version.VERSION_DECODE_INFO[i]; // Do the version info bits match exactly? done.\n\n      if (targetVersion === versionBits) {\n        return Version.getVersionForNumber(i + 7);\n      } // Otherwise see if this is the closest to a real version info bit string\n      // we have seen so far\n\n\n      var bitsDifference = FormatInformation_1.default.numBitsDiffering(versionBits, targetVersion);\n\n      if (bitsDifference < bestDifference) {\n        bestVersion = i + 7;\n        bestDifference = bitsDifference;\n      }\n    } // We can tolerate up to 3 bits of error since no two version info codewords will\n    // differ in less than 8 bits.\n\n\n    if (bestDifference <= 3) {\n      return Version.getVersionForNumber(bestVersion);\n    } // If we didn't find a close enough match, fail\n\n\n    return null;\n  };\n  /**\r\n   * See ISO 18004:2006 Annex E\r\n   */\n\n\n  Version.prototype.buildFunctionPattern = function () {\n    var dimension = this.getDimensionForVersion();\n    var bitMatrix = new BitMatrix_1.default(dimension); // Top left finder pattern + separator + format\n\n    bitMatrix.setRegion(0, 0, 9, 9); // Top right finder pattern + separator + format\n\n    bitMatrix.setRegion(dimension - 8, 0, 8, 9); // Bottom left finder pattern + separator + format\n\n    bitMatrix.setRegion(0, dimension - 8, 9, 8); // Alignment patterns\n\n    var max = this.alignmentPatternCenters.length;\n\n    for (var x = 0; x < max; x++) {\n      var i = this.alignmentPatternCenters[x] - 2;\n\n      for (var y = 0; y < max; y++) {\n        if (x === 0 && (y === 0 || y === max - 1) || x === max - 1 && y === 0) {\n          // No alignment patterns near the three finder patterns\n          continue;\n        }\n\n        bitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\n      }\n    } // Vertical timing pattern\n\n\n    bitMatrix.setRegion(6, 9, 1, dimension - 17); // Horizontal timing pattern\n\n    bitMatrix.setRegion(9, 6, dimension - 17, 1);\n\n    if (this.versionNumber > 6) {\n      // Version info, top right\n      bitMatrix.setRegion(dimension - 11, 0, 3, 6); // Version info, bottom left\n\n      bitMatrix.setRegion(0, dimension - 11, 6, 3);\n    }\n\n    return bitMatrix;\n  };\n  /*@Override*/\n\n\n  Version.prototype.toString = function () {\n    return '' + this.versionNumber;\n  };\n  /**\r\n     * See ISO 18004:2006 Annex D.\r\n     * Element i represents the raw version bits that specify version i + 7\r\n     */\n\n\n  Version.VERSION_DECODE_INFO = Int32Array.from([0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6, 0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78, 0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683, 0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB, 0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250, 0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B, 0x2542E, 0x26A64, 0x27541, 0x28C69]);\n  /**\r\n     * See ISO 18004:2006 6.5.1 Table 9\r\n     */\n\n  Version.VERSIONS = [new Version(1, new Int32Array(0), new ECBlocks_1.default(7, new ECB_1.default(1, 19)), new ECBlocks_1.default(10, new ECB_1.default(1, 16)), new ECBlocks_1.default(13, new ECB_1.default(1, 13)), new ECBlocks_1.default(17, new ECB_1.default(1, 9))), new Version(2, Int32Array.from([6, 18]), new ECBlocks_1.default(10, new ECB_1.default(1, 34)), new ECBlocks_1.default(16, new ECB_1.default(1, 28)), new ECBlocks_1.default(22, new ECB_1.default(1, 22)), new ECBlocks_1.default(28, new ECB_1.default(1, 16))), new Version(3, Int32Array.from([6, 22]), new ECBlocks_1.default(15, new ECB_1.default(1, 55)), new ECBlocks_1.default(26, new ECB_1.default(1, 44)), new ECBlocks_1.default(18, new ECB_1.default(2, 17)), new ECBlocks_1.default(22, new ECB_1.default(2, 13))), new Version(4, Int32Array.from([6, 26]), new ECBlocks_1.default(20, new ECB_1.default(1, 80)), new ECBlocks_1.default(18, new ECB_1.default(2, 32)), new ECBlocks_1.default(26, new ECB_1.default(2, 24)), new ECBlocks_1.default(16, new ECB_1.default(4, 9))), new Version(5, Int32Array.from([6, 30]), new ECBlocks_1.default(26, new ECB_1.default(1, 108)), new ECBlocks_1.default(24, new ECB_1.default(2, 43)), new ECBlocks_1.default(18, new ECB_1.default(2, 15), new ECB_1.default(2, 16)), new ECBlocks_1.default(22, new ECB_1.default(2, 11), new ECB_1.default(2, 12))), new Version(6, Int32Array.from([6, 34]), new ECBlocks_1.default(18, new ECB_1.default(2, 68)), new ECBlocks_1.default(16, new ECB_1.default(4, 27)), new ECBlocks_1.default(24, new ECB_1.default(4, 19)), new ECBlocks_1.default(28, new ECB_1.default(4, 15))), new Version(7, Int32Array.from([6, 22, 38]), new ECBlocks_1.default(20, new ECB_1.default(2, 78)), new ECBlocks_1.default(18, new ECB_1.default(4, 31)), new ECBlocks_1.default(18, new ECB_1.default(2, 14), new ECB_1.default(4, 15)), new ECBlocks_1.default(26, new ECB_1.default(4, 13), new ECB_1.default(1, 14))), new Version(8, Int32Array.from([6, 24, 42]), new ECBlocks_1.default(24, new ECB_1.default(2, 97)), new ECBlocks_1.default(22, new ECB_1.default(2, 38), new ECB_1.default(2, 39)), new ECBlocks_1.default(22, new ECB_1.default(4, 18), new ECB_1.default(2, 19)), new ECBlocks_1.default(26, new ECB_1.default(4, 14), new ECB_1.default(2, 15))), new Version(9, Int32Array.from([6, 26, 46]), new ECBlocks_1.default(30, new ECB_1.default(2, 116)), new ECBlocks_1.default(22, new ECB_1.default(3, 36), new ECB_1.default(2, 37)), new ECBlocks_1.default(20, new ECB_1.default(4, 16), new ECB_1.default(4, 17)), new ECBlocks_1.default(24, new ECB_1.default(4, 12), new ECB_1.default(4, 13))), new Version(10, Int32Array.from([6, 28, 50]), new ECBlocks_1.default(18, new ECB_1.default(2, 68), new ECB_1.default(2, 69)), new ECBlocks_1.default(26, new ECB_1.default(4, 43), new ECB_1.default(1, 44)), new ECBlocks_1.default(24, new ECB_1.default(6, 19), new ECB_1.default(2, 20)), new ECBlocks_1.default(28, new ECB_1.default(6, 15), new ECB_1.default(2, 16))), new Version(11, Int32Array.from([6, 30, 54]), new ECBlocks_1.default(20, new ECB_1.default(4, 81)), new ECBlocks_1.default(30, new ECB_1.default(1, 50), new ECB_1.default(4, 51)), new ECBlocks_1.default(28, new ECB_1.default(4, 22), new ECB_1.default(4, 23)), new ECBlocks_1.default(24, new ECB_1.default(3, 12), new ECB_1.default(8, 13))), new Version(12, Int32Array.from([6, 32, 58]), new ECBlocks_1.default(24, new ECB_1.default(2, 92), new ECB_1.default(2, 93)), new ECBlocks_1.default(22, new ECB_1.default(6, 36), new ECB_1.default(2, 37)), new ECBlocks_1.default(26, new ECB_1.default(4, 20), new ECB_1.default(6, 21)), new ECBlocks_1.default(28, new ECB_1.default(7, 14), new ECB_1.default(4, 15))), new Version(13, Int32Array.from([6, 34, 62]), new ECBlocks_1.default(26, new ECB_1.default(4, 107)), new ECBlocks_1.default(22, new ECB_1.default(8, 37), new ECB_1.default(1, 38)), new ECBlocks_1.default(24, new ECB_1.default(8, 20), new ECB_1.default(4, 21)), new ECBlocks_1.default(22, new ECB_1.default(12, 11), new ECB_1.default(4, 12))), new Version(14, Int32Array.from([6, 26, 46, 66]), new ECBlocks_1.default(30, new ECB_1.default(3, 115), new ECB_1.default(1, 116)), new ECBlocks_1.default(24, new ECB_1.default(4, 40), new ECB_1.default(5, 41)), new ECBlocks_1.default(20, new ECB_1.default(11, 16), new ECB_1.default(5, 17)), new ECBlocks_1.default(24, new ECB_1.default(11, 12), new ECB_1.default(5, 13))), new Version(15, Int32Array.from([6, 26, 48, 70]), new ECBlocks_1.default(22, new ECB_1.default(5, 87), new ECB_1.default(1, 88)), new ECBlocks_1.default(24, new ECB_1.default(5, 41), new ECB_1.default(5, 42)), new ECBlocks_1.default(30, new ECB_1.default(5, 24), new ECB_1.default(7, 25)), new ECBlocks_1.default(24, new ECB_1.default(11, 12), new ECB_1.default(7, 13))), new Version(16, Int32Array.from([6, 26, 50, 74]), new ECBlocks_1.default(24, new ECB_1.default(5, 98), new ECB_1.default(1, 99)), new ECBlocks_1.default(28, new ECB_1.default(7, 45), new ECB_1.default(3, 46)), new ECBlocks_1.default(24, new ECB_1.default(15, 19), new ECB_1.default(2, 20)), new ECBlocks_1.default(30, new ECB_1.default(3, 15), new ECB_1.default(13, 16))), new Version(17, Int32Array.from([6, 30, 54, 78]), new ECBlocks_1.default(28, new ECB_1.default(1, 107), new ECB_1.default(5, 108)), new ECBlocks_1.default(28, new ECB_1.default(10, 46), new ECB_1.default(1, 47)), new ECBlocks_1.default(28, new ECB_1.default(1, 22), new ECB_1.default(15, 23)), new ECBlocks_1.default(28, new ECB_1.default(2, 14), new ECB_1.default(17, 15))), new Version(18, Int32Array.from([6, 30, 56, 82]), new ECBlocks_1.default(30, new ECB_1.default(5, 120), new ECB_1.default(1, 121)), new ECBlocks_1.default(26, new ECB_1.default(9, 43), new ECB_1.default(4, 44)), new ECBlocks_1.default(28, new ECB_1.default(17, 22), new ECB_1.default(1, 23)), new ECBlocks_1.default(28, new ECB_1.default(2, 14), new ECB_1.default(19, 15))), new Version(19, Int32Array.from([6, 30, 58, 86]), new ECBlocks_1.default(28, new ECB_1.default(3, 113), new ECB_1.default(4, 114)), new ECBlocks_1.default(26, new ECB_1.default(3, 44), new ECB_1.default(11, 45)), new ECBlocks_1.default(26, new ECB_1.default(17, 21), new ECB_1.default(4, 22)), new ECBlocks_1.default(26, new ECB_1.default(9, 13), new ECB_1.default(16, 14))), new Version(20, Int32Array.from([6, 34, 62, 90]), new ECBlocks_1.default(28, new ECB_1.default(3, 107), new ECB_1.default(5, 108)), new ECBlocks_1.default(26, new ECB_1.default(3, 41), new ECB_1.default(13, 42)), new ECBlocks_1.default(30, new ECB_1.default(15, 24), new ECB_1.default(5, 25)), new ECBlocks_1.default(28, new ECB_1.default(15, 15), new ECB_1.default(10, 16))), new Version(21, Int32Array.from([6, 28, 50, 72, 94]), new ECBlocks_1.default(28, new ECB_1.default(4, 116), new ECB_1.default(4, 117)), new ECBlocks_1.default(26, new ECB_1.default(17, 42)), new ECBlocks_1.default(28, new ECB_1.default(17, 22), new ECB_1.default(6, 23)), new ECBlocks_1.default(30, new ECB_1.default(19, 16), new ECB_1.default(6, 17))), new Version(22, Int32Array.from([6, 26, 50, 74, 98]), new ECBlocks_1.default(28, new ECB_1.default(2, 111), new ECB_1.default(7, 112)), new ECBlocks_1.default(28, new ECB_1.default(17, 46)), new ECBlocks_1.default(30, new ECB_1.default(7, 24), new ECB_1.default(16, 25)), new ECBlocks_1.default(24, new ECB_1.default(34, 13))), new Version(23, Int32Array.from([6, 30, 54, 78, 102]), new ECBlocks_1.default(30, new ECB_1.default(4, 121), new ECB_1.default(5, 122)), new ECBlocks_1.default(28, new ECB_1.default(4, 47), new ECB_1.default(14, 48)), new ECBlocks_1.default(30, new ECB_1.default(11, 24), new ECB_1.default(14, 25)), new ECBlocks_1.default(30, new ECB_1.default(16, 15), new ECB_1.default(14, 16))), new Version(24, Int32Array.from([6, 28, 54, 80, 106]), new ECBlocks_1.default(30, new ECB_1.default(6, 117), new ECB_1.default(4, 118)), new ECBlocks_1.default(28, new ECB_1.default(6, 45), new ECB_1.default(14, 46)), new ECBlocks_1.default(30, new ECB_1.default(11, 24), new ECB_1.default(16, 25)), new ECBlocks_1.default(30, new ECB_1.default(30, 16), new ECB_1.default(2, 17))), new Version(25, Int32Array.from([6, 32, 58, 84, 110]), new ECBlocks_1.default(26, new ECB_1.default(8, 106), new ECB_1.default(4, 107)), new ECBlocks_1.default(28, new ECB_1.default(8, 47), new ECB_1.default(13, 48)), new ECBlocks_1.default(30, new ECB_1.default(7, 24), new ECB_1.default(22, 25)), new ECBlocks_1.default(30, new ECB_1.default(22, 15), new ECB_1.default(13, 16))), new Version(26, Int32Array.from([6, 30, 58, 86, 114]), new ECBlocks_1.default(28, new ECB_1.default(10, 114), new ECB_1.default(2, 115)), new ECBlocks_1.default(28, new ECB_1.default(19, 46), new ECB_1.default(4, 47)), new ECBlocks_1.default(28, new ECB_1.default(28, 22), new ECB_1.default(6, 23)), new ECBlocks_1.default(30, new ECB_1.default(33, 16), new ECB_1.default(4, 17))), new Version(27, Int32Array.from([6, 34, 62, 90, 118]), new ECBlocks_1.default(30, new ECB_1.default(8, 122), new ECB_1.default(4, 123)), new ECBlocks_1.default(28, new ECB_1.default(22, 45), new ECB_1.default(3, 46)), new ECBlocks_1.default(30, new ECB_1.default(8, 23), new ECB_1.default(26, 24)), new ECBlocks_1.default(30, new ECB_1.default(12, 15), new ECB_1.default(28, 16))), new Version(28, Int32Array.from([6, 26, 50, 74, 98, 122]), new ECBlocks_1.default(30, new ECB_1.default(3, 117), new ECB_1.default(10, 118)), new ECBlocks_1.default(28, new ECB_1.default(3, 45), new ECB_1.default(23, 46)), new ECBlocks_1.default(30, new ECB_1.default(4, 24), new ECB_1.default(31, 25)), new ECBlocks_1.default(30, new ECB_1.default(11, 15), new ECB_1.default(31, 16))), new Version(29, Int32Array.from([6, 30, 54, 78, 102, 126]), new ECBlocks_1.default(30, new ECB_1.default(7, 116), new ECB_1.default(7, 117)), new ECBlocks_1.default(28, new ECB_1.default(21, 45), new ECB_1.default(7, 46)), new ECBlocks_1.default(30, new ECB_1.default(1, 23), new ECB_1.default(37, 24)), new ECBlocks_1.default(30, new ECB_1.default(19, 15), new ECB_1.default(26, 16))), new Version(30, Int32Array.from([6, 26, 52, 78, 104, 130]), new ECBlocks_1.default(30, new ECB_1.default(5, 115), new ECB_1.default(10, 116)), new ECBlocks_1.default(28, new ECB_1.default(19, 47), new ECB_1.default(10, 48)), new ECBlocks_1.default(30, new ECB_1.default(15, 24), new ECB_1.default(25, 25)), new ECBlocks_1.default(30, new ECB_1.default(23, 15), new ECB_1.default(25, 16))), new Version(31, Int32Array.from([6, 30, 56, 82, 108, 134]), new ECBlocks_1.default(30, new ECB_1.default(13, 115), new ECB_1.default(3, 116)), new ECBlocks_1.default(28, new ECB_1.default(2, 46), new ECB_1.default(29, 47)), new ECBlocks_1.default(30, new ECB_1.default(42, 24), new ECB_1.default(1, 25)), new ECBlocks_1.default(30, new ECB_1.default(23, 15), new ECB_1.default(28, 16))), new Version(32, Int32Array.from([6, 34, 60, 86, 112, 138]), new ECBlocks_1.default(30, new ECB_1.default(17, 115)), new ECBlocks_1.default(28, new ECB_1.default(10, 46), new ECB_1.default(23, 47)), new ECBlocks_1.default(30, new ECB_1.default(10, 24), new ECB_1.default(35, 25)), new ECBlocks_1.default(30, new ECB_1.default(19, 15), new ECB_1.default(35, 16))), new Version(33, Int32Array.from([6, 30, 58, 86, 114, 142]), new ECBlocks_1.default(30, new ECB_1.default(17, 115), new ECB_1.default(1, 116)), new ECBlocks_1.default(28, new ECB_1.default(14, 46), new ECB_1.default(21, 47)), new ECBlocks_1.default(30, new ECB_1.default(29, 24), new ECB_1.default(19, 25)), new ECBlocks_1.default(30, new ECB_1.default(11, 15), new ECB_1.default(46, 16))), new Version(34, Int32Array.from([6, 34, 62, 90, 118, 146]), new ECBlocks_1.default(30, new ECB_1.default(13, 115), new ECB_1.default(6, 116)), new ECBlocks_1.default(28, new ECB_1.default(14, 46), new ECB_1.default(23, 47)), new ECBlocks_1.default(30, new ECB_1.default(44, 24), new ECB_1.default(7, 25)), new ECBlocks_1.default(30, new ECB_1.default(59, 16), new ECB_1.default(1, 17))), new Version(35, Int32Array.from([6, 30, 54, 78, 102, 126, 150]), new ECBlocks_1.default(30, new ECB_1.default(12, 121), new ECB_1.default(7, 122)), new ECBlocks_1.default(28, new ECB_1.default(12, 47), new ECB_1.default(26, 48)), new ECBlocks_1.default(30, new ECB_1.default(39, 24), new ECB_1.default(14, 25)), new ECBlocks_1.default(30, new ECB_1.default(22, 15), new ECB_1.default(41, 16))), new Version(36, Int32Array.from([6, 24, 50, 76, 102, 128, 154]), new ECBlocks_1.default(30, new ECB_1.default(6, 121), new ECB_1.default(14, 122)), new ECBlocks_1.default(28, new ECB_1.default(6, 47), new ECB_1.default(34, 48)), new ECBlocks_1.default(30, new ECB_1.default(46, 24), new ECB_1.default(10, 25)), new ECBlocks_1.default(30, new ECB_1.default(2, 15), new ECB_1.default(64, 16))), new Version(37, Int32Array.from([6, 28, 54, 80, 106, 132, 158]), new ECBlocks_1.default(30, new ECB_1.default(17, 122), new ECB_1.default(4, 123)), new ECBlocks_1.default(28, new ECB_1.default(29, 46), new ECB_1.default(14, 47)), new ECBlocks_1.default(30, new ECB_1.default(49, 24), new ECB_1.default(10, 25)), new ECBlocks_1.default(30, new ECB_1.default(24, 15), new ECB_1.default(46, 16))), new Version(38, Int32Array.from([6, 32, 58, 84, 110, 136, 162]), new ECBlocks_1.default(30, new ECB_1.default(4, 122), new ECB_1.default(18, 123)), new ECBlocks_1.default(28, new ECB_1.default(13, 46), new ECB_1.default(32, 47)), new ECBlocks_1.default(30, new ECB_1.default(48, 24), new ECB_1.default(14, 25)), new ECBlocks_1.default(30, new ECB_1.default(42, 15), new ECB_1.default(32, 16))), new Version(39, Int32Array.from([6, 26, 54, 82, 110, 138, 166]), new ECBlocks_1.default(30, new ECB_1.default(20, 117), new ECB_1.default(4, 118)), new ECBlocks_1.default(28, new ECB_1.default(40, 47), new ECB_1.default(7, 48)), new ECBlocks_1.default(30, new ECB_1.default(43, 24), new ECB_1.default(22, 25)), new ECBlocks_1.default(30, new ECB_1.default(10, 15), new ECB_1.default(67, 16))), new Version(40, Int32Array.from([6, 30, 58, 86, 114, 142, 170]), new ECBlocks_1.default(30, new ECB_1.default(19, 118), new ECB_1.default(6, 119)), new ECBlocks_1.default(28, new ECB_1.default(18, 47), new ECB_1.default(31, 48)), new ECBlocks_1.default(30, new ECB_1.default(34, 24), new ECB_1.default(34, 25)), new ECBlocks_1.default(30, new ECB_1.default(20, 15), new ECB_1.default(61, 16)))];\n  return Version;\n}();\n\nexports.default = Version;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\nvar IllegalArgumentException_1 = require(\"../IllegalArgumentException\");\n/**\r\n * <p>This provides an easy abstraction to read bits at a time from a sequence of bytes, where the\r\n * number of bits read is not often a multiple of 8.</p>\r\n *\r\n * <p>This class is thread-safe but not reentrant -- unless the caller modifies the bytes array\r\n * it passed in, in which case all bets are off.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar BitSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param bytes bytes from which this will read bits. Bits will be read from the first byte first.\r\n   * Bits are read within a byte from most-significant to least-significant bit.\r\n   */\n  function BitSource(bytes) {\n    this.bytes = bytes;\n    this.byteOffset = 0;\n    this.bitOffset = 0;\n  }\n  /**\r\n   * @return index of next bit in current byte which would be read by the next call to {@link #readBits(int)}.\r\n   */\n\n\n  BitSource.prototype.getBitOffset = function () {\n    return this.bitOffset;\n  };\n  /**\r\n   * @return index of next byte in input byte array which would be read by the next call to {@link #readBits(int)}.\r\n   */\n\n\n  BitSource.prototype.getByteOffset = function () {\n    return this.byteOffset;\n  };\n  /**\r\n   * @param numBits number of bits to read\r\n   * @return int representing the bits read. The bits will appear as the least-significant\r\n   *         bits of the int\r\n   * @throws IllegalArgumentException if numBits isn't in [1,32] or more than is available\r\n   */\n\n\n  BitSource.prototype.readBits = function (numBits\n  /*int*/\n  ) {\n    if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n      throw new IllegalArgumentException_1.default('' + numBits);\n    }\n\n    var result = 0;\n    var bitOffset = this.bitOffset;\n    var byteOffset = this.byteOffset;\n    var bytes = this.bytes; // First, read remainder from current byte\n\n    if (bitOffset > 0) {\n      var bitsLeft = 8 - bitOffset;\n      var toRead = numBits < bitsLeft ? numBits : bitsLeft;\n      var bitsToNotRead = bitsLeft - toRead;\n      var mask = 0xFF >> 8 - toRead << bitsToNotRead;\n      result = (bytes[byteOffset] & mask) >> bitsToNotRead;\n      numBits -= toRead;\n      bitOffset += toRead;\n\n      if (bitOffset === 8) {\n        bitOffset = 0;\n        byteOffset++;\n      }\n    } // Next read whole bytes\n\n\n    if (numBits > 0) {\n      while (numBits >= 8) {\n        result = result << 8 | bytes[byteOffset] & 0xFF;\n        byteOffset++;\n        numBits -= 8;\n      } // Finally read a partial byte\n\n\n      if (numBits > 0) {\n        var bitsToNotRead = 8 - numBits;\n        var mask = 0xFF >> bitsToNotRead << bitsToNotRead;\n        result = result << numBits | (bytes[byteOffset] & mask) >> bitsToNotRead;\n        bitOffset += numBits;\n      }\n    }\n\n    this.bitOffset = bitOffset;\n    this.byteOffset = byteOffset;\n    return result;\n  };\n  /**\r\n   * @return number of bits that can be read successfully\r\n   */\n\n\n  BitSource.prototype.available = function () {\n    return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n  };\n\n  return BitSource;\n}();\n\nexports.default = BitSource;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\n/*import java.util.List;*/\n\n/**\r\n * <p>Encapsulates the result of decoding a matrix of bits. This typically\r\n * applies to 2D barcode formats. For now it contains the raw bytes obtained,\r\n * as well as a String interpretation of those bytes, if applicable.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\nvar DecoderResult =\n/** @class */\nfunction () {\n  // public constructor(rawBytes: Uint8Array,\n  //                      text: string,\n  //                      List<Uint8Array> byteSegments,\n  //                      String ecLevel) {\n  //   this(rawBytes, text, byteSegments, ecLevel, -1, -1)\n  // }\n  function DecoderResult(rawBytes, text, byteSegments, ecLevel, structuredAppendSequenceNumber, structuredAppendParity) {\n    if (structuredAppendSequenceNumber === void 0) {\n      structuredAppendSequenceNumber = -1;\n    }\n\n    if (structuredAppendParity === void 0) {\n      structuredAppendParity = -1;\n    }\n\n    this.rawBytes = rawBytes;\n    this.text = text;\n    this.byteSegments = byteSegments;\n    this.ecLevel = ecLevel;\n    this.structuredAppendSequenceNumber = structuredAppendSequenceNumber;\n    this.structuredAppendParity = structuredAppendParity;\n    this.numBits = rawBytes === undefined || rawBytes === null ? 0 : 8 * rawBytes.length;\n  }\n  /**\r\n   * @return raw bytes representing the result, or {@code null} if not applicable\r\n   */\n\n\n  DecoderResult.prototype.getRawBytes = function () {\n    return this.rawBytes;\n  };\n  /**\r\n   * @return how many bits of {@link #getRawBytes()} are valid; typically 8 times its length\r\n   * @since 3.3.0\r\n   */\n\n\n  DecoderResult.prototype.getNumBits = function () {\n    return this.numBits;\n  };\n  /**\r\n   * @param numBits overrides the number of bits that are valid in {@link #getRawBytes()}\r\n   * @since 3.3.0\r\n   */\n\n\n  DecoderResult.prototype.setNumBits = function (numBits\n  /*int*/\n  ) {\n    this.numBits = numBits;\n  };\n  /**\r\n   * @return text representation of the result\r\n   */\n\n\n  DecoderResult.prototype.getText = function () {\n    return this.text;\n  };\n  /**\r\n   * @return list of byte segments in the result, or {@code null} if not applicable\r\n   */\n\n\n  DecoderResult.prototype.getByteSegments = function () {\n    return this.byteSegments;\n  };\n  /**\r\n   * @return name of error correction level used, or {@code null} if not applicable\r\n   */\n\n\n  DecoderResult.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n  /**\r\n   * @return number of errors corrected, or {@code null} if not applicable\r\n   */\n\n\n  DecoderResult.prototype.getErrorsCorrected = function () {\n    return this.errorsCorrected;\n  };\n\n  DecoderResult.prototype.setErrorsCorrected = function (errorsCorrected\n  /*Integer*/\n  ) {\n    this.errorsCorrected = errorsCorrected;\n  };\n  /**\r\n   * @return number of erasures corrected, or {@code null} if not applicable\r\n   */\n\n\n  DecoderResult.prototype.getErasures = function () {\n    return this.erasures;\n  };\n\n  DecoderResult.prototype.setErasures = function (erasures\n  /*Integer*/\n  ) {\n    this.erasures = erasures;\n  };\n  /**\r\n   * @return arbitrary additional metadata\r\n   */\n\n\n  DecoderResult.prototype.getOther = function () {\n    return this.other;\n  };\n\n  DecoderResult.prototype.setOther = function (other) {\n    this.other = other;\n  };\n\n  DecoderResult.prototype.hasStructuredAppend = function () {\n    return this.structuredAppendParity >= 0 && this.structuredAppendSequenceNumber >= 0;\n  };\n\n  DecoderResult.prototype.getStructuredAppendParity = function () {\n    return this.structuredAppendParity;\n  };\n\n  DecoderResult.prototype.getStructuredAppendSequenceNumber = function () {\n    return this.structuredAppendSequenceNumber;\n  };\n\n  return DecoderResult;\n}();\n\nexports.default = DecoderResult;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar UnsupportedOperationException_1 = require(\"../UnsupportedOperationException\");\n\nvar CharacterSetECI_1 = require(\"../common/CharacterSetECI\");\n/**\r\n * Responsible for en/decoding strings.\r\n */\n\n\nvar StringEncoding =\n/** @class */\nfunction () {\n  function StringEncoding() {}\n  /**\r\n   * Decodes some Uint8Array to a string format.\r\n   */\n\n\n  StringEncoding.decode = function (bytes, encoding) {\n    var encodingName = this.encodingName(encoding); // Increases browser support.\n\n    if (typeof TextDecoder === 'undefined') {\n      return this.decodeFallback(bytes, encodingName);\n    }\n\n    return new TextDecoder(encodingName).decode(bytes);\n  };\n  /**\r\n   * Encodes some string into a Uint8Array.\r\n   *\r\n   * @todo natively support other string formats than UTF-8.\r\n   */\n\n\n  StringEncoding.encode = function (s, encoding) {\n    // Uses `text-encoding` package.\n    if (!StringEncoding.isBrowser()) {\n      // SEE: https://nodejs.org/api/buffer.html#buffer_class_buffer\n      // SEE: https://github.com/polygonplanet/encoding.js/\n      // SEE: https://stackoverflow.com/questions/17191945/conversion-between-utf-8-arraybuffer-and-string\n      var EncoderConstructor = TextEncoder;\n      return new EncoderConstructor(this.encodingName(encoding), {\n        NONSTANDARD_allowLegacyEncoding: true\n      }).encode(s);\n    } // Increases browser support.\n\n\n    if (typeof TextEncoder === 'undefined') {\n      return this.encodeFallback(s);\n    } // TextEncoder only encodes to UTF8 by default as specified by encoding.spec.whatwg.org\n\n\n    return new TextEncoder().encode(s);\n  };\n\n  StringEncoding.isBrowser = function () {\n    return typeof window !== 'undefined' && {}.toString.call(window) === '[object Window]';\n  };\n  /**\r\n   * Returns the string value from some encoding character set.\r\n   */\n\n\n  StringEncoding.encodingName = function (encoding) {\n    return typeof encoding === 'string' ? encoding : encoding.getName();\n  };\n  /**\r\n   * Returns character set from some encoding character set.\r\n   */\n\n\n  StringEncoding.encodingCharacterSet = function (encoding) {\n    return CharacterSetECI_1.default.getCharacterSetECIByName(this.encodingName(encoding));\n  };\n  /**\r\n   * Runs a fallback for the native decoding funcion.\r\n   */\n\n\n  StringEncoding.decodeFallback = function (bytes, encoding) {\n    var characterSet = this.encodingCharacterSet(encoding);\n\n    if (characterSet.equals(CharacterSetECI_1.default.UTF8) || characterSet.equals(CharacterSetECI_1.default.ISO8859_1) || characterSet.equals(CharacterSetECI_1.default.ASCII)) {\n      var s = '';\n\n      for (var i = 0, length_1 = bytes.length; i < length_1; i++) {\n        var h = bytes[i].toString(16);\n\n        if (h.length < 2) {\n          h = '0' + h;\n        }\n\n        s += '%' + h;\n      }\n\n      return decodeURIComponent(s);\n    }\n\n    if (characterSet.equals(CharacterSetECI_1.default.UnicodeBigUnmarked)) {\n      return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n    }\n\n    throw new UnsupportedOperationException_1.default(\"Encoding \" + this.encodingName(encoding) + \" not supported by fallback.\");\n  };\n  /**\r\n   * Runs a fallback for the native encoding funcion.\r\n   *\r\n   * @see https://stackoverflow.com/a/17192845/4367683\r\n   */\n\n\n  StringEncoding.encodeFallback = function (s) {\n    var encodedURIstring = btoa(unescape(encodeURIComponent(s)));\n    var charList = encodedURIstring.split('');\n    var uintArray = [];\n\n    for (var i = 0; i < charList.length; i++) {\n      uintArray.push(charList[i].charCodeAt(0));\n    }\n\n    return new Uint8Array(uintArray);\n  };\n\n  return StringEncoding;\n}();\n\nexports.default = StringEncoding;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * <p>Encapsulates the result of detecting a barcode in an image. This includes the raw\r\n * matrix of black/white pixels corresponding to the barcode, and possibly points of interest\r\n * in the image, like the location of finder patterns or corners of the barcode in the image.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\nvar DetectorResult =\n/** @class */\nfunction () {\n  function DetectorResult(bits, points) {\n    this.bits = bits;\n    this.points = points;\n  }\n\n  DetectorResult.prototype.getBits = function () {\n    return this.bits;\n  };\n\n  DetectorResult.prototype.getPoints = function () {\n    return this.points;\n  };\n\n  return DetectorResult;\n}();\n\nexports.default = DetectorResult;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultGridSampler_1 = require(\"./DefaultGridSampler\");\n\nvar GridSamplerInstance =\n/** @class */\nfunction () {\n  function GridSamplerInstance() {}\n  /**\r\n   * Sets the implementation of GridSampler used by the library. One global\r\n   * instance is stored, which may sound problematic. But, the implementation provided\r\n   * ought to be appropriate for the entire platform, and all uses of this library\r\n   * in the whole lifetime of the JVM. For instance, an Android activity can swap in\r\n   * an implementation that takes advantage of native platform libraries.\r\n   *\r\n   * @param newGridSampler The platform-specific object to install.\r\n   */\n\n\n  GridSamplerInstance.setGridSampler = function (newGridSampler) {\n    GridSamplerInstance.gridSampler = newGridSampler;\n  };\n  /**\r\n   * @return the current implementation of GridSampler\r\n   */\n\n\n  GridSamplerInstance.getInstance = function () {\n    return GridSamplerInstance.gridSampler;\n  };\n\n  GridSamplerInstance.gridSampler = new DefaultGridSampler_1.default();\n  return GridSamplerInstance;\n}();\n\nexports.default = GridSamplerInstance;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\n/**\r\n * <p>This class implements a perspective transform in two dimensions. Given four source and four\r\n * destination points, it will compute the transformation implied between them. The code is based\r\n * directly upon section 3.4.2 of George Wolberg's \"Digital Image Warping\"; see pages 54-56.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\nvar PerspectiveTransform =\n/** @class */\nfunction () {\n  function PerspectiveTransform(a11\n  /*float*/\n  , a21\n  /*float*/\n  , a31\n  /*float*/\n  , a12\n  /*float*/\n  , a22\n  /*float*/\n  , a32\n  /*float*/\n  , a13\n  /*float*/\n  , a23\n  /*float*/\n  , a33\n  /*float*/\n  ) {\n    this.a11 = a11;\n    this.a21 = a21;\n    this.a31 = a31;\n    this.a12 = a12;\n    this.a22 = a22;\n    this.a32 = a32;\n    this.a13 = a13;\n    this.a23 = a23;\n    this.a33 = a33;\n  }\n\n  PerspectiveTransform.quadrilateralToQuadrilateral = function (x0\n  /*float*/\n  , y0\n  /*float*/\n  , x1\n  /*float*/\n  , y1\n  /*float*/\n  , x2\n  /*float*/\n  , y2\n  /*float*/\n  , x3\n  /*float*/\n  , y3\n  /*float*/\n  , x0p\n  /*float*/\n  , y0p\n  /*float*/\n  , x1p\n  /*float*/\n  , y1p\n  /*float*/\n  , x2p\n  /*float*/\n  , y2p\n  /*float*/\n  , x3p\n  /*float*/\n  , y3p\n  /*float*/\n  ) {\n    var qToS = PerspectiveTransform.quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);\n    var sToQ = PerspectiveTransform.squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);\n    return sToQ.times(qToS);\n  };\n\n  PerspectiveTransform.prototype.transformPoints = function (points) {\n    var max = points.length;\n    var a11 = this.a11;\n    var a12 = this.a12;\n    var a13 = this.a13;\n    var a21 = this.a21;\n    var a22 = this.a22;\n    var a23 = this.a23;\n    var a31 = this.a31;\n    var a32 = this.a32;\n    var a33 = this.a33;\n\n    for (var i = 0; i < max; i += 2) {\n      var x = points[i];\n      var y = points[i + 1];\n      var denominator = a13 * x + a23 * y + a33;\n      points[i] = (a11 * x + a21 * y + a31) / denominator;\n      points[i + 1] = (a12 * x + a22 * y + a32) / denominator;\n    }\n  };\n\n  PerspectiveTransform.prototype.transformPointsWithValues = function (xValues, yValues) {\n    var a11 = this.a11;\n    var a12 = this.a12;\n    var a13 = this.a13;\n    var a21 = this.a21;\n    var a22 = this.a22;\n    var a23 = this.a23;\n    var a31 = this.a31;\n    var a32 = this.a32;\n    var a33 = this.a33;\n    var n = xValues.length;\n\n    for (var i = 0; i < n; i++) {\n      var x = xValues[i];\n      var y = yValues[i];\n      var denominator = a13 * x + a23 * y + a33;\n      xValues[i] = (a11 * x + a21 * y + a31) / denominator;\n      yValues[i] = (a12 * x + a22 * y + a32) / denominator;\n    }\n  };\n\n  PerspectiveTransform.squareToQuadrilateral = function (x0\n  /*float*/\n  , y0\n  /*float*/\n  , x1\n  /*float*/\n  , y1\n  /*float*/\n  , x2\n  /*float*/\n  , y2\n  /*float*/\n  , x3\n  /*float*/\n  , y3\n  /*float*/\n  ) {\n    var dx3 = x0 - x1 + x2 - x3;\n    var dy3 = y0 - y1 + y2 - y3;\n\n    if (dx3 === 0.0 && dy3 === 0.0) {\n      // Affine\n      return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0.0, 0.0, 1.0);\n    } else {\n      var dx1 = x1 - x2;\n      var dx2 = x3 - x2;\n      var dy1 = y1 - y2;\n      var dy2 = y3 - y2;\n      var denominator = dx1 * dy2 - dx2 * dy1;\n      var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n      var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n      return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1.0);\n    }\n  };\n\n  PerspectiveTransform.quadrilateralToSquare = function (x0\n  /*float*/\n  , y0\n  /*float*/\n  , x1\n  /*float*/\n  , y1\n  /*float*/\n  , x2\n  /*float*/\n  , y2\n  /*float*/\n  , x3\n  /*float*/\n  , y3\n  /*float*/\n  ) {\n    // Here, the adjoint serves as the inverse:\n    return PerspectiveTransform.squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3).buildAdjoint();\n  };\n\n  PerspectiveTransform.prototype.buildAdjoint = function () {\n    // Adjoint is the transpose of the cofactor matrix:\n    return new PerspectiveTransform(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);\n  };\n\n  PerspectiveTransform.prototype.times = function (other) {\n    return new PerspectiveTransform(this.a11 * other.a11 + this.a21 * other.a12 + this.a31 * other.a13, this.a11 * other.a21 + this.a21 * other.a22 + this.a31 * other.a23, this.a11 * other.a31 + this.a21 * other.a32 + this.a31 * other.a33, this.a12 * other.a11 + this.a22 * other.a12 + this.a32 * other.a13, this.a12 * other.a21 + this.a22 * other.a22 + this.a32 * other.a23, this.a12 * other.a31 + this.a22 * other.a32 + this.a32 * other.a33, this.a13 * other.a11 + this.a23 * other.a12 + this.a33 * other.a13, this.a13 * other.a21 + this.a23 * other.a22 + this.a33 * other.a23, this.a13 * other.a31 + this.a23 * other.a32 + this.a33 * other.a33);\n  };\n\n  return PerspectiveTransform;\n}();\n\nexports.default = PerspectiveTransform;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Decoder_1 = require(\"./decoder/Decoder\");\n\nvar Result_1 = require(\"../Result\");\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar BitMatrix_1 = require(\"../common/BitMatrix\");\n\nvar Detector_1 = require(\"./detector/Detector\");\n\nvar System_1 = require(\"../util/System\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This implementation can detect and decode Data Matrix codes in an image.\r\n *\r\n * @author bbrown@google.com (Brian Brown)\r\n */\n\n\nvar DataMatrixReader =\n/** @class */\nfunction () {\n  function DataMatrixReader() {\n    this.decoder = new Decoder_1.default();\n  }\n  /**\r\n   * Locates and decodes a Data Matrix code in an image.\r\n   *\r\n   * @return a String representing the content encoded by the Data Matrix code\r\n   * @throws NotFoundException if a Data Matrix code cannot be found\r\n   * @throws FormatException if a Data Matrix code cannot be decoded\r\n   * @throws ChecksumException if error correction fails\r\n   */\n  // @Override\n  // public Result decode(BinaryBitmap image) throws NotFoundException, ChecksumException, FormatException {\n  //   return decode(image, null);\n  // }\n  // @Override\n\n\n  DataMatrixReader.prototype.decode = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    var decoderResult;\n    var points;\n\n    if (hints != null && hints.has(DecodeHintType_1.default.PURE_BARCODE)) {\n      var bits = DataMatrixReader.extractPureBits(image.getBlackMatrix());\n      decoderResult = this.decoder.decode(bits);\n      points = DataMatrixReader.NO_POINTS;\n    } else {\n      var detectorResult = new Detector_1.default(image.getBlackMatrix()).detect();\n      decoderResult = this.decoder.decode(detectorResult.getBits());\n      points = detectorResult.getPoints();\n    }\n\n    var rawBytes = decoderResult.getRawBytes();\n    var result = new Result_1.default(decoderResult.getText(), rawBytes, 8 * rawBytes.length, points, BarcodeFormat_1.default.DATA_MATRIX, System_1.default.currentTimeMillis());\n    var byteSegments = decoderResult.getByteSegments();\n\n    if (byteSegments != null) {\n      result.putMetadata(ResultMetadataType_1.default.BYTE_SEGMENTS, byteSegments);\n    }\n\n    var ecLevel = decoderResult.getECLevel();\n\n    if (ecLevel != null) {\n      result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, ecLevel);\n    }\n\n    return result;\n  }; // @Override\n\n\n  DataMatrixReader.prototype.reset = function () {// do nothing\n  };\n  /**\r\n   * This method detects a code in a \"pure\" image -- that is, pure monochrome image\r\n   * which contains only an unrotated, unskewed, image of a code, with some white border\r\n   * around it. This is a specialized method that works exceptionally fast in this special\r\n   * case.\r\n   *\r\n   * @see com.google.zxing.qrcode.QRCodeReader#extractPureBits(BitMatrix)\r\n   */\n\n\n  DataMatrixReader.extractPureBits = function (image) {\n    var leftTopBlack = image.getTopLeftOnBit();\n    var rightBottomBlack = image.getBottomRightOnBit();\n\n    if (leftTopBlack == null || rightBottomBlack == null) {\n      throw new NotFoundException_1.default();\n    }\n\n    var moduleSize = this.moduleSize(leftTopBlack, image);\n    var top = leftTopBlack[1];\n    var bottom = rightBottomBlack[1];\n    var left = leftTopBlack[0];\n    var right = rightBottomBlack[0];\n    var matrixWidth = (right - left + 1) / moduleSize;\n    var matrixHeight = (bottom - top + 1) / moduleSize;\n\n    if (matrixWidth <= 0 || matrixHeight <= 0) {\n      throw new NotFoundException_1.default();\n    } // Push in the \"border\" by half the module width so that we start\n    // sampling in the middle of the module. Just in case the image is a\n    // little off, this will help recover.\n\n\n    var nudge = moduleSize / 2;\n    top += nudge;\n    left += nudge; // Now just read off the bits\n\n    var bits = new BitMatrix_1.default(matrixWidth, matrixHeight);\n\n    for (var y = 0; y < matrixHeight; y++) {\n      var iOffset = top + y * moduleSize;\n\n      for (var x = 0; x < matrixWidth; x++) {\n        if (image.get(left + x * moduleSize, iOffset)) {\n          bits.set(x, y);\n        }\n      }\n    }\n\n    return bits;\n  };\n\n  DataMatrixReader.moduleSize = function (leftTopBlack, image) {\n    var width = image.getWidth();\n    var x = leftTopBlack[0];\n    var y = leftTopBlack[1];\n\n    while (x < width && image.get(x, y)) {\n      x++;\n    }\n\n    if (x === width) {\n      throw new NotFoundException_1.default();\n    }\n\n    var moduleSize = x - leftTopBlack[0];\n\n    if (moduleSize === 0) {\n      throw new NotFoundException_1.default();\n    }\n\n    return moduleSize;\n  };\n\n  DataMatrixReader.NO_POINTS = [];\n  return DataMatrixReader;\n}();\n\nexports.default = DataMatrixReader;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.encoder {*/\n\nvar EncodeHintType_1 = require(\"../../EncodeHintType\");\n\nvar BitArray_1 = require(\"../../common/BitArray\");\n\nvar CharacterSetECI_1 = require(\"../../common/CharacterSetECI\");\n\nvar GenericGF_1 = require(\"../../common/reedsolomon/GenericGF\");\n\nvar ReedSolomonEncoder_1 = require(\"../../common/reedsolomon/ReedSolomonEncoder\");\n\nvar Mode_1 = require(\"../decoder/Mode\");\n\nvar Version_1 = require(\"../decoder/Version\");\n\nvar MaskUtil_1 = require(\"./MaskUtil\");\n\nvar ByteMatrix_1 = require(\"./ByteMatrix\");\n\nvar QRCode_1 = require(\"./QRCode\");\n\nvar MatrixUtil_1 = require(\"./MatrixUtil\");\n\nvar StringEncoding_1 = require(\"../../util/StringEncoding\");\n\nvar BlockPair_1 = require(\"./BlockPair\");\n\nvar WriterException_1 = require(\"../../WriterException\");\n/*import java.io.UnsupportedEncodingException;*/\n\n/*import java.util.ArrayList;*/\n\n/*import java.util.Collection;*/\n\n/*import java.util.Map;*/\n\n/**\r\n * @author satorux@google.com (Satoru Takabayashi) - creator\r\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\r\n */\n\n\nvar Encoder =\n/** @class */\nfunction () {\n  // TYPESCRIPTPORT: changed to UTF8, the default for js\n  function Encoder() {} // The mask penalty calculation is complicated.  See Table 21 of JISX0510:2004 (p.45) for details.\n  // Basically it applies four rules and summate all penalties.\n\n\n  Encoder.calculateMaskPenalty = function (matrix) {\n    return MaskUtil_1.default.applyMaskPenaltyRule1(matrix) + MaskUtil_1.default.applyMaskPenaltyRule2(matrix) + MaskUtil_1.default.applyMaskPenaltyRule3(matrix) + MaskUtil_1.default.applyMaskPenaltyRule4(matrix);\n  };\n  /**\r\n   * @param content text to encode\r\n   * @param ecLevel error correction level to use\r\n   * @return {@link QRCode} representing the encoded QR code\r\n   * @throws WriterException if encoding can't succeed, because of for example invalid content\r\n   *   or configuration\r\n   */\n  // public static encode(content: string, ecLevel: ErrorCorrectionLevel): QRCode /*throws WriterException*/ {\n  //   return encode(content, ecLevel, null)\n  // }\n\n\n  Encoder.encode = function (content, ecLevel, hints) {\n    if (hints === void 0) {\n      hints = null;\n    } // Determine what character encoding has been specified by the caller, if any\n\n\n    var encoding = Encoder.DEFAULT_BYTE_MODE_ENCODING;\n    var hasEncodingHint = hints !== null && undefined !== hints.get(EncodeHintType_1.default.CHARACTER_SET);\n\n    if (hasEncodingHint) {\n      encoding = hints.get(EncodeHintType_1.default.CHARACTER_SET).toString();\n    } // Pick an encoding mode appropriate for the content. Note that this will not attempt to use\n    // multiple modes / segments even if that were more efficient. Twould be nice.\n\n\n    var mode = this.chooseMode(content, encoding); // This will store the header information, like mode and\n    // length, as well as \"header\" segments like an ECI segment.\n\n    var headerBits = new BitArray_1.default(); // Append ECI segment if applicable\n\n    if (mode === Mode_1.default.BYTE && (hasEncodingHint || Encoder.DEFAULT_BYTE_MODE_ENCODING !== encoding)) {\n      var eci = CharacterSetECI_1.default.getCharacterSetECIByName(encoding);\n\n      if (eci !== undefined) {\n        this.appendECI(eci, headerBits);\n      }\n    } // (With ECI in place,) Write the mode marker\n\n\n    this.appendModeInfo(mode, headerBits); // Collect data within the main segment, separately, to count its size if needed. Don't add it to\n    // main payload yet.\n\n    var dataBits = new BitArray_1.default();\n    this.appendBytes(content, mode, dataBits, encoding);\n    var version;\n\n    if (hints !== null && undefined !== hints.get(EncodeHintType_1.default.QR_VERSION)) {\n      var versionNumber = Number.parseInt(hints.get(EncodeHintType_1.default.QR_VERSION).toString(), 10);\n      version = Version_1.default.getVersionForNumber(versionNumber);\n      var bitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, version);\n\n      if (!this.willFit(bitsNeeded, version, ecLevel)) {\n        throw new WriterException_1.default('Data too big for requested version');\n      }\n    } else {\n      version = this.recommendVersion(ecLevel, mode, headerBits, dataBits);\n    }\n\n    var headerAndDataBits = new BitArray_1.default();\n    headerAndDataBits.appendBitArray(headerBits); // Find \"length\" of main segment and write it\n\n    var numLetters = mode === Mode_1.default.BYTE ? dataBits.getSizeInBytes() : content.length;\n    this.appendLengthInfo(numLetters, version, mode, headerAndDataBits); // Put data together into the overall payload\n\n    headerAndDataBits.appendBitArray(dataBits);\n    var ecBlocks = version.getECBlocksForLevel(ecLevel);\n    var numDataBytes = version.getTotalCodewords() - ecBlocks.getTotalECCodewords(); // Terminate the bits properly.\n\n    this.terminateBits(numDataBytes, headerAndDataBits); // Interleave data bits with error correction code.\n\n    var finalBits = this.interleaveWithECBytes(headerAndDataBits, version.getTotalCodewords(), numDataBytes, ecBlocks.getNumBlocks());\n    var qrCode = new QRCode_1.default();\n    qrCode.setECLevel(ecLevel);\n    qrCode.setMode(mode);\n    qrCode.setVersion(version); //  Choose the mask pattern and set to \"qrCode\".\n\n    var dimension = version.getDimensionForVersion();\n    var matrix = new ByteMatrix_1.default(dimension, dimension);\n    var maskPattern = this.chooseMaskPattern(finalBits, ecLevel, version, matrix);\n    qrCode.setMaskPattern(maskPattern); // Build the matrix and set it to \"qrCode\".\n\n    MatrixUtil_1.default.buildMatrix(finalBits, ecLevel, version, maskPattern, matrix);\n    qrCode.setMatrix(matrix);\n    return qrCode;\n  };\n  /**\r\n   * Decides the smallest version of QR code that will contain all of the provided data.\r\n   *\r\n   * @throws WriterException if the data cannot fit in any version\r\n   */\n\n\n  Encoder.recommendVersion = function (ecLevel, mode, headerBits, dataBits) {\n    // Hard part: need to know version to know how many bits length takes. But need to know how many\n    // bits it takes to know version. First we take a guess at version by assuming version will be\n    // the minimum, 1:\n    var provisionalBitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, Version_1.default.getVersionForNumber(1));\n    var provisionalVersion = this.chooseVersion(provisionalBitsNeeded, ecLevel); // Use that guess to calculate the right version. I am still not sure this works in 100% of cases.\n\n    var bitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, provisionalVersion);\n    return this.chooseVersion(bitsNeeded, ecLevel);\n  };\n\n  Encoder.calculateBitsNeeded = function (mode, headerBits, dataBits, version) {\n    return headerBits.getSize() + mode.getCharacterCountBits(version) + dataBits.getSize();\n  };\n  /**\r\n   * @return the code point of the table used in alphanumeric mode or\r\n   *  -1 if there is no corresponding code in the table.\r\n   */\n\n\n  Encoder.getAlphanumericCode = function (code\n  /*int*/\n  ) {\n    if (code < Encoder.ALPHANUMERIC_TABLE.length) {\n      return Encoder.ALPHANUMERIC_TABLE[code];\n    }\n\n    return -1;\n  }; // public static chooseMode(content: string): Mode {\n  //   return chooseMode(content, null);\n  // }\n\n  /**\r\n   * Choose the best mode by examining the content. Note that 'encoding' is used as a hint;\r\n   * if it is Shift_JIS, and the input is only double-byte Kanji, then we return {@link Mode#KANJI}.\r\n   */\n\n\n  Encoder.chooseMode = function (content, encoding) {\n    if (encoding === void 0) {\n      encoding = null;\n    }\n\n    if (CharacterSetECI_1.default.SJIS.getName() === encoding && this.isOnlyDoubleByteKanji(content)) {\n      // Choose Kanji mode if all input are double-byte characters\n      return Mode_1.default.KANJI;\n    }\n\n    var hasNumeric = false;\n    var hasAlphanumeric = false;\n\n    for (var i = 0, length_1 = content.length; i < length_1; ++i) {\n      var c = content.charAt(i);\n\n      if (Encoder.isDigit(c)) {\n        hasNumeric = true;\n      } else if (this.getAlphanumericCode(c.charCodeAt(0)) !== -1) {\n        hasAlphanumeric = true;\n      } else {\n        return Mode_1.default.BYTE;\n      }\n    }\n\n    if (hasAlphanumeric) {\n      return Mode_1.default.ALPHANUMERIC;\n    }\n\n    if (hasNumeric) {\n      return Mode_1.default.NUMERIC;\n    }\n\n    return Mode_1.default.BYTE;\n  };\n\n  Encoder.isOnlyDoubleByteKanji = function (content) {\n    var bytes;\n\n    try {\n      bytes = StringEncoding_1.default.encode(content, CharacterSetECI_1.default.SJIS); // content.getBytes(\"Shift_JIS\"))\n    } catch (ignored\n    /*: UnsupportedEncodingException*/\n    ) {\n      return false;\n    }\n\n    var length = bytes.length;\n\n    if (length % 2 !== 0) {\n      return false;\n    }\n\n    for (var i = 0; i < length; i += 2) {\n      var byte1 = bytes[i] & 0xFF;\n\n      if ((byte1 < 0x81 || byte1 > 0x9F) && (byte1 < 0xE0 || byte1 > 0xEB)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Encoder.chooseMaskPattern = function (bits, ecLevel, version, matrix) {\n    var minPenalty = Number.MAX_SAFE_INTEGER; // Lower penalty is better.\n\n    var bestMaskPattern = -1; // We try all mask patterns to choose the best one.\n\n    for (var maskPattern = 0; maskPattern < QRCode_1.default.NUM_MASK_PATTERNS; maskPattern++) {\n      MatrixUtil_1.default.buildMatrix(bits, ecLevel, version, maskPattern, matrix);\n      var penalty = this.calculateMaskPenalty(matrix);\n\n      if (penalty < minPenalty) {\n        minPenalty = penalty;\n        bestMaskPattern = maskPattern;\n      }\n    }\n\n    return bestMaskPattern;\n  };\n\n  Encoder.chooseVersion = function (numInputBits\n  /*int*/\n  , ecLevel) {\n    for (var versionNum = 1; versionNum <= 40; versionNum++) {\n      var version = Version_1.default.getVersionForNumber(versionNum);\n\n      if (Encoder.willFit(numInputBits, version, ecLevel)) {\n        return version;\n      }\n    }\n\n    throw new WriterException_1.default('Data too big');\n  };\n  /**\r\n   * @return true if the number of input bits will fit in a code with the specified version and\r\n   * error correction level.\r\n   */\n\n\n  Encoder.willFit = function (numInputBits\n  /*int*/\n  , version, ecLevel) {\n    // In the following comments, we use numbers of Version 7-H.\n    // numBytes = 196\n    var numBytes = version.getTotalCodewords(); // getNumECBytes = 130\n\n    var ecBlocks = version.getECBlocksForLevel(ecLevel);\n    var numEcBytes = ecBlocks.getTotalECCodewords(); // getNumDataBytes = 196 - 130 = 66\n\n    var numDataBytes = numBytes - numEcBytes;\n    var totalInputBytes = (numInputBits + 7) / 8;\n    return numDataBytes >= totalInputBytes;\n  };\n  /**\r\n   * Terminate bits as described in 8.4.8 and 8.4.9 of JISX0510:2004 (p.24).\r\n   */\n\n\n  Encoder.terminateBits = function (numDataBytes\n  /*int*/\n  , bits) {\n    var capacity = numDataBytes * 8;\n\n    if (bits.getSize() > capacity) {\n      throw new WriterException_1.default('data bits cannot fit in the QR Code' + bits.getSize() + ' > ' + capacity);\n    }\n\n    for (var i = 0; i < 4 && bits.getSize() < capacity; ++i) {\n      bits.appendBit(false);\n    } // Append termination bits. See 8.4.8 of JISX0510:2004 (p.24) for details.\n    // If the last byte isn't 8-bit aligned, we'll add padding bits.\n\n\n    var numBitsInLastByte = bits.getSize() & 0x07;\n\n    if (numBitsInLastByte > 0) {\n      for (var i = numBitsInLastByte; i < 8; i++) {\n        bits.appendBit(false);\n      }\n    } // If we have more space, we'll fill the space with padding patterns defined in 8.4.9 (p.24).\n\n\n    var numPaddingBytes = numDataBytes - bits.getSizeInBytes();\n\n    for (var i = 0; i < numPaddingBytes; ++i) {\n      bits.appendBits((i & 0x01) === 0 ? 0xEC : 0x11, 8);\n    }\n\n    if (bits.getSize() !== capacity) {\n      throw new WriterException_1.default('Bits size does not equal capacity');\n    }\n  };\n  /**\r\n   * Get number of data bytes and number of error correction bytes for block id \"blockID\". Store\r\n   * the result in \"numDataBytesInBlock\", and \"numECBytesInBlock\". See table 12 in 8.5.1 of\r\n   * JISX0510:2004 (p.30)\r\n   */\n\n\n  Encoder.getNumDataBytesAndNumECBytesForBlockID = function (numTotalBytes\n  /*int*/\n  , numDataBytes\n  /*int*/\n  , numRSBlocks\n  /*int*/\n  , blockID\n  /*int*/\n  , numDataBytesInBlock, numECBytesInBlock) {\n    if (blockID >= numRSBlocks) {\n      throw new WriterException_1.default('Block ID too large');\n    } // numRsBlocksInGroup2 = 196 % 5 = 1\n\n\n    var numRsBlocksInGroup2 = numTotalBytes % numRSBlocks; // numRsBlocksInGroup1 = 5 - 1 = 4\n\n    var numRsBlocksInGroup1 = numRSBlocks - numRsBlocksInGroup2; // numTotalBytesInGroup1 = 196 / 5 = 39\n\n    var numTotalBytesInGroup1 = Math.floor(numTotalBytes / numRSBlocks); // numTotalBytesInGroup2 = 39 + 1 = 40\n\n    var numTotalBytesInGroup2 = numTotalBytesInGroup1 + 1; // numDataBytesInGroup1 = 66 / 5 = 13\n\n    var numDataBytesInGroup1 = Math.floor(numDataBytes / numRSBlocks); // numDataBytesInGroup2 = 13 + 1 = 14\n\n    var numDataBytesInGroup2 = numDataBytesInGroup1 + 1; // numEcBytesInGroup1 = 39 - 13 = 26\n\n    var numEcBytesInGroup1 = numTotalBytesInGroup1 - numDataBytesInGroup1; // numEcBytesInGroup2 = 40 - 14 = 26\n\n    var numEcBytesInGroup2 = numTotalBytesInGroup2 - numDataBytesInGroup2; // Sanity checks.\n    // 26 = 26\n\n    if (numEcBytesInGroup1 !== numEcBytesInGroup2) {\n      throw new WriterException_1.default('EC bytes mismatch');\n    } // 5 = 4 + 1.\n\n\n    if (numRSBlocks !== numRsBlocksInGroup1 + numRsBlocksInGroup2) {\n      throw new WriterException_1.default('RS blocks mismatch');\n    } // 196 = (13 + 26) * 4 + (14 + 26) * 1\n\n\n    if (numTotalBytes !== (numDataBytesInGroup1 + numEcBytesInGroup1) * numRsBlocksInGroup1 + (numDataBytesInGroup2 + numEcBytesInGroup2) * numRsBlocksInGroup2) {\n      throw new WriterException_1.default('Total bytes mismatch');\n    }\n\n    if (blockID < numRsBlocksInGroup1) {\n      numDataBytesInBlock[0] = numDataBytesInGroup1;\n      numECBytesInBlock[0] = numEcBytesInGroup1;\n    } else {\n      numDataBytesInBlock[0] = numDataBytesInGroup2;\n      numECBytesInBlock[0] = numEcBytesInGroup2;\n    }\n  };\n  /**\r\n   * Interleave \"bits\" with corresponding error correction bytes. On success, store the result in\r\n   * \"result\". The interleave rule is complicated. See 8.6 of JISX0510:2004 (p.37) for details.\r\n   */\n\n\n  Encoder.interleaveWithECBytes = function (bits, numTotalBytes\n  /*int*/\n  , numDataBytes\n  /*int*/\n  , numRSBlocks\n  /*int*/\n  ) {\n    // \"bits\" must have \"getNumDataBytes\" bytes of data.\n    if (bits.getSizeInBytes() !== numDataBytes) {\n      throw new WriterException_1.default('Number of bits and data bytes does not match');\n    } // Step 1.  Divide data bytes into blocks and generate error correction bytes for them. We'll\n    // store the divided data bytes blocks and error correction bytes blocks into \"blocks\".\n\n\n    var dataBytesOffset = 0;\n    var maxNumDataBytes = 0;\n    var maxNumEcBytes = 0; // Since, we know the number of reedsolmon blocks, we can initialize the vector with the number.\n\n    var blocks = new Array(); // new Array<BlockPair>(numRSBlocks)\n\n    for (var i = 0; i < numRSBlocks; ++i) {\n      var numDataBytesInBlock = new Int32Array(1);\n      var numEcBytesInBlock = new Int32Array(1);\n      Encoder.getNumDataBytesAndNumECBytesForBlockID(numTotalBytes, numDataBytes, numRSBlocks, i, numDataBytesInBlock, numEcBytesInBlock);\n      var size = numDataBytesInBlock[0];\n      var dataBytes = new Uint8Array(size);\n      bits.toBytes(8 * dataBytesOffset, dataBytes, 0, size);\n      var ecBytes = Encoder.generateECBytes(dataBytes, numEcBytesInBlock[0]);\n      blocks.push(new BlockPair_1.default(dataBytes, ecBytes));\n      maxNumDataBytes = Math.max(maxNumDataBytes, size);\n      maxNumEcBytes = Math.max(maxNumEcBytes, ecBytes.length);\n      dataBytesOffset += numDataBytesInBlock[0];\n    }\n\n    if (numDataBytes !== dataBytesOffset) {\n      throw new WriterException_1.default('Data bytes does not match offset');\n    }\n\n    var result = new BitArray_1.default(); // First, place data blocks.\n\n    for (var i = 0; i < maxNumDataBytes; ++i) {\n      for (var _i = 0, blocks_1 = blocks; _i < blocks_1.length; _i++) {\n        var block = blocks_1[_i];\n        var dataBytes = block.getDataBytes();\n\n        if (i < dataBytes.length) {\n          result.appendBits(dataBytes[i], 8);\n        }\n      }\n    } // Then, place error correction blocks.\n\n\n    for (var i = 0; i < maxNumEcBytes; ++i) {\n      for (var _a = 0, blocks_2 = blocks; _a < blocks_2.length; _a++) {\n        var block = blocks_2[_a];\n        var ecBytes = block.getErrorCorrectionBytes();\n\n        if (i < ecBytes.length) {\n          result.appendBits(ecBytes[i], 8);\n        }\n      }\n    }\n\n    if (numTotalBytes !== result.getSizeInBytes()) {\n      // Should be same.\n      throw new WriterException_1.default('Interleaving error: ' + numTotalBytes + ' and ' + result.getSizeInBytes() + ' differ.');\n    }\n\n    return result;\n  };\n\n  Encoder.generateECBytes = function (dataBytes, numEcBytesInBlock\n  /*int*/\n  ) {\n    var numDataBytes = dataBytes.length;\n    var toEncode = new Int32Array(numDataBytes + numEcBytesInBlock); // int[numDataBytes + numEcBytesInBlock]\n\n    for (var i = 0; i < numDataBytes; i++) {\n      toEncode[i] = dataBytes[i] & 0xFF;\n    }\n\n    new ReedSolomonEncoder_1.default(GenericGF_1.default.QR_CODE_FIELD_256).encode(toEncode, numEcBytesInBlock);\n    var ecBytes = new Uint8Array(numEcBytesInBlock);\n\n    for (var i = 0; i < numEcBytesInBlock; i++) {\n      ecBytes[i] =\n      /*(byte) */\n      toEncode[numDataBytes + i];\n    }\n\n    return ecBytes;\n  };\n  /**\r\n   * Append mode info. On success, store the result in \"bits\".\r\n   */\n\n\n  Encoder.appendModeInfo = function (mode, bits) {\n    bits.appendBits(mode.getBits(), 4);\n  };\n  /**\r\n   * Append length info. On success, store the result in \"bits\".\r\n   */\n\n\n  Encoder.appendLengthInfo = function (numLetters\n  /*int*/\n  , version, mode, bits) {\n    var numBits = mode.getCharacterCountBits(version);\n\n    if (numLetters >= 1 << numBits) {\n      throw new WriterException_1.default(numLetters + ' is bigger than ' + ((1 << numBits) - 1));\n    }\n\n    bits.appendBits(numLetters, numBits);\n  };\n  /**\r\n   * Append \"bytes\" in \"mode\" mode (encoding) into \"bits\". On success, store the result in \"bits\".\r\n   */\n\n\n  Encoder.appendBytes = function (content, mode, bits, encoding) {\n    switch (mode) {\n      case Mode_1.default.NUMERIC:\n        Encoder.appendNumericBytes(content, bits);\n        break;\n\n      case Mode_1.default.ALPHANUMERIC:\n        Encoder.appendAlphanumericBytes(content, bits);\n        break;\n\n      case Mode_1.default.BYTE:\n        Encoder.append8BitBytes(content, bits, encoding);\n        break;\n\n      case Mode_1.default.KANJI:\n        Encoder.appendKanjiBytes(content, bits);\n        break;\n\n      default:\n        throw new WriterException_1.default('Invalid mode: ' + mode);\n    }\n  };\n\n  Encoder.getDigit = function (singleCharacter) {\n    return singleCharacter.charCodeAt(0) - 48;\n  };\n\n  Encoder.isDigit = function (singleCharacter) {\n    var cn = Encoder.getDigit(singleCharacter);\n    return cn >= 0 && cn <= 9;\n  };\n\n  Encoder.appendNumericBytes = function (content, bits) {\n    var length = content.length;\n    var i = 0;\n\n    while (i < length) {\n      var num1 = Encoder.getDigit(content.charAt(i));\n\n      if (i + 2 < length) {\n        // Encode three numeric letters in ten bits.\n        var num2 = Encoder.getDigit(content.charAt(i + 1));\n        var num3 = Encoder.getDigit(content.charAt(i + 2));\n        bits.appendBits(num1 * 100 + num2 * 10 + num3, 10);\n        i += 3;\n      } else if (i + 1 < length) {\n        // Encode two numeric letters in seven bits.\n        var num2 = Encoder.getDigit(content.charAt(i + 1));\n        bits.appendBits(num1 * 10 + num2, 7);\n        i += 2;\n      } else {\n        // Encode one numeric letter in four bits.\n        bits.appendBits(num1, 4);\n        i++;\n      }\n    }\n  };\n\n  Encoder.appendAlphanumericBytes = function (content, bits) {\n    var length = content.length;\n    var i = 0;\n\n    while (i < length) {\n      var code1 = Encoder.getAlphanumericCode(content.charCodeAt(i));\n\n      if (code1 === -1) {\n        throw new WriterException_1.default();\n      }\n\n      if (i + 1 < length) {\n        var code2 = Encoder.getAlphanumericCode(content.charCodeAt(i + 1));\n\n        if (code2 === -1) {\n          throw new WriterException_1.default();\n        } // Encode two alphanumeric letters in 11 bits.\n\n\n        bits.appendBits(code1 * 45 + code2, 11);\n        i += 2;\n      } else {\n        // Encode one alphanumeric letter in six bits.\n        bits.appendBits(code1, 6);\n        i++;\n      }\n    }\n  };\n\n  Encoder.append8BitBytes = function (content, bits, encoding) {\n    var bytes;\n\n    try {\n      bytes = StringEncoding_1.default.encode(content, encoding);\n    } catch (uee\n    /*: UnsupportedEncodingException*/\n    ) {\n      throw new WriterException_1.default(uee);\n    }\n\n    for (var i = 0, length_2 = bytes.length; i !== length_2; i++) {\n      var b = bytes[i];\n      bits.appendBits(b, 8);\n    }\n  };\n  /**\r\n   * @throws WriterException\r\n   */\n\n\n  Encoder.appendKanjiBytes = function (content, bits) {\n    var bytes;\n\n    try {\n      bytes = StringEncoding_1.default.encode(content, CharacterSetECI_1.default.SJIS);\n    } catch (uee\n    /*: UnsupportedEncodingException*/\n    ) {\n      throw new WriterException_1.default(uee);\n    }\n\n    var length = bytes.length;\n\n    for (var i = 0; i < length; i += 2) {\n      var byte1 = bytes[i] & 0xFF;\n      var byte2 = bytes[i + 1] & 0xFF;\n      var code = byte1 << 8 & 0xFFFFFFFF | byte2;\n      var subtracted = -1;\n\n      if (code >= 0x8140 && code <= 0x9ffc) {\n        subtracted = code - 0x8140;\n      } else if (code >= 0xe040 && code <= 0xebbf) {\n        subtracted = code - 0xc140;\n      }\n\n      if (subtracted === -1) {\n        throw new WriterException_1.default('Invalid byte sequence');\n      }\n\n      var encoded = (subtracted >> 8) * 0xc0 + (subtracted & 0xff);\n      bits.appendBits(encoded, 13);\n    }\n  };\n\n  Encoder.appendECI = function (eci, bits) {\n    bits.appendBits(Mode_1.default.ECI.getBits(), 4); // This is correct for values up to 127, which is all we need now.\n\n    bits.appendBits(eci.getValue(), 8);\n  }; // The original table is defined in the table 5 of JISX0510:2004 (p.19).\n\n\n  Encoder.ALPHANUMERIC_TABLE = Int32Array.from([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1]);\n  Encoder.DEFAULT_BYTE_MODE_ENCODING = CharacterSetECI_1.default.UTF8.getName(); // \"ISO-8859-1\"\n\n  return Encoder;\n}();\n\nexports.default = Encoder;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\r\n * @author satorux@google.com (Satoru Takabayashi) - creator\r\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\r\n */\n\n\nvar QRCode =\n/** @class */\nfunction () {\n  function QRCode() {\n    this.maskPattern = -1;\n  }\n\n  QRCode.prototype.getMode = function () {\n    return this.mode;\n  };\n\n  QRCode.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n\n  QRCode.prototype.getVersion = function () {\n    return this.version;\n  };\n\n  QRCode.prototype.getMaskPattern = function () {\n    return this.maskPattern;\n  };\n\n  QRCode.prototype.getMatrix = function () {\n    return this.matrix;\n  };\n  /*@Override*/\n\n\n  QRCode.prototype.toString = function () {\n    var result = new StringBuilder_1.default(); // (200)\n\n    result.append('<<\\n');\n    result.append(' mode: ');\n    result.append(this.mode ? this.mode.toString() : 'null');\n    result.append('\\n ecLevel: ');\n    result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n    result.append('\\n version: ');\n    result.append(this.version ? this.version.toString() : 'null');\n    result.append('\\n maskPattern: ');\n    result.append(this.maskPattern.toString());\n\n    if (this.matrix) {\n      result.append('\\n matrix:\\n');\n      result.append(this.matrix.toString());\n    } else {\n      result.append('\\n matrix: null\\n');\n    }\n\n    result.append('>>\\n');\n    return result.toString();\n  };\n\n  QRCode.prototype.setMode = function (value) {\n    this.mode = value;\n  };\n\n  QRCode.prototype.setECLevel = function (value) {\n    this.ecLevel = value;\n  };\n\n  QRCode.prototype.setVersion = function (version) {\n    this.version = version;\n  };\n\n  QRCode.prototype.setMaskPattern = function (value\n  /*int*/\n  ) {\n    this.maskPattern = value;\n  };\n\n  QRCode.prototype.setMatrix = function (value) {\n    this.matrix = value;\n  }; // Check if \"mask_pattern\" is valid.\n\n\n  QRCode.isValidMaskPattern = function (maskPattern\n  /*int*/\n  ) {\n    return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n  };\n\n  QRCode.NUM_MASK_PATTERNS = 8;\n  return QRCode;\n}();\n\nexports.default = QRCode;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar WriterException =\n/** @class */\nfunction (_super) {\n  __extends(WriterException, _super);\n\n  function WriterException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return WriterException;\n}(Exception_1.default);\n\nexports.default = WriterException;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar Code39Reader_1 = require(\"./Code39Reader\");\n\nvar Code128Reader_1 = require(\"./Code128Reader\");\n\nvar RSS14Reader_1 = require(\"./rss/RSS14Reader\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar ITFReader_1 = require(\"./ITFReader\");\n\nvar MultiFormatUPCEANReader_1 = require(\"./MultiFormatUPCEANReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n/**\r\n * @author Daniel Switkin <dswitkin@google.com>\r\n * @author Sean Owen\r\n */\n\n\nvar MultiFormatOneDReader =\n/** @class */\nfunction (_super) {\n  __extends(MultiFormatOneDReader, _super);\n\n  function MultiFormatOneDReader(hints) {\n    var _this = _super.call(this) || this;\n\n    _this.readers = [];\n    var possibleFormats = !hints ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n    var useCode39CheckDigit = hints && hints.get(DecodeHintType_1.default.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n\n    if (possibleFormats) {\n      if (possibleFormats.includes(BarcodeFormat_1.default.EAN_13) || possibleFormats.includes(BarcodeFormat_1.default.EAN_8)) {\n        _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n      } // if (possibleFormats.includes(BarcodeFormat.EAN_13) ||\n      //     possibleFormats.includes(BarcodeFormat.UPC_A) ||\n      //     possibleFormats.includes(BarcodeFormat.EAN_8) ||\n      //     possibleFormats.includes(BarcodeFormat.UPC_E)) {\n      //   readers.push(new MultiFormatUPCEANReader(hints));\n      // }\n\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.CODE_39)) {\n        _this.readers.push(new Code39Reader_1.default(useCode39CheckDigit));\n      } // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n      //    this.readers.push(new Code93Reader());\n      // }\n\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.CODE_128)) {\n        _this.readers.push(new Code128Reader_1.default());\n      }\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.ITF)) {\n        _this.readers.push(new ITFReader_1.default());\n      } // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n      //    this.readers.push(new CodaBarReader());\n      // }\n\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.RSS_14)) {\n        _this.readers.push(new RSS14Reader_1.default());\n      } // if (possibleFormats.includes(BarcodeFormat.RSS_EXPANDED)) {\n      //   this.readers.push(new RSSExpandedReader());\n      // }\n\n    }\n\n    if (_this.readers.length === 0) {\n      // this.readers.push(new MultiFormatUPCEANReader(hints));\n      _this.readers.push(new Code39Reader_1.default()); // this.readers.push(new CodaBarReader());\n      // this.readers.push(new Code93Reader());\n\n\n      _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n\n      _this.readers.push(new Code128Reader_1.default());\n\n      _this.readers.push(new ITFReader_1.default());\n\n      _this.readers.push(new RSS14Reader_1.default()); // this.readers.push(new RSSExpandedReader());\n\n    }\n\n    return _this;\n  } // @Override\n\n\n  MultiFormatOneDReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    for (var i = 0; i < this.readers.length; i++) {\n      try {\n        return this.readers[i].decodeRow(rowNumber, row, hints);\n      } catch (re) {// continue\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  }; // @Override\n\n\n  MultiFormatOneDReader.prototype.reset = function () {\n    this.readers.forEach(function (reader) {\n      return reader.reset();\n    });\n  };\n\n  return MultiFormatOneDReader;\n}(OneDReader_1.default);\n\nexports.default = MultiFormatOneDReader;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // browser\n\n__export(require(\"./browser/BrowserQRCodeReader\"));\n\n__export(require(\"./browser/BrowserDatamatrixCodeReader\"));\n\n__export(require(\"./browser/BrowserQRCodeSvgWriter\"));\n\n__export(require(\"./browser/BrowserBarcodeReader\"));\n\n__export(require(\"./browser/BrowserCodeReader\"));\n\n__export(require(\"./browser/BrowserMultiFormatReader\"));\n\n__export(require(\"./browser/HTMLCanvasElementLuminanceSource\"));\n\n__export(require(\"./browser/VideoInputDevice\")); // Exceptions\n\n\nvar Exception_1 = require(\"./core/Exception\");\n\nexports.Exception = Exception_1.default;\n\nvar ArgumentException_1 = require(\"./core/ArgumentException\");\n\nexports.ArgumentException = ArgumentException_1.default;\n\nvar ArithmeticException_1 = require(\"./core/ArithmeticException\");\n\nexports.ArithmeticException = ArithmeticException_1.default;\n\nvar ChecksumException_1 = require(\"./core/ChecksumException\");\n\nexports.ChecksumException = ChecksumException_1.default;\n\nvar FormatException_1 = require(\"./core/FormatException\");\n\nexports.FormatException = FormatException_1.default;\n\nvar IllegalArgumentException_1 = require(\"./core/IllegalArgumentException\");\n\nexports.IllegalArgumentException = IllegalArgumentException_1.default;\n\nvar IllegalStateException_1 = require(\"./core/IllegalStateException\");\n\nexports.IllegalStateException = IllegalStateException_1.default;\n\nvar NotFoundException_1 = require(\"./core/NotFoundException\");\n\nexports.NotFoundException = NotFoundException_1.default;\n\nvar ReaderException_1 = require(\"./core/ReaderException\");\n\nexports.ReaderException = ReaderException_1.default;\n\nvar ReedSolomonException_1 = require(\"./core/ReedSolomonException\");\n\nexports.ReedSolomonException = ReedSolomonException_1.default;\n\nvar UnsupportedOperationException_1 = require(\"./core/UnsupportedOperationException\");\n\nexports.UnsupportedOperationException = UnsupportedOperationException_1.default;\n\nvar WriterException_1 = require(\"./core/WriterException\");\n\nexports.WriterException = WriterException_1.default; // core\n\nvar BarcodeFormat_1 = require(\"./core/BarcodeFormat\");\n\nexports.BarcodeFormat = BarcodeFormat_1.default;\n\nvar Binarizer_1 = require(\"./core/Binarizer\");\n\nexports.Binarizer = Binarizer_1.default;\n\nvar BinaryBitmap_1 = require(\"./core/BinaryBitmap\");\n\nexports.BinaryBitmap = BinaryBitmap_1.default;\n\nvar DecodeHintType_1 = require(\"./core/DecodeHintType\");\n\nexports.DecodeHintType = DecodeHintType_1.default;\n\nvar InvertedLuminanceSource_1 = require(\"./core/InvertedLuminanceSource\");\n\nexports.InvertedLuminanceSource = InvertedLuminanceSource_1.default;\n\nvar LuminanceSource_1 = require(\"./core/LuminanceSource\");\n\nexports.LuminanceSource = LuminanceSource_1.default;\n\nvar MultiFormatReader_1 = require(\"./core/MultiFormatReader\");\n\nexports.MultiFormatReader = MultiFormatReader_1.default;\n\nvar MultiFormatWriter_1 = require(\"./core/MultiFormatWriter\");\n\nexports.MultiFormatWriter = MultiFormatWriter_1.default;\n\nvar PlanarYUVLuminanceSource_1 = require(\"./core/PlanarYUVLuminanceSource\");\n\nexports.PlanarYUVLuminanceSource = PlanarYUVLuminanceSource_1.default;\n\nvar Result_1 = require(\"./core/Result\");\n\nexports.Result = Result_1.default;\n\nvar ResultMetadataType_1 = require(\"./core/ResultMetadataType\");\n\nexports.ResultMetadataType = ResultMetadataType_1.default;\n\nvar RGBLuminanceSource_1 = require(\"./core/RGBLuminanceSource\");\n\nexports.RGBLuminanceSource = RGBLuminanceSource_1.default; // core/common\n\nvar BitArray_1 = require(\"./core/common/BitArray\");\n\nexports.BitArray = BitArray_1.default;\n\nvar BitMatrix_1 = require(\"./core/common/BitMatrix\");\n\nexports.BitMatrix = BitMatrix_1.default;\n\nvar BitSource_1 = require(\"./core/common/BitSource\");\n\nexports.BitSource = BitSource_1.default;\n\nvar CharacterSetECI_1 = require(\"./core/common/CharacterSetECI\");\n\nexports.CharacterSetECI = CharacterSetECI_1.default;\n\nvar DecoderResult_1 = require(\"./core/common/DecoderResult\");\n\nexports.DecoderResult = DecoderResult_1.default;\n\nvar DefaultGridSampler_1 = require(\"./core/common/DefaultGridSampler\");\n\nexports.DefaultGridSampler = DefaultGridSampler_1.default;\n\nvar DetectorResult_1 = require(\"./core/common/DetectorResult\");\n\nexports.DetectorResult = DetectorResult_1.default;\n\nvar EncodeHintType_1 = require(\"./core/EncodeHintType\");\n\nexports.EncodeHintType = EncodeHintType_1.default;\n\nvar GlobalHistogramBinarizer_1 = require(\"./core/common/GlobalHistogramBinarizer\");\n\nexports.GlobalHistogramBinarizer = GlobalHistogramBinarizer_1.default;\n\nvar GridSampler_1 = require(\"./core/common/GridSampler\");\n\nexports.GridSampler = GridSampler_1.default;\n\nvar GridSamplerInstance_1 = require(\"./core/common/GridSamplerInstance\");\n\nexports.GridSamplerInstance = GridSamplerInstance_1.default;\n\nvar HybridBinarizer_1 = require(\"./core/common/HybridBinarizer\");\n\nexports.HybridBinarizer = HybridBinarizer_1.default;\n\nvar PerspectiveTransform_1 = require(\"./core/common/PerspectiveTransform\");\n\nexports.PerspectiveTransform = PerspectiveTransform_1.default;\n\nvar StringUtils_1 = require(\"./core/common/StringUtils\");\n\nexports.StringUtils = StringUtils_1.default; // core/common/detector\n\nvar MathUtils_1 = require(\"./core/common/detector/MathUtils\");\n\nexports.MathUtils = MathUtils_1.default; // export { default as MonochromeRectangleDetector } from './core/common/detector/MonochromeRectangleDetector';\n\nvar WhiteRectangleDetector_1 = require(\"./core/common/detector/WhiteRectangleDetector\");\n\nexports.WhiteRectangleDetector = WhiteRectangleDetector_1.default; // core/common/reedsolomon\n\nvar GenericGF_1 = require(\"./core/common/reedsolomon/GenericGF\");\n\nexports.GenericGF = GenericGF_1.default;\n\nvar GenericGFPoly_1 = require(\"./core/common/reedsolomon/GenericGFPoly\");\n\nexports.GenericGFPoly = GenericGFPoly_1.default;\n\nvar ReedSolomonDecoder_1 = require(\"./core/common/reedsolomon/ReedSolomonDecoder\");\n\nexports.ReedSolomonDecoder = ReedSolomonDecoder_1.default;\n\nvar ReedSolomonEncoder_1 = require(\"./core/common/reedsolomon/ReedSolomonEncoder\");\n\nexports.ReedSolomonEncoder = ReedSolomonEncoder_1.default; // core/datamatrix\n\nvar DataMatrixReader_1 = require(\"./core/datamatrix/DataMatrixReader\");\n\nexports.DataMatrixReader = DataMatrixReader_1.default; // core/twod/qrcode\n\nvar QRCodeReader_1 = require(\"./core/qrcode/QRCodeReader\");\n\nexports.QRCodeReader = QRCodeReader_1.default;\n\nvar QRCodeWriter_1 = require(\"./core/qrcode/QRCodeWriter\");\n\nexports.QRCodeWriter = QRCodeWriter_1.default;\n\nvar ErrorCorrectionLevel_1 = require(\"./core/qrcode/decoder/ErrorCorrectionLevel\");\n\nexports.QRCodeDecoderErrorCorrectionLevel = ErrorCorrectionLevel_1.default;\n\nvar Encoder_1 = require(\"./core/qrcode/encoder/Encoder\");\n\nexports.QRCodeEncoder = Encoder_1.default;\n\nvar QRCode_1 = require(\"./core/qrcode/encoder/QRCode\");\n\nexports.QRCodeEncoderQRCode = QRCode_1.default; // core/oned\n\nvar OneDReader_1 = require(\"./core/oned/OneDReader\");\n\nexports.OneDReader = OneDReader_1.default;\n\nvar EAN13Reader_1 = require(\"./core/oned/EAN13Reader\");\n\nexports.EAN13Reader = EAN13Reader_1.default;\n\nvar Code128Reader_1 = require(\"./core/oned/Code128Reader\");\n\nexports.Code128Reader = Code128Reader_1.default;\n\nvar ITFReader_1 = require(\"./core/oned/ITFReader\");\n\nexports.ITFReader = ITFReader_1.default;\n\nvar Code39Reader_1 = require(\"./core/oned/Code39Reader\");\n\nexports.Code39Reader = Code39Reader_1.default;\n\nvar RSS14Reader_1 = require(\"./core/oned/rss/RSS14Reader\");\n\nexports.RSS14Reader = RSS14Reader_1.default;\n\nvar MultiFormatOneDReader_1 = require(\"./core/oned/MultiFormatOneDReader\");\n\nexports.MultiformatReader = MultiFormatOneDReader_1.default;","var isarray = require('isarray');\n/**\n * Expose `pathToRegexp`.\n */\n\n\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js'); // Backwards-compat with node 0.4.x\n\nStream.Stream = Stream; // old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function (dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    dest.end();\n  }\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    if (typeof dest.destroy === 'function') dest.destroy();\n  } // don't leave dangling pipes when there are errors.\n\n\n  function onerror(er) {\n    cleanup();\n\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror); // remove all the event listeners that were added.\n\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n  dest.on('close', cleanup);\n  dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n  return dest;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar debugUtil = require('util');\n\nvar debug = void 0;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/BufferList');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar StringDecoder;\nutil.inherits(Readable, Stream);\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  var isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm; // cast to ints.\n\n  this.highWaterMark = Math.floor(this.highWaterMark); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n  this._readableState = new ReadableState(options, this); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n\n  return er;\n} // if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\n\n\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n}; // Don't raise the hwm > 8MB\n\n\nvar MAX_HWM = 0x800000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true; // emit 'readable' now to make sure it gets picked up.\n\n  emitReadable(stream);\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  } // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n\n\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {}\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList; // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n  return ret;\n} // Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n\n  return ret;\n} // Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n\n      break;\n    }\n\n    ++c;\n  }\n\n  list.length -= c;\n  return ret;\n} // Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n\n      break;\n    }\n\n    ++c;\n  }\n\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState; // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","module.exports = require('events').EventEmitter;","'use strict';\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n// undocumented cb() API, needed for core, not for public API\n\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n    case 'raw':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n\n      default:\n        if (retried) return; // undefined\n\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n}\n\n; // Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n} // StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\n\n\nexports.StringDecoder = StringDecoder;\n\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End; // Returns only complete characters in a Buffer\n\nStringDecoder.prototype.text = utf8Text; // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n}; // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\n\n\nfunction utf8CheckByte(_byte) {\n  if (_byte <= 0x7F) return 0;else if (_byte >> 5 === 0x06) return 2;else if (_byte >> 4 === 0x0E) return 3;else if (_byte >> 3 === 0x1E) return 4;\n  return _byte >> 6 === 0x02 ? -1 : -2;\n} // Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\n\n\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n\n    return nb;\n  }\n\n  return 0;\n} // Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\n\n\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return \"\\uFFFD\";\n  }\n\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return \"\\uFFFD\";\n    }\n\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return \"\\uFFFD\";\n      }\n    }\n  }\n} // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n\n\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n} // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\n\n\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n} // For UTF-8, a replacement character is added when ending on a partial\n// character.\n\n\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + \"\\uFFFD\";\n  return r;\n} // UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\n\n\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n\n    return r;\n  }\n\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n} // For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\n\n\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n} // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n\n\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n/*<replacement>*/\n\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n  return stream.push(null);\n}","'use strict';\n\nvar objectAssign = require('object-assign'); // compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n\n  return !!(b != null && b._isBuffer);\n} // based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar util = require('util/');\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\n\nvar functionsHaveNames = function () {\n  return function foo() {}.name === 'foo';\n}();\n\nfunction pToString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n\n  if (!arrbuf) {\n    return false;\n  }\n\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n\n  return false;\n} // 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\n\nvar assert = module.exports = ok; // 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/; // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n\n  if (functionsHaveNames) {\n    return func.name;\n  }\n\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n\n    if (err.stack) {\n      var out = err.stack; // try to strip useless frames\n\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}; // assert.AssertionError instanceof Error\n\n\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' + name + ']';\n}\n\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);\n} // At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n} // EXTENSION! allows for well behaved errors defined elsewhere.\n\n\nassert.fail = fail; // 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\n\nassert.ok = ok; // 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n}; // 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n}; // 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0; // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime(); // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase; // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') && (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected; // If both values are instances of typed arrays, wrap their underlying\n    // ArrayBuffers in a Buffer each to increase performance\n    // This optimization requires the arrays to have the same type as checked by\n    // Object.prototype.toString (aka pToString). Never perform binary\n    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n    // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0; // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {\n      actual: [],\n      expected: []\n    };\n    var actualIndex = memos.actual.indexOf(actual);\n\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined) return false; // if one is a primitive, the other must be same\n\n  if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (ka.length !== kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n  ka.sort();\n  kb.sort(); //~~~cheap key test\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  } //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n  }\n\n  return true;\n} // 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n} // 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n}; // 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {// Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n    throw actual;\n  }\n} // 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\n\nassert.throws = function (block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(true, block, error, message);\n}; // EXTENSION! This is annoying to write outside this module.\n\n\nassert.doesNotThrow = function (block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function (err) {\n  if (err) throw err;\n}; // Expose a strict only variant of assert\n\n\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n\n  return keys;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n  var keys = Object.keys(obj);\n  var descriptors = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n  }\n\n  return descriptors;\n};\n\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nexports.deprecate = function (fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  } // Allow for deprecating things in the process of starting up.\n\n\n  if (typeof process === 'undefined') {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\n\nexports.inherits = require('inherits');\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  });\n  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n};\n\nexports.promisify.custom = kCustomPromisifiedSymbol;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  } // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n\n\n  function callbackified() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n\n    var self = this;\n\n    var cb = function cb() {\n      return maybeCb.apply(self, arguments);\n    }; // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n\n\n    original.apply(this, args).then(function (ret) {\n      process.nextTick(cb, null, ret);\n    }, function (rej) {\n      process.nextTick(callbackifyOnRejected, rej, cb);\n    });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n  return callbackified;\n}\n\nexports.callbackify = callbackify;","'use strict'; // Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = adler & 0xffff | 0,\n      s2 = adler >>> 16 & 0xffff | 0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = s1 + buf[pos++] | 0;\n      s2 = s2 + s1 | 0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return s1 | s2 << 16 | 0;\n}\n\nmodule.exports = adler32;","'use strict'; // Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n// Use ordinary array, since untyped makes no boost here\n\nfunction makeTable() {\n  var c,\n      table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xEDB88320 ^ c >>> 1 : c >>> 1;\n    }\n\n    table[n] = c;\n  }\n\n  return table;\n} // Create table on load. Just 255 signed longs. Not a problem.\n\n\nvar crcTable = makeTable();\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return crc ^ -1; // >>> 0;\n}\n\nmodule.exports = crc32;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar InvertedLuminanceSource_1 = require(\"../core/InvertedLuminanceSource\");\n\nvar LuminanceSource_1 = require(\"../core/LuminanceSource\");\n\nvar IllegalArgumentException_1 = require(\"../core/IllegalArgumentException\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n */\n\n\nvar HTMLCanvasElementLuminanceSource =\n/** @class */\nfunction (_super) {\n  __extends(HTMLCanvasElementLuminanceSource, _super);\n\n  function HTMLCanvasElementLuminanceSource(canvas) {\n    var _this = _super.call(this, canvas.width, canvas.height) || this;\n\n    _this.canvas = canvas;\n    _this.tempCanvasElement = null;\n    _this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\n    return _this;\n  }\n\n  HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData = function (canvas) {\n    var imageData = canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n    return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\n  };\n\n  HTMLCanvasElementLuminanceSource.toGrayscaleBuffer = function (imageBuffer, width, height) {\n    var grayscaleBuffer = new Uint8ClampedArray(width * height);\n\n    for (var i = 0, j = 0, length_1 = imageBuffer.length; i < length_1; i += 4, j++) {\n      var gray = void 0;\n      var alpha = imageBuffer[i + 3]; // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\n      // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\n      // barcode image. Force any such pixel to be white:\n\n      if (alpha === 0) {\n        gray = 0xFF;\n      } else {\n        var pixelR = imageBuffer[i];\n        var pixelG = imageBuffer[i + 1];\n        var pixelB = imageBuffer[i + 2]; // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\n        // (306*R) >> 10 is approximately equal to R*0.299, and so on.\n        // 0x200 >> 10 is 0.5, it implements rounding.\n\n        gray = 306 * pixelR + 601 * pixelG + 117 * pixelB + 0x200 >> 10;\n      }\n\n      grayscaleBuffer[j] = gray;\n    }\n\n    return grayscaleBuffer;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException_1.default('Requested row is outside the image: ' + y);\n    }\n\n    var width = this.getWidth();\n    var start = y * width;\n\n    if (row === null) {\n      row = this.buffer.slice(start, start + width);\n    } else {\n      if (row.length < width) {\n        row = new Uint8ClampedArray(width);\n      } // The underlying raster of image consists of bytes with the luminance values\n      // TODO: can avoid set/slice?\n\n\n      row.set(this.buffer.slice(start, start + width));\n    }\n\n    return row;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.getMatrix = function () {\n    return this.buffer;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    this.crop(left, top, width, height);\n    return this;\n  };\n  /**\r\n   * This is always true, since the image is a gray-scale image.\r\n   *\r\n   * @return true\r\n   */\n\n\n  HTMLCanvasElementLuminanceSource.prototype.isRotateSupported = function () {\n    return true;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise = function () {\n    this.rotate(-90);\n    return this;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    this.rotate(-45);\n    return this;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.getTempCanvasElement = function () {\n    if (null === this.tempCanvasElement) {\n      var tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\n      tempCanvasElement.width = this.canvas.width;\n      tempCanvasElement.height = this.canvas.height;\n      this.tempCanvasElement = tempCanvasElement;\n    }\n\n    return this.tempCanvasElement;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.rotate = function (angle) {\n    var tempCanvasElement = this.getTempCanvasElement();\n    var tempContext = tempCanvasElement.getContext('2d');\n    var angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS; // Calculate and set new dimensions for temp canvas\n\n    var width = this.canvas.width;\n    var height = this.canvas.height;\n    var newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\n    var newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\n    tempCanvasElement.width = newWidth;\n    tempCanvasElement.height = newHeight; // Draw at center of temp canvas to prevent clipping of image data\n\n    tempContext.translate(newWidth / 2, newHeight / 2);\n    tempContext.rotate(angleRadians);\n    tempContext.drawImage(this.canvas, width / -2, height / -2);\n    this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\n    return this;\n  };\n\n  HTMLCanvasElementLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource_1.default(this);\n  };\n\n  HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\n  return HTMLCanvasElementLuminanceSource;\n}(LuminanceSource_1.default);\n\nexports.HTMLCanvasElementLuminanceSource = HTMLCanvasElementLuminanceSource;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * Video input device metadata containing the id and label of the device if available.\r\n */\n\nvar VideoInputDevice =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of VideoInputDevice.\r\n   * @param {string} deviceId the video input device id\r\n   * @param {string} label the label of the device if available\r\n   */\n  function VideoInputDevice(deviceId, label) {\n    this.deviceId = deviceId;\n    this.label = label;\n  }\n\n  return VideoInputDevice;\n}();\n\nexports.VideoInputDevice = VideoInputDevice;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n\nvar BinaryBitmap =\n/** @class */\nfunction () {\n  function BinaryBitmap(binarizer) {\n    this.binarizer = binarizer;\n\n    if (binarizer === null) {\n      throw new IllegalArgumentException_1.default('Binarizer must be non-null.');\n    }\n  }\n  /**\r\n   * @return The width of the bitmap.\r\n   */\n\n\n  BinaryBitmap.prototype.getWidth = function () {\n    return this.binarizer.getWidth();\n  };\n  /**\r\n   * @return The height of the bitmap.\r\n   */\n\n\n  BinaryBitmap.prototype.getHeight = function () {\n    return this.binarizer.getHeight();\n  };\n  /**\r\n   * Converts one row of luminance data to 1 bit data. May actually do the conversion, or return\r\n   * cached data. Callers should assume this method is expensive and call it as seldom as possible.\r\n   * This method is intended for decoding 1D barcodes and may choose to apply sharpening.\r\n   *\r\n   * @param y The row to fetch, which must be in [0, bitmap height)\r\n   * @param row An optional preallocated array. If null or too small, it will be ignored.\r\n   *            If used, the Binarizer will call BitArray.clear(). Always use the returned object.\r\n   * @return The array of bits for this row (true means black).\r\n   * @throws NotFoundException if row can't be binarized\r\n   */\n\n\n  BinaryBitmap.prototype.getBlackRow = function (y\n  /*int*/\n  , row) {\n    return this.binarizer.getBlackRow(y, row);\n  };\n  /**\r\n   * Converts a 2D array of luminance data to 1 bit. As above, assume this method is expensive\r\n   * and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or\r\n   * may not apply sharpening. Therefore, a row from this matrix may not be identical to one\r\n   * fetched using getBlackRow(), so don't mix and match between them.\r\n   *\r\n   * @return The 2D array of bits for the image (true means black).\r\n   * @throws NotFoundException if image can't be binarized to make a matrix\r\n   */\n\n\n  BinaryBitmap.prototype.getBlackMatrix = function () {\n    // The matrix is created on demand the first time it is requested, then cached. There are two\n    // reasons for this:\n    // 1. This work will never be done if the caller only installs 1D Reader objects, or if a\n    //    1D Reader finds a barcode before the 2D Readers run.\n    // 2. This work will only be done once even if the caller installs multiple 2D Readers.\n    if (this.matrix === null || this.matrix === undefined) {\n      this.matrix = this.binarizer.getBlackMatrix();\n    }\n\n    return this.matrix;\n  };\n  /**\r\n   * @return Whether this bitmap can be cropped.\r\n   */\n\n\n  BinaryBitmap.prototype.isCropSupported = function () {\n    return this.binarizer.getLuminanceSource().isCropSupported();\n  };\n  /**\r\n   * Returns a new object with cropped image data. Implementations may keep a reference to the\r\n   * original data rather than a copy. Only callable if isCropSupported() is true.\r\n   *\r\n   * @param left The left coordinate, which must be in [0,getWidth())\r\n   * @param top The top coordinate, which must be in [0,getHeight())\r\n   * @param width The width of the rectangle to crop.\r\n   * @param height The height of the rectangle to crop.\r\n   * @return A cropped version of this object.\r\n   */\n\n\n  BinaryBitmap.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    var newSource = this.binarizer.getLuminanceSource().crop(left, top, width, height);\n    return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n  };\n  /**\r\n   * @return Whether this bitmap supports counter-clockwise rotation.\r\n   */\n\n\n  BinaryBitmap.prototype.isRotateSupported = function () {\n    return this.binarizer.getLuminanceSource().isRotateSupported();\n  };\n  /**\r\n   * Returns a new object with rotated image data by 90 degrees counterclockwise.\r\n   * Only callable if {@link #isRotateSupported()} is true.\r\n   *\r\n   * @return A rotated version of this object.\r\n   */\n\n\n  BinaryBitmap.prototype.rotateCounterClockwise = function () {\n    var newSource = this.binarizer.getLuminanceSource().rotateCounterClockwise();\n    return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n  };\n  /**\r\n   * Returns a new object with rotated image data by 45 degrees counterclockwise.\r\n   * Only callable if {@link #isRotateSupported()} is true.\r\n   *\r\n   * @return A rotated version of this object.\r\n   */\n\n\n  BinaryBitmap.prototype.rotateCounterClockwise45 = function () {\n    var newSource = this.binarizer.getLuminanceSource().rotateCounterClockwise45();\n    return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n  };\n  /*@Override*/\n\n\n  BinaryBitmap.prototype.toString = function () {\n    try {\n      return this.getBlackMatrix().toString();\n    } catch (e\n    /*: NotFoundException*/\n    ) {\n      return '';\n    }\n  };\n\n  return BinaryBitmap;\n}();\n\nexports.default = BinaryBitmap;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar GlobalHistogramBinarizer_1 = require(\"./GlobalHistogramBinarizer\");\n\nvar BitMatrix_1 = require(\"./BitMatrix\");\n/**\r\n * This class implements a local thresholding algorithm, which while slower than the\r\n * GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for\r\n * high frequency images of barcodes with black data on white backgrounds. For this application,\r\n * it does a much better job than a global blackpoint with severe shadows and gradients.\r\n * However it tends to produce artifacts on lower frequency images and is therefore not\r\n * a good general purpose binarizer for uses outside ZXing.\r\n *\r\n * This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers,\r\n * and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already\r\n * inherently local, and only fails for horizontal gradients. We can revisit that problem later,\r\n * but for now it was not a win to use local blocks for 1D.\r\n *\r\n * This Binarizer is the default for the unit tests and the recommended class for library users.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar HybridBinarizer =\n/** @class */\nfunction (_super) {\n  __extends(HybridBinarizer, _super);\n\n  function HybridBinarizer(source) {\n    var _this = _super.call(this, source) || this;\n\n    _this.matrix = null;\n    return _this;\n  }\n  /**\r\n   * Calculates the final BitMatrix once for all requests. This could be called once from the\r\n   * constructor instead, but there are some advantages to doing it lazily, such as making\r\n   * profiling easier, and not doing heavy lifting when callers don't expect it.\r\n   */\n\n  /*@Override*/\n\n\n  HybridBinarizer.prototype.getBlackMatrix = function () {\n    if (this.matrix !== null) {\n      return this.matrix;\n    }\n\n    var source = this.getLuminanceSource();\n    var width = source.getWidth();\n    var height = source.getHeight();\n\n    if (width >= HybridBinarizer.MINIMUM_DIMENSION && height >= HybridBinarizer.MINIMUM_DIMENSION) {\n      var luminances = source.getMatrix();\n      var subWidth = width >> HybridBinarizer.BLOCK_SIZE_POWER;\n\n      if ((width & HybridBinarizer.BLOCK_SIZE_MASK) !== 0) {\n        subWidth++;\n      }\n\n      var subHeight = height >> HybridBinarizer.BLOCK_SIZE_POWER;\n\n      if ((height & HybridBinarizer.BLOCK_SIZE_MASK) !== 0) {\n        subHeight++;\n      }\n\n      var blackPoints = HybridBinarizer.calculateBlackPoints(luminances, subWidth, subHeight, width, height);\n      var newMatrix = new BitMatrix_1.default(width, height);\n      HybridBinarizer.calculateThresholdForBlock(luminances, subWidth, subHeight, width, height, blackPoints, newMatrix);\n      this.matrix = newMatrix;\n    } else {\n      // If the image is too small, fall back to the global histogram approach.\n      this.matrix = _super.prototype.getBlackMatrix.call(this);\n    }\n\n    return this.matrix;\n  };\n  /*@Override*/\n\n\n  HybridBinarizer.prototype.createBinarizer = function (source) {\n    return new HybridBinarizer(source);\n  };\n  /**\r\n   * For each block in the image, calculate the average black point using a 5x5 grid\r\n   * of the blocks around it. Also handles the corner cases (fractional blocks are computed based\r\n   * on the last pixels in the row/column which are also used in the previous block).\r\n   */\n\n\n  HybridBinarizer.calculateThresholdForBlock = function (luminances, subWidth\n  /*int*/\n  , subHeight\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  , blackPoints, matrix) {\n    var maxYOffset = height - HybridBinarizer.BLOCK_SIZE;\n    var maxXOffset = width - HybridBinarizer.BLOCK_SIZE;\n\n    for (var y = 0; y < subHeight; y++) {\n      var yoffset = y << HybridBinarizer.BLOCK_SIZE_POWER;\n\n      if (yoffset > maxYOffset) {\n        yoffset = maxYOffset;\n      }\n\n      var top_1 = HybridBinarizer.cap(y, 2, subHeight - 3);\n\n      for (var x = 0; x < subWidth; x++) {\n        var xoffset = x << HybridBinarizer.BLOCK_SIZE_POWER;\n\n        if (xoffset > maxXOffset) {\n          xoffset = maxXOffset;\n        }\n\n        var left = HybridBinarizer.cap(x, 2, subWidth - 3);\n        var sum = 0;\n\n        for (var z = -2; z <= 2; z++) {\n          var blackRow = blackPoints[top_1 + z];\n          sum += blackRow[left - 2] + blackRow[left - 1] + blackRow[left] + blackRow[left + 1] + blackRow[left + 2];\n        }\n\n        var average = sum / 25;\n        HybridBinarizer.thresholdBlock(luminances, xoffset, yoffset, average, width, matrix);\n      }\n    }\n  };\n\n  HybridBinarizer.cap = function (value\n  /*int*/\n  , min\n  /*int*/\n  , max\n  /*int*/\n  ) {\n    return value < min ? min : value > max ? max : value;\n  };\n  /**\r\n   * Applies a single threshold to a block of pixels.\r\n   */\n\n\n  HybridBinarizer.thresholdBlock = function (luminances, xoffset\n  /*int*/\n  , yoffset\n  /*int*/\n  , threshold\n  /*int*/\n  , stride\n  /*int*/\n  , matrix) {\n    for (var y = 0, offset = yoffset * stride + xoffset; y < HybridBinarizer.BLOCK_SIZE; y++, offset += stride) {\n      for (var x = 0; x < HybridBinarizer.BLOCK_SIZE; x++) {\n        // Comparison needs to be <= so that black == 0 pixels are black even if the threshold is 0.\n        if ((luminances[offset + x] & 0xFF) <= threshold) {\n          matrix.set(xoffset + x, yoffset + y);\n        }\n      }\n    }\n  };\n  /**\r\n   * Calculates a single black point for each block of pixels and saves it away.\r\n   * See the following thread for a discussion of this algorithm:\r\n   *  http://groups.google.com/group/zxing/browse_thread/thread/d06efa2c35a7ddc0\r\n   */\n\n\n  HybridBinarizer.calculateBlackPoints = function (luminances, subWidth\n  /*int*/\n  , subHeight\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    var maxYOffset = height - HybridBinarizer.BLOCK_SIZE;\n    var maxXOffset = width - HybridBinarizer.BLOCK_SIZE; // tslint:disable-next-line:whitespace\n\n    var blackPoints = new Array(subHeight); // subWidth\n\n    for (var y = 0; y < subHeight; y++) {\n      blackPoints[y] = new Int32Array(subWidth);\n      var yoffset = y << HybridBinarizer.BLOCK_SIZE_POWER;\n\n      if (yoffset > maxYOffset) {\n        yoffset = maxYOffset;\n      }\n\n      for (var x = 0; x < subWidth; x++) {\n        var xoffset = x << HybridBinarizer.BLOCK_SIZE_POWER;\n\n        if (xoffset > maxXOffset) {\n          xoffset = maxXOffset;\n        }\n\n        var sum = 0;\n        var min = 0xFF;\n        var max = 0;\n\n        for (var yy = 0, offset = yoffset * width + xoffset; yy < HybridBinarizer.BLOCK_SIZE; yy++, offset += width) {\n          for (var xx = 0; xx < HybridBinarizer.BLOCK_SIZE; xx++) {\n            var pixel = luminances[offset + xx] & 0xFF;\n            sum += pixel; // still looking for good contrast\n\n            if (pixel < min) {\n              min = pixel;\n            }\n\n            if (pixel > max) {\n              max = pixel;\n            }\n          } // short-circuit min/max tests once dynamic range is met\n\n\n          if (max - min > HybridBinarizer.MIN_DYNAMIC_RANGE) {\n            // finish the rest of the rows quickly\n            for (yy++, offset += width; yy < HybridBinarizer.BLOCK_SIZE; yy++, offset += width) {\n              for (var xx = 0; xx < HybridBinarizer.BLOCK_SIZE; xx++) {\n                sum += luminances[offset + xx] & 0xFF;\n              }\n            }\n          }\n        } // The default estimate is the average of the values in the block.\n\n\n        var average = sum >> HybridBinarizer.BLOCK_SIZE_POWER * 2;\n\n        if (max - min <= HybridBinarizer.MIN_DYNAMIC_RANGE) {\n          // If variation within the block is low, assume this is a block with only light or only\n          // dark pixels. In that case we do not want to use the average, as it would divide this\n          // low contrast area into black and white pixels, essentially creating data out of noise.\n          //\n          // The default assumption is that the block is light/background. Since no estimate for\n          // the level of dark pixels exists locally, use half the min for the block.\n          average = min / 2;\n\n          if (y > 0 && x > 0) {\n            // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n            // the pixels in this block to the previously calculated black points. This is based on\n            // the fact that dark barcode symbology is always surrounded by some amount of light\n            // background for which reasonable black point estimates were made. The bp estimated at\n            // the boundaries is used for the interior.\n            // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n            var averageNeighborBlackPoint = (blackPoints[y - 1][x] + 2 * blackPoints[y][x - 1] + blackPoints[y - 1][x - 1]) / 4;\n\n            if (min < averageNeighborBlackPoint) {\n              average = averageNeighborBlackPoint;\n            }\n          }\n        }\n\n        blackPoints[y][x] = average;\n      }\n    }\n\n    return blackPoints;\n  }; // This class uses 5x5 blocks to compute local luminance, where each block is 8x8 pixels.\n  // So this is the smallest dimension in each axis we can accept.\n\n\n  HybridBinarizer.BLOCK_SIZE_POWER = 3;\n  HybridBinarizer.BLOCK_SIZE = 1 << HybridBinarizer.BLOCK_SIZE_POWER; // ...0100...00\n\n  HybridBinarizer.BLOCK_SIZE_MASK = HybridBinarizer.BLOCK_SIZE - 1; // ...0011...11\n\n  HybridBinarizer.MINIMUM_DIMENSION = HybridBinarizer.BLOCK_SIZE * 5;\n  HybridBinarizer.MIN_DYNAMIC_RANGE = 24;\n  return HybridBinarizer;\n}(GlobalHistogramBinarizer_1.default);\n\nexports.default = HybridBinarizer;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\nvar Binarizer_1 = require(\"../Binarizer\");\n\nvar BitArray_1 = require(\"./BitArray\");\n\nvar BitMatrix_1 = require(\"./BitMatrix\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * This Binarizer implementation uses the old ZXing global histogram approach. It is suitable\r\n * for low-end mobile devices which don't have enough CPU or memory to use a local thresholding\r\n * algorithm. However, because it picks a global black point, it cannot handle difficult shadows\r\n * and gradients.\r\n *\r\n * Faster mobile devices and all desktop applications should probably use HybridBinarizer instead.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n * @author Sean Owen\r\n */\n\n\nvar GlobalHistogramBinarizer =\n/** @class */\nfunction (_super) {\n  __extends(GlobalHistogramBinarizer, _super);\n\n  function GlobalHistogramBinarizer(source) {\n    var _this = _super.call(this, source) || this;\n\n    _this.luminances = GlobalHistogramBinarizer.EMPTY;\n    _this.buckets = new Int32Array(GlobalHistogramBinarizer.LUMINANCE_BUCKETS);\n    return _this;\n  } // Applies simple sharpening to the row data to improve performance of the 1D Readers.\n\n  /*@Override*/\n\n\n  GlobalHistogramBinarizer.prototype.getBlackRow = function (y\n  /*int*/\n  , row) {\n    var source = this.getLuminanceSource();\n    var width = source.getWidth();\n\n    if (row === undefined || row === null || row.getSize() < width) {\n      row = new BitArray_1.default(width);\n    } else {\n      row.clear();\n    }\n\n    this.initArrays(width);\n    var localLuminances = source.getRow(y, this.luminances);\n    var localBuckets = this.buckets;\n\n    for (var x = 0; x < width; x++) {\n      localBuckets[(localLuminances[x] & 0xff) >> GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;\n    }\n\n    var blackPoint = GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);\n\n    if (width < 3) {\n      // Special case for very small images\n      for (var x = 0; x < width; x++) {\n        if ((localLuminances[x] & 0xff) < blackPoint) {\n          row.set(x);\n        }\n      }\n    } else {\n      var left = localLuminances[0] & 0xff;\n      var center = localLuminances[1] & 0xff;\n\n      for (var x = 1; x < width - 1; x++) {\n        var right = localLuminances[x + 1] & 0xff; // A simple -1 4 -1 box filter with a weight of 2.\n\n        if ((center * 4 - left - right) / 2 < blackPoint) {\n          row.set(x);\n        }\n\n        left = center;\n        center = right;\n      }\n    }\n\n    return row;\n  }; // Does not sharpen the data, as this call is intended to only be used by 2D Readers.\n\n  /*@Override*/\n\n\n  GlobalHistogramBinarizer.prototype.getBlackMatrix = function () {\n    var source = this.getLuminanceSource();\n    var width = source.getWidth();\n    var height = source.getHeight();\n    var matrix = new BitMatrix_1.default(width, height); // Quickly calculates the histogram by sampling four rows from the image. This proved to be\n    // more robust on the blackbox tests than sampling a diagonal as we used to do.\n\n    this.initArrays(width);\n    var localBuckets = this.buckets;\n\n    for (var y = 1; y < 5; y++) {\n      var row = height * y / 5;\n      var localLuminances_1 = source.getRow(row, this.luminances);\n      var right = Math.floor(width * 4 / 5);\n\n      for (var x = Math.floor(width / 5); x < right; x++) {\n        var pixel = localLuminances_1[x] & 0xff;\n        localBuckets[pixel >> GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;\n      }\n    }\n\n    var blackPoint = GlobalHistogramBinarizer.estimateBlackPoint(localBuckets); // We delay reading the entire image luminance until the black point estimation succeeds.\n    // Although we end up reading four rows twice, it is consistent with our motto of\n    // \"fail quickly\" which is necessary for continuous scanning.\n\n    var localLuminances = source.getMatrix();\n\n    for (var y = 0; y < height; y++) {\n      var offset = y * width;\n\n      for (var x = 0; x < width; x++) {\n        var pixel = localLuminances[offset + x] & 0xff;\n\n        if (pixel < blackPoint) {\n          matrix.set(x, y);\n        }\n      }\n    }\n\n    return matrix;\n  };\n  /*@Override*/\n\n\n  GlobalHistogramBinarizer.prototype.createBinarizer = function (source) {\n    return new GlobalHistogramBinarizer(source);\n  };\n\n  GlobalHistogramBinarizer.prototype.initArrays = function (luminanceSize\n  /*int*/\n  ) {\n    if (this.luminances.length < luminanceSize) {\n      this.luminances = new Uint8ClampedArray(luminanceSize);\n    }\n\n    var buckets = this.buckets;\n\n    for (var x = 0; x < GlobalHistogramBinarizer.LUMINANCE_BUCKETS; x++) {\n      buckets[x] = 0;\n    }\n  };\n\n  GlobalHistogramBinarizer.estimateBlackPoint = function (buckets) {\n    // Find the tallest peak in the histogram.\n    var numBuckets = buckets.length;\n    var maxBucketCount = 0;\n    var firstPeak = 0;\n    var firstPeakSize = 0;\n\n    for (var x = 0; x < numBuckets; x++) {\n      if (buckets[x] > firstPeakSize) {\n        firstPeak = x;\n        firstPeakSize = buckets[x];\n      }\n\n      if (buckets[x] > maxBucketCount) {\n        maxBucketCount = buckets[x];\n      }\n    } // Find the second-tallest peak which is somewhat far from the tallest peak.\n\n\n    var secondPeak = 0;\n    var secondPeakScore = 0;\n\n    for (var x = 0; x < numBuckets; x++) {\n      var distanceToBiggest = x - firstPeak; // Encourage more distant second peaks by multiplying by square of distance.\n\n      var score = buckets[x] * distanceToBiggest * distanceToBiggest;\n\n      if (score > secondPeakScore) {\n        secondPeak = x;\n        secondPeakScore = score;\n      }\n    } // Make sure firstPeak corresponds to the black peak.\n\n\n    if (firstPeak > secondPeak) {\n      var temp = firstPeak;\n      firstPeak = secondPeak;\n      secondPeak = temp;\n    } // If there is too little contrast in the image to pick a meaningful black point, throw rather\n    // than waste time trying to decode the image, and risk false positives.\n\n\n    if (secondPeak - firstPeak <= numBuckets / 16) {\n      throw new NotFoundException_1.default();\n    } // Find a valley between them that is low and closer to the white peak.\n\n\n    var bestValley = secondPeak - 1;\n    var bestValleyScore = -1;\n\n    for (var x = secondPeak - 1; x > firstPeak; x--) {\n      var fromFirst = x - firstPeak;\n      var score = fromFirst * fromFirst * (secondPeak - x) * (maxBucketCount - buckets[x]);\n\n      if (score > bestValleyScore) {\n        bestValley = x;\n        bestValleyScore = score;\n      }\n    }\n\n    return bestValley << GlobalHistogramBinarizer.LUMINANCE_SHIFT;\n  };\n\n  GlobalHistogramBinarizer.LUMINANCE_BITS = 5;\n  GlobalHistogramBinarizer.LUMINANCE_SHIFT = 8 - GlobalHistogramBinarizer.LUMINANCE_BITS;\n  GlobalHistogramBinarizer.LUMINANCE_BUCKETS = 1 << GlobalHistogramBinarizer.LUMINANCE_BITS;\n  GlobalHistogramBinarizer.EMPTY = Uint8ClampedArray.from([0]);\n  return GlobalHistogramBinarizer;\n}(Binarizer_1.default);\n\nexports.default = GlobalHistogramBinarizer;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * This class hierarchy provides a set of methods to convert luminance data to 1 bit data.\r\n * It allows the algorithm to vary polymorphically, for example allowing a very expensive\r\n * thresholding technique for servers and a fast one for mobile. It also permits the implementation\r\n * to vary, e.g. a JNI version for Android and a Java fallback version for other platforms.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\nvar Binarizer =\n/** @class */\nfunction () {\n  function Binarizer(source) {\n    this.source = source;\n  }\n\n  Binarizer.prototype.getLuminanceSource = function () {\n    return this.source;\n  };\n\n  Binarizer.prototype.getWidth = function () {\n    return this.source.getWidth();\n  };\n\n  Binarizer.prototype.getHeight = function () {\n    return this.source.getHeight();\n  };\n\n  return Binarizer;\n}();\n\nexports.default = Binarizer;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar ArithmeticException =\n/** @class */\nfunction (_super) {\n  __extends(ArithmeticException, _super);\n\n  function ArithmeticException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return ArithmeticException;\n}(Exception_1.default);\n\nexports.default = ArithmeticException;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar ReedSolomonException =\n/** @class */\nfunction (_super) {\n  __extends(ReedSolomonException, _super);\n\n  function ReedSolomonException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return ReedSolomonException;\n}(Exception_1.default);\n\nexports.default = ReedSolomonException;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.decoder {*/\n\nvar ErrorCorrectionLevel_1 = require(\"./ErrorCorrectionLevel\");\n\nvar Integer_1 = require(\"../../util/Integer\");\n/**\r\n * <p>Encapsulates a QR Code's format information, including the data mask used and\r\n * error correction level.</p>\r\n *\r\n * @author Sean Owen\r\n * @see DataMask\r\n * @see ErrorCorrectionLevel\r\n */\n\n\nvar FormatInformation =\n/** @class */\nfunction () {\n  function FormatInformation(formatInfo\n  /*int*/\n  ) {\n    // Bits 3,4\n    this.errorCorrectionLevel = ErrorCorrectionLevel_1.default.forBits(formatInfo >> 3 & 0x03); // Bottom 3 bits\n\n    this.dataMask =\n    /*(byte) */\n    formatInfo & 0x07;\n  }\n\n  FormatInformation.numBitsDiffering = function (a\n  /*int*/\n  , b\n  /*int*/\n  ) {\n    return Integer_1.default.bitCount(a ^ b);\n  };\n  /**\r\n   * @param maskedFormatInfo1 format info indicator, with mask still applied\r\n   * @param maskedFormatInfo2 second copy of same info; both are checked at the same time\r\n   *  to establish best match\r\n   * @return information about the format it specifies, or {@code null}\r\n   *  if doesn't seem to match any known pattern\r\n   */\n\n\n  FormatInformation.decodeFormatInformation = function (maskedFormatInfo1\n  /*int*/\n  , maskedFormatInfo2\n  /*int*/\n  ) {\n    var formatInfo = FormatInformation.doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2);\n\n    if (formatInfo !== null) {\n      return formatInfo;\n    } // Should return null, but, some QR codes apparently\n    // do not mask this info. Try again by actually masking the pattern\n    // first\n\n\n    return FormatInformation.doDecodeFormatInformation(maskedFormatInfo1 ^ FormatInformation.FORMAT_INFO_MASK_QR, maskedFormatInfo2 ^ FormatInformation.FORMAT_INFO_MASK_QR);\n  };\n\n  FormatInformation.doDecodeFormatInformation = function (maskedFormatInfo1\n  /*int*/\n  , maskedFormatInfo2\n  /*int*/\n  ) {\n    // Find the int in FORMAT_INFO_DECODE_LOOKUP with fewest bits differing\n    var bestDifference = Number.MAX_SAFE_INTEGER;\n    var bestFormatInfo = 0;\n\n    for (var _i = 0, _a = FormatInformation.FORMAT_INFO_DECODE_LOOKUP; _i < _a.length; _i++) {\n      var decodeInfo = _a[_i];\n      var targetInfo = decodeInfo[0];\n\n      if (targetInfo === maskedFormatInfo1 || targetInfo === maskedFormatInfo2) {\n        // Found an exact match\n        return new FormatInformation(decodeInfo[1]);\n      }\n\n      var bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo1, targetInfo);\n\n      if (bitsDifference < bestDifference) {\n        bestFormatInfo = decodeInfo[1];\n        bestDifference = bitsDifference;\n      }\n\n      if (maskedFormatInfo1 !== maskedFormatInfo2) {\n        // also try the other option\n        bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo2, targetInfo);\n\n        if (bitsDifference < bestDifference) {\n          bestFormatInfo = decodeInfo[1];\n          bestDifference = bitsDifference;\n        }\n      }\n    } // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits\n    // differing means we found a match\n\n\n    if (bestDifference <= 3) {\n      return new FormatInformation(bestFormatInfo);\n    }\n\n    return null;\n  };\n\n  FormatInformation.prototype.getErrorCorrectionLevel = function () {\n    return this.errorCorrectionLevel;\n  };\n\n  FormatInformation.prototype.getDataMask = function () {\n    return this.dataMask;\n  };\n  /*@Override*/\n\n\n  FormatInformation.prototype.hashCode = function () {\n    return this.errorCorrectionLevel.getBits() << 3 | this.dataMask;\n  };\n  /*@Override*/\n\n\n  FormatInformation.prototype.equals = function (o) {\n    if (!(o instanceof FormatInformation)) {\n      return false;\n    }\n\n    var other = o;\n    return this.errorCorrectionLevel === other.errorCorrectionLevel && this.dataMask === other.dataMask;\n  };\n\n  FormatInformation.FORMAT_INFO_MASK_QR = 0x5412;\n  /**\r\n   * See ISO 18004:2006, Annex C, Table C.1\r\n   */\n\n  FormatInformation.FORMAT_INFO_DECODE_LOOKUP = [Int32Array.from([0x5412, 0x00]), Int32Array.from([0x5125, 0x01]), Int32Array.from([0x5E7C, 0x02]), Int32Array.from([0x5B4B, 0x03]), Int32Array.from([0x45F9, 0x04]), Int32Array.from([0x40CE, 0x05]), Int32Array.from([0x4F97, 0x06]), Int32Array.from([0x4AA0, 0x07]), Int32Array.from([0x77C4, 0x08]), Int32Array.from([0x72F3, 0x09]), Int32Array.from([0x7DAA, 0x0A]), Int32Array.from([0x789D, 0x0B]), Int32Array.from([0x662F, 0x0C]), Int32Array.from([0x6318, 0x0D]), Int32Array.from([0x6C41, 0x0E]), Int32Array.from([0x6976, 0x0F]), Int32Array.from([0x1689, 0x10]), Int32Array.from([0x13BE, 0x11]), Int32Array.from([0x1CE7, 0x12]), Int32Array.from([0x19D0, 0x13]), Int32Array.from([0x0762, 0x14]), Int32Array.from([0x0255, 0x15]), Int32Array.from([0x0D0C, 0x16]), Int32Array.from([0x083B, 0x17]), Int32Array.from([0x355F, 0x18]), Int32Array.from([0x3068, 0x19]), Int32Array.from([0x3F31, 0x1A]), Int32Array.from([0x3A06, 0x1B]), Int32Array.from([0x24B4, 0x1C]), Int32Array.from([0x2183, 0x1D]), Int32Array.from([0x2EDA, 0x1E]), Int32Array.from([0x2BED, 0x1F])];\n  return FormatInformation;\n}();\n\nexports.default = FormatInformation;","\"use strict\";\n/*\r\n * Copyright 2013 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the\r\n * decoding caller. Callers are expected to process this.\r\n *\r\n * @see com.google.zxing.common.DecoderResult#getOther()\r\n */\n\nvar QRCodeDecoderMetaData =\n/** @class */\nfunction () {\n  function QRCodeDecoderMetaData(mirrored) {\n    this.mirrored = mirrored;\n  }\n  /**\r\n   * @return true if the QR Code was mirrored.\r\n   */\n\n\n  QRCodeDecoderMetaData.prototype.isMirrored = function () {\n    return this.mirrored;\n  };\n  /**\r\n   * Apply the result points' order correction due to mirroring.\r\n   *\r\n   * @param points Array of points to apply mirror correction to.\r\n   */\n\n\n  QRCodeDecoderMetaData.prototype.applyMirroredCorrection = function (points) {\n    if (!this.mirrored || points === null || points.length < 3) {\n      return;\n    }\n\n    var bottomLeft = points[0];\n    points[0] = points[2];\n    points[2] = bottomLeft; // No need to 'fix' top-left and alignment pattern.\n  };\n\n  return QRCodeDecoderMetaData;\n}();\n\nexports.default = QRCodeDecoderMetaData;","\"use strict\";\n/*\r\n * Copyright (C) 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\n/*import java.nio.charset.Charset;*/\n\n/*import java.util.Map;*/\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar CharacterSetECI_1 = require(\"./CharacterSetECI\");\n/**\r\n * Common string-related functions.\r\n *\r\n * @author Sean Owen\r\n * @author Alex Dupre\r\n */\n\n\nvar StringUtils =\n/** @class */\nfunction () {\n  function StringUtils() {} // SHIFT_JIS.equalsIgnoreCase(PLATFORM_DEFAULT_ENCODING) ||\n  // EUC_JP.equalsIgnoreCase(PLATFORM_DEFAULT_ENCODING);\n\n\n  StringUtils.prototype.StringUtils = function () {};\n  /**\r\n   * @param bytes bytes encoding a string, whose encoding should be guessed\r\n   * @param hints decode hints if applicable\r\n   * @return name of guessed encoding; at the moment will only guess one of:\r\n   *  {@link #SHIFT_JIS}, {@link #UTF8}, {@link #ISO88591}, or the platform\r\n   *  default encoding if none of these can possibly be correct\r\n   */\n\n\n  StringUtils.guessEncoding = function (bytes, hints) {\n    if (hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType_1.default.CHARACTER_SET)) {\n      return hints.get(DecodeHintType_1.default.CHARACTER_SET).toString();\n    } // For now, merely tries to distinguish ISO-8859-1, UTF-8 and Shift_JIS,\n    // which should be by far the most common encodings.\n\n\n    var length = bytes.length;\n    var canBeISO88591 = true;\n    var canBeShiftJIS = true;\n    var canBeUTF8 = true;\n    var utf8BytesLeft = 0; // int utf8LowChars = 0\n\n    var utf2BytesChars = 0;\n    var utf3BytesChars = 0;\n    var utf4BytesChars = 0;\n    var sjisBytesLeft = 0; // int sjisLowChars = 0\n\n    var sjisKatakanaChars = 0; // int sjisDoubleBytesChars = 0\n\n    var sjisCurKatakanaWordLength = 0;\n    var sjisCurDoubleBytesWordLength = 0;\n    var sjisMaxKatakanaWordLength = 0;\n    var sjisMaxDoubleBytesWordLength = 0; // int isoLowChars = 0\n    // int isoHighChars = 0\n\n    var isoHighOther = 0;\n    var utf8bom = bytes.length > 3 && bytes[0] ===\n    /*(byte) */\n    0xEF && bytes[1] ===\n    /*(byte) */\n    0xBB && bytes[2] ===\n    /*(byte) */\n    0xBF;\n\n    for (var i = 0; i < length && (canBeISO88591 || canBeShiftJIS || canBeUTF8); i++) {\n      var value = bytes[i] & 0xFF; // UTF-8 stuff\n\n      if (canBeUTF8) {\n        if (utf8BytesLeft > 0) {\n          if ((value & 0x80) === 0) {\n            canBeUTF8 = false;\n          } else {\n            utf8BytesLeft--;\n          }\n        } else if ((value & 0x80) !== 0) {\n          if ((value & 0x40) === 0) {\n            canBeUTF8 = false;\n          } else {\n            utf8BytesLeft++;\n\n            if ((value & 0x20) === 0) {\n              utf2BytesChars++;\n            } else {\n              utf8BytesLeft++;\n\n              if ((value & 0x10) === 0) {\n                utf3BytesChars++;\n              } else {\n                utf8BytesLeft++;\n\n                if ((value & 0x08) === 0) {\n                  utf4BytesChars++;\n                } else {\n                  canBeUTF8 = false;\n                }\n              }\n            }\n          }\n        } // else {\n        // utf8LowChars++\n        // }\n\n      } // ISO-8859-1 stuff\n\n\n      if (canBeISO88591) {\n        if (value > 0x7F && value < 0xA0) {\n          canBeISO88591 = false;\n        } else if (value > 0x9F) {\n          if (value < 0xC0 || value === 0xD7 || value === 0xF7) {\n            isoHighOther++;\n          } // else {\n          // isoHighChars++\n          // }\n\n        } // else {\n        // isoLowChars++\n        // }\n\n      } // Shift_JIS stuff\n\n\n      if (canBeShiftJIS) {\n        if (sjisBytesLeft > 0) {\n          if (value < 0x40 || value === 0x7F || value > 0xFC) {\n            canBeShiftJIS = false;\n          } else {\n            sjisBytesLeft--;\n          }\n        } else if (value === 0x80 || value === 0xA0 || value > 0xEF) {\n          canBeShiftJIS = false;\n        } else if (value > 0xA0 && value < 0xE0) {\n          sjisKatakanaChars++;\n          sjisCurDoubleBytesWordLength = 0;\n          sjisCurKatakanaWordLength++;\n\n          if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n            sjisMaxKatakanaWordLength = sjisCurKatakanaWordLength;\n          }\n        } else if (value > 0x7F) {\n          sjisBytesLeft++; // sjisDoubleBytesChars++\n\n          sjisCurKatakanaWordLength = 0;\n          sjisCurDoubleBytesWordLength++;\n\n          if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n            sjisMaxDoubleBytesWordLength = sjisCurDoubleBytesWordLength;\n          }\n        } else {\n          // sjisLowChars++\n          sjisCurKatakanaWordLength = 0;\n          sjisCurDoubleBytesWordLength = 0;\n        }\n      }\n    }\n\n    if (canBeUTF8 && utf8BytesLeft > 0) {\n      canBeUTF8 = false;\n    }\n\n    if (canBeShiftJIS && sjisBytesLeft > 0) {\n      canBeShiftJIS = false;\n    } // Easy -- if there is BOM or at least 1 valid not-single byte character (and no evidence it can't be UTF-8), done\n\n\n    if (canBeUTF8 && (utf8bom || utf2BytesChars + utf3BytesChars + utf4BytesChars > 0)) {\n      return StringUtils.UTF8;\n    } // Easy -- if assuming Shift_JIS or at least 3 valid consecutive not-ascii characters (and no evidence it can't be), done\n\n\n    if (canBeShiftJIS && (StringUtils.ASSUME_SHIFT_JIS || sjisMaxKatakanaWordLength >= 3 || sjisMaxDoubleBytesWordLength >= 3)) {\n      return StringUtils.SHIFT_JIS;\n    } // Distinguishing Shift_JIS and ISO-8859-1 can be a little tough for short words. The crude heuristic is:\n    // - If we saw\n    //   - only two consecutive katakana chars in the whole text, or\n    //   - at least 10% of bytes that could be \"upper\" not-alphanumeric Latin1,\n    // - then we conclude Shift_JIS, else ISO-8859-1\n\n\n    if (canBeISO88591 && canBeShiftJIS) {\n      return sjisMaxKatakanaWordLength === 2 && sjisKatakanaChars === 2 || isoHighOther * 10 >= length ? StringUtils.SHIFT_JIS : StringUtils.ISO88591;\n    } // Otherwise, try in order ISO-8859-1, Shift JIS, UTF-8 and fall back to default platform encoding\n\n\n    if (canBeISO88591) {\n      return StringUtils.ISO88591;\n    }\n\n    if (canBeShiftJIS) {\n      return StringUtils.SHIFT_JIS;\n    }\n\n    if (canBeUTF8) {\n      return StringUtils.UTF8;\n    } // Otherwise, we take a wild guess with platform encoding\n\n\n    return StringUtils.PLATFORM_DEFAULT_ENCODING;\n  };\n\n  StringUtils.SHIFT_JIS = CharacterSetECI_1.default.SJIS.getName(); // \"SJIS\"\n\n  StringUtils.GB2312 = 'GB2312';\n  StringUtils.ISO88591 = CharacterSetECI_1.default.ISO8859_1.getName(); // \"ISO8859_1\"\n\n  StringUtils.EUC_JP = 'EUC_JP';\n  StringUtils.UTF8 = CharacterSetECI_1.default.UTF8.getName(); // \"UTF8\"\n\n  StringUtils.PLATFORM_DEFAULT_ENCODING = StringUtils.UTF8; // \"UTF8\"//Charset.defaultCharset().name()\n\n  StringUtils.ASSUME_SHIFT_JIS = false;\n  return StringUtils;\n}();\n\nexports.default = StringUtils;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n\nvar ModeValues;\n\n(function (ModeValues) {\n  ModeValues[ModeValues[\"TERMINATOR\"] = 0] = \"TERMINATOR\";\n  ModeValues[ModeValues[\"NUMERIC\"] = 1] = \"NUMERIC\";\n  ModeValues[ModeValues[\"ALPHANUMERIC\"] = 2] = \"ALPHANUMERIC\";\n  ModeValues[ModeValues[\"STRUCTURED_APPEND\"] = 3] = \"STRUCTURED_APPEND\";\n  ModeValues[ModeValues[\"BYTE\"] = 4] = \"BYTE\";\n  ModeValues[ModeValues[\"ECI\"] = 5] = \"ECI\";\n  ModeValues[ModeValues[\"KANJI\"] = 6] = \"KANJI\";\n  ModeValues[ModeValues[\"FNC1_FIRST_POSITION\"] = 7] = \"FNC1_FIRST_POSITION\";\n  ModeValues[ModeValues[\"FNC1_SECOND_POSITION\"] = 8] = \"FNC1_SECOND_POSITION\";\n  /** See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. */\n\n  ModeValues[ModeValues[\"HANZI\"] = 9] = \"HANZI\";\n})(ModeValues = exports.ModeValues || (exports.ModeValues = {}));\n/**\r\n * <p>See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which\r\n * data can be encoded to bits in the QR code standard.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Mode =\n/** @class */\nfunction () {\n  function Mode(value, stringValue, characterCountBitsForVersions, bits\n  /*int*/\n  ) {\n    this.value = value;\n    this.stringValue = stringValue;\n    this.characterCountBitsForVersions = characterCountBitsForVersions;\n    this.bits = bits;\n    Mode.FOR_BITS.set(bits, this);\n    Mode.FOR_VALUE.set(value, this);\n  }\n  /**\r\n   * @param bits four bits encoding a QR Code data mode\r\n   * @return Mode encoded by these bits\r\n   * @throws IllegalArgumentException if bits do not correspond to a known mode\r\n   */\n\n\n  Mode.forBits = function (bits\n  /*int*/\n  ) {\n    var mode = Mode.FOR_BITS.get(bits);\n\n    if (undefined === mode) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    return mode;\n  };\n  /**\r\n   * @param version version in question\r\n   * @return number of bits used, in this QR Code symbol {@link Version}, to encode the\r\n   *         count of characters that will follow encoded in this Mode\r\n   */\n\n\n  Mode.prototype.getCharacterCountBits = function (version) {\n    var versionNumber = version.getVersionNumber();\n    var offset;\n\n    if (versionNumber <= 9) {\n      offset = 0;\n    } else if (versionNumber <= 26) {\n      offset = 1;\n    } else {\n      offset = 2;\n    }\n\n    return this.characterCountBitsForVersions[offset];\n  };\n\n  Mode.prototype.getValue = function () {\n    return this.value;\n  };\n\n  Mode.prototype.getBits = function () {\n    return this.bits;\n  };\n\n  Mode.prototype.equals = function (o) {\n    if (!(o instanceof Mode)) {\n      return false;\n    }\n\n    var other = o;\n    return this.value === other.value;\n  };\n\n  Mode.prototype.toString = function () {\n    return this.stringValue;\n  };\n\n  Mode.FOR_BITS = new Map();\n  Mode.FOR_VALUE = new Map();\n  Mode.TERMINATOR = new Mode(ModeValues.TERMINATOR, 'TERMINATOR', Int32Array.from([0, 0, 0]), 0x00); // Not really a mode...\n\n  Mode.NUMERIC = new Mode(ModeValues.NUMERIC, 'NUMERIC', Int32Array.from([10, 12, 14]), 0x01);\n  Mode.ALPHANUMERIC = new Mode(ModeValues.ALPHANUMERIC, 'ALPHANUMERIC', Int32Array.from([9, 11, 13]), 0x02);\n  Mode.STRUCTURED_APPEND = new Mode(ModeValues.STRUCTURED_APPEND, 'STRUCTURED_APPEND', Int32Array.from([0, 0, 0]), 0x03); // Not supported\n\n  Mode.BYTE = new Mode(ModeValues.BYTE, 'BYTE', Int32Array.from([8, 16, 16]), 0x04);\n  Mode.ECI = new Mode(ModeValues.ECI, 'ECI', Int32Array.from([0, 0, 0]), 0x07); // character counts don't apply\n\n  Mode.KANJI = new Mode(ModeValues.KANJI, 'KANJI', Int32Array.from([8, 10, 12]), 0x08);\n  Mode.FNC1_FIRST_POSITION = new Mode(ModeValues.FNC1_FIRST_POSITION, 'FNC1_FIRST_POSITION', Int32Array.from([0, 0, 0]), 0x05);\n  Mode.FNC1_SECOND_POSITION = new Mode(ModeValues.FNC1_SECOND_POSITION, 'FNC1_SECOND_POSITION', Int32Array.from([0, 0, 0]), 0x09);\n  /** See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. */\n\n  Mode.HANZI = new Mode(ModeValues.HANZI, 'HANZI', Int32Array.from([8, 10, 12]), 0x0D);\n  return Mode;\n}();\n\nexports.default = Mode;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\nvar GridSampler_1 = require(\"./GridSampler\");\n\nvar BitMatrix_1 = require(\"./BitMatrix\");\n\nvar PerspectiveTransform_1 = require(\"./PerspectiveTransform\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * @author Sean Owen\r\n */\n\n\nvar DefaultGridSampler =\n/** @class */\nfunction (_super) {\n  __extends(DefaultGridSampler, _super);\n\n  function DefaultGridSampler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /*@Override*/\n\n\n  DefaultGridSampler.prototype.sampleGrid = function (image, dimensionX\n  /*int*/\n  , dimensionY\n  /*int*/\n  , p1ToX\n  /*float*/\n  , p1ToY\n  /*float*/\n  , p2ToX\n  /*float*/\n  , p2ToY\n  /*float*/\n  , p3ToX\n  /*float*/\n  , p3ToY\n  /*float*/\n  , p4ToX\n  /*float*/\n  , p4ToY\n  /*float*/\n  , p1FromX\n  /*float*/\n  , p1FromY\n  /*float*/\n  , p2FromX\n  /*float*/\n  , p2FromY\n  /*float*/\n  , p3FromX\n  /*float*/\n  , p3FromY\n  /*float*/\n  , p4FromX\n  /*float*/\n  , p4FromY\n  /*float*/\n  ) {\n    var transform = PerspectiveTransform_1.default.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\n    return this.sampleGridWithTransform(image, dimensionX, dimensionY, transform);\n  };\n  /*@Override*/\n\n\n  DefaultGridSampler.prototype.sampleGridWithTransform = function (image, dimensionX\n  /*int*/\n  , dimensionY\n  /*int*/\n  , transform) {\n    if (dimensionX <= 0 || dimensionY <= 0) {\n      throw new NotFoundException_1.default();\n    }\n\n    var bits = new BitMatrix_1.default(dimensionX, dimensionY);\n    var points = new Float32Array(2 * dimensionX);\n\n    for (var y = 0; y < dimensionY; y++) {\n      var max = points.length;\n      var iValue = y + 0.5;\n\n      for (var x = 0; x < max; x += 2) {\n        points[x] =\n        /*(float)*/\n        x / 2 + 0.5;\n        points[x + 1] = iValue;\n      }\n\n      transform.transformPoints(points); // Quick check to see if points transformed to something inside the image\n      // sufficient to check the endpoints\n\n      GridSampler_1.default.checkAndNudgePoints(image, points);\n\n      try {\n        for (var x = 0; x < max; x += 2) {\n          if (image.get(Math.floor(points[x]), Math.floor(points[x + 1]))) {\n            // Black(-ish) pixel\n            bits.set(x / 2, y);\n          }\n        }\n      } catch (aioobe\n      /*: ArrayIndexOutOfBoundsException*/\n      ) {\n        // This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\n        // transform gets \"twisted\" such that it maps a straight line of points to a set of points\n        // whose endpoints are in bounds, but others are not. There is probably some mathematical\n        // way to detect this about the transformation that I don't know yet.\n        // This results in an ugly runtime exception despite our clever checks above -- can't have\n        // that. We could check each point's coordinates but that feels duplicative. We settle for\n        // catching and wrapping ArrayIndexOutOfBoundsException.\n        throw new NotFoundException_1.default();\n      }\n    }\n\n    return bits;\n  };\n\n  return DefaultGridSampler;\n}(GridSampler_1.default);\n\nexports.default = DefaultGridSampler;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * Implementations of this class can, given locations of finder patterns for a QR code in an\r\n * image, sample the right points in the image to reconstruct the QR code, accounting for\r\n * perspective distortion. It is abstracted since it is relatively expensive and should be allowed\r\n * to take advantage of platform-specific optimized implementations, like Sun's Java Advanced\r\n * Imaging library, but which may not be available in other environments such as J2ME, and vice\r\n * versa.\r\n *\r\n * The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}\r\n * with an instance of a class which implements this interface.\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar GridSampler =\n/** @class */\nfunction () {\n  function GridSampler() {}\n  /**\r\n   * <p>Checks a set of points that have been transformed to sample points on an image against\r\n   * the image's dimensions to see if the point are even within the image.</p>\r\n   *\r\n   * <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be\r\n   * barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder\r\n   * patterns in an image where the QR Code runs all the way to the image border.</p>\r\n   *\r\n   * <p>For efficiency, the method will check points from either end of the line until one is found\r\n   * to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\r\n   *\r\n   * @param image image into which the points should map\r\n   * @param points actual points in x1,y1,...,xn,yn form\r\n   * @throws NotFoundException if an endpoint is lies outside the image boundaries\r\n   */\n\n\n  GridSampler.checkAndNudgePoints = function (image, points) {\n    var width = image.getWidth();\n    var height = image.getHeight(); // Check and nudge points from start until we see some that are OK:\n\n    var nudged = true;\n\n    for (var offset = 0; offset < points.length && nudged; offset += 2) {\n      var x = Math.floor(points[offset]);\n      var y = Math.floor(points[offset + 1]);\n\n      if (x < -1 || x > width || y < -1 || y > height) {\n        throw new NotFoundException_1.default();\n      }\n\n      nudged = false;\n\n      if (x === -1) {\n        points[offset] = 0.0;\n        nudged = true;\n      } else if (x === width) {\n        points[offset] = width - 1;\n        nudged = true;\n      }\n\n      if (y === -1) {\n        points[offset + 1] = 0.0;\n        nudged = true;\n      } else if (y === height) {\n        points[offset + 1] = height - 1;\n        nudged = true;\n      }\n    } // Check and nudge points from end:\n\n\n    nudged = true;\n\n    for (var offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {\n      var x = Math.floor(points[offset]);\n      var y = Math.floor(points[offset + 1]);\n\n      if (x < -1 || x > width || y < -1 || y > height) {\n        throw new NotFoundException_1.default();\n      }\n\n      nudged = false;\n\n      if (x === -1) {\n        points[offset] = 0.0;\n        nudged = true;\n      } else if (x === width) {\n        points[offset] = width - 1;\n        nudged = true;\n      }\n\n      if (y === -1) {\n        points[offset + 1] = 0.0;\n        nudged = true;\n      } else if (y === height) {\n        points[offset + 1] = height - 1;\n        nudged = true;\n      }\n    }\n  };\n\n  return GridSampler;\n}();\n\nexports.default = GridSampler;","\"use strict\";\n/*\r\n * Copyright 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common.detector {*/\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar MathUtils_1 = require(\"./MathUtils\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n/**\r\n * <p>\r\n * Detects a candidate barcode-like rectangular region within an image. It\r\n * starts around the center of the image, increases the size of the candidate\r\n * region until it finds a white rectangular region. By keeping track of the\r\n * last black points it encountered, it determines the corners of the barcode.\r\n * </p>\r\n *\r\n * @author David Olivier\r\n */\n\n\nvar WhiteRectangleDetector =\n/** @class */\nfunction () {\n  // public constructor(private image: BitMatrix) /*throws NotFoundException*/ {\n  //   this(image, INIT_SIZE, image.getWidth() / 2, image.getHeight() / 2)\n  // }\n\n  /**\r\n   * @param image barcode image to find a rectangle in\r\n   * @param initSize initial size of search area around center\r\n   * @param x x position of search center\r\n   * @param y y position of search center\r\n   * @throws NotFoundException if image is too small to accommodate {@code initSize}\r\n   */\n  function WhiteRectangleDetector(image, initSize\n  /*int*/\n  , x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    this.image = image;\n    this.height = image.getHeight();\n    this.width = image.getWidth();\n\n    if (undefined === initSize || null === initSize) {\n      initSize = WhiteRectangleDetector.INIT_SIZE;\n    }\n\n    if (undefined === x || null === x) {\n      x = image.getWidth() / 2 | 0;\n    }\n\n    if (undefined === y || null === y) {\n      y = image.getHeight() / 2 | 0;\n    }\n\n    var halfsize = initSize / 2 | 0;\n    this.leftInit = x - halfsize;\n    this.rightInit = x + halfsize;\n    this.upInit = y - halfsize;\n    this.downInit = y + halfsize;\n\n    if (this.upInit < 0 || this.leftInit < 0 || this.downInit >= this.height || this.rightInit >= this.width) {\n      throw new NotFoundException_1.default();\n    }\n  }\n  /**\r\n   * <p>\r\n   * Detects a candidate barcode-like rectangular region within an image. It\r\n   * starts around the center of the image, increases the size of the candidate\r\n   * region until it finds a white rectangular region.\r\n   * </p>\r\n   *\r\n   * @return {@link ResultPoint}[] describing the corners of the rectangular\r\n   *         region. The first and last points are opposed on the diagonal, as\r\n   *         are the second and third. The first point will be the topmost\r\n   *         point and the last, the bottommost. The second point will be\r\n   *         leftmost and the third, the rightmost\r\n   * @throws NotFoundException if no Data Matrix Code can be found\r\n   */\n\n\n  WhiteRectangleDetector.prototype.detect = function () {\n    var left = this.leftInit;\n    var right = this.rightInit;\n    var up = this.upInit;\n    var down = this.downInit;\n    var sizeExceeded = false;\n    var aBlackPointFoundOnBorder = true;\n    var atLeastOneBlackPointFoundOnBorder = false;\n    var atLeastOneBlackPointFoundOnRight = false;\n    var atLeastOneBlackPointFoundOnBottom = false;\n    var atLeastOneBlackPointFoundOnLeft = false;\n    var atLeastOneBlackPointFoundOnTop = false;\n    var width = this.width;\n    var height = this.height;\n\n    while (aBlackPointFoundOnBorder) {\n      aBlackPointFoundOnBorder = false; // .....\n      // .   |\n      // .....\n\n      var rightBorderNotWhite = true;\n\n      while ((rightBorderNotWhite || !atLeastOneBlackPointFoundOnRight) && right < width) {\n        rightBorderNotWhite = this.containsBlackPoint(up, down, right, false);\n\n        if (rightBorderNotWhite) {\n          right++;\n          aBlackPointFoundOnBorder = true;\n          atLeastOneBlackPointFoundOnRight = true;\n        } else if (!atLeastOneBlackPointFoundOnRight) {\n          right++;\n        }\n      }\n\n      if (right >= width) {\n        sizeExceeded = true;\n        break;\n      } // .....\n      // .   .\n      // .___.\n\n\n      var bottomBorderNotWhite = true;\n\n      while ((bottomBorderNotWhite || !atLeastOneBlackPointFoundOnBottom) && down < height) {\n        bottomBorderNotWhite = this.containsBlackPoint(left, right, down, true);\n\n        if (bottomBorderNotWhite) {\n          down++;\n          aBlackPointFoundOnBorder = true;\n          atLeastOneBlackPointFoundOnBottom = true;\n        } else if (!atLeastOneBlackPointFoundOnBottom) {\n          down++;\n        }\n      }\n\n      if (down >= height) {\n        sizeExceeded = true;\n        break;\n      } // .....\n      // |   .\n      // .....\n\n\n      var leftBorderNotWhite = true;\n\n      while ((leftBorderNotWhite || !atLeastOneBlackPointFoundOnLeft) && left >= 0) {\n        leftBorderNotWhite = this.containsBlackPoint(up, down, left, false);\n\n        if (leftBorderNotWhite) {\n          left--;\n          aBlackPointFoundOnBorder = true;\n          atLeastOneBlackPointFoundOnLeft = true;\n        } else if (!atLeastOneBlackPointFoundOnLeft) {\n          left--;\n        }\n      }\n\n      if (left < 0) {\n        sizeExceeded = true;\n        break;\n      } // .___.\n      // .   .\n      // .....\n\n\n      var topBorderNotWhite = true;\n\n      while ((topBorderNotWhite || !atLeastOneBlackPointFoundOnTop) && up >= 0) {\n        topBorderNotWhite = this.containsBlackPoint(left, right, up, true);\n\n        if (topBorderNotWhite) {\n          up--;\n          aBlackPointFoundOnBorder = true;\n          atLeastOneBlackPointFoundOnTop = true;\n        } else if (!atLeastOneBlackPointFoundOnTop) {\n          up--;\n        }\n      }\n\n      if (up < 0) {\n        sizeExceeded = true;\n        break;\n      }\n\n      if (aBlackPointFoundOnBorder) {\n        atLeastOneBlackPointFoundOnBorder = true;\n      }\n    }\n\n    if (!sizeExceeded && atLeastOneBlackPointFoundOnBorder) {\n      var maxSize = right - left;\n      var z = null;\n\n      for (var i = 1; z === null && i < maxSize; i++) {\n        z = this.getBlackPointOnSegment(left, down - i, left + i, down);\n      }\n\n      if (z == null) {\n        throw new NotFoundException_1.default();\n      }\n\n      var t = null; // go down right\n\n      for (var i = 1; t === null && i < maxSize; i++) {\n        t = this.getBlackPointOnSegment(left, up + i, left + i, up);\n      }\n\n      if (t == null) {\n        throw new NotFoundException_1.default();\n      }\n\n      var x = null; // go down left\n\n      for (var i = 1; x === null && i < maxSize; i++) {\n        x = this.getBlackPointOnSegment(right, up + i, right - i, up);\n      }\n\n      if (x == null) {\n        throw new NotFoundException_1.default();\n      }\n\n      var y = null; // go up left\n\n      for (var i = 1; y === null && i < maxSize; i++) {\n        y = this.getBlackPointOnSegment(right, down - i, right - i, down);\n      }\n\n      if (y == null) {\n        throw new NotFoundException_1.default();\n      }\n\n      return this.centerEdges(y, z, x, t);\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  };\n\n  WhiteRectangleDetector.prototype.getBlackPointOnSegment = function (aX\n  /*float*/\n  , aY\n  /*float*/\n  , bX\n  /*float*/\n  , bY\n  /*float*/\n  ) {\n    var dist = MathUtils_1.default.round(MathUtils_1.default.distance(aX, aY, bX, bY));\n    var xStep = (bX - aX) / dist;\n    var yStep = (bY - aY) / dist;\n    var image = this.image;\n\n    for (var i = 0; i < dist; i++) {\n      var x = MathUtils_1.default.round(aX + i * xStep);\n      var y = MathUtils_1.default.round(aY + i * yStep);\n\n      if (image.get(x, y)) {\n        return new ResultPoint_1.default(x, y);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * recenters the points of a constant distance towards the center\r\n   *\r\n   * @param y bottom most point\r\n   * @param z left most point\r\n   * @param x right most point\r\n   * @param t top most point\r\n   * @return {@link ResultPoint}[] describing the corners of the rectangular\r\n   *         region. The first and last points are opposed on the diagonal, as\r\n   *         are the second and third. The first point will be the topmost\r\n   *         point and the last, the bottommost. The second point will be\r\n   *         leftmost and the third, the rightmost\r\n   */\n\n\n  WhiteRectangleDetector.prototype.centerEdges = function (y, z, x, t) {\n    //\n    //       t            t\n    //  z                      x\n    //        x    OR    z\n    //   y                    y\n    //\n    var yi = y.getX();\n    var yj = y.getY();\n    var zi = z.getX();\n    var zj = z.getY();\n    var xi = x.getX();\n    var xj = x.getY();\n    var ti = t.getX();\n    var tj = t.getY();\n    var CORR = WhiteRectangleDetector.CORR;\n\n    if (yi < this.width / 2.0) {\n      return [new ResultPoint_1.default(ti - CORR, tj + CORR), new ResultPoint_1.default(zi + CORR, zj + CORR), new ResultPoint_1.default(xi - CORR, xj - CORR), new ResultPoint_1.default(yi + CORR, yj - CORR)];\n    } else {\n      return [new ResultPoint_1.default(ti + CORR, tj + CORR), new ResultPoint_1.default(zi + CORR, zj - CORR), new ResultPoint_1.default(xi - CORR, xj + CORR), new ResultPoint_1.default(yi - CORR, yj - CORR)];\n    }\n  };\n  /**\r\n   * Determines whether a segment contains a black point\r\n   *\r\n   * @param a          min value of the scanned coordinate\r\n   * @param b          max value of the scanned coordinate\r\n   * @param fixed      value of fixed coordinate\r\n   * @param horizontal set to true if scan must be horizontal, false if vertical\r\n   * @return true if a black point has been found, else false.\r\n   */\n\n\n  WhiteRectangleDetector.prototype.containsBlackPoint = function (a\n  /*int*/\n  , b\n  /*int*/\n  , fixed\n  /*int*/\n  , horizontal) {\n    var image = this.image;\n\n    if (horizontal) {\n      for (var x = a; x <= b; x++) {\n        if (image.get(x, fixed)) {\n          return true;\n        }\n      }\n    } else {\n      for (var y = a; y <= b; y++) {\n        if (image.get(fixed, y)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  WhiteRectangleDetector.INIT_SIZE = 10;\n  WhiteRectangleDetector.CORR = 1;\n  return WhiteRectangleDetector;\n}();\n\nexports.default = WhiteRectangleDetector;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar GenericGFPoly_1 = require(\"./GenericGFPoly\");\n\nvar System_1 = require(\"../../util/System\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\r\n * <p>Implements Reed-Solomon encoding, as the name implies.</p>\r\n *\r\n * @author Sean Owen\r\n * @author William Rucklidge\r\n */\n\n\nvar ReedSolomonEncoder =\n/** @class */\nfunction () {\n  /**\r\n   * A reed solomon error-correcting encoding constructor is created by\r\n   * passing as Galois Field with of size equal to the number of code\r\n   * words (symbols) in the alphabet (the number of values in each\r\n   * element of arrays that are encoded/decoded).\r\n   * @param field A galois field with a number of elements equal to the size\r\n   * of the alphabet of symbols to encode.\r\n   */\n  function ReedSolomonEncoder(field) {\n    this.field = field;\n    this.cachedGenerators = [];\n    this.cachedGenerators.push(new GenericGFPoly_1.default(field, Int32Array.from([1])));\n  }\n\n  ReedSolomonEncoder.prototype.buildGenerator = function (degree\n  /*int*/\n  ) {\n    var cachedGenerators = this.cachedGenerators;\n\n    if (degree >= cachedGenerators.length) {\n      var lastGenerator = cachedGenerators[cachedGenerators.length - 1];\n      var field = this.field;\n\n      for (var d = cachedGenerators.length; d <= degree; d++) {\n        var nextGenerator = lastGenerator.multiply(new GenericGFPoly_1.default(field, Int32Array.from([1, field.exp(d - 1 + field.getGeneratorBase())])));\n        cachedGenerators.push(nextGenerator);\n        lastGenerator = nextGenerator;\n      }\n    }\n\n    return cachedGenerators[degree];\n  };\n  /**\r\n   * <p>Encode a sequence of code words (symbols) using Reed-Solomon to allow decoders\r\n   * to detect and correct errors that may have been introduced when the resulting\r\n   * data is stored or transmitted.</p>\r\n   *\r\n   * @param toEncode array used for both and output. Caller initializes the array with\r\n   * the code words (symbols) to be encoded followed by empty elements allocated to make\r\n   * space for error-correction code words in the encoded output. The array contains\r\n   * the encdoded output when encode returns. Code words are encoded as numbers from\r\n   * 0 to n-1, where n is the number of possible code words (symbols), as determined\r\n   * by the size of the Galois Field passed in the constructor of this object.\r\n   * @param ecBytes the number of elements reserved in the array (first parameter)\r\n   * to store error-correction code words. Thus, the number of code words (symbols)\r\n   * to encode in the first parameter is thus toEncode.length - ecBytes.\r\n   * Note, the use of \"bytes\" in the name of this parameter is misleading, as there may\r\n   * be more or fewer than 256 symbols being encoded, as determined by the number of\r\n   * elements in the Galois Field passed as a constructor to this object.\r\n   * @throws IllegalArgumentException thrown in response to validation errros.\r\n   */\n\n\n  ReedSolomonEncoder.prototype.encode = function (toEncode, ecBytes\n  /*int*/\n  ) {\n    if (ecBytes === 0) {\n      throw new IllegalArgumentException_1.default('No error correction bytes');\n    }\n\n    var dataBytes = toEncode.length - ecBytes;\n\n    if (dataBytes <= 0) {\n      throw new IllegalArgumentException_1.default('No data bytes provided');\n    }\n\n    var generator = this.buildGenerator(ecBytes);\n    var infoCoefficients = new Int32Array(dataBytes);\n    System_1.default.arraycopy(toEncode, 0, infoCoefficients, 0, dataBytes);\n    var info = new GenericGFPoly_1.default(this.field, infoCoefficients);\n    info = info.multiplyByMonomial(ecBytes, 1);\n    var remainder = info.divide(generator)[1];\n    var coefficients = remainder.getCoefficients();\n    var numZeroCoefficients = ecBytes - coefficients.length;\n\n    for (var i = 0; i < numZeroCoefficients; i++) {\n      toEncode[dataBytes + i] = 0;\n    }\n\n    System_1.default.arraycopy(coefficients, 0, toEncode, dataBytes + numZeroCoefficients, coefficients.length);\n  };\n\n  return ReedSolomonEncoder;\n}();\n\nexports.default = ReedSolomonEncoder;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\r\n * @author Satoru Takabayashi\r\n * @author Daniel Switkin\r\n * @author Sean Owen\r\n */\n\n\nvar MaskUtil =\n/** @class */\nfunction () {\n  function MaskUtil() {} // do nothing\n\n  /**\r\n   * Apply mask penalty rule 1 and return the penalty. Find repetitive cells with the same color and\r\n   * give penalty to them. Example: 00000 or 11111.\r\n   */\n\n\n  MaskUtil.applyMaskPenaltyRule1 = function (matrix) {\n    return MaskUtil.applyMaskPenaltyRule1Internal(matrix, true) + MaskUtil.applyMaskPenaltyRule1Internal(matrix, false);\n  };\n  /**\r\n   * Apply mask penalty rule 2 and return the penalty. Find 2x2 blocks with the same color and give\r\n   * penalty to them. This is actually equivalent to the spec's rule, which is to find MxN blocks and give a\r\n   * penalty proportional to (M-1)x(N-1), because this is the number of 2x2 blocks inside such a block.\r\n   */\n\n\n  MaskUtil.applyMaskPenaltyRule2 = function (matrix) {\n    var penalty = 0;\n    var array = matrix.getArray();\n    var width = matrix.getWidth();\n    var height = matrix.getHeight();\n\n    for (var y = 0; y < height - 1; y++) {\n      var arrayY = array[y];\n\n      for (var x = 0; x < width - 1; x++) {\n        var value = arrayY[x];\n\n        if (value === arrayY[x + 1] && value === array[y + 1][x] && value === array[y + 1][x + 1]) {\n          penalty++;\n        }\n      }\n    }\n\n    return MaskUtil.N2 * penalty;\n  };\n  /**\r\n   * Apply mask penalty rule 3 and return the penalty. Find consecutive runs of 1:1:3:1:1:4\r\n   * starting with black, or 4:1:1:3:1:1 starting with white, and give penalty to them.  If we\r\n   * find patterns like 000010111010000, we give penalty once.\r\n   */\n\n\n  MaskUtil.applyMaskPenaltyRule3 = function (matrix) {\n    var numPenalties = 0;\n    var array = matrix.getArray();\n    var width = matrix.getWidth();\n    var height = matrix.getHeight();\n\n    for (var y = 0; y < height; y++) {\n      for (var x = 0; x < width; x++) {\n        var arrayY = array[y]; // We can at least optimize this access\n\n        if (x + 6 < width && arrayY[x] === 1 && arrayY[x + 1] === 0 && arrayY[x + 2] === 1 && arrayY[x + 3] === 1 && arrayY[x + 4] === 1 && arrayY[x + 5] === 0 && arrayY[x + 6] === 1 && (MaskUtil.isWhiteHorizontal(arrayY, x - 4, x) || MaskUtil.isWhiteHorizontal(arrayY, x + 7, x + 11))) {\n          numPenalties++;\n        }\n\n        if (y + 6 < height && array[y][x] === 1 && array[y + 1][x] === 0 && array[y + 2][x] === 1 && array[y + 3][x] === 1 && array[y + 4][x] === 1 && array[y + 5][x] === 0 && array[y + 6][x] === 1 && (MaskUtil.isWhiteVertical(array, x, y - 4, y) || MaskUtil.isWhiteVertical(array, x, y + 7, y + 11))) {\n          numPenalties++;\n        }\n      }\n    }\n\n    return numPenalties * MaskUtil.N3;\n  };\n\n  MaskUtil.isWhiteHorizontal = function (rowArray, from\n  /*int*/\n  , to\n  /*int*/\n  ) {\n    from = Math.max(from, 0);\n    to = Math.min(to, rowArray.length);\n\n    for (var i = from; i < to; i++) {\n      if (rowArray[i] === 1) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  MaskUtil.isWhiteVertical = function (array, col\n  /*int*/\n  , from\n  /*int*/\n  , to\n  /*int*/\n  ) {\n    from = Math.max(from, 0);\n    to = Math.min(to, array.length);\n\n    for (var i = from; i < to; i++) {\n      if (array[i][col] === 1) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Apply mask penalty rule 4 and return the penalty. Calculate the ratio of dark cells and give\r\n   * penalty if the ratio is far from 50%. It gives 10 penalty for 5% distance.\r\n   */\n\n\n  MaskUtil.applyMaskPenaltyRule4 = function (matrix) {\n    var numDarkCells = 0;\n    var array = matrix.getArray();\n    var width = matrix.getWidth();\n    var height = matrix.getHeight();\n\n    for (var y = 0; y < height; y++) {\n      var arrayY = array[y];\n\n      for (var x = 0; x < width; x++) {\n        if (arrayY[x] === 1) {\n          numDarkCells++;\n        }\n      }\n    }\n\n    var numTotalCells = matrix.getHeight() * matrix.getWidth();\n    var fivePercentVariances = Math.floor(Math.abs(numDarkCells * 2 - numTotalCells) * 10 / numTotalCells);\n    return fivePercentVariances * MaskUtil.N4;\n  };\n  /**\r\n   * Return the mask bit for \"getMaskPattern\" at \"x\" and \"y\". See 8.8 of JISX0510:2004 for mask\r\n   * pattern conditions.\r\n   */\n\n\n  MaskUtil.getDataMaskBit = function (maskPattern\n  /*int*/\n  , x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    var intermediate;\n    /*int*/\n\n    var temp;\n    /*int*/\n\n    switch (maskPattern) {\n      case 0:\n        intermediate = y + x & 0x1;\n        break;\n\n      case 1:\n        intermediate = y & 0x1;\n        break;\n\n      case 2:\n        intermediate = x % 3;\n        break;\n\n      case 3:\n        intermediate = (y + x) % 3;\n        break;\n\n      case 4:\n        intermediate = Math.floor(y / 2) + Math.floor(x / 3) & 0x1;\n        break;\n\n      case 5:\n        temp = y * x;\n        intermediate = (temp & 0x1) + temp % 3;\n        break;\n\n      case 6:\n        temp = y * x;\n        intermediate = (temp & 0x1) + temp % 3 & 0x1;\n        break;\n\n      case 7:\n        temp = y * x;\n        intermediate = temp % 3 + (y + x & 0x1) & 0x1;\n        break;\n\n      default:\n        throw new IllegalArgumentException_1.default('Invalid mask pattern: ' + maskPattern);\n    }\n\n    return intermediate === 0;\n  };\n  /**\r\n   * Helper function for applyMaskPenaltyRule1. We need this for doing this calculation in both\r\n   * vertical and horizontal orders respectively.\r\n   */\n\n\n  MaskUtil.applyMaskPenaltyRule1Internal = function (matrix, isHorizontal) {\n    var penalty = 0;\n    var iLimit = isHorizontal ? matrix.getHeight() : matrix.getWidth();\n    var jLimit = isHorizontal ? matrix.getWidth() : matrix.getHeight();\n    var array = matrix.getArray();\n\n    for (var i = 0; i < iLimit; i++) {\n      var numSameBitCells = 0;\n      var prevBit = -1;\n\n      for (var j = 0; j < jLimit; j++) {\n        var bit = isHorizontal ? array[i][j] : array[j][i];\n\n        if (bit === prevBit) {\n          numSameBitCells++;\n        } else {\n          if (numSameBitCells >= 5) {\n            penalty += MaskUtil.N1 + (numSameBitCells - 5);\n          }\n\n          numSameBitCells = 1; // Include the cell itself.\n\n          prevBit = bit;\n        }\n      }\n\n      if (numSameBitCells >= 5) {\n        penalty += MaskUtil.N1 + (numSameBitCells - 5);\n      }\n    }\n\n    return penalty;\n  }; // Penalty weights from section 6.8.2.1\n\n\n  MaskUtil.N1 = 3;\n  MaskUtil.N2 = 3;\n  MaskUtil.N3 = 40;\n  MaskUtil.N4 = 10;\n  return MaskUtil;\n}();\n\nexports.default = MaskUtil;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar ChecksumException_1 = require(\"../ChecksumException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n/**\r\n * <p>Decodes Code 39 barcodes. Supports \"Full ASCII Code 39\" if USE_CODE_39_EXTENDED_MODE is set.</p>\r\n *\r\n * @author Sean Owen\r\n * @see Code93Reader\r\n */\n\n\nvar Code39Reader =\n/** @class */\nfunction (_super) {\n  __extends(Code39Reader, _super);\n  /**\r\n   * Creates a reader that assumes all encoded data is data, and does not treat the final\r\n   * character as a check digit. It will not decoded \"extended Code 39\" sequences.\r\n   */\n  // public Code39Reader() {\n  //   this(false);\n  // }\n\n  /**\r\n   * Creates a reader that can be configured to check the last character as a check digit.\r\n   * It will not decoded \"extended Code 39\" sequences.\r\n   *\r\n   * @param usingCheckDigit if true, treat the last data character as a check digit, not\r\n   * data, and verify that the checksum passes.\r\n   */\n  // public Code39Reader(boolean usingCheckDigit) {\n  //   this(usingCheckDigit, false);\n  // }\n\n  /**\r\n   * Creates a reader that can be configured to check the last character as a check digit,\r\n   * or optionally attempt to decode \"extended Code 39\" sequences that are used to encode\r\n   * the full ASCII character set.\r\n   *\r\n   * @param usingCheckDigit if true, treat the last data character as a check digit, not\r\n   * data, and verify that the checksum passes.\r\n   * @param extendedMode if true, will attempt to decode extended Code 39 sequences in the\r\n   * text.\r\n   */\n\n\n  function Code39Reader(usingCheckDigit, extendedMode) {\n    if (usingCheckDigit === void 0) {\n      usingCheckDigit = false;\n    }\n\n    if (extendedMode === void 0) {\n      extendedMode = false;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.usingCheckDigit = usingCheckDigit;\n    _this.extendedMode = extendedMode;\n    _this.decodeRowResult = '';\n    _this.counters = new Array(9);\n    return _this;\n  }\n\n  Code39Reader.prototype.decodeRow = function (rowNumber, row, hints) {\n    var theCounters = this.counters;\n    theCounters.fill(0);\n    this.decodeRowResult = '';\n    var start = Code39Reader.findAsteriskPattern(row, theCounters); // Read off white space\n\n    var nextStart = row.getNextSet(start[1]);\n    var end = row.getSize();\n    var decodedChar;\n    var lastStart;\n\n    do {\n      Code39Reader.recordPattern(row, nextStart, theCounters);\n      var pattern = Code39Reader.toNarrowWidePattern(theCounters);\n\n      if (pattern < 0) {\n        throw new NotFoundException_1.default();\n      }\n\n      decodedChar = Code39Reader.patternToChar(pattern);\n      this.decodeRowResult += decodedChar;\n      lastStart = nextStart;\n\n      for (var _i = 0, theCounters_1 = theCounters; _i < theCounters_1.length; _i++) {\n        var counter = theCounters_1[_i];\n        nextStart += counter;\n      } // Read off white space\n\n\n      nextStart = row.getNextSet(nextStart);\n    } while (decodedChar !== '*');\n\n    this.decodeRowResult = this.decodeRowResult.substring(0, this.decodeRowResult.length - 1); // remove asterisk\n    // Look for whitespace after pattern:\n\n    var lastPatternSize = 0;\n\n    for (var _a = 0, theCounters_2 = theCounters; _a < theCounters_2.length; _a++) {\n      var counter = theCounters_2[_a];\n      lastPatternSize += counter;\n    }\n\n    var whiteSpaceAfterEnd = nextStart - lastStart - lastPatternSize; // If 50% of last pattern size, following last pattern, is not whitespace, fail\n    // (but if it's whitespace to the very end of the image, that's OK)\n\n    if (nextStart !== end && whiteSpaceAfterEnd * 2 < lastPatternSize) {\n      throw new NotFoundException_1.default();\n    }\n\n    if (this.usingCheckDigit) {\n      var max = this.decodeRowResult.length - 1;\n      var total = 0;\n\n      for (var i = 0; i < max; i++) {\n        total += Code39Reader.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(i));\n      }\n\n      if (this.decodeRowResult.charAt(max) !== Code39Reader.ALPHABET_STRING.charAt(total % 43)) {\n        throw new ChecksumException_1.default();\n      }\n\n      this.decodeRowResult = this.decodeRowResult.substring(0, max);\n    }\n\n    if (this.decodeRowResult.length === 0) {\n      // false positive\n      throw new NotFoundException_1.default();\n    }\n\n    var resultString;\n\n    if (this.extendedMode) {\n      resultString = Code39Reader.decodeExtended(this.decodeRowResult);\n    } else {\n      resultString = this.decodeRowResult;\n    }\n\n    var left = (start[1] + start[0]) / 2.0;\n    var right = lastStart + lastPatternSize / 2.0;\n    return new Result_1.default(resultString, null, 0, [new ResultPoint_1.default(left, rowNumber), new ResultPoint_1.default(right, rowNumber)], BarcodeFormat_1.default.CODE_39, new Date().getTime());\n  };\n\n  Code39Reader.findAsteriskPattern = function (row, counters) {\n    var width = row.getSize();\n    var rowOffset = row.getNextSet(0);\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n    var isWhite = false;\n    var patternLength = counters.length;\n\n    for (var i = rowOffset; i < width; i++) {\n      if (row.get(i) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          // Look for whitespace before start pattern, >= 50% of width of start pattern\n          if (this.toNarrowWidePattern(counters) === Code39Reader.ASTERISK_ENCODING && row.isRange(Math.max(0, patternStart - Math.floor((i - patternStart) / 2)), patternStart, false)) {\n            return [patternStart, i];\n          }\n\n          patternStart += counters[0] + counters[1];\n          counters.copyWithin(0, 2, 2 + counterPosition - 1);\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  }; // For efficiency, returns -1 on failure. Not throwing here saved as many as 700 exceptions\n  // per image when using some of our blackbox images.\n\n\n  Code39Reader.toNarrowWidePattern = function (counters) {\n    var numCounters = counters.length;\n    var maxNarrowCounter = 0;\n    var wideCounters;\n\n    do {\n      var minCounter = 0x7fffffff;\n\n      for (var _i = 0, counters_1 = counters; _i < counters_1.length; _i++) {\n        var counter = counters_1[_i];\n\n        if (counter < minCounter && counter > maxNarrowCounter) {\n          minCounter = counter;\n        }\n      }\n\n      maxNarrowCounter = minCounter;\n      wideCounters = 0;\n      var totalWideCountersWidth = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < numCounters; i++) {\n        var counter = counters[i];\n\n        if (counter > maxNarrowCounter) {\n          pattern |= 1 << numCounters - 1 - i;\n          wideCounters++;\n          totalWideCountersWidth += counter;\n        }\n      }\n\n      if (wideCounters === 3) {\n        // Found 3 wide counters, but are they close enough in width?\n        // We can perform a cheap, conservative check to see if any individual\n        // counter is more than 1.5 times the average:\n        for (var i = 0; i < numCounters && wideCounters > 0; i++) {\n          var counter = counters[i];\n\n          if (counter > maxNarrowCounter) {\n            wideCounters--; // totalWideCountersWidth = 3 * average, so this checks if counter >= 3/2 * average\n\n            if (counter * 2 >= totalWideCountersWidth) {\n              return -1;\n            }\n          }\n        }\n\n        return pattern;\n      }\n    } while (wideCounters > 3);\n\n    return -1;\n  };\n\n  Code39Reader.patternToChar = function (pattern) {\n    for (var i = 0; i < Code39Reader.CHARACTER_ENCODINGS.length; i++) {\n      if (Code39Reader.CHARACTER_ENCODINGS[i] === pattern) {\n        return Code39Reader.ALPHABET_STRING.charAt(i);\n      }\n    }\n\n    if (pattern === Code39Reader.ASTERISK_ENCODING) {\n      return '*';\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  Code39Reader.decodeExtended = function (encoded) {\n    var length = encoded.length;\n    var decoded = '';\n\n    for (var i = 0; i < length; i++) {\n      var c = encoded.charAt(i);\n\n      if (c === '+' || c === '$' || c === '%' || c === '/') {\n        var next = encoded.charAt(i + 1);\n        var decodedChar = '\\0';\n\n        switch (c) {\n          case '+':\n            // +A to +Z map to a to z\n            if (next >= 'A' && next <= 'Z') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) + 32);\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          case '$':\n            // $A to $Z map to control codes SH to SB\n            if (next >= 'A' && next <= 'Z') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) - 64);\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          case '%':\n            // %A to %E map to control codes ESC to US\n            if (next >= 'A' && next <= 'E') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) - 38);\n            } else if (next >= 'F' && next <= 'J') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) - 11);\n            } else if (next >= 'K' && next <= 'O') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) + 16);\n            } else if (next >= 'P' && next <= 'T') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) + 43);\n            } else if (next === 'U') {\n              decodedChar = '\\0';\n            } else if (next === 'V') {\n              decodedChar = '@';\n            } else if (next === 'W') {\n              decodedChar = '`';\n            } else if (next === 'X' || next === 'Y' || next === 'Z') {\n              decodedChar = '\\x7f';\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          case '/':\n            // /A to /O map to ! to , and /Z maps to :\n            if (next >= 'A' && next <= 'O') {\n              decodedChar = String.fromCharCode(next.charCodeAt(0) - 32);\n            } else if (next === 'Z') {\n              decodedChar = ':';\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n        }\n\n        decoded += decodedChar; // bump up i again since we read two characters\n\n        i++;\n      } else {\n        decoded += c;\n      }\n    }\n\n    return decoded;\n  };\n\n  Code39Reader.ALPHABET_STRING = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%';\n  /**\r\n   * These represent the encodings of characters, as patterns of wide and narrow bars.\r\n   * The 9 least-significant bits of each int correspond to the pattern of wide and narrow,\r\n   * with 1s representing \"wide\" and 0s representing narrow.\r\n   */\n\n  Code39Reader.CHARACTER_ENCODINGS = [0x034, 0x121, 0x061, 0x160, 0x031, 0x130, 0x070, 0x025, 0x124, 0x064, 0x109, 0x049, 0x148, 0x019, 0x118, 0x058, 0x00D, 0x10C, 0x04C, 0x01C, 0x103, 0x043, 0x142, 0x013, 0x112, 0x052, 0x007, 0x106, 0x046, 0x016, 0x181, 0x0C1, 0x1C0, 0x091, 0x190, 0x0D0, 0x085, 0x184, 0x0C4, 0x0A8, 0x0A2, 0x08A, 0x02A // /-%\n  ];\n  Code39Reader.ASTERISK_ENCODING = 0x094;\n  return Code39Reader;\n}(OneDReader_1.default);\n\nexports.default = Code39Reader;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n\nvar ChecksumException_1 = require(\"../ChecksumException\");\n/**\r\n * <p>Decodes Code 128 barcodes.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Code128Reader =\n/** @class */\nfunction (_super) {\n  __extends(Code128Reader, _super);\n\n  function Code128Reader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Code128Reader.findStartPattern = function (row) {\n    var width = row.getSize();\n    var rowOffset = row.getNextSet(0);\n    var counterPosition = 0;\n    var counters = [0, 0, 0, 0, 0, 0];\n    var patternStart = rowOffset;\n    var isWhite = false;\n    var patternLength = 6;\n\n    for (var i = rowOffset; i < width; i++) {\n      if (row.get(i) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          var bestVariance = Code128Reader.MAX_AVG_VARIANCE;\n          var bestMatch = -1;\n\n          for (var startCode = Code128Reader.CODE_START_A; startCode <= Code128Reader.CODE_START_C; startCode++) {\n            var variance = OneDReader_1.default.patternMatchVariance(counters, Code128Reader.CODE_PATTERNS[startCode], Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n\n            if (variance < bestVariance) {\n              bestVariance = variance;\n              bestMatch = startCode;\n            }\n          } // Look for whitespace before start pattern, >= 50% of width of start pattern\n\n\n          if (bestMatch >= 0 && row.isRange(Math.max(0, patternStart - (i - patternStart) / 2), patternStart, false)) {\n            return [patternStart, i, bestMatch];\n          }\n\n          patternStart += counters[0] + counters[1];\n          counters.splice(0, 2);\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  Code128Reader.decodeCode = function (row, counters, rowOffset) {\n    OneDReader_1.default.recordPattern(row, rowOffset, counters);\n    var bestVariance = Code128Reader.MAX_AVG_VARIANCE; // worst variance we'll accept\n\n    var bestMatch = -1;\n\n    for (var d = 0; d < Code128Reader.CODE_PATTERNS.length; d++) {\n      var pattern = Code128Reader.CODE_PATTERNS[d];\n      var variance = this.patternMatchVariance(counters, pattern, Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = d;\n      }\n    } // TODO We're overlooking the fact that the STOP pattern has 7 values, not 6.\n\n\n    if (bestMatch >= 0) {\n      return bestMatch;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  };\n\n  Code128Reader.prototype.decodeRow = function (rowNumber, row, hints) {\n    var convertFNC1 = hints && hints.get(DecodeHintType_1.default.ASSUME_GS1) === true;\n    var startPatternInfo = Code128Reader.findStartPattern(row);\n    var startCode = startPatternInfo[2];\n    var currentRawCodesIndex = 0;\n    var rawCodes = new Uint8Array(20);\n    rawCodes[currentRawCodesIndex++] = startCode;\n    var codeSet;\n\n    switch (startCode) {\n      case Code128Reader.CODE_START_A:\n        codeSet = Code128Reader.CODE_CODE_A;\n        break;\n\n      case Code128Reader.CODE_START_B:\n        codeSet = Code128Reader.CODE_CODE_B;\n        break;\n\n      case Code128Reader.CODE_START_C:\n        codeSet = Code128Reader.CODE_CODE_C;\n        break;\n\n      default:\n        throw new FormatException_1.default();\n    }\n\n    var done = false;\n    var isNextShifted = false;\n    var result = '';\n    var lastStart = startPatternInfo[0];\n    var nextStart = startPatternInfo[1];\n    var counters = [0, 0, 0, 0, 0, 0];\n    var lastCode = 0;\n    var code = 0;\n    var checksumTotal = startCode;\n    var multiplier = 0;\n    var lastCharacterWasPrintable = true;\n    var upperMode = false;\n    var shiftUpperMode = false;\n\n    while (!done) {\n      var unshift = isNextShifted;\n      isNextShifted = false; // Save off last code\n\n      lastCode = code; // Decode another code from image\n\n      code = Code128Reader.decodeCode(row, counters, nextStart);\n      rawCodes[currentRawCodesIndex++] = code; // Remember whether the last code was printable or not (excluding CODE_STOP)\n\n      if (code !== Code128Reader.CODE_STOP) {\n        lastCharacterWasPrintable = true;\n      } // Add to checksum computation (if not CODE_STOP of course)\n\n\n      if (code !== Code128Reader.CODE_STOP) {\n        multiplier++;\n        checksumTotal += multiplier * code;\n      } // Advance to where the next code will to start\n\n\n      lastStart = nextStart;\n      nextStart += counters.reduce(function (previous, current) {\n        return previous + current;\n      }, 0); // Take care of illegal start codes\n\n      switch (code) {\n        case Code128Reader.CODE_START_A:\n        case Code128Reader.CODE_START_B:\n        case Code128Reader.CODE_START_C:\n          throw new FormatException_1.default();\n      }\n\n      switch (codeSet) {\n        case Code128Reader.CODE_CODE_A:\n          if (code < 64) {\n            if (shiftUpperMode === upperMode) {\n              result += String.fromCharCode(' '.charCodeAt(0) + code);\n            } else {\n              result += String.fromCharCode(' '.charCodeAt(0) + code + 128);\n            }\n\n            shiftUpperMode = false;\n          } else if (code < 96) {\n            if (shiftUpperMode === upperMode) {\n              result += String.fromCharCode(code - 64);\n            } else {\n              result += String.fromCharCode(code + 64);\n            }\n\n            shiftUpperMode = false;\n          } else {\n            // Don't let CODE_STOP, which always appears, affect whether whether we think the last\n            // code was printable or not.\n            if (code !== Code128Reader.CODE_STOP) {\n              lastCharacterWasPrintable = false;\n            }\n\n            switch (code) {\n              case Code128Reader.CODE_FNC_1:\n                if (convertFNC1) {\n                  if (result.length === 0) {\n                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                    // is FNC1 then this is GS1-128. We add the symbology identifier.\n                    result += ']C1';\n                  } else {\n                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                    result += String.fromCharCode(29);\n                  }\n                }\n\n                break;\n\n              case Code128Reader.CODE_FNC_2:\n              case Code128Reader.CODE_FNC_3:\n                // do nothing?\n                break;\n\n              case Code128Reader.CODE_FNC_4_A:\n                if (!upperMode && shiftUpperMode) {\n                  upperMode = true;\n                  shiftUpperMode = false;\n                } else if (upperMode && shiftUpperMode) {\n                  upperMode = false;\n                  shiftUpperMode = false;\n                } else {\n                  shiftUpperMode = true;\n                }\n\n                break;\n\n              case Code128Reader.CODE_SHIFT:\n                isNextShifted = true;\n                codeSet = Code128Reader.CODE_CODE_B;\n                break;\n\n              case Code128Reader.CODE_CODE_B:\n                codeSet = Code128Reader.CODE_CODE_B;\n                break;\n\n              case Code128Reader.CODE_CODE_C:\n                codeSet = Code128Reader.CODE_CODE_C;\n                break;\n\n              case Code128Reader.CODE_STOP:\n                done = true;\n                break;\n            }\n          }\n\n          break;\n\n        case Code128Reader.CODE_CODE_B:\n          if (code < 96) {\n            if (shiftUpperMode === upperMode) {\n              result += String.fromCharCode(' '.charCodeAt(0) + code);\n            } else {\n              result += String.fromCharCode(' '.charCodeAt(0) + code + 128);\n            }\n\n            shiftUpperMode = false;\n          } else {\n            if (code !== Code128Reader.CODE_STOP) {\n              lastCharacterWasPrintable = false;\n            }\n\n            switch (code) {\n              case Code128Reader.CODE_FNC_1:\n                if (convertFNC1) {\n                  if (result.length === 0) {\n                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                    // is FNC1 then this is GS1-128. We add the symbology identifier.\n                    result += ']C1';\n                  } else {\n                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                    result += String.fromCharCode(29);\n                  }\n                }\n\n                break;\n\n              case Code128Reader.CODE_FNC_2:\n              case Code128Reader.CODE_FNC_3:\n                // do nothing?\n                break;\n\n              case Code128Reader.CODE_FNC_4_B:\n                if (!upperMode && shiftUpperMode) {\n                  upperMode = true;\n                  shiftUpperMode = false;\n                } else if (upperMode && shiftUpperMode) {\n                  upperMode = false;\n                  shiftUpperMode = false;\n                } else {\n                  shiftUpperMode = true;\n                }\n\n                break;\n\n              case Code128Reader.CODE_SHIFT:\n                isNextShifted = true;\n                codeSet = Code128Reader.CODE_CODE_A;\n                break;\n\n              case Code128Reader.CODE_CODE_A:\n                codeSet = Code128Reader.CODE_CODE_A;\n                break;\n\n              case Code128Reader.CODE_CODE_C:\n                codeSet = Code128Reader.CODE_CODE_C;\n                break;\n\n              case Code128Reader.CODE_STOP:\n                done = true;\n                break;\n            }\n          }\n\n          break;\n\n        case Code128Reader.CODE_CODE_C:\n          if (code < 100) {\n            if (code < 10) {\n              result += '0';\n            }\n\n            result += code;\n          } else {\n            if (code !== Code128Reader.CODE_STOP) {\n              lastCharacterWasPrintable = false;\n            }\n\n            switch (code) {\n              case Code128Reader.CODE_FNC_1:\n                if (convertFNC1) {\n                  if (result.length === 0) {\n                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                    // is FNC1 then this is GS1-128. We add the symbology identifier.\n                    result += ']C1';\n                  } else {\n                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                    result += String.fromCharCode(29);\n                  }\n                }\n\n                break;\n\n              case Code128Reader.CODE_CODE_A:\n                codeSet = Code128Reader.CODE_CODE_A;\n                break;\n\n              case Code128Reader.CODE_CODE_B:\n                codeSet = Code128Reader.CODE_CODE_B;\n                break;\n\n              case Code128Reader.CODE_STOP:\n                done = true;\n                break;\n            }\n          }\n\n          break;\n      } // Unshift back to another code set if we were shifted\n\n\n      if (unshift) {\n        codeSet = codeSet === Code128Reader.CODE_CODE_A ? Code128Reader.CODE_CODE_B : Code128Reader.CODE_CODE_A;\n      }\n    }\n\n    var lastPatternSize = nextStart - lastStart; // Check for ample whitespace following pattern, but, to do this we first need to remember that\n    // we fudged decoding CODE_STOP since it actually has 7 bars, not 6. There is a black bar left\n    // to read off. Would be slightly better to properly read. Here we just skip it:\n\n    nextStart = row.getNextUnset(nextStart);\n\n    if (!row.isRange(nextStart, Math.min(row.getSize(), nextStart + (nextStart - lastStart) / 2), false)) {\n      throw new NotFoundException_1.default();\n    } // Pull out from sum the value of the penultimate check code\n\n\n    checksumTotal -= multiplier * lastCode; // lastCode is the checksum then:\n\n    if (checksumTotal % 103 !== lastCode) {\n      throw new ChecksumException_1.default();\n    } // Need to pull out the check digits from string\n\n\n    var resultLength = result.length;\n\n    if (resultLength === 0) {\n      // false positive\n      throw new NotFoundException_1.default();\n    } // Only bother if the result had at least one character, and if the checksum digit happened to\n    // be a printable character. If it was just interpreted as a control code, nothing to remove.\n\n\n    if (resultLength > 0 && lastCharacterWasPrintable) {\n      if (codeSet === Code128Reader.CODE_CODE_C) {\n        result = result.substring(0, resultLength - 2);\n      } else {\n        result = result.substring(0, resultLength - 1);\n      }\n    }\n\n    var left = (startPatternInfo[1] + startPatternInfo[0]) / 2.0;\n    var right = lastStart + lastPatternSize / 2.0;\n    var rawCodesSize = rawCodes.length;\n    var rawBytes = new Uint8Array(rawCodesSize);\n\n    for (var i = 0; i < rawCodesSize; i++) {\n      rawBytes[i] = rawCodes[i];\n    }\n\n    var points = [new ResultPoint_1.default(left, rowNumber), new ResultPoint_1.default(right, rowNumber)];\n    return new Result_1.default(result, rawBytes, 0, points, BarcodeFormat_1.default.CODE_128, new Date().getTime());\n  };\n\n  Code128Reader.CODE_PATTERNS = [[2, 1, 2, 2, 2, 2], [2, 2, 2, 1, 2, 2], [2, 2, 2, 2, 2, 1], [1, 2, 1, 2, 2, 3], [1, 2, 1, 3, 2, 2], [1, 3, 1, 2, 2, 2], [1, 2, 2, 2, 1, 3], [1, 2, 2, 3, 1, 2], [1, 3, 2, 2, 1, 2], [2, 2, 1, 2, 1, 3], [2, 2, 1, 3, 1, 2], [2, 3, 1, 2, 1, 2], [1, 1, 2, 2, 3, 2], [1, 2, 2, 1, 3, 2], [1, 2, 2, 2, 3, 1], [1, 1, 3, 2, 2, 2], [1, 2, 3, 1, 2, 2], [1, 2, 3, 2, 2, 1], [2, 2, 3, 2, 1, 1], [2, 2, 1, 1, 3, 2], [2, 2, 1, 2, 3, 1], [2, 1, 3, 2, 1, 2], [2, 2, 3, 1, 1, 2], [3, 1, 2, 1, 3, 1], [3, 1, 1, 2, 2, 2], [3, 2, 1, 1, 2, 2], [3, 2, 1, 2, 2, 1], [3, 1, 2, 2, 1, 2], [3, 2, 2, 1, 1, 2], [3, 2, 2, 2, 1, 1], [2, 1, 2, 1, 2, 3], [2, 1, 2, 3, 2, 1], [2, 3, 2, 1, 2, 1], [1, 1, 1, 3, 2, 3], [1, 3, 1, 1, 2, 3], [1, 3, 1, 3, 2, 1], [1, 1, 2, 3, 1, 3], [1, 3, 2, 1, 1, 3], [1, 3, 2, 3, 1, 1], [2, 1, 1, 3, 1, 3], [2, 3, 1, 1, 1, 3], [2, 3, 1, 3, 1, 1], [1, 1, 2, 1, 3, 3], [1, 1, 2, 3, 3, 1], [1, 3, 2, 1, 3, 1], [1, 1, 3, 1, 2, 3], [1, 1, 3, 3, 2, 1], [1, 3, 3, 1, 2, 1], [3, 1, 3, 1, 2, 1], [2, 1, 1, 3, 3, 1], [2, 3, 1, 1, 3, 1], [2, 1, 3, 1, 1, 3], [2, 1, 3, 3, 1, 1], [2, 1, 3, 1, 3, 1], [3, 1, 1, 1, 2, 3], [3, 1, 1, 3, 2, 1], [3, 3, 1, 1, 2, 1], [3, 1, 2, 1, 1, 3], [3, 1, 2, 3, 1, 1], [3, 3, 2, 1, 1, 1], [3, 1, 4, 1, 1, 1], [2, 2, 1, 4, 1, 1], [4, 3, 1, 1, 1, 1], [1, 1, 1, 2, 2, 4], [1, 1, 1, 4, 2, 2], [1, 2, 1, 1, 2, 4], [1, 2, 1, 4, 2, 1], [1, 4, 1, 1, 2, 2], [1, 4, 1, 2, 2, 1], [1, 1, 2, 2, 1, 4], [1, 1, 2, 4, 1, 2], [1, 2, 2, 1, 1, 4], [1, 2, 2, 4, 1, 1], [1, 4, 2, 1, 1, 2], [1, 4, 2, 2, 1, 1], [2, 4, 1, 2, 1, 1], [2, 2, 1, 1, 1, 4], [4, 1, 3, 1, 1, 1], [2, 4, 1, 1, 1, 2], [1, 3, 4, 1, 1, 1], [1, 1, 1, 2, 4, 2], [1, 2, 1, 1, 4, 2], [1, 2, 1, 2, 4, 1], [1, 1, 4, 2, 1, 2], [1, 2, 4, 1, 1, 2], [1, 2, 4, 2, 1, 1], [4, 1, 1, 2, 1, 2], [4, 2, 1, 1, 1, 2], [4, 2, 1, 2, 1, 1], [2, 1, 2, 1, 4, 1], [2, 1, 4, 1, 2, 1], [4, 1, 2, 1, 2, 1], [1, 1, 1, 1, 4, 3], [1, 1, 1, 3, 4, 1], [1, 3, 1, 1, 4, 1], [1, 1, 4, 1, 1, 3], [1, 1, 4, 3, 1, 1], [4, 1, 1, 1, 1, 3], [4, 1, 1, 3, 1, 1], [1, 1, 3, 1, 4, 1], [1, 1, 4, 1, 3, 1], [3, 1, 1, 1, 4, 1], [4, 1, 1, 1, 3, 1], [2, 1, 1, 4, 1, 2], [2, 1, 1, 2, 1, 4], [2, 1, 1, 2, 3, 2], [2, 3, 3, 1, 1, 1, 2]];\n  Code128Reader.MAX_AVG_VARIANCE = 0.25;\n  Code128Reader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n  Code128Reader.CODE_SHIFT = 98;\n  Code128Reader.CODE_CODE_C = 99;\n  Code128Reader.CODE_CODE_B = 100;\n  Code128Reader.CODE_CODE_A = 101;\n  Code128Reader.CODE_FNC_1 = 102;\n  Code128Reader.CODE_FNC_2 = 97;\n  Code128Reader.CODE_FNC_3 = 96;\n  Code128Reader.CODE_FNC_4_A = 101;\n  Code128Reader.CODE_FNC_4_B = 100;\n  Code128Reader.CODE_START_A = 103;\n  Code128Reader.CODE_START_B = 104;\n  Code128Reader.CODE_START_C = 105;\n  Code128Reader.CODE_STOP = 106;\n  return Code128Reader;\n}(OneDReader_1.default);\n\nexports.default = Code128Reader;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AbstractRSSReader_1 = require(\"./AbstractRSSReader\");\n\nvar Pair_1 = require(\"./Pair\");\n\nvar Result_1 = require(\"../../Result\");\n\nvar DecodeHintType_1 = require(\"../../DecodeHintType\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n\nvar BarcodeFormat_1 = require(\"../../BarcodeFormat\");\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar FinderPattern_1 = require(\"./FinderPattern\");\n\nvar DataCharacter_1 = require(\"./DataCharacter\");\n\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n\nvar RSSUtils_1 = require(\"./RSSUtils\");\n\nvar System_1 = require(\"../../util/System\");\n\nvar OneDReader_1 = require(\"../OneDReader\");\n\nvar RSS14Reader =\n/** @class */\nfunction (_super) {\n  __extends(RSS14Reader, _super);\n\n  function RSS14Reader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.possibleLeftPairs = [];\n    _this.possibleRightPairs = [];\n    return _this;\n  }\n\n  RSS14Reader.prototype.decodeRow = function (rowNumber, row, hints) {\n    var leftPair = this.decodePair(row, false, rowNumber, hints);\n    RSS14Reader.addOrTally(this.possibleLeftPairs, leftPair);\n    row.reverse();\n    var rightPair = this.decodePair(row, true, rowNumber, hints);\n    RSS14Reader.addOrTally(this.possibleRightPairs, rightPair);\n    row.reverse();\n\n    for (var _i = 0, _a = this.possibleLeftPairs; _i < _a.length; _i++) {\n      var left = _a[_i];\n\n      if (left.getCount() > 1) {\n        for (var _b = 0, _c = this.possibleRightPairs; _b < _c.length; _b++) {\n          var right = _c[_b];\n\n          if (right.getCount() > 1 && RSS14Reader.checkChecksum(left, right)) {\n            return RSS14Reader.constructResult(left, right);\n          }\n        }\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  RSS14Reader.addOrTally = function (possiblePairs, pair) {\n    if (pair == null) {\n      return;\n    }\n\n    var found = false;\n\n    for (var _i = 0, possiblePairs_1 = possiblePairs; _i < possiblePairs_1.length; _i++) {\n      var other = possiblePairs_1[_i];\n\n      if (other.getValue() === pair.getValue()) {\n        other.incrementCount();\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      possiblePairs.push(pair);\n    }\n  };\n\n  RSS14Reader.prototype.reset = function () {\n    this.possibleLeftPairs.length = 0;\n    this.possibleRightPairs.length = 0;\n  };\n\n  RSS14Reader.constructResult = function (leftPair, rightPair) {\n    var symbolValue = 4537077 * leftPair.getValue() + rightPair.getValue();\n    var text = new String(symbolValue).toString();\n    var buffer = new StringBuilder_1.default();\n\n    for (var i = 13 - text.length; i > 0; i--) {\n      buffer.append('0');\n    }\n\n    buffer.append(text);\n    var checkDigit = 0;\n\n    for (var i = 0; i < 13; i++) {\n      var digit = buffer.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n      checkDigit += (i & 0x01) === 0 ? 3 * digit : digit;\n    }\n\n    checkDigit = 10 - checkDigit % 10;\n\n    if (checkDigit === 10) {\n      checkDigit = 0;\n    }\n\n    buffer.append(checkDigit.toString());\n    var leftPoints = leftPair.getFinderPattern().getResultPoints();\n    var rightPoints = rightPair.getFinderPattern().getResultPoints();\n    return new Result_1.default(buffer.toString(), null, 0, [leftPoints[0], leftPoints[1], rightPoints[0], rightPoints[1]], BarcodeFormat_1.default.RSS_14, new Date().getTime());\n  };\n\n  RSS14Reader.checkChecksum = function (leftPair, rightPair) {\n    var checkValue = (leftPair.getChecksumPortion() + 16 * rightPair.getChecksumPortion()) % 79;\n    var targetCheckValue = 9 * leftPair.getFinderPattern().getValue() + rightPair.getFinderPattern().getValue();\n\n    if (targetCheckValue > 72) {\n      targetCheckValue--;\n    }\n\n    if (targetCheckValue > 8) {\n      targetCheckValue--;\n    }\n\n    return checkValue === targetCheckValue;\n  };\n\n  RSS14Reader.prototype.decodePair = function (row, right, rowNumber, hints) {\n    try {\n      var startEnd = this.findFinderPattern(row, right);\n      var pattern = this.parseFoundFinderPattern(row, rowNumber, right, startEnd);\n      var resultPointCallback = hints == null ? null : hints.get(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK);\n\n      if (resultPointCallback != null) {\n        var center = (startEnd[0] + startEnd[1]) / 2.0;\n\n        if (right) {\n          // row is actually reversed\n          center = row.getSize() - 1 - center;\n        }\n\n        resultPointCallback.foundPossibleResultPoint(new ResultPoint_1.default(center, rowNumber));\n      }\n\n      var outside = this.decodeDataCharacter(row, pattern, true);\n      var inside = this.decodeDataCharacter(row, pattern, false);\n      return new Pair_1.default(1597 * outside.getValue() + inside.getValue(), outside.getChecksumPortion() + 4 * inside.getChecksumPortion(), pattern);\n    } catch (err) {\n      return null;\n    }\n  };\n\n  RSS14Reader.prototype.decodeDataCharacter = function (row, pattern, outsideChar) {\n    var counters = this.getDataCharacterCounters();\n\n    for (var x = 0; x < counters.length; x++) {\n      counters[x] = 0;\n    }\n\n    if (outsideChar) {\n      OneDReader_1.default.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n    } else {\n      OneDReader_1.default.recordPattern(row, pattern.getStartEnd()[1] + 1, counters); // reverse it\n\n      for (var i = 0, j = counters.length - 1; i < j; i++, j--) {\n        var temp = counters[i];\n        counters[i] = counters[j];\n        counters[j] = temp;\n      }\n    }\n\n    var numModules = outsideChar ? 16 : 15;\n    var elementWidth = MathUtils_1.default.sum(new Int32Array(counters)) / numModules;\n    var oddCounts = this.getOddCounts();\n    var evenCounts = this.getEvenCounts();\n    var oddRoundingErrors = this.getOddRoundingErrors();\n    var evenRoundingErrors = this.getEvenRoundingErrors();\n\n    for (var i = 0; i < counters.length; i++) {\n      var value = counters[i] / elementWidth;\n      var count = Math.floor(value + 0.5);\n\n      if (count < 1) {\n        count = 1;\n      } else if (count > 8) {\n        count = 8;\n      }\n\n      var offset = Math.floor(i / 2);\n\n      if ((i & 0x01) === 0) {\n        oddCounts[offset] = count;\n        oddRoundingErrors[offset] = value - count;\n      } else {\n        evenCounts[offset] = count;\n        evenRoundingErrors[offset] = value - count;\n      }\n    }\n\n    this.adjustOddEvenCounts(outsideChar, numModules);\n    var oddSum = 0;\n    var oddChecksumPortion = 0;\n\n    for (var i = oddCounts.length - 1; i >= 0; i--) {\n      oddChecksumPortion *= 9;\n      oddChecksumPortion += oddCounts[i];\n      oddSum += oddCounts[i];\n    }\n\n    var evenChecksumPortion = 0;\n    var evenSum = 0;\n\n    for (var i = evenCounts.length - 1; i >= 0; i--) {\n      evenChecksumPortion *= 9;\n      evenChecksumPortion += evenCounts[i];\n      evenSum += evenCounts[i];\n    }\n\n    var checksumPortion = oddChecksumPortion + 3 * evenChecksumPortion;\n\n    if (outsideChar) {\n      if ((oddSum & 0x01) !== 0 || oddSum > 12 || oddSum < 4) {\n        throw new NotFoundException_1.default();\n      }\n\n      var group = (12 - oddSum) / 2;\n      var oddWidest = RSS14Reader.OUTSIDE_ODD_WIDEST[group];\n      var evenWidest = 9 - oddWidest;\n      var vOdd = RSSUtils_1.default.getRSSvalue(oddCounts, oddWidest, false);\n      var vEven = RSSUtils_1.default.getRSSvalue(evenCounts, evenWidest, true);\n      var tEven = RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET[group];\n      var gSum = RSS14Reader.OUTSIDE_GSUM[group];\n      return new DataCharacter_1.default(vOdd * tEven + vEven + gSum, checksumPortion);\n    } else {\n      if ((evenSum & 0x01) !== 0 || evenSum > 10 || evenSum < 4) {\n        throw new NotFoundException_1.default();\n      }\n\n      var group = (10 - evenSum) / 2;\n      var oddWidest = RSS14Reader.INSIDE_ODD_WIDEST[group];\n      var evenWidest = 9 - oddWidest;\n      var vOdd = RSSUtils_1.default.getRSSvalue(oddCounts, oddWidest, true);\n      var vEven = RSSUtils_1.default.getRSSvalue(evenCounts, evenWidest, false);\n      var tOdd = RSS14Reader.INSIDE_ODD_TOTAL_SUBSET[group];\n      var gSum = RSS14Reader.INSIDE_GSUM[group];\n      return new DataCharacter_1.default(vEven * tOdd + vOdd + gSum, checksumPortion);\n    }\n  };\n\n  RSS14Reader.prototype.findFinderPattern = function (row, rightFinderPattern) {\n    var counters = this.getDecodeFinderCounters();\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var width = row.getSize();\n    var isWhite = false;\n    var rowOffset = 0;\n\n    while (rowOffset < width) {\n      isWhite = !row.get(rowOffset);\n\n      if (rightFinderPattern === isWhite) {\n        // Will encounter white first when searching for right finder pattern\n        break;\n      }\n\n      rowOffset++;\n    }\n\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === 3) {\n          if (AbstractRSSReader_1.default.isFinderPattern(counters)) {\n            return [patternStart, x];\n          }\n\n          patternStart += counters[0] + counters[1];\n          counters[0] = counters[2];\n          counters[1] = counters[3];\n          counters[2] = 0;\n          counters[3] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  RSS14Reader.prototype.parseFoundFinderPattern = function (row, rowNumber, right, startEnd) {\n    // Actually we found elements 2-5\n    var firstIsBlack = row.get(startEnd[0]);\n    var firstElementStart = startEnd[0] - 1; // Locate element 1\n\n    while (firstElementStart >= 0 && firstIsBlack !== row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n\n    firstElementStart++;\n    var firstCounter = startEnd[0] - firstElementStart; // Make 'counters' hold 1-4\n\n    var counters = this.getDecodeFinderCounters();\n    var copy = new Array(counters.length);\n    System_1.default.arraycopy(counters, 0, copy, 1, counters.length - 1);\n    copy[0] = firstCounter;\n    var value = this.parseFinderValue(copy, RSS14Reader.FINDER_PATTERNS);\n    var start = firstElementStart;\n    var end = startEnd[1];\n\n    if (right) {\n      // row is actually reversed\n      start = row.getSize() - 1 - start;\n      end = row.getSize() - 1 - end;\n    }\n\n    return new FinderPattern_1.default(value, [firstElementStart, startEnd[1]], start, end, rowNumber);\n  };\n\n  RSS14Reader.prototype.adjustOddEvenCounts = function (outsideChar, numModules) {\n    var oddSum = MathUtils_1.default.sum(new Int32Array(this.getOddCounts()));\n    var evenSum = MathUtils_1.default.sum(new Int32Array(this.getEvenCounts()));\n    var incrementOdd = false;\n    var decrementOdd = false;\n    var incrementEven = false;\n    var decrementEven = false;\n\n    if (outsideChar) {\n      if (oddSum > 12) {\n        decrementOdd = true;\n      } else if (oddSum < 4) {\n        incrementOdd = true;\n      }\n\n      if (evenSum > 12) {\n        decrementEven = true;\n      } else if (evenSum < 4) {\n        incrementEven = true;\n      }\n    } else {\n      if (oddSum > 11) {\n        decrementOdd = true;\n      } else if (oddSum < 5) {\n        incrementOdd = true;\n      }\n\n      if (evenSum > 10) {\n        decrementEven = true;\n      } else if (evenSum < 4) {\n        incrementEven = true;\n      }\n    }\n\n    var mismatch = oddSum + evenSum - numModules;\n    var oddParityBad = (oddSum & 0x01) === (outsideChar ? 1 : 0);\n    var evenParityBad = (evenSum & 0x01) === 1;\n\n    if (mismatch === 1) {\n      if (oddParityBad) {\n        if (evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        decrementOdd = true;\n      } else {\n        if (!evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        decrementEven = true;\n      }\n    } else if (mismatch === -1) {\n      if (oddParityBad) {\n        if (evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        incrementOdd = true;\n      } else {\n        if (!evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        incrementEven = true;\n      }\n    } else if (mismatch === 0) {\n      if (oddParityBad) {\n        if (!evenParityBad) {\n          throw new NotFoundException_1.default();\n        } // Both bad\n\n\n        if (oddSum < evenSum) {\n          incrementOdd = true;\n          decrementEven = true;\n        } else {\n          decrementOdd = true;\n          incrementEven = true;\n        }\n      } else {\n        if (evenParityBad) {\n          throw new NotFoundException_1.default();\n        } // Nothing to do!\n\n      }\n    } else {\n      throw new NotFoundException_1.default();\n    }\n\n    if (incrementOdd) {\n      if (decrementOdd) {\n        throw new NotFoundException_1.default();\n      }\n\n      AbstractRSSReader_1.default.increment(this.getOddCounts(), this.getOddRoundingErrors());\n    }\n\n    if (decrementOdd) {\n      AbstractRSSReader_1.default.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n    }\n\n    if (incrementEven) {\n      if (decrementEven) {\n        throw new NotFoundException_1.default();\n      }\n\n      AbstractRSSReader_1.default.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n    }\n\n    if (decrementEven) {\n      AbstractRSSReader_1.default.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n    }\n  };\n\n  RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET = [1, 10, 34, 70, 126];\n  RSS14Reader.INSIDE_ODD_TOTAL_SUBSET = [4, 20, 48, 81];\n  RSS14Reader.OUTSIDE_GSUM = [0, 161, 961, 2015, 2715];\n  RSS14Reader.INSIDE_GSUM = [0, 336, 1036, 1516];\n  RSS14Reader.OUTSIDE_ODD_WIDEST = [8, 6, 4, 3, 1];\n  RSS14Reader.INSIDE_ODD_WIDEST = [2, 4, 6, 8];\n  RSS14Reader.FINDER_PATTERNS = [[3, 8, 2, 1], [3, 5, 5, 1], [3, 3, 7, 1], [3, 1, 9, 1], [2, 7, 4, 1], [2, 5, 6, 1], [2, 3, 8, 1], [1, 5, 7, 1], [1, 3, 9, 1]];\n  return RSS14Reader;\n}(AbstractRSSReader_1.default);\n\nexports.default = RSS14Reader;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DataCharacter =\n/** @class */\nfunction () {\n  function DataCharacter(value, checksumPortion) {\n    this.value = value;\n    this.checksumPortion = checksumPortion;\n  }\n\n  DataCharacter.prototype.getValue = function () {\n    return this.value;\n  };\n\n  DataCharacter.prototype.getChecksumPortion = function () {\n    return this.checksumPortion;\n  };\n\n  DataCharacter.prototype.toString = function () {\n    return this.value + '(' + this.checksumPortion + ')';\n  };\n\n  DataCharacter.prototype.equals = function (o) {\n    if (!(o instanceof DataCharacter)) {\n      return false;\n    }\n\n    var that = o;\n    return this.value === that.value && this.checksumPortion === that.checksumPortion;\n  };\n\n  DataCharacter.prototype.hashCode = function () {\n    return this.value ^ this.checksumPortion;\n  };\n\n  return DataCharacter;\n}();\n\nexports.default = DataCharacter;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar StringBuilder_1 = require(\"../util/StringBuilder\");\n\nvar System_1 = require(\"../util/System\");\n\nvar FormatException_1 = require(\"../FormatException\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * <p>Decodes ITF barcodes.</p>\r\n *\r\n * @author Tjieco\r\n */\n\n\nvar ITFReader =\n/** @class */\nfunction (_super) {\n  __extends(ITFReader, _super);\n\n  function ITFReader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // Stores the actual narrow line width of the image being decoded.\n\n\n    _this.narrowLineWidth = -1;\n    return _this;\n  } // See ITFWriter.PATTERNS\n\n  /*\r\n    /!**\r\n   * Patterns of Wide / Narrow lines to indicate each digit\r\n   *!/\r\n  */\n\n\n  ITFReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    // Find out where the Middle section (payload) starts & ends\n    var startRange = this.decodeStart(row);\n    var endRange = this.decodeEnd(row);\n    var result = new StringBuilder_1.default();\n    ITFReader.decodeMiddle(row, startRange[1], endRange[0], result);\n    var resultString = result.toString();\n    var allowedLengths = null;\n\n    if (hints != null) {\n      allowedLengths = hints.get(DecodeHintType_1.default.ALLOWED_LENGTHS);\n    }\n\n    if (allowedLengths == null) {\n      allowedLengths = ITFReader.DEFAULT_ALLOWED_LENGTHS;\n    } // To avoid false positives with 2D barcodes (and other patterns), make\n    // an assumption that the decoded string must be a 'standard' length if it's short\n\n\n    var length = resultString.length;\n    var lengthOK = false;\n    var maxAllowedLength = 0;\n\n    for (var _i = 0, allowedLengths_1 = allowedLengths; _i < allowedLengths_1.length; _i++) {\n      var value = allowedLengths_1[_i];\n\n      if (length === value) {\n        lengthOK = true;\n        break;\n      }\n\n      if (value > maxAllowedLength) {\n        maxAllowedLength = value;\n      }\n    }\n\n    if (!lengthOK && length > maxAllowedLength) {\n      lengthOK = true;\n    }\n\n    if (!lengthOK) {\n      throw new FormatException_1.default();\n    }\n\n    var points = [new ResultPoint_1.default(startRange[1], rowNumber), new ResultPoint_1.default(endRange[0], rowNumber)];\n    var resultReturn = new Result_1.default(resultString, null, // no natural byte representation for these barcodes\n    0, points, BarcodeFormat_1.default.ITF, new Date().getTime());\n    return resultReturn;\n  };\n  /*\r\n  /!**\r\n   * @param row          row of black/white values to search\r\n   * @param payloadStart offset of start pattern\r\n   * @param resultString {@link StringBuilder} to append decoded chars to\r\n   * @throws NotFoundException if decoding could not complete successfully\r\n   *!/*/\n\n\n  ITFReader.decodeMiddle = function (row, payloadStart, payloadEnd, resultString) {\n    // Digits are interleaved in pairs - 5 black lines for one digit, and the\n    // 5\n    // interleaved white lines for the second digit.\n    // Therefore, need to scan 10 lines and then\n    // split these into two arrays\n    var counterDigitPair = new Array(10); // 10\n\n    var counterBlack = new Array(5); // 5\n\n    var counterWhite = new Array(5); // 5\n\n    counterDigitPair.fill(0);\n    counterBlack.fill(0);\n    counterWhite.fill(0);\n\n    while (payloadStart < payloadEnd) {\n      // Get 10 runs of black/white.\n      OneDReader_1.default.recordPattern(row, payloadStart, counterDigitPair); // Split them into each array\n\n      for (var k = 0; k < 5; k++) {\n        var twoK = 2 * k;\n        counterBlack[k] = counterDigitPair[twoK];\n        counterWhite[k] = counterDigitPair[twoK + 1];\n      }\n\n      var bestMatch = ITFReader.decodeDigit(counterBlack);\n      resultString.append(bestMatch.toString());\n      bestMatch = this.decodeDigit(counterWhite);\n      resultString.append(bestMatch.toString());\n      counterDigitPair.forEach(function (counterDigit) {\n        payloadStart += counterDigit;\n      });\n    }\n  };\n  /*/!**\r\n   * Identify where the start of the middle / payload section starts.\r\n   *\r\n   * @param row row of black/white values to search\r\n   * @return Array, containing index of start of 'start block' and end of\r\n   *         'start block'\r\n   *!/*/\n\n\n  ITFReader.prototype.decodeStart = function (row) {\n    var endStart = ITFReader.skipWhiteSpace(row);\n    var startPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.START_PATTERN); // Determine the width of a narrow line in pixels. We can do this by\n    // getting the width of the start pattern and dividing by 4 because its\n    // made up of 4 narrow lines.\n\n    this.narrowLineWidth = (startPattern[1] - startPattern[0]) / 4;\n    this.validateQuietZone(row, startPattern[0]);\n    return startPattern;\n  };\n  /*/!**\r\n   * The start & end patterns must be pre/post fixed by a quiet zone. This\r\n   * zone must be at least 10 times the width of a narrow line.  Scan back until\r\n   * we either get to the start of the barcode or match the necessary number of\r\n   * quiet zone pixels.\r\n   *\r\n   * Note: Its assumed the row is reversed when using this method to find\r\n   * quiet zone after the end pattern.\r\n   *\r\n   * ref: http://www.barcode-1.net/i25code.html\r\n   *\r\n   * @param row bit array representing the scanned barcode.\r\n   * @param startPattern index into row of the start or end pattern.\r\n   * @throws NotFoundException if the quiet zone cannot be found\r\n   *!/*/\n\n\n  ITFReader.prototype.validateQuietZone = function (row, startPattern) {\n    var quietCount = this.narrowLineWidth * 10; // expect to find this many pixels of quiet zone\n    // if there are not so many pixel at all let's try as many as possible\n\n    quietCount = quietCount < startPattern ? quietCount : startPattern;\n\n    for (var i = startPattern - 1; quietCount > 0 && i >= 0; i--) {\n      if (row.get(i)) {\n        break;\n      }\n\n      quietCount--;\n    }\n\n    if (quietCount !== 0) {\n      // Unable to find the necessary number of quiet zone pixels.\n      throw new NotFoundException_1.default();\n    }\n  };\n  /*\r\n  /!**\r\n   * Skip all whitespace until we get to the first black line.\r\n   *\r\n   * @param row row of black/white values to search\r\n   * @return index of the first black line.\r\n   * @throws NotFoundException Throws exception if no black lines are found in the row\r\n   *!/*/\n\n\n  ITFReader.skipWhiteSpace = function (row) {\n    var width = row.getSize();\n    var endStart = row.getNextSet(0);\n\n    if (endStart === width) {\n      throw new NotFoundException_1.default();\n    }\n\n    return endStart;\n  };\n  /*/!**\r\n   * Identify where the end of the middle / payload section ends.\r\n   *\r\n   * @param row row of black/white values to search\r\n   * @return Array, containing index of start of 'end block' and end of 'end\r\n   *         block'\r\n   *!/*/\n\n\n  ITFReader.prototype.decodeEnd = function (row) {\n    // For convenience, reverse the row and then\n    // search from 'the start' for the end block\n    row.reverse();\n\n    try {\n      var endStart = ITFReader.skipWhiteSpace(row);\n      var endPattern = void 0;\n\n      try {\n        endPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.END_PATTERN_REVERSED[0]);\n      } catch (NotFoundException) {\n        endPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.END_PATTERN_REVERSED[1]);\n      } // The start & end patterns must be pre/post fixed by a quiet zone. This\n      // zone must be at least 10 times the width of a narrow line.\n      // ref: http://www.barcode-1.net/i25code.html\n\n\n      this.validateQuietZone(row, endPattern[0]); // Now recalculate the indices of where the 'endblock' starts & stops to\n      // accommodate\n      // the reversed nature of the search\n\n      var temp = endPattern[0];\n      endPattern[0] = row.getSize() - endPattern[1];\n      endPattern[1] = row.getSize() - temp;\n      return endPattern;\n    } finally {\n      // Put the row back the right way.\n      row.reverse();\n    }\n  };\n  /*\r\n  /!**\r\n   * @param row       row of black/white values to search\r\n   * @param rowOffset position to start search\r\n   * @param pattern   pattern of counts of number of black and white pixels that are\r\n   *                  being searched for as a pattern\r\n   * @return start/end horizontal offset of guard pattern, as an array of two\r\n   *         ints\r\n   * @throws NotFoundException if pattern is not found\r\n   *!/*/\n\n\n  ITFReader.findGuardPattern = function (row, rowOffset, pattern) {\n    var patternLength = pattern.length;\n    var counters = new Array(patternLength);\n    var width = row.getSize();\n    var isWhite = false;\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n    counters.fill(0);\n\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          if (OneDReader_1.default.patternMatchVariance(counters, pattern, ITFReader.MAX_INDIVIDUAL_VARIANCE) < ITFReader.MAX_AVG_VARIANCE) {\n            return [patternStart, x];\n          }\n\n          patternStart += counters[0] + counters[1];\n          System_1.default.arraycopy(counters, 2, counters, 0, counterPosition - 1);\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n  /*/!**\r\n   * Attempts to decode a sequence of ITF black/white lines into single\r\n   * digit.\r\n   *\r\n   * @param counters the counts of runs of observed black/white/black/... values\r\n   * @return The decoded digit\r\n   * @throws NotFoundException if digit cannot be decoded\r\n   *!/*/\n\n\n  ITFReader.decodeDigit = function (counters) {\n    var bestVariance = ITFReader.MAX_AVG_VARIANCE; // worst variance we'll accept\n\n    var bestMatch = -1;\n    var max = ITFReader.PATTERNS.length;\n\n    for (var i = 0; i < max; i++) {\n      var pattern = ITFReader.PATTERNS[i];\n      var variance = OneDReader_1.default.patternMatchVariance(counters, pattern, ITFReader.MAX_INDIVIDUAL_VARIANCE);\n\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = i;\n      } else if (variance === bestVariance) {\n        // if we find a second 'best match' with the same variance, we can not reliably report to have a suitable match\n        bestMatch = -1;\n      }\n    }\n\n    if (bestMatch >= 0) {\n      return bestMatch % 10;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  };\n\n  ITFReader.W = 3; // Pixel width of a 3x wide line\n\n  ITFReader.w = 2; // Pixel width of a 2x wide line\n\n  ITFReader.N = 1; // Pixed width of a narrow line\n\n  ITFReader.PATTERNS = [[1, 1, 2, 2, 1], [2, 1, 1, 1, 2], [1, 2, 1, 1, 2], [2, 2, 1, 1, 1], [1, 1, 2, 1, 2], [2, 1, 2, 1, 1], [1, 2, 2, 1, 1], [1, 1, 1, 2, 2], [2, 1, 1, 2, 1], [1, 2, 1, 2, 1], [1, 1, 3, 3, 1], [3, 1, 1, 1, 3], [1, 3, 1, 1, 3], [3, 3, 1, 1, 1], [1, 1, 3, 1, 3], [3, 1, 3, 1, 1], [1, 3, 3, 1, 1], [1, 1, 1, 3, 3], [3, 1, 1, 3, 1], [1, 3, 1, 3, 1] // 9\n  ];\n  ITFReader.MAX_AVG_VARIANCE = 0.38;\n  ITFReader.MAX_INDIVIDUAL_VARIANCE = 0.5;\n  /* /!** Valid ITF lengths. Anything longer than the largest value is also allowed. *!/*/\n\n  ITFReader.DEFAULT_ALLOWED_LENGTHS = [6, 8, 10, 12, 14];\n  /*/!**\r\n   * Start/end guard pattern.\r\n   *\r\n   * Note: The end pattern is reversed because the row is reversed before\r\n   * searching for the END_PATTERN\r\n   *!/*/\n\n  ITFReader.START_PATTERN = [1, 1, 1, 1];\n  ITFReader.END_PATTERN_REVERSED = [[1, 1, 2], [1, 1, 3] // 3x\n  ];\n  return ITFReader;\n}(OneDReader_1.default);\n\nexports.default = ITFReader;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar UPCEANReader_1 = require(\"./UPCEANReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * <p>Implements decoding of the EAN-13 format.</p>\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n * @author Sean Owen\r\n * @author alasdair@google.com (Alasdair Mackintosh)\r\n */\n\n\nvar EAN13Reader =\n/** @class */\nfunction (_super) {\n  __extends(EAN13Reader, _super);\n\n  function EAN13Reader() {\n    var _this = _super.call(this) || this;\n\n    _this.decodeMiddleCounters = [0, 0, 0, 0];\n    return _this;\n  }\n\n  EAN13Reader.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n    var lgPatternFound = 0;\n\n    for (var x = 0; x < 6 && rowOffset < end; x++) {\n      var bestMatch = UPCEANReader_1.default.decodeDigit(row, counters, rowOffset, UPCEANReader_1.default.L_AND_G_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch % 10);\n\n      for (var _i = 0, counters_1 = counters; _i < counters_1.length; _i++) {\n        var counter = counters_1[_i];\n        rowOffset += counter;\n      }\n\n      if (bestMatch >= 10) {\n        lgPatternFound |= 1 << 5 - x;\n      }\n    }\n\n    resultString = EAN13Reader.determineFirstDigit(resultString, lgPatternFound);\n    var middleRange = UPCEANReader_1.default.findGuardPattern(row, rowOffset, true, UPCEANReader_1.default.MIDDLE_PATTERN, new Array(UPCEANReader_1.default.MIDDLE_PATTERN.length).fill(0));\n    rowOffset = middleRange[1];\n\n    for (var x = 0; x < 6 && rowOffset < end; x++) {\n      var bestMatch = UPCEANReader_1.default.decodeDigit(row, counters, rowOffset, UPCEANReader_1.default.L_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch);\n\n      for (var _a = 0, counters_2 = counters; _a < counters_2.length; _a++) {\n        var counter = counters_2[_a];\n        rowOffset += counter;\n      }\n    }\n\n    return {\n      rowOffset: rowOffset,\n      resultString: resultString\n    };\n  };\n\n  EAN13Reader.prototype.getBarcodeFormat = function () {\n    return BarcodeFormat_1.default.EAN_13;\n  };\n\n  EAN13Reader.determineFirstDigit = function (resultString, lgPatternFound) {\n    for (var d = 0; d < 10; d++) {\n      if (lgPatternFound === this.FIRST_DIGIT_ENCODINGS[d]) {\n        resultString = String.fromCharCode('0'.charCodeAt(0) + d) + resultString;\n        return resultString;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  EAN13Reader.FIRST_DIGIT_ENCODINGS = [0x00, 0x0B, 0x0D, 0xE, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1A];\n  return EAN13Reader;\n}(UPCEANReader_1.default);\n\nexports.default = EAN13Reader;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DecodeHintType_1 = require(\"./DecodeHintType\");\n\nvar BarcodeFormat_1 = require(\"./BarcodeFormat\");\n\nvar QRCodeReader_1 = require(\"./qrcode/QRCodeReader\");\n\nvar MultiFormatOneDReader_1 = require(\"./oned/MultiFormatOneDReader\");\n\nvar DataMatrixReader_1 = require(\"./datamatrix/DataMatrixReader\");\n\nvar NotFoundException_1 = require(\"./NotFoundException\");\n\nvar ReaderException_1 = require(\"./ReaderException\");\n/*namespace com.google.zxing {*/\n\n/**\r\n * MultiFormatReader is a convenience class and the main entry point into the library for most uses.\r\n * By default it attempts to decode all barcode formats that the library supports. Optionally, you\r\n * can provide a hints object to request different behavior, for example only decoding QR codes.\r\n *\r\n * @author Sean Owen\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar MultiFormatReader =\n/** @class */\nfunction () {\n  function MultiFormatReader() {}\n  /**\r\n   * This version of decode honors the intent of Reader.decode(BinaryBitmap) in that it\r\n   * passes null as a hint to the decoders. However, that makes it inefficient to call repeatedly.\r\n   * Use setHints() followed by decodeWithState() for continuous scan applications.\r\n   *\r\n   * @param image The pixel data to decode\r\n   * @return The contents of the image\r\n   *\r\n   * @throws NotFoundException Any errors which occurred\r\n   */\n\n  /*@Override*/\n  // public decode(image: BinaryBitmap): Result {\n  //   setHints(null)\n  //   return decodeInternal(image)\n  // }\n\n  /**\r\n   * Decode an image using the hints provided. Does not honor existing state.\r\n   *\r\n   * @param image The pixel data to decode\r\n   * @param hints The hints to use, clearing the previous state.\r\n   * @return The contents of the image\r\n   *\r\n   * @throws NotFoundException Any errors which occurred\r\n   */\n\n  /*@Override*/\n\n\n  MultiFormatReader.prototype.decode = function (image, hints) {\n    this.setHints(hints);\n    return this.decodeInternal(image);\n  };\n  /**\r\n   * Decode an image using the state set up by calling setHints() previously. Continuous scan\r\n   * clients will get a <b>large</b> speed increase by using this instead of decode().\r\n   *\r\n   * @param image The pixel data to decode\r\n   * @return The contents of the image\r\n   *\r\n   * @throws NotFoundException Any errors which occurred\r\n   */\n\n\n  MultiFormatReader.prototype.decodeWithState = function (image) {\n    // Make sure to set up the default state so we don't crash\n    if (this.readers === null || this.readers === undefined) {\n      this.setHints(null);\n    }\n\n    return this.decodeInternal(image);\n  };\n  /**\r\n   * This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls\r\n   * to decodeWithState(image) can reuse the same set of readers without reallocating memory. This\r\n   * is important for performance in continuous scan clients.\r\n   *\r\n   * @param hints The set of hints to use for subsequent calls to decode(image)\r\n   */\n\n\n  MultiFormatReader.prototype.setHints = function (hints) {\n    this.hints = hints;\n    var tryHarder = hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType_1.default.TRY_HARDER);\n    /*@SuppressWarnings(\"unchecked\")*/\n\n    var formats = hints === null || hints === undefined ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n    var readers = new Array();\n\n    if (formats !== null && formats !== undefined) {\n      var addOneDReader = formats.some(function (f) {\n        return f === BarcodeFormat_1.default.UPC_A || f === BarcodeFormat_1.default.UPC_E || f === BarcodeFormat_1.default.EAN_13 || f === BarcodeFormat_1.default.EAN_8 || f === BarcodeFormat_1.default.CODABAR || f === BarcodeFormat_1.default.CODE_39 || f === BarcodeFormat_1.default.CODE_93 || f === BarcodeFormat_1.default.CODE_128 || f === BarcodeFormat_1.default.ITF || f === BarcodeFormat_1.default.RSS_14 || f === BarcodeFormat_1.default.RSS_EXPANDED;\n      }); // Put 1D readers upfront in \"normal\" mode\n      // TYPESCRIPTPORT: TODO: uncomment below as they are ported\n\n      if (addOneDReader && !tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n\n      if (formats.includes(BarcodeFormat_1.default.QR_CODE)) {\n        readers.push(new QRCodeReader_1.default());\n      }\n\n      if (formats.includes(BarcodeFormat_1.default.DATA_MATRIX)) {\n        readers.push(new DataMatrixReader_1.default());\n      } // if (formats.includes(BarcodeFormat.AZTEC)) {\n      //   readers.push(new AztecReader())\n      // }\n      // if (formats.includes(BarcodeFormat.PDF_417)) {\n      //    readers.push(new PDF417Reader())\n      // }\n      // if (formats.includes(BarcodeFormat.MAXICODE)) {\n      //    readers.push(new MaxiCodeReader())\n      // }\n      // At end in \"try harder\" mode\n\n\n      if (addOneDReader && tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n    }\n\n    if (readers.length === 0) {\n      if (!tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n\n      readers.push(new QRCodeReader_1.default());\n      readers.push(new DataMatrixReader_1.default()); // readers.push(new AztecReader())\n      // readers.push(new PDF417Reader())\n      // readers.push(new MaxiCodeReader())\n\n      if (tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n    }\n\n    this.readers = readers; // .toArray(new Reader[readers.size()])\n  };\n  /*@Override*/\n\n\n  MultiFormatReader.prototype.reset = function () {\n    if (this.readers !== null) {\n      for (var _i = 0, _a = this.readers; _i < _a.length; _i++) {\n        var reader = _a[_i];\n        reader.reset();\n      }\n    }\n  };\n  /**\r\n   * @throws NotFoundException\r\n   */\n\n\n  MultiFormatReader.prototype.decodeInternal = function (image) {\n    if (this.readers === null) {\n      throw new ReaderException_1.default('No readers where selected, nothing can be read.');\n    }\n\n    for (var _i = 0, _a = this.readers; _i < _a.length; _i++) {\n      var reader = _a[_i]; // Trying to decode with ${reader} reader.\n\n      try {\n        return reader.decode(image, this.hints);\n      } catch (ex) {\n        if (ex instanceof ReaderException_1.default) {\n          continue;\n        } // Bad Exception.\n\n      }\n    }\n\n    throw new NotFoundException_1.default('No MultiFormat Readers were able to detect the code.');\n  };\n\n  return MultiFormatReader;\n}();\n\nexports.default = MultiFormatReader;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exception_1 = require(\"./Exception\");\n/**\r\n * Custom Error class of type Exception.\r\n */\n\n\nvar ReaderException =\n/** @class */\nfunction (_super) {\n  __extends(ReaderException, _super);\n\n  function ReaderException() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return ReaderException;\n}(Exception_1.default);\n\nexports.default = ReaderException;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar EncodeHintType_1 = require(\"../EncodeHintType\");\n\nvar BitMatrix_1 = require(\"../common/BitMatrix\");\n\nvar ErrorCorrectionLevel_1 = require(\"./decoder/ErrorCorrectionLevel\");\n\nvar Encoder_1 = require(\"./encoder/Encoder\");\n\nvar IllegalArgumentException_1 = require(\"../IllegalArgumentException\");\n\nvar IllegalStateException_1 = require(\"../IllegalStateException\");\n/*import java.util.Map;*/\n\n/**\r\n * This object renders a QR Code as a BitMatrix 2D array of greyscale values.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar QRCodeWriter =\n/** @class */\nfunction () {\n  function QRCodeWriter() {}\n  /*@Override*/\n  // public encode(contents: string, format: BarcodeFormat, width: number /*int*/, height: number /*int*/): BitMatrix\n  //     /*throws WriterException */ {\n  //   return encode(contents, format, width, height, null)\n  // }\n\n  /*@Override*/\n\n\n  QRCodeWriter.prototype.encode = function (contents, format, width\n  /*int*/\n  , height\n  /*int*/\n  , hints) {\n    if (contents.length === 0) {\n      throw new IllegalArgumentException_1.default('Found empty contents');\n    }\n\n    if (format !== BarcodeFormat_1.default.QR_CODE) {\n      throw new IllegalArgumentException_1.default('Can only encode QR_CODE, but got ' + format);\n    }\n\n    if (width < 0 || height < 0) {\n      throw new IllegalArgumentException_1.default(\"Requested dimensions are too small: \" + width + \"x\" + height);\n    }\n\n    var errorCorrectionLevel = ErrorCorrectionLevel_1.default.L;\n    var quietZone = QRCodeWriter.QUIET_ZONE_SIZE;\n\n    if (hints !== null) {\n      if (undefined !== hints.get(EncodeHintType_1.default.ERROR_CORRECTION)) {\n        errorCorrectionLevel = ErrorCorrectionLevel_1.default.fromString(hints.get(EncodeHintType_1.default.ERROR_CORRECTION).toString());\n      }\n\n      if (undefined !== hints.get(EncodeHintType_1.default.MARGIN)) {\n        quietZone = Number.parseInt(hints.get(EncodeHintType_1.default.MARGIN).toString(), 10);\n      }\n    }\n\n    var code = Encoder_1.default.encode(contents, errorCorrectionLevel, hints);\n    return QRCodeWriter.renderResult(code, width, height, quietZone);\n  }; // Note that the input matrix uses 0 == white, 1 == black, while the output matrix uses\n  // 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n\n\n  QRCodeWriter.renderResult = function (code, width\n  /*int*/\n  , height\n  /*int*/\n  , quietZone\n  /*int*/\n  ) {\n    var input = code.getMatrix();\n\n    if (input === null) {\n      throw new IllegalStateException_1.default();\n    }\n\n    var inputWidth = input.getWidth();\n    var inputHeight = input.getHeight();\n    var qrWidth = inputWidth + quietZone * 2;\n    var qrHeight = inputHeight + quietZone * 2;\n    var outputWidth = Math.max(width, qrWidth);\n    var outputHeight = Math.max(height, qrHeight);\n    var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight)); // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n    // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n    // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n    // handle all the padding from 100x100 (the actual QR) up to 200x160.\n\n    var leftPadding = Math.floor((outputWidth - inputWidth * multiple) / 2);\n    var topPadding = Math.floor((outputHeight - inputHeight * multiple) / 2);\n    var output = new BitMatrix_1.default(outputWidth, outputHeight);\n\n    for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n      // Write the contents of this row of the barcode\n      for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n        if (input.get(inputX, inputY) === 1) {\n          output.setRegion(outputX, outputY, multiple, multiple);\n        }\n      }\n    }\n\n    return output;\n  };\n\n  QRCodeWriter.QUIET_ZONE_SIZE = 4;\n  return QRCodeWriter;\n}();\n\nexports.default = QRCodeWriter;","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _implementation = require('./implementation');\n\nvar _implementation2 = _interopRequireDefault(_implementation);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _react2.default.createContext || _implementation2.default;\nmodule.exports = exports['default'];","'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar ReactIs = require('react-is');\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n  if (ReactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"321\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.6\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = \"string\" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n\n    if (c) a = b.contentWindow;else break;\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"321\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n  c.lastRenderedReducer = a;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.lastRenderedState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.lastRenderedState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n      var l = b.lastRenderedState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: og,\n      lastRenderedState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                p = f;\n                e = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(p));\n                l === fe.html ? \"script\" === p ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof e.is ? k = k.createElement(p, {\n                  is: e.is\n                }) : (k = k.createElement(p), \"select\" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.6\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _gud = require('gud');\n\nvar _gud2 = _interopRequireDefault(_gud);\n\nvar _warning = require('fbjs/lib/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823; // Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    function Provider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Provider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits = void 0;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    Provider.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n  var Consumer = function (_Component2) {\n    _inherits(Consumer, _Component2);\n\n    function Consumer() {\n      var _temp2, _this2, _ret2;\n\n      _classCallCheck(this, Consumer);\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n        value: _this2.getValue()\n      }, _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n    }\n\n    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    Consumer.prototype.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    Consumer.prototype.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(_react.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nexports.default = createReactContext;\nmodule.exports = exports['default'];","// @flow\n'use strict';\n\nvar key = '__global_unique_id__';\n\nmodule.exports = function () {\n  return global[key] = (global[key] || 0) + 1;\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","/** @license React v16.8.6\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar b = \"function\" === typeof Symbol && Symbol.for,\n    c = b ? Symbol.for(\"react.element\") : 60103,\n    d = b ? Symbol.for(\"react.portal\") : 60106,\n    e = b ? Symbol.for(\"react.fragment\") : 60107,\n    f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n    g = b ? Symbol.for(\"react.profiler\") : 60114,\n    h = b ? Symbol.for(\"react.provider\") : 60109,\n    k = b ? Symbol.for(\"react.context\") : 60110,\n    l = b ? Symbol.for(\"react.async_mode\") : 60111,\n    m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n    p = b ? Symbol.for(\"react.suspense\") : 60113,\n    q = b ? Symbol.for(\"react.memo\") : 60115,\n    r = b ? Symbol.for(\"react.lazy\") : 60116;\n\nfunction t(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case r:\n      case q:\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction v(a) {\n  return t(a) === m;\n}\n\nexports.typeOf = t;\nexports.AsyncMode = l;\nexports.ConcurrentMode = m;\nexports.ContextConsumer = k;\nexports.ContextProvider = h;\nexports.Element = c;\nexports.ForwardRef = n;\nexports.Fragment = e;\nexports.Lazy = r;\nexports.Memo = q;\nexports.Portal = d;\nexports.Profiler = g;\nexports.StrictMode = f;\nexports.Suspense = p;\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || \"object\" === typeof a && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);\n};\n\nexports.isAsyncMode = function (a) {\n  return v(a) || t(a) === l;\n};\n\nexports.isConcurrentMode = v;\n\nexports.isContextConsumer = function (a) {\n  return t(a) === k;\n};\n\nexports.isContextProvider = function (a) {\n  return t(a) === h;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nexports.isForwardRef = function (a) {\n  return t(a) === n;\n};\n\nexports.isFragment = function (a) {\n  return t(a) === e;\n};\n\nexports.isLazy = function (a) {\n  return t(a) === r;\n};\n\nexports.isMemo = function (a) {\n  return t(a) === q;\n};\n\nexports.isPortal = function (a) {\n  return t(a) === d;\n};\n\nexports.isProfiler = function (a) {\n  return t(a) === g;\n};\n\nexports.isStrictMode = function (a) {\n  return t(a) === f;\n};\n\nexports.isSuspense = function (a) {\n  return t(a) === p;\n};","\"use strict\";\n\nvar Readable = require('stream').Readable;\n\nvar QR = require('./qr-base').QR;\n\nvar png = require('./png');\n\nvar vector = require('./vector');\n\nvar fn_noop = function fn_noop() {};\n\nvar BITMAP_OPTIONS = {\n  parse_url: false,\n  ec_level: 'M',\n  size: 5,\n  margin: 4,\n  customize: null\n};\nvar VECTOR_OPTIONS = {\n  parse_url: false,\n  ec_level: 'M',\n  margin: 1,\n  size: 0\n};\n\nfunction get_options(options, force_type) {\n  if (typeof options === 'string') {\n    options = {\n      'ec_level': options\n    };\n  } else {\n    options = options || {};\n  }\n\n  var _options = {\n    type: String(force_type || options.type || 'png').toLowerCase()\n  };\n  var defaults = _options.type == 'png' ? BITMAP_OPTIONS : VECTOR_OPTIONS;\n\n  for (var k in defaults) {\n    _options[k] = k in options ? options[k] : defaults[k];\n  }\n\n  return _options;\n}\n\nfunction qr_image(text, options) {\n  options = get_options(options);\n  var matrix = QR(text, options.ec_level, options.parse_url);\n  var stream = new Readable();\n  stream._read = fn_noop;\n\n  switch (options.type) {\n    case 'svg':\n    case 'pdf':\n    case 'eps':\n      process.nextTick(function () {\n        vector[options.type](matrix, stream, options.margin, options.size);\n      });\n      break;\n\n    case 'svgpath':\n      // deprecated, use svg_object method\n      process.nextTick(function () {\n        var obj = vector.svg_object(matrix, options.margin, options.size);\n        stream.push(obj.path);\n        stream.push(null);\n      });\n      break;\n\n    case 'png':\n    default:\n      process.nextTick(function () {\n        var bitmap = png.bitmap(matrix, options.size, options.margin);\n\n        if (options.customize) {\n          options.customize(bitmap);\n        }\n\n        png.png(bitmap, stream);\n      });\n  }\n\n  return stream;\n}\n\nfunction qr_image_sync(text, options) {\n  options = get_options(options);\n  var matrix = QR(text, options.ec_level, options.parse_url);\n  var stream = [];\n  var result;\n\n  switch (options.type) {\n    case 'svg':\n    case 'pdf':\n    case 'eps':\n      vector[options.type](matrix, stream, options.margin, options.size);\n      result = stream.filter(Boolean).join('');\n      break;\n\n    case 'png':\n    default:\n      var bitmap = png.bitmap(matrix, options.size, options.margin);\n\n      if (options.customize) {\n        options.customize(bitmap);\n      }\n\n      png.png(bitmap, stream);\n      result = Buffer.concat(stream.filter(Boolean));\n  }\n\n  return result;\n}\n\nfunction svg_object(text, options) {\n  options = get_options(options, 'svg');\n  var matrix = QR(text, options.ec_level);\n  return vector.svg_object(matrix, options.margin);\n}\n\nmodule.exports = {\n  matrix: QR,\n  image: qr_image,\n  imageSync: qr_image_sync,\n  svgObject: svg_object\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = {\n      data: v,\n      next: null\n    };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = {\n      data: v,\n      next: this.head\n    };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n\n    while (p = p.next) {\n      ret += s + p.data;\n    }\n\n    return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({\n      length: this.length\n    });\n    return this.constructor.name + ' ' + obj;\n  };\n}","var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;","(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);","/**\n * Module exports.\n */\nmodule.exports = deprecate;\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate(fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\n\nfunction config(name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n/*<replacement>*/\n\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","module.exports = require('./lib/_stream_writable.js');","module.exports = require('./lib/_stream_duplex.js');","module.exports = require('./readable').Transform;","module.exports = require('./readable').PassThrough;","\"use strict\";\n\nvar encode = require('./encode');\n\nvar calculateEC = require('./errorcode');\n\nvar matrix = require('./matrix');\n\nfunction _deepCopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nvar EC_LEVELS = ['L', 'M', 'Q', 'H']; // {{{1 Versions\n\nvar versions = [[], // there is no version 0\n// total number of codewords, (number of ec codewords, number of blocks) * ( L, M, Q, H )\n[26, 7, 1, 10, 1, 13, 1, 17, 1], [44, 10, 1, 16, 1, 22, 1, 28, 1], [70, 15, 1, 26, 1, 36, 2, 44, 2], [100, 20, 1, 36, 2, 52, 2, 64, 4], [134, 26, 1, 48, 2, 72, 4, 88, 4], // 5\n[172, 36, 2, 64, 4, 96, 4, 112, 4], [196, 40, 2, 72, 4, 108, 6, 130, 5], [242, 48, 2, 88, 4, 132, 6, 156, 6], [292, 60, 2, 110, 5, 160, 8, 192, 8], [346, 72, 4, 130, 5, 192, 8, 224, 8], // 10\n[404, 80, 4, 150, 5, 224, 8, 264, 11], [466, 96, 4, 176, 8, 260, 10, 308, 11], [532, 104, 4, 198, 9, 288, 12, 352, 16], [581, 120, 4, 216, 9, 320, 16, 384, 16], [655, 132, 6, 240, 10, 360, 12, 432, 18], // 15\n[733, 144, 6, 280, 10, 408, 17, 480, 16], [815, 168, 6, 308, 11, 448, 16, 532, 19], [901, 180, 6, 338, 13, 504, 18, 588, 21], [991, 196, 7, 364, 14, 546, 21, 650, 25], [1085, 224, 8, 416, 16, 600, 20, 700, 25], // 20\n[1156, 224, 8, 442, 17, 644, 23, 750, 25], [1258, 252, 9, 476, 17, 690, 23, 816, 34], [1364, 270, 9, 504, 18, 750, 25, 900, 30], [1474, 300, 10, 560, 20, 810, 27, 960, 32], [1588, 312, 12, 588, 21, 870, 29, 1050, 35], // 25\n[1706, 336, 12, 644, 23, 952, 34, 1110, 37], [1828, 360, 12, 700, 25, 1020, 34, 1200, 40], [1921, 390, 13, 728, 26, 1050, 35, 1260, 42], [2051, 420, 14, 784, 28, 1140, 38, 1350, 45], [2185, 450, 15, 812, 29, 1200, 40, 1440, 48], // 30\n[2323, 480, 16, 868, 31, 1290, 43, 1530, 51], [2465, 510, 17, 924, 33, 1350, 45, 1620, 54], [2611, 540, 18, 980, 35, 1440, 48, 1710, 57], [2761, 570, 19, 1036, 37, 1530, 51, 1800, 60], [2876, 570, 19, 1064, 38, 1590, 53, 1890, 63], // 35\n[3034, 600, 20, 1120, 40, 1680, 56, 1980, 66], [3196, 630, 21, 1204, 43, 1770, 59, 2100, 70], [3362, 660, 22, 1260, 45, 1860, 62, 2220, 74], [3532, 720, 24, 1316, 47, 1950, 65, 2310, 77], [3706, 750, 25, 1372, 49, 2040, 68, 2430, 81] // 40\n];\nversions = versions.map(function (v, index) {\n  if (!index) return {};\n  var res = {};\n\n  for (var i = 1; i < 8; i += 2) {\n    var length = v[0] - v[i];\n    var num_template = v[i + 1];\n    var ec_level = EC_LEVELS[i / 2 | 0];\n    var level = {\n      version: index,\n      ec_level: ec_level,\n      data_len: length,\n      ec_len: v[i] / num_template,\n      blocks: [],\n      ec: []\n    };\n\n    for (var k = num_template, n = length; k > 0; k--) {\n      var block = n / k | 0;\n      level.blocks.push(block);\n      n -= block;\n    }\n\n    res[ec_level] = level;\n  }\n\n  return res;\n}); // {{{1 Get version template\n\nfunction getTemplate(message, ec_level) {\n  var i = 1;\n  var len;\n\n  if (message.data1) {\n    len = Math.ceil(message.data1.length / 8);\n  } else {\n    i = 10;\n  }\n\n  for (;\n  /* i */\n  i < 10; i++) {\n    var version = versions[i][ec_level];\n\n    if (version.data_len >= len) {\n      return _deepCopy(version);\n    }\n  }\n\n  if (message.data10) {\n    len = Math.ceil(message.data10.length / 8);\n  } else {\n    i = 27;\n  }\n\n  for (;\n  /* i */\n  i < 27; i++) {\n    var version = versions[i][ec_level];\n\n    if (version.data_len >= len) {\n      return _deepCopy(version);\n    }\n  }\n\n  len = Math.ceil(message.data27.length / 8);\n\n  for (;\n  /* i */\n  i < 41; i++) {\n    var version = versions[i][ec_level];\n\n    if (version.data_len >= len) {\n      return _deepCopy(version);\n    }\n  }\n\n  throw new Error(\"Too much data\");\n} // {{{1 Fill template\n\n\nfunction fillTemplate(message, template) {\n  var blocks = new Buffer(template.data_len);\n  blocks.fill(0);\n\n  if (template.version < 10) {\n    message = message.data1;\n  } else if (template.version < 27) {\n    message = message.data10;\n  } else {\n    message = message.data27;\n  }\n\n  var len = message.length;\n\n  for (var i = 0; i < len; i += 8) {\n    var b = 0;\n\n    for (var j = 0; j < 8; j++) {\n      b = b << 1 | (message[i + j] ? 1 : 0);\n    }\n\n    blocks[i / 8] = b;\n  }\n\n  var pad = 236;\n\n  for (var i = Math.ceil((len + 4) / 8); i < blocks.length; i++) {\n    blocks[i] = pad;\n    pad = pad == 236 ? 17 : 236;\n  }\n\n  var offset = 0;\n  template.blocks = template.blocks.map(function (n) {\n    var b = blocks.slice(offset, offset + n);\n    offset += n;\n    template.ec.push(calculateEC(b, template.ec_len));\n    return b;\n  });\n  return template;\n} // {{{1 All-in-one\n\n\nfunction QR(text, ec_level, parse_url) {\n  ec_level = EC_LEVELS.indexOf(ec_level) > -1 ? ec_level : 'M';\n  var message = encode(text, parse_url);\n  var data = fillTemplate(message, getTemplate(message, ec_level));\n  return matrix.getMatrix(data);\n} // {{{1 export functions\n\n\nmodule.exports = {\n  QR: QR,\n  getTemplate: getTemplate,\n  fillTemplate: fillTemplate\n};","\"use strict\";\n\nfunction pushBits(arr, n, value) {\n  for (var bit = 1 << n - 1; bit; bit = bit >>> 1) {\n    arr.push(bit & value ? 1 : 0);\n  }\n} // {{{1 8bit encode\n\n\nfunction encode_8bit(data) {\n  var len = data.length;\n  var bits = [];\n\n  for (var i = 0; i < len; i++) {\n    pushBits(bits, 8, data[i]);\n  }\n\n  var res = {};\n  var d = [0, 1, 0, 0];\n  pushBits(d, 16, len);\n  res.data10 = res.data27 = d.concat(bits);\n\n  if (len < 256) {\n    var d = [0, 1, 0, 0];\n    pushBits(d, 8, len);\n    res.data1 = d.concat(bits);\n  }\n\n  return res;\n} // {{{1 alphanumeric encode\n\n\nvar ALPHANUM = function (s) {\n  var res = {};\n\n  for (var i = 0; i < s.length; i++) {\n    res[s[i]] = i;\n  }\n\n  return res;\n}('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:');\n\nfunction encode_alphanum(str) {\n  var len = str.length;\n  var bits = [];\n\n  for (var i = 0; i < len; i += 2) {\n    var b = 6;\n    var n = ALPHANUM[str[i]];\n\n    if (str[i + 1]) {\n      b = 11;\n      n = n * 45 + ALPHANUM[str[i + 1]];\n    }\n\n    pushBits(bits, b, n);\n  }\n\n  var res = {};\n  var d = [0, 0, 1, 0];\n  pushBits(d, 13, len);\n  res.data27 = d.concat(bits);\n\n  if (len < 2048) {\n    var d = [0, 0, 1, 0];\n    pushBits(d, 11, len);\n    res.data10 = d.concat(bits);\n  }\n\n  if (len < 512) {\n    var d = [0, 0, 1, 0];\n    pushBits(d, 9, len);\n    res.data1 = d.concat(bits);\n  }\n\n  return res;\n} // {{{1 numeric encode\n\n\nfunction encode_numeric(str) {\n  var len = str.length;\n  var bits = [];\n\n  for (var i = 0; i < len; i += 3) {\n    var s = str.substr(i, 3);\n    var b = Math.ceil(s.length * 10 / 3);\n    pushBits(bits, b, parseInt(s, 10));\n  }\n\n  var res = {};\n  var d = [0, 0, 0, 1];\n  pushBits(d, 14, len);\n  res.data27 = d.concat(bits);\n\n  if (len < 4096) {\n    var d = [0, 0, 0, 1];\n    pushBits(d, 12, len);\n    res.data10 = d.concat(bits);\n  }\n\n  if (len < 1024) {\n    var d = [0, 0, 0, 1];\n    pushBits(d, 10, len);\n    res.data1 = d.concat(bits);\n  }\n\n  return res;\n} // {{{1 url encode\n\n\nfunction encode_url(str) {\n  var slash = str.indexOf('/', 8) + 1 || str.length;\n  var res = encode(str.slice(0, slash).toUpperCase(), false);\n\n  if (slash >= str.length) {\n    return res;\n  }\n\n  var path_res = encode(str.slice(slash), false);\n  res.data27 = res.data27.concat(path_res.data27);\n\n  if (res.data10 && path_res.data10) {\n    res.data10 = res.data10.concat(path_res.data10);\n  }\n\n  if (res.data1 && path_res.data1) {\n    res.data1 = res.data1.concat(path_res.data1);\n  }\n\n  return res;\n} // {{{1 Choose encode mode and generates struct with data for different version\n\n\nfunction encode(data, parse_url) {\n  var str;\n  var t = typeof data;\n\n  if (t == 'string' || t == 'number') {\n    str = '' + data;\n    data = new Buffer(str);\n  } else if (Buffer.isBuffer(data)) {\n    str = data.toString();\n  } else if (Array.isArray(data)) {\n    data = new Buffer(data);\n    str = data.toString();\n  } else {\n    throw new Error(\"Bad data\");\n  }\n\n  if (/^[0-9]+$/.test(str)) {\n    if (data.length > 7089) {\n      throw new Error(\"Too much data\");\n    }\n\n    return encode_numeric(str);\n  }\n\n  if (/^[0-9A-Z \\$%\\*\\+\\.\\/\\:\\-]+$/.test(str)) {\n    if (data.length > 4296) {\n      throw new Error(\"Too much data\");\n    }\n\n    return encode_alphanum(str);\n  }\n\n  if (parse_url && /^https?:/i.test(str)) {\n    return encode_url(str);\n  }\n\n  if (data.length > 2953) {\n    throw new Error(\"Too much data\");\n  }\n\n  return encode_8bit(data);\n} // {{{1 export functions\n\n\nmodule.exports = encode;","\"use strict\"; // {{{1 Galois Field Math\n\nvar GF256_BASE = 285;\nvar EXP_TABLE = [1];\nvar LOG_TABLE = [];\n\nfor (var i = 1; i < 256; i++) {\n  var n = EXP_TABLE[i - 1] << 1;\n  if (n > 255) n = n ^ GF256_BASE;\n  EXP_TABLE[i] = n;\n}\n\nfor (var i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nfunction exp(k) {\n  while (k < 0) {\n    k += 255;\n  }\n\n  while (k > 255) {\n    k -= 255;\n  }\n\n  return EXP_TABLE[k];\n}\n\nfunction log(k) {\n  if (k < 1 || k > 255) {\n    throw Error('Bad log(' + k + ')');\n  }\n\n  return LOG_TABLE[k];\n} // {{{1 Generator Polynomials\n\n\nvar POLYNOMIALS = [[0], // a^0 x^0\n[0, 0], // a^0 x^1 + a^0 x^0\n[0, 25, 1]];\n\nfunction generatorPolynomial(num) {\n  if (POLYNOMIALS[num]) {\n    return POLYNOMIALS[num];\n  }\n\n  var prev = generatorPolynomial(num - 1);\n  var res = [];\n  res[0] = prev[0];\n\n  for (var i = 1; i <= num; i++) {\n    res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\n  }\n\n  POLYNOMIALS[num] = res;\n  return res;\n} // {{{1 export functions\n\n\nmodule.exports = function calculate_ec(msg, ec_len) {\n  // `msg` could be array or buffer\n  // convert `msg` to array\n  msg = [].slice.call(msg); // Generator Polynomial\n\n  var poly = generatorPolynomial(ec_len);\n\n  for (var i = 0; i < ec_len; i++) {\n    msg.push(0);\n  }\n\n  while (msg.length > ec_len) {\n    if (!msg[0]) {\n      msg.shift();\n      continue;\n    }\n\n    var log_k = log(msg[0]);\n\n    for (var i = 0; i <= ec_len; i++) {\n      msg[i] = msg[i] ^ exp(poly[i] + log_k);\n    }\n\n    msg.shift();\n  }\n\n  return new Buffer(msg);\n};","\"use strict\"; // {{{1 Initialize matrix with zeros\n\nfunction init(version) {\n  var N = version * 4 + 17;\n  var matrix = [];\n  var zeros = new Buffer(N);\n  zeros.fill(0);\n  zeros = [].slice.call(zeros);\n\n  for (var i = 0; i < N; i++) {\n    matrix[i] = zeros.slice();\n  }\n\n  return matrix;\n} // {{{1 Put finders into matrix\n\n\nfunction fillFinders(matrix) {\n  var N = matrix.length;\n\n  for (var i = -3; i <= 3; i++) {\n    for (var j = -3; j <= 3; j++) {\n      var max = Math.max(i, j);\n      var min = Math.min(i, j);\n      var pixel = max == 2 && min >= -2 || min == -2 && max <= 2 ? 0x80 : 0x81;\n      matrix[3 + i][3 + j] = pixel;\n      matrix[3 + i][N - 4 + j] = pixel;\n      matrix[N - 4 + i][3 + j] = pixel;\n    }\n  }\n\n  for (var i = 0; i < 8; i++) {\n    matrix[7][i] = matrix[i][7] = matrix[7][N - i - 1] = matrix[i][N - 8] = matrix[N - 8][i] = matrix[N - 1 - i][7] = 0x80;\n  }\n} // {{{1 Put align and timinig\n\n\nfunction fillAlignAndTiming(matrix) {\n  var N = matrix.length;\n\n  if (N > 21) {\n    var len = N - 13;\n    var delta = Math.round(len / Math.ceil(len / 28));\n    if (delta % 2) delta++;\n    var res = [];\n\n    for (var p = len + 6; p > 10; p -= delta) {\n      res.unshift(p);\n    }\n\n    res.unshift(6);\n\n    for (var i = 0; i < res.length; i++) {\n      for (var j = 0; j < res.length; j++) {\n        var x = res[i],\n            y = res[j];\n        if (matrix[x][y]) continue;\n\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            var max = Math.max(r, c);\n            var min = Math.min(r, c);\n            var pixel = max == 1 && min >= -1 || min == -1 && max <= 1 ? 0x80 : 0x81;\n            matrix[x + r][y + c] = pixel;\n          }\n        }\n      }\n    }\n  }\n\n  for (var i = 8; i < N - 8; i++) {\n    matrix[6][i] = matrix[i][6] = i % 2 ? 0x80 : 0x81;\n  }\n} // {{{1 Fill reserved areas with zeroes\n\n\nfunction fillStub(matrix) {\n  var N = matrix.length;\n\n  for (var i = 0; i < 8; i++) {\n    if (i != 6) {\n      matrix[8][i] = matrix[i][8] = 0x80;\n    }\n\n    matrix[8][N - 1 - i] = 0x80;\n    matrix[N - 1 - i][8] = 0x80;\n  }\n\n  matrix[8][8] = 0x80;\n  matrix[N - 8][8] = 0x81;\n  if (N < 45) return;\n\n  for (var i = N - 11; i < N - 8; i++) {\n    for (var j = 0; j < 6; j++) {\n      matrix[i][j] = matrix[j][i] = 0x80;\n    }\n  }\n} // {{{1 Fill reserved areas\n\n\nvar fillReserved = function () {\n  var FORMATS = Array(32);\n  var VERSIONS = Array(40);\n  var gf15 = 0x0537;\n  var gf18 = 0x1f25;\n  var formats_mask = 0x5412;\n\n  for (var format = 0; format < 32; format++) {\n    var res = format << 10;\n\n    for (var i = 5; i > 0; i--) {\n      if (res >>> 9 + i) {\n        res = res ^ gf15 << i - 1;\n      }\n    }\n\n    FORMATS[format] = (res | format << 10) ^ formats_mask;\n  }\n\n  for (var version = 7; version <= 40; version++) {\n    var res = version << 12;\n\n    for (var i = 6; i > 0; i--) {\n      if (res >>> 11 + i) {\n        res = res ^ gf18 << i - 1;\n      }\n    }\n\n    VERSIONS[version] = res | version << 12;\n  }\n\n  var EC_LEVELS = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  };\n  return function fillReserved(matrix, ec_level, mask) {\n    var N = matrix.length;\n    var format = FORMATS[EC_LEVELS[ec_level] << 3 | mask];\n\n    function F(k) {\n      return format >> k & 1 ? 0x81 : 0x80;\n    }\n\n    ;\n\n    for (var i = 0; i < 8; i++) {\n      matrix[8][N - 1 - i] = F(i);\n      if (i < 6) matrix[i][8] = F(i);\n    }\n\n    for (var i = 8; i < 15; i++) {\n      matrix[N - 15 + i][8] = F(i);\n      if (i > 8) matrix[8][14 - i] = F(i);\n    }\n\n    matrix[7][8] = F(6);\n    matrix[8][8] = F(7);\n    matrix[8][7] = F(8);\n    var version = VERSIONS[(N - 17) / 4];\n    if (!version) return;\n\n    function V(k) {\n      return version >> k & 1 ? 0x81 : 0x80;\n    }\n\n    ;\n\n    for (var i = 0; i < 6; i++) {\n      for (var j = 0; j < 3; j++) {\n        matrix[N - 11 + j][i] = matrix[i][N - 11 + j] = V(i * 3 + j);\n      }\n    }\n  };\n}(); // {{{1 Fill data\n\n\nvar fillData = function () {\n  var MASK_FUNCTIONS = [function (i, j) {\n    return (i + j) % 2 == 0;\n  }, function (i, j) {\n    return i % 2 == 0;\n  }, function (i, j) {\n    return j % 3 == 0;\n  }, function (i, j) {\n    return (i + j) % 3 == 0;\n  }, function (i, j) {\n    return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n  }, function (i, j) {\n    return i * j % 2 + i * j % 3 == 0;\n  }, function (i, j) {\n    return (i * j % 2 + i * j % 3) % 2 == 0;\n  }, function (i, j) {\n    return (i * j % 3 + (i + j) % 2) % 2 == 0;\n  }];\n  return function fillData(matrix, data, mask) {\n    var N = matrix.length;\n    var row,\n        col,\n        dir = -1;\n    row = col = N - 1;\n    var mask_fn = MASK_FUNCTIONS[mask];\n    var len = data.blocks[data.blocks.length - 1].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var b = 0; b < data.blocks.length; b++) {\n        if (data.blocks[b].length <= i) continue;\n        put(data.blocks[b][i]);\n      }\n    }\n\n    len = data.ec_len;\n\n    for (var i = 0; i < len; i++) {\n      for (var b = 0; b < data.ec.length; b++) {\n        put(data.ec[b][i]);\n      }\n    }\n\n    if (col > -1) {\n      do {\n        matrix[row][col] = mask_fn(row, col) ? 1 : 0;\n      } while (next());\n    }\n\n    function put(_byte) {\n      for (var mask = 0x80; mask; mask = mask >> 1) {\n        var pixel = !!(mask & _byte);\n        if (mask_fn(row, col)) pixel = !pixel;\n        matrix[row][col] = pixel ? 1 : 0;\n        next();\n      }\n    }\n\n    function next() {\n      do {\n        if (col % 2 ^ col < 6) {\n          if (dir < 0 && row == 0 || dir > 0 && row == N - 1) {\n            col--;\n            dir = -dir;\n          } else {\n            col++;\n            row += dir;\n          }\n        } else {\n          col--;\n        }\n\n        if (col == 6) {\n          col--;\n        }\n\n        if (col < 0) {\n          return false;\n        }\n      } while (matrix[row][col] & 0xf0);\n\n      return true;\n    }\n  };\n}(); // {{{1 Calculate penalty\n\n\nfunction calculatePenalty(matrix) {\n  var N = matrix.length;\n  var penalty = 0; // Rule 1\n\n  for (var i = 0; i < N; i++) {\n    var pixel = matrix[i][0] & 1;\n    var len = 1;\n\n    for (var j = 1; j < N; j++) {\n      var p = matrix[i][j] & 1;\n\n      if (p == pixel) {\n        len++;\n        continue;\n      }\n\n      if (len >= 5) {\n        penalty += len - 2;\n      }\n\n      pixel = p;\n      len = 1;\n    }\n\n    if (len >= 5) {\n      penalty += len - 2;\n    }\n  }\n\n  for (var j = 0; j < N; j++) {\n    var pixel = matrix[0][j] & 1;\n    var len = 1;\n\n    for (var i = 1; i < N; i++) {\n      var p = matrix[i][j] & 1;\n\n      if (p == pixel) {\n        len++;\n        continue;\n      }\n\n      if (len >= 5) {\n        penalty += len - 2;\n      }\n\n      pixel = p;\n      len = 1;\n    }\n\n    if (len >= 5) {\n      penalty += len - 2;\n    }\n  } // Rule 2\n\n\n  for (var i = 0; i < N - 1; i++) {\n    for (var j = 0; j < N - 1; j++) {\n      var s = matrix[i][j] + matrix[i][j + 1] + matrix[i + 1][j] + matrix[i + 1][j + 1] & 7;\n\n      if (s == 0 || s == 4) {\n        penalty += 3;\n      }\n    }\n  } // Rule 3\n\n\n  function I(k) {\n    return matrix[i][j + k] & 1;\n  }\n\n  ;\n\n  function J(k) {\n    return matrix[i + k][j] & 1;\n  }\n\n  ;\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (j < N - 6 && I(0) && !I(1) && I(2) && I(3) && I(4) && !I(5) && I(6)) {\n        if (j >= 4 && !(I(-4) || I(-3) || I(-2) || I(-1))) {\n          penalty += 40;\n        }\n\n        if (j < N - 10 && !(I(7) || I(8) || I(9) || I(10))) {\n          penalty += 40;\n        }\n      }\n\n      if (i < N - 6 && J(0) && !J(1) && J(2) && J(3) && J(4) && !J(5) && J(6)) {\n        if (i >= 4 && !(J(-4) || J(-3) || J(-2) || J(-1))) {\n          penalty += 40;\n        }\n\n        if (i < N - 10 && !(J(7) || J(8) || J(9) || J(10))) {\n          penalty += 40;\n        }\n      }\n    }\n  } // Rule 4\n\n\n  var numDark = 0;\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (matrix[i][j] & 1) numDark++;\n    }\n  }\n\n  penalty += 10 * Math.floor(Math.abs(10 - 20 * numDark / (N * N)));\n  return penalty;\n} // {{{1 All-in-one function\n\n\nfunction getMatrix(data) {\n  var matrix = init(data.version);\n  fillFinders(matrix);\n  fillAlignAndTiming(matrix);\n  fillStub(matrix);\n  var penalty = Infinity;\n  var bestMask = 0;\n\n  for (var mask = 0; mask < 8; mask++) {\n    fillData(matrix, data, mask);\n    fillReserved(matrix, data.ec_level, mask);\n    var p = calculatePenalty(matrix);\n\n    if (p < penalty) {\n      penalty = p;\n      bestMask = mask;\n    }\n  }\n\n  fillData(matrix, data, bestMask);\n  fillReserved(matrix, data.ec_level, bestMask);\n  return matrix.map(function (row) {\n    return row.map(function (cell) {\n      return cell & 1;\n    });\n  });\n} // {{{1 export functions\n\n\nmodule.exports = {\n  getMatrix: getMatrix,\n  init: init,\n  fillFinders: fillFinders,\n  fillAlignAndTiming: fillAlignAndTiming,\n  fillStub: fillStub,\n  fillReserved: fillReserved,\n  fillData: fillData,\n  calculatePenalty: calculatePenalty\n};","\"use strict\";\n\nvar zlib = require('zlib');\n\nvar crc32 = require('./crc32');\n\nvar PNG_HEAD = new Buffer([137, 80, 78, 71, 13, 10, 26, 10]);\nvar PNG_IHDR = new Buffer([0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar PNG_IDAT = new Buffer([0, 0, 0, 0, 73, 68, 65, 84]);\nvar PNG_IEND = new Buffer([0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]);\n\nfunction png(bitmap, stream) {\n  stream.push(PNG_HEAD);\n  var IHDR = Buffer.concat([PNG_IHDR]);\n  IHDR.writeUInt32BE(bitmap.size, 8);\n  IHDR.writeUInt32BE(bitmap.size, 12);\n  IHDR.writeUInt32BE(crc32(IHDR.slice(4, -4)), 21);\n  stream.push(IHDR);\n  var IDAT = Buffer.concat([PNG_IDAT, zlib.deflateSync(bitmap.data, {\n    level: 9\n  }), new Buffer(4)]);\n  IDAT.writeUInt32BE(IDAT.length - 12, 0);\n  IDAT.writeUInt32BE(crc32(IDAT.slice(4, -4)), IDAT.length - 4);\n  stream.push(IDAT);\n  stream.push(PNG_IEND);\n  stream.push(null);\n}\n\nfunction bitmap(matrix, size, margin) {\n  var N = matrix.length;\n  var X = (N + 2 * margin) * size;\n  var data = new Buffer((X + 1) * X);\n  data.fill(255);\n\n  for (var i = 0; i < X; i++) {\n    data[i * (X + 1)] = 0;\n  }\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (matrix[i][j]) {\n        var offset = ((margin + i) * (X + 1) + (margin + j)) * size + 1;\n        data.fill(0, offset, offset + size);\n\n        for (var c = 1; c < size; c++) {\n          data.copy(data, offset + c * (X + 1), offset, offset + size);\n        }\n      }\n    }\n  }\n\n  return {\n    data: data,\n    size: X\n  };\n}\n\nmodule.exports = {\n  bitmap: bitmap,\n  png: png\n};","'use strict';\n\nvar Buffer = require('buffer').Buffer;\n\nvar Transform = require('stream').Transform;\n\nvar binding = require('./binding');\n\nvar util = require('util');\n\nvar assert = require('assert').ok;\n\nvar kMaxLength = require('buffer').kMaxLength;\n\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes'; // zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\n\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15; // fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\n\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION; // expose all the zlib constants\n\nvar bkeys = Object.keys(binding);\n\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true,\n      value: binding[bkey],\n      writable: false\n    });\n  }\n} // translation table for return codes.\n\n\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\nvar ckeys = Object.keys(codes);\n\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true,\n  value: Object.freeze(codes),\n  writable: false\n});\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n}; // Convenience methods.\n// compress/decompress a string or buffer in one step.\n\n\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n  var flushFlag = engine._finishFlushFlag;\n  return engine._processChunk(buffer, flushFlag);\n} // generic zlib\n// minimal 2-byte header\n\n\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n} // gzip - bigger header, same deflate compression\n\n\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n} // raw - no header\n\n\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n} // auto-detect header.\n\n\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n} // the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n  var self = this;\n  this._hadError = false;\n\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n\n    self._hadError = true;\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n  this.once('end', this.close);\n  Object.defineProperty(this, '_closed', {\n    get: function get() {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n\n      self._handle.params(level, strategy);\n\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n}; // This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\n\n\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback); // Caller may invoke .close after a zlib error (which will null _handle).\n\n  if (!engine._handle) return;\n\n  engine._handle.close();\n\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n  if (!this._handle) return cb(new Error('zlib binding closed')); // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag; // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n  var self = this;\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n    assert(this._handle, 'zlib binding closed');\n\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n\n      self._offset += have; // serve some output to the consumer.\n\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    } // exhausted the output buffer, or used all the input create a new one.\n\n\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n\n      newReq.callback = callback; // this same function\n\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false; // finished with the chunk.\n\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\n\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\n\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\n\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n} // zlib modes\n\n\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\n\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n  this.write_in_progress = true;\n  assert.equal(false, flush === undefined, 'must provide flush value');\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n\n    return;\n  } // async version\n\n\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n\n    self._after();\n  });\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n  this.write_in_progress = false;\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null; // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush // If data was encoded with dictionary\n      );\n\n      if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n\n      break;\n\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n\n        return false;\n      }\n\n      break;\n\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n\n      return false;\n\n    default:\n      // something else.\n      this._error('Zlib error');\n\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n  this.write_in_progress = false; // call the write() cb\n\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n\n  this.onerror(message, this.err // no hope of rescue.\n  );\n  this.write_in_progress = false;\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n  this.flush = exports.Z_NO_FLUSH;\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n\n  this.next_in = 0;\n  /* number of bytes available at input */\n\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n\n  this.total_in = 0;\n  /* next output byte should be put there */\n\n  this.output = null; // JS specific, because we have no pointers\n\n  this.next_out = 0;\n  /* remaining free space at output */\n\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n\n  this.msg = ''\n  /*Z_NULL*/\n  ;\n  /* not visible by applications */\n\n  this.state = null;\n  /* best guess about the data type: binary or text */\n\n  this.data_type = 2\n  /*Z_UNKNOWN*/\n  ;\n  /* adler32 value of the uncompressed data */\n\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar trees = require('./trees');\n\nvar adler32 = require('./adler32');\n\nvar crc32 = require('./crc32');\n\nvar msg = require('./messages');\n/* Public constants ==========================================================*/\n\n/* ===========================================================================*/\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n\n\nvar Z_NO_FLUSH = 0;\nvar Z_PARTIAL_FLUSH = 1; //var Z_SYNC_FLUSH    = 2;\n\nvar Z_FULL_FLUSH = 3;\nvar Z_FINISH = 4;\nvar Z_BLOCK = 5; //var Z_TREES         = 6;\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\n\nvar Z_OK = 0;\nvar Z_STREAM_END = 1; //var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\n\nvar Z_STREAM_ERROR = -2;\nvar Z_DATA_ERROR = -3; //var Z_MEM_ERROR     = -4;\n\nvar Z_BUF_ERROR = -5; //var Z_VERSION_ERROR = -6;\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\n\nvar Z_DEFAULT_COMPRESSION = -1;\nvar Z_FILTERED = 1;\nvar Z_HUFFMAN_ONLY = 2;\nvar Z_RLE = 3;\nvar Z_FIXED = 4;\nvar Z_DEFAULT_STRATEGY = 0;\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\n\nvar Z_UNKNOWN = 2;\n/* The deflate compression method */\n\nvar Z_DEFLATED = 8;\n/*============================================================================*/\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\n\nvar DEF_MEM_LEVEL = 8;\nvar LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES = 30;\n/* number of distance codes */\n\nvar BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1;\nvar PRESET_DICT = 0x20;\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\nvar BS_NEED_MORE = 1;\n/* block not completed, need more input or more output */\n\nvar BS_BLOCK_DONE = 2;\n/* block flush performed */\n\nvar BS_FINISH_STARTED = 3;\n/* finish started, need only more output at next deflate */\n\nvar BS_FINISH_DONE = 4;\n/* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return (f << 1) - (f > 4 ? 9 : 0);\n}\n\nfunction zero(buf) {\n  var len = buf.length;\n\n  while (--len >= 0) {\n    buf[len] = 0;\n  }\n}\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\n\n\nfunction flush_pending(strm) {\n  var s = strm.state; //_tr_flush_bits(s);\n\n  var len = s.pending;\n\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, s.block_start >= 0 ? s.block_start : -1, s.strstart - s.block_start, last);\n\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\n\n\nfunction putShortMSB(s, b) {\n  //  put_byte(s, (Byte)(b >> 8));\n  //  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = b >>> 8 & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\n\n\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) {\n    len = size;\n  }\n\n  if (len === 0) {\n    return 0;\n  }\n\n  strm.avail_in -= len; // zmemcpy(buf, strm->next_in, len);\n\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  } else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n  return len;\n}\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\n\n\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;\n  /* max hash chain length */\n\n  var scan = s.strstart;\n  /* current string */\n\n  var match;\n  /* matched string */\n\n  var len;\n  /* length of current match */\n\n  var best_len = s.prev_length;\n  /* best match length so far */\n\n  var nice_match = s.nice_match;\n  /* stop if match long enough */\n\n  var limit = s.strstart > s.w_size - MIN_LOOKAHEAD ? s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0\n  /*NIL*/\n  ;\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev = s.prev;\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1 = _win[scan + best_len - 1];\n  var scan_end = _win[scan + best_len];\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n\n\n  if (nice_match > s.lookahead) {\n    nice_match = s.lookahead;\n  } // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) {\n      continue;\n    }\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n\n\n    scan += 2;\n    match++; // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend); // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n\n      if (len >= nice_match) {\n        break;\n      }\n\n      scan_end1 = _win[scan + best_len - 1];\n      scan_end = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n\n  return s.lookahead;\n}\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\n\n\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str; //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart; // JS ints have 32 bit, block below not needed\n\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n\n      s.block_start -= _w_size;\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = m >= _w_size ? m - _w_size : 0;\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = m >= _w_size ? m - _w_size : 0;\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n\n\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n    /* Initialize the hash value now that we have some input: */\n\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + 1]) & s.hash_mask; //#if MIN_MATCH != 3\n      //        Call update_hash() MIN_MATCH-3 more times\n      //#endif\n\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n  //  if (s.high_water < s.window_size) {\n  //    var curr = s.strstart + s.lookahead;\n  //    var init = 0;\n  //\n  //    if (s.high_water < curr) {\n  //      /* Previous high water mark below current data -- zero WIN_INIT\n  //       * bytes or up to end of window, whichever is less.\n  //       */\n  //      init = s.window_size - curr;\n  //      if (init > WIN_INIT)\n  //        init = WIN_INIT;\n  //      zmemzero(s->window + curr, (unsigned)init);\n  //      s->high_water = curr + init;\n  //    }\n  //    else if (s->high_water < (ulg)curr + WIN_INIT) {\n  //      /* High water mark at or above current data, but below current data\n  //       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n  //       * to end of window, whichever is less.\n  //       */\n  //      init = (ulg)curr + WIN_INIT - s->high_water;\n  //      if (init > s->window_size - s->high_water)\n  //        init = s->window_size - s->high_water;\n  //      zmemzero(s->window + s->high_water, (unsigned)init);\n  //      s->high_water += init;\n  //    }\n  //  }\n  //\n  //  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n  //    \"not enough room for search\");\n\n}\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\n\n\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n  /* Copy as much as possible from input to output: */\n\n\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n      //      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n      //        s.block_start >= s.w_size)) {\n      //        throw  new Error(\"slide too late\");\n      //      }\n      fill_window(s);\n\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n\n    } //Assert(s->block_start >= 0L, \"block gone\");\n    //    if (s.block_start < 0) throw new Error(\"block gone\");\n\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n    /* Emit a stored block if pending_buf will be full: */\n\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n\n      flush_block_only(s, false);\n\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n\n\n    if (s.strstart - s.block_start >= s.w_size - MIN_LOOKAHEAD) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n\n\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n\n  }\n\n  return BS_NEED_MORE;\n}\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\n\n\nfunction deflate_fast(s, flush) {\n  var hash_head;\n  /* head of the hash chain */\n\n  var bflush;\n  /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n        /* flush the current block */\n      }\n    }\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n\n\n    hash_head = 0\n    /*NIL*/\n    ;\n\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n\n\n    if (hash_head !== 0\n    /*NIL*/\n    && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n      s.lookahead -= s.match_length;\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n\n      if (s.match_length <= s.max_lazy_match\n      /*max_insert_length*/\n      && s.lookahead >= MIN_MATCH) {\n        s.match_length--;\n        /* string at strstart already in table */\n\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n\n          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n\n        s.strstart++;\n      } else {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n\n        s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + 1]) & s.hash_mask; //#if MIN_MATCH != 3\n        //                Call UPDATE_HASH() MIN_MATCH-3 more times\n        //#endif\n\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n      s.lookahead--;\n      s.strstart++;\n    }\n\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n    }\n  }\n\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n\n\n    return BS_FINISH_DONE;\n  }\n\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n\n  }\n\n  return BS_BLOCK_DONE;\n}\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\n\n\nfunction deflate_slow(s, flush) {\n  var hash_head;\n  /* head of hash chain */\n\n  var bflush;\n  /* set if current block must be flushed */\n\n  var max_insert;\n  /* Process the input block. */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n\n    }\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n\n\n    hash_head = 0\n    /*NIL*/\n    ;\n\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n    /* Find the longest match, discarding those <= prev_length.\n     */\n\n\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0\n    /*NIL*/\n    && s.prev_length < s.max_lazy_match && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD\n    /*MAX_DIST(s)*/\n    ) {\n        /* To simplify the code, we prevent matches with the string\n         * of window index 0 (in particular we have to avoid a match\n         * of the string with itself at the start of the input file).\n         */\n        s.match_length = longest_match(s, hash_head);\n        /* longest_match() sets match_start */\n\n        if (s.match_length <= 5 && (s.strategy === Z_FILTERED || s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096\n        /*TOO_FAR*/\n        )) {\n          /* If prev_match is also MIN_MATCH, match_start is garbage\n           * but we will ignore the current match anyway.\n           */\n          s.match_length = MIN_MATCH - 1;\n        }\n      }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n\n\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n\n      }\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n\n      s.strstart++;\n      s.lookahead--;\n\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  } //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n\n\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n    s.match_available = 0;\n  }\n\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n\n\n    return BS_FINISH_DONE;\n  }\n\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n\n  }\n\n  return BS_BLOCK_DONE;\n}\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\n\n\nfunction deflate_rle(s, flush) {\n  var bflush;\n  /* set if current block must be flushed */\n\n  var prev;\n  /* byte at distance one to match */\n\n  var scan, strend;\n  /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n\n    }\n    /* See how many times the previous byte repeats */\n\n\n    s.match_length = 0;\n\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);\n\n        s.match_length = MAX_MATCH - (strend - scan);\n\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      } //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n\n    }\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n\n\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n      s.lookahead--;\n      s.strstart++;\n    }\n\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n\n\n    return BS_FINISH_DONE;\n  }\n\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n\n  }\n\n  return BS_BLOCK_DONE;\n}\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\n\n\nfunction deflate_huff(s, flush) {\n  var bflush;\n  /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n\n        break;\n        /* flush the current block */\n      }\n    }\n    /* Output a literal byte */\n\n\n    s.match_length = 0; //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n\n\n    return BS_FINISH_DONE;\n  }\n\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n\n  }\n\n  return BS_BLOCK_DONE;\n}\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\n\n\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\nconfiguration_table = [\n/*      good lazy nice chain */\nnew Config(0, 0, 0, 0, deflate_stored),\n/* 0 store only */\nnew Config(4, 4, 8, 4, deflate_fast),\n/* 1 max speed, no lazy matches */\nnew Config(4, 5, 16, 8, deflate_fast),\n/* 2 */\nnew Config(4, 6, 32, 32, deflate_fast),\n/* 3 */\nnew Config(4, 4, 16, 16, deflate_slow),\n/* 4 lazy matches */\nnew Config(8, 16, 32, 32, deflate_slow),\n/* 5 */\nnew Config(8, 16, 128, 128, deflate_slow),\n/* 6 */\nnew Config(8, 32, 128, 256, deflate_slow),\n/* 7 */\nnew Config(32, 128, 258, 1024, deflate_slow),\n/* 8 */\nnew Config(32, 258, 258, 4096, deflate_slow)\n/* 9 max compression */\n];\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\n\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n  /*** CLEAR_HASH(s); ***/\n\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\nfunction DeflateState() {\n  this.strm = null;\n  /* pointer back to this zlib stream */\n\n  this.status = 0;\n  /* as the name implies */\n\n  this.pending_buf = null;\n  /* output still pending */\n\n  this.pending_buf_size = 0;\n  /* size of pending_buf */\n\n  this.pending_out = 0;\n  /* next pending byte to output to the stream */\n\n  this.pending = 0;\n  /* nb of bytes in the pending buffer */\n\n  this.wrap = 0;\n  /* bit 0 true for zlib, bit 1 true for gzip */\n\n  this.gzhead = null;\n  /* gzip header information to write */\n\n  this.gzindex = 0;\n  /* where in extra, name, or comment */\n\n  this.method = Z_DEFLATED;\n  /* can only be DEFLATED */\n\n  this.last_flush = -1;\n  /* value of flush param for previous deflate call */\n\n  this.w_size = 0;\n  /* LZ77 window size (32K by default) */\n\n  this.w_bits = 0;\n  /* log2(w_size)  (8..16) */\n\n  this.w_mask = 0;\n  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;\n  /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;\n  /* hash index of string to be inserted */\n\n  this.hash_size = 0;\n  /* number of elements in hash table */\n\n  this.hash_bits = 0;\n  /* log2(hash_size) */\n\n  this.hash_mask = 0;\n  /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;\n  /* length of best match */\n\n  this.prev_match = 0;\n  /* previous match */\n\n  this.match_available = 0;\n  /* set if previous match exists */\n\n  this.strstart = 0;\n  /* start of string to insert */\n\n  this.match_start = 0;\n  /* start of matching string */\n\n  this.lookahead = 0;\n  /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;\n  /* compression level (1..9) */\n\n  this.strategy = 0;\n  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0;\n  /* Stop searching when current match exceeds this */\n\n  /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n\n  this.dyn_ltree = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n  this.l_desc = null;\n  /* desc. for literal tree */\n\n  this.d_desc = null;\n  /* desc. for distance tree */\n\n  this.bl_desc = null;\n  /* desc. for bit length tree */\n  //ush bl_count[MAX_BITS+1];\n\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n\n  this.heap = new utils.Buf16(2 * L_CODES + 1);\n  /* heap used to build the Huffman trees */\n\n  zero(this.heap);\n  this.heap_len = 0;\n  /* number of elements in the heap */\n\n  this.heap_max = 0;\n  /* element of largest frequency */\n\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;\n  /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;\n  /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;\n  /* bit length of current block with optimal trees */\n\n  this.static_len = 0;\n  /* bit length of current block with static trees */\n\n  this.matches = 0;\n  /* number of string matches in current block */\n\n  this.insert = 0;\n  /* bytes at end of window left to insert */\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n\n  s.status = s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = s.wrap === 2 ? 0 // crc32(0, Z_NULL, 0)\n  : 1; // adler32(0, Z_NULL, 0)\n\n  s.last_flush = Z_NO_FLUSH;\n\n  trees._tr_init(s);\n\n  return Z_OK;\n}\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n\n  return ret;\n}\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n\n  if (strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) {\n    // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) {\n    /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  } else if (windowBits > 15) {\n    wrap = 2;\n    /* write gzip wrapper instead */\n\n    windowBits -= 16;\n  }\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n\n  var s = new DeflateState();\n  strm.state = s;\n  s.strm = strm;\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size); // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << memLevel + 6;\n  /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4; //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n\n  s.pending_buf = new utils.Buf8(s.pending_buf_size); // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n\n  s.d_buf = 1 * s.lit_bufsize; //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output || !strm.input && strm.avail_in !== 0 || s.status === FINISH_STATE && flush !== Z_FINISH) {\n    return err(strm, strm.avail_out === 0 ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm;\n  /* just in case */\n\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n  /* Write the header */\n\n  if (s.status === INIT_STATE) {\n    if (s.wrap === 2) {\n      // GZIP header\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n\n      if (!s.gzhead) {\n        // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      } else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (!s.gzhead.extra ? 0 : 4) + (!s.gzhead.name ? 0 : 8) + (!s.gzhead.comment ? 0 : 16));\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, s.gzhead.time >> 8 & 0xff);\n        put_byte(s, s.gzhead.time >> 16 & 0xff);\n        put_byte(s, s.gzhead.time >> 24 & 0xff);\n        put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);\n        put_byte(s, s.gzhead.os & 0xff);\n\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, s.gzhead.extra.length >> 8 & 0xff);\n        }\n\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    } else // DEFLATE header\n      {\n        var header = Z_DEFLATED + (s.w_bits - 8 << 4) << 8;\n        var level_flags = -1;\n\n        if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n          level_flags = 0;\n        } else if (s.level < 6) {\n          level_flags = 1;\n        } else if (s.level === 6) {\n          level_flags = 2;\n        } else {\n          level_flags = 3;\n        }\n\n        header |= level_flags << 6;\n\n        if (s.strstart !== 0) {\n          header |= PRESET_DICT;\n        }\n\n        header += 31 - header % 31;\n        s.status = BUSY_STATE;\n        putShortMSB(s, header);\n        /* Save the adler32 of the preset dictionary: */\n\n        if (s.strstart !== 0) {\n          putShortMSB(s, strm.adler >>> 16);\n          putShortMSB(s, strm.adler & 0xffff);\n        }\n\n        strm.adler = 1; // adler32(0L, Z_NULL, 0);\n      }\n  } //#ifdef GZIP\n\n\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra\n    /* != Z_NULL*/\n    ) {\n        beg = s.pending;\n        /* start of bytes to update crc */\n\n        while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n          if (s.pending === s.pending_buf_size) {\n            if (s.gzhead.hcrc && s.pending > beg) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n            }\n\n            flush_pending(strm);\n            beg = s.pending;\n\n            if (s.pending === s.pending_buf_size) {\n              break;\n            }\n          }\n\n          put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n          s.gzindex++;\n        }\n\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n\n        if (s.gzindex === s.gzhead.extra.length) {\n          s.gzindex = 0;\n          s.status = NAME_STATE;\n        }\n      } else {\n      s.status = NAME_STATE;\n    }\n  }\n\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name\n    /* != Z_NULL*/\n    ) {\n        beg = s.pending;\n        /* start of bytes to update crc */\n        //int val;\n\n        do {\n          if (s.pending === s.pending_buf_size) {\n            if (s.gzhead.hcrc && s.pending > beg) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n            }\n\n            flush_pending(strm);\n            beg = s.pending;\n\n            if (s.pending === s.pending_buf_size) {\n              val = 1;\n              break;\n            }\n          } // JS specific: little magic to add zero terminator to end of string\n\n\n          if (s.gzindex < s.gzhead.name.length) {\n            val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n          } else {\n            val = 0;\n          }\n\n          put_byte(s, val);\n        } while (val !== 0);\n\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n\n        if (val === 0) {\n          s.gzindex = 0;\n          s.status = COMMENT_STATE;\n        }\n      } else {\n      s.status = COMMENT_STATE;\n    }\n  }\n\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment\n    /* != Z_NULL*/\n    ) {\n        beg = s.pending;\n        /* start of bytes to update crc */\n        //int val;\n\n        do {\n          if (s.pending === s.pending_buf_size) {\n            if (s.gzhead.hcrc && s.pending > beg) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n            }\n\n            flush_pending(strm);\n            beg = s.pending;\n\n            if (s.pending === s.pending_buf_size) {\n              val = 1;\n              break;\n            }\n          } // JS specific: little magic to add zero terminator to end of string\n\n\n          if (s.gzindex < s.gzhead.comment.length) {\n            val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n          } else {\n            val = 0;\n          }\n\n          put_byte(s, val);\n        } while (val !== 0);\n\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n\n        if (val === 0) {\n          s.status = HCRC_STATE;\n        }\n      } else {\n      s.status = HCRC_STATE;\n    }\n  }\n\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, strm.adler >> 8 & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n\n        s.status = BUSY_STATE;\n      }\n    } else {\n      s.status = BUSY_STATE;\n    }\n  } //#endif\n\n  /* Flush as much pending output as possible */\n\n\n  if (s.pending !== 0) {\n    flush_pending(strm);\n\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) && flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n  /* User must not provide more input after the first FINISH: */\n\n\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n  /* Start a new block or continue the current one.\n   */\n\n\n  if (strm.avail_in !== 0 || s.lookahead !== 0 || flush !== Z_NO_FLUSH && s.status !== FINISH_STATE) {\n    var bstate = s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) : s.strategy === Z_RLE ? deflate_rle(s, flush) : configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      } else if (flush !== Z_BLOCK) {\n        /* FULL_FLUSH or SYNC_FLUSH */\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n\n\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/\n\n          /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n\n      flush_pending(strm);\n\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR at next call, see above */\n\n        return Z_OK;\n      }\n    }\n  } //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n\n  if (flush !== Z_FINISH) {\n    return Z_OK;\n  }\n\n  if (s.wrap <= 0) {\n    return Z_STREAM_END;\n  }\n  /* Write the trailer */\n\n\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, strm.adler >> 8 & 0xff);\n    put_byte(s, strm.adler >> 16 & 0xff);\n    put_byte(s, strm.adler >> 24 & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, strm.total_in >> 8 & 0xff);\n    put_byte(s, strm.total_in >> 16 & 0xff);\n    put_byte(s, strm.total_in >> 24 & 0xff);\n  } else {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n\n  if (s.wrap > 0) {\n    s.wrap = -s.wrap;\n  }\n  /* write the trailer only once! */\n\n\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm\n  /*== Z_NULL*/\n  || !strm.state\n  /*== Z_NULL*/\n  ) {\n      return Z_STREAM_ERROR;\n    }\n\n  status = strm.state.status;\n\n  if (status !== INIT_STATE && status !== EXTRA_STATE && status !== NAME_STATE && status !== COMMENT_STATE && status !== HCRC_STATE && status !== BUSY_STATE && status !== FINISH_STATE) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\n\n\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm\n  /*== Z_NULL*/\n  || !strm.state\n  /*== Z_NULL*/\n  ) {\n      return Z_STREAM_ERROR;\n    }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || wrap === 1 && s.status !== INIT_STATE || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n\n\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;\n  /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {\n      /* already empty otherwise */\n\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n\n\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n\n\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n/* Public constants ==========================================================*/\n\n/* ===========================================================================*/\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\n\n\nvar Z_FIXED = 4; //var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n\nvar Z_BINARY = 0;\nvar Z_TEXT = 1; //var Z_ASCII             = 1; // = Z_TEXT\n\nvar Z_UNKNOWN = 2;\n/*============================================================================*/\n\nfunction zero(buf) {\n  var len = buf.length;\n\n  while (--len >= 0) {\n    buf[len] = 0;\n  }\n} // From zutil.h\n\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\n/* The minimum and maximum match lengths */\n// From deflate.h\n\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES = 30;\n/* number of distance codes */\n\nvar BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size = 16;\n/* size of bit buffer in bi_buf */\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK = 256;\n/* end of block literal code */\n\nvar REP_3_6 = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10 = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\n\nvar extra_lbits =\n/* extra bits for each length code */\n[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\nvar extra_dbits =\n/* extra bits for each distance code */\n[0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\nvar extra_blbits =\n/* extra bits for each bit length code */\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\nvar bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512;\n/* see definition of array dist_code below */\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\n\nvar static_ltree = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code = new Array(DIST_CODE_LEN);\n\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);\n\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n  this.static_tree = static_tree;\n  /* static tree or NULL */\n\n  this.extra_bits = extra_bits;\n  /* extra bits for each code or NULL */\n\n  this.extra_base = extra_base;\n  /* base index for extra_bits */\n\n  this.elems = elems;\n  /* max number of elements in the tree */\n\n  this.max_length = max_length;\n  /* max bit length for the codes */\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n\n  this.has_stree = static_tree && static_tree.length;\n}\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;\n  /* the dynamic tree */\n\n  this.max_code = 0;\n  /* largest code with non zero frequency */\n\n  this.stat_desc = stat_desc;\n  /* the corresponding static tree */\n}\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\n\n\nfunction put_short(s, w) {\n  //    put_byte(s, (uch)((w) & 0xff));\n  //    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = w & 0xff;\n  s.pending_buf[s.pending++] = w >>> 8 & 0xff;\n}\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\n\n\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > Buf_size - length) {\n    s.bi_buf |= value << s.bi_valid & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> Buf_size - s.bi_valid;\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= value << s.bi_valid & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]\n  /*.Code*/\n  , tree[c * 2 + 1]\n  /*.Len*/\n  );\n}\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\n\n\nfunction bi_reverse(code, len) {\n  var res = 0;\n\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n\n  return res >>> 1;\n}\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\n\n\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\n\n\nfunction gen_bitlen(s, desc) //    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree = desc.dyn_tree;\n  var max_code = desc.max_code;\n  var stree = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var extra = desc.stat_desc.extra_bits;\n  var base = desc.stat_desc.extra_base;\n  var max_length = desc.stat_desc.max_length;\n  var h;\n  /* heap index */\n\n  var n, m;\n  /* iterate over the tree elements */\n\n  var bits;\n  /* bit length */\n\n  var xbits;\n  /* extra bits */\n\n  var f;\n  /* frequency */\n\n  var overflow = 0;\n  /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n\n\n  tree[s.heap[s.heap_max] * 2 + 1]\n  /*.Len*/\n  = 0;\n  /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]\n    /*.Dad*/\n    * 2 + 1]\n    /*.Len*/\n    + 1;\n\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n\n    tree[n * 2 + 1]\n    /*.Len*/\n    = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) {\n      continue;\n    }\n    /* not a leaf node */\n\n\n    s.bl_count[bits]++;\n    xbits = 0;\n\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n\n    f = tree[n * 2]\n    /*.Freq*/\n    ;\n    s.opt_len += f * (bits + xbits);\n\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]\n      /*.Len*/\n      + xbits);\n    }\n  }\n\n  if (overflow === 0) {\n    return;\n  } // Trace((stderr,\"\\nbit length overflow\\n\"));\n\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n\n\n  do {\n    bits = max_length - 1;\n\n    while (s.bl_count[bits] === 0) {\n      bits--;\n    }\n\n    s.bl_count[bits]--;\n    /* move one leaf down the tree */\n\n    s.bl_count[bits + 1] += 2;\n    /* move one overflow item as its brother */\n\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n\n    overflow -= 2;\n  } while (overflow > 0);\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n\n\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n\n    while (n !== 0) {\n      m = s.heap[--h];\n\n      if (m > max_code) {\n        continue;\n      }\n\n      if (tree[m * 2 + 1]\n      /*.Len*/\n      !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]\n        /*.Len*/\n        ) * tree[m * 2]\n        /*.Freq*/\n        ;\n        tree[m * 2 + 1]\n        /*.Len*/\n        = bits;\n      }\n\n      n--;\n    }\n  }\n}\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\n\n\nfunction gen_codes(tree, max_code, bl_count) //    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1);\n  /* next code value for each bit length */\n\n  var code = 0;\n  /* running code value */\n\n  var bits;\n  /* bit index */\n\n  var n;\n  /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = code + bl_count[bits - 1] << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n\n  for (n = 0; n <= max_code; n++) {\n    var len = tree[n * 2 + 1]\n    /*.Len*/\n    ;\n\n    if (len === 0) {\n      continue;\n    }\n    /* Now reverse the bits */\n\n\n    tree[n * 2]\n    /*.Code*/\n    = bi_reverse(next_code[len]++, len); //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\n\n\nfunction tr_static_init() {\n  var n;\n  /* iterates over tree elements */\n\n  var bits;\n  /* bit counter */\n\n  var length;\n  /* length value */\n\n  var code;\n  /* code value */\n\n  var dist;\n  /* distance index */\n\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n\n  /*#ifdef NO_INIT_GLOBAL_POINTERS\n    static_l_desc.static_tree = static_ltree;\n    static_l_desc.extra_bits = extra_lbits;\n    static_d_desc.static_tree = static_dtree;\n    static_d_desc.extra_bits = extra_dbits;\n    static_bl_desc.extra_bits = extra_blbits;\n  #endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n\n  length = 0;\n\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n\n    for (n = 0; n < 1 << extra_lbits[code]; n++) {\n      _length_code[length++] = code;\n    }\n  } //Assert (length == 256, \"tr_static_init: length != 256\");\n\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n\n\n  _length_code[length - 1] = code;\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n\n  dist = 0;\n\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n\n    for (n = 0; n < 1 << extra_dbits[code]; n++) {\n      _dist_code[dist++] = code;\n    }\n  } //Assert (dist == 256, \"tr_static_init: dist != 256\");\n\n\n  dist >>= 7;\n  /* from now on, all distances are divided by 128 */\n\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n\n    for (n = 0; n < 1 << extra_dbits[code] - 7; n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  } //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]\n    /*.Len*/\n    = 8;\n    n++;\n    bl_count[8]++;\n  }\n\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]\n    /*.Len*/\n    = 9;\n    n++;\n    bl_count[9]++;\n  }\n\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]\n    /*.Len*/\n    = 7;\n    n++;\n    bl_count[7]++;\n  }\n\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]\n    /*.Len*/\n    = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n\n\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n  /* The static distance tree is trivial: */\n\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]\n    /*.Len*/\n    = 5;\n    static_dtree[n * 2]\n    /*.Code*/\n    = bi_reverse(n, 5);\n  } // Now data ready and we can init static trees\n\n\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES, MAX_BL_BITS); //static_init_done = true;\n}\n/* ===========================================================================\n * Initialize a new block.\n */\n\n\nfunction init_block(s) {\n  var n;\n  /* iterates over tree elements */\n\n  /* Initialize the trees. */\n\n  for (n = 0; n < L_CODES; n++) {\n    s.dyn_ltree[n * 2]\n    /*.Freq*/\n    = 0;\n  }\n\n  for (n = 0; n < D_CODES; n++) {\n    s.dyn_dtree[n * 2]\n    /*.Freq*/\n    = 0;\n  }\n\n  for (n = 0; n < BL_CODES; n++) {\n    s.bl_tree[n * 2]\n    /*.Freq*/\n    = 0;\n  }\n\n  s.dyn_ltree[END_BLOCK * 2]\n  /*.Freq*/\n  = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\n\n\nfunction bi_windup(s) {\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\n\n\nfunction copy_block(s, buf, len, header) //DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);\n  /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  } //  while (len--) {\n  //    put_byte(s, *buf++);\n  //  }\n\n\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\n\n\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n\n  var _m2 = m * 2;\n\n  return tree[_n2]\n  /*.Freq*/\n  < tree[_m2]\n  /*.Freq*/\n  || tree[_n2]\n  /*.Freq*/\n  === tree[_m2]\n  /*.Freq*/\n  && depth[n] <= depth[m];\n}\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\n\n\nfunction pqdownheap(s, tree, k) //    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;\n  /* left son of k */\n\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len && smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n\n\n    if (smaller(tree, v, s.heap[j], s.depth)) {\n      break;\n    }\n    /* Exchange v with the smallest son */\n\n\n    s.heap[k] = s.heap[j];\n    k = j;\n    /* And continue down the tree, setting j to the left son of k */\n\n    j <<= 1;\n  }\n\n  s.heap[k] = v;\n} // inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\n\n\nfunction compress_block(s, ltree, dtree) //    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;\n  /* distance of matched string */\n\n  var lc;\n  /* match length or unmatched char (if dist == 0) */\n\n  var lx = 0;\n  /* running index in l_buf */\n\n  var code;\n  /* the code to send */\n\n  var extra;\n  /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = s.pending_buf[s.d_buf + lx * 2] << 8 | s.pending_buf[s.d_buf + lx * 2 + 1];\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree);\n        /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree);\n        /* send the length code */\n\n        extra = extra_lbits[code];\n\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);\n          /* send the extra length bits */\n        }\n\n        dist--;\n        /* dist is now the match distance - 1 */\n\n        code = d_code(dist); //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);\n        /* send the distance code */\n\n        extra = extra_dbits[code];\n\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);\n          /* send the extra distance bits */\n        }\n      }\n      /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\n\n\nfunction build_tree(s, desc) //    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree = desc.dyn_tree;\n  var stree = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems = desc.stat_desc.elems;\n  var n, m;\n  /* iterate over heap elements */\n\n  var max_code = -1;\n  /* largest code with non zero frequency */\n\n  var node;\n  /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]\n    /*.Freq*/\n    !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n    } else {\n      tree[n * 2 + 1]\n      /*.Len*/\n      = 0;\n    }\n  }\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n\n\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n    tree[node * 2]\n    /*.Freq*/\n    = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]\n      /*.Len*/\n      ;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n\n  }\n\n  desc.max_code = max_code;\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n\n  for (n = s.heap_len >> 1\n  /*int /2*/\n  ; n >= 1; n--) {\n    pqdownheap(s, tree, n);\n  }\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n\n\n  node = elems;\n  /* next internal node of the tree */\n\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n\n    /*** pqremove ***/\n    n = s.heap[1\n    /*SMALLEST*/\n    ];\n    s.heap[1\n    /*SMALLEST*/\n    ] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1\n    /*SMALLEST*/\n    );\n    /***/\n\n    m = s.heap[1\n    /*SMALLEST*/\n    ];\n    /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n;\n    /* keep the nodes sorted by frequency */\n\n    s.heap[--s.heap_max] = m;\n    /* Create a new node father of n and m */\n\n    tree[node * 2]\n    /*.Freq*/\n    = tree[n * 2]\n    /*.Freq*/\n    + tree[m * 2]\n    /*.Freq*/\n    ;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]\n    /*.Dad*/\n    = tree[m * 2 + 1]\n    /*.Dad*/\n    = node;\n    /* and insert the new node in the heap */\n\n    s.heap[1\n    /*SMALLEST*/\n    ] = node++;\n    pqdownheap(s, tree, 1\n    /*SMALLEST*/\n    );\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1\n  /*SMALLEST*/\n  ];\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n\n  gen_bitlen(s, desc);\n  /* The field len is now set, we can generate the bit codes */\n\n  gen_codes(tree, max_code, s.bl_count);\n}\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\n\n\nfunction scan_tree(s, tree, max_code) //    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;\n  /* iterates over all tree elements */\n\n  var prevlen = -1;\n  /* last emitted length */\n\n  var curlen;\n  /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]\n  /*.Len*/\n  ;\n  /* length of next code */\n\n  var count = 0;\n  /* repeat count of the current code */\n\n  var max_count = 7;\n  /* max repeat count */\n\n  var min_count = 4;\n  /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  tree[(max_code + 1) * 2 + 1]\n  /*.Len*/\n  = 0xffff;\n  /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]\n    /*.Len*/\n    ;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]\n      /*.Freq*/\n      += count;\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        s.bl_tree[curlen * 2] /*.Freq*/++;\n      }\n\n      s.bl_tree[REP_3_6 * 2] /*.Freq*/++;\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2] /*.Freq*/++;\n    } else {\n      s.bl_tree[REPZ_11_138 * 2] /*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\n\n\nfunction send_tree(s, tree, max_code) //    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;\n  /* iterates over all tree elements */\n\n  var prevlen = -1;\n  /* last emitted length */\n\n  var curlen;\n  /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]\n  /*.Len*/\n  ;\n  /* length of next code */\n\n  var count = 0;\n  /* repeat count of the current code */\n\n  var max_count = 7;\n  /* max repeat count */\n\n  var min_count = 4;\n  /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */\n\n  /* guard already set */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]\n    /*.Len*/\n    ;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n    } else if (count < min_count) {\n      do {\n        send_code(s, curlen, s.bl_tree);\n      } while (--count !== 0);\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      } //Assert(count >= 3 && count <= 6, \" 3_6?\");\n\n\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\n\n\nfunction build_bl_tree(s) {\n  var max_blindex;\n  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n  /* Build the bit length tree: */\n\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]\n    /*.Len*/\n    !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n\n\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4; //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\n\n\nfunction send_all_trees(s, lcodes, dcodes, blcodes) //    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;\n  /* index in bl_order */\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n\n  send_bits(s, lcodes - 257, 5);\n  /* not +255 as stated in appnote.txt */\n\n  send_bits(s, dcodes - 1, 5);\n  send_bits(s, blcodes - 4, 4);\n  /* not -3 as stated in appnote.txt */\n\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]\n    /*.Len*/\n    , 3);\n  } //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n\n  send_tree(s, s.dyn_ltree, lcodes - 1);\n  /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1);\n  /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\n\n\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n  /* Check for non-textual (\"black-listed\") bytes. */\n\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if (black_mask & 1 && s.dyn_ltree[n * 2]\n    /*.Freq*/\n    !== 0) {\n      return Z_BINARY;\n    }\n  }\n  /* Check for textual (\"white-listed\") bytes. */\n\n\n  if (s.dyn_ltree[9 * 2]\n  /*.Freq*/\n  !== 0 || s.dyn_ltree[10 * 2]\n  /*.Freq*/\n  !== 0 || s.dyn_ltree[13 * 2]\n  /*.Freq*/\n  !== 0) {\n    return Z_TEXT;\n  }\n\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]\n    /*.Freq*/\n    !== 0) {\n      return Z_TEXT;\n    }\n  }\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n\n\n  return Z_BINARY;\n}\n\nvar static_init_done = false;\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\n\nfunction _tr_init(s) {\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n  /* Initialize the first block of the first file: */\n\n  init_block(s);\n}\n/* ===========================================================================\n * Send a stored block\n */\n\n\nfunction _tr_stored_block(s, buf, stored_len, last) //DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);\n  /* send block type */\n\n  copy_block(s, buf, stored_len, true);\n  /* with header */\n}\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\n\n\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\n\n\nfunction _tr_flush_block(s, buf, stored_len, last) //DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;\n  /* opt_len and static_len in bytes */\n\n  var max_blindex = 0;\n  /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n\n  if (s.level > 0) {\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n    /* Construct the literal and distance trees */\n\n\n    build_tree(s, s.l_desc); // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc); // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n\n    max_blindex = build_bl_tree(s);\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n\n    opt_lenb = s.opt_len + 3 + 7 >>> 3;\n    static_lenb = s.static_len + 3 + 7 >>> 3; // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) {\n      opt_lenb = static_lenb;\n    }\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5;\n    /* force a stored block */\n  }\n\n  if (stored_len + 4 <= opt_lenb && buf !== -1) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  } // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n\n\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  } // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n\n}\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\n\n\nfunction _tr_tally(s, dist, lc) //    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n  s.pending_buf[s.d_buf + s.last_lit * 2] = dist >>> 8 & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2] /*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n\n    dist--;\n    /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2] /*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2] /*.Freq*/++;\n  } // (!) This block is disabled in zlib defaults,\n  // don't enable it for binary compatibility\n  //#ifdef TRUNCATE_BLOCK\n  //  /* Try to guess if it is profitable to stop the current block here */\n  //  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n  //    /* Compute an upper bound for the compressed length */\n  //    out_length = s.last_lit*8;\n  //    in_length = s.strstart - s.block_start;\n  //\n  //    for (dcode = 0; dcode < D_CODES; dcode++) {\n  //      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n  //    }\n  //    out_length >>>= 3;\n  //    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n  //    //       s->last_lit, in_length, out_length,\n  //    //       100L - out_length*100L/in_length));\n  //    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n  //      return true;\n  //    }\n  //  }\n  //#endif\n\n\n  return s.last_lit === s.lit_bufsize - 1;\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2: 'need dictionary',\n\n  /* Z_NEED_DICT       2  */\n  1: 'stream end',\n\n  /* Z_STREAM_END      1  */\n  0: '',\n\n  /* Z_OK              0  */\n  '-1': 'file error',\n\n  /* Z_ERRNO         (-1) */\n  '-2': 'stream error',\n\n  /* Z_STREAM_ERROR  (-2) */\n  '-3': 'data error',\n\n  /* Z_DATA_ERROR    (-3) */\n  '-4': 'insufficient memory',\n\n  /* Z_MEM_ERROR     (-4) */\n  '-5': 'buffer error',\n\n  /* Z_BUF_ERROR     (-5) */\n  '-6': 'incompatible version'\n  /* Z_VERSION_ERROR (-6) */\n\n};","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar adler32 = require('./adler32');\n\nvar crc32 = require('./crc32');\n\nvar inflate_fast = require('./inffast');\n\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n/* Public constants ==========================================================*/\n\n/* ===========================================================================*/\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\n\nvar Z_FINISH = 4;\nvar Z_BLOCK = 5;\nvar Z_TREES = 6;\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\n\nvar Z_OK = 0;\nvar Z_STREAM_END = 1;\nvar Z_NEED_DICT = 2; //var Z_ERRNO         = -1;\n\nvar Z_STREAM_ERROR = -2;\nvar Z_DATA_ERROR = -3;\nvar Z_MEM_ERROR = -4;\nvar Z_BUF_ERROR = -5; //var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\n\nvar Z_DEFLATED = 8;\n/* STATES ====================================================================*/\n\n/* ===========================================================================*/\n\nvar HEAD = 1;\n/* i: waiting for magic header */\n\nvar FLAGS = 2;\n/* i: waiting for method and flags (gzip) */\n\nvar TIME = 3;\n/* i: waiting for modification time (gzip) */\n\nvar OS = 4;\n/* i: waiting for extra flags and operating system (gzip) */\n\nvar EXLEN = 5;\n/* i: waiting for extra length (gzip) */\n\nvar EXTRA = 6;\n/* i: waiting for extra bytes (gzip) */\n\nvar NAME = 7;\n/* i: waiting for end of file name (gzip) */\n\nvar COMMENT = 8;\n/* i: waiting for end of comment (gzip) */\n\nvar HCRC = 9;\n/* i: waiting for header crc (gzip) */\n\nvar DICTID = 10;\n/* i: waiting for dictionary check value */\n\nvar DICT = 11;\n/* waiting for inflateSetDictionary() call */\n\nvar TYPE = 12;\n/* i: waiting for type bits, including last-flag bit */\n\nvar TYPEDO = 13;\n/* i: same, but skip check to exit inflate on new block */\n\nvar STORED = 14;\n/* i: waiting for stored size (length and complement) */\n\nvar COPY_ = 15;\n/* i/o: same as COPY below, but only first time in */\n\nvar COPY = 16;\n/* i/o: waiting for input or output to copy stored block */\n\nvar TABLE = 17;\n/* i: waiting for dynamic block table lengths */\n\nvar LENLENS = 18;\n/* i: waiting for code length code lengths */\n\nvar CODELENS = 19;\n/* i: waiting for length/lit and distance code lengths */\n\nvar LEN_ = 20;\n/* i: same as LEN below, but only first time in */\n\nvar LEN = 21;\n/* i: waiting for length/lit/eob code */\n\nvar LENEXT = 22;\n/* i: waiting for length extra bits */\n\nvar DIST = 23;\n/* i: waiting for distance code */\n\nvar DISTEXT = 24;\n/* i: waiting for distance extra bits */\n\nvar MATCH = 25;\n/* o: waiting for output space to copy string */\n\nvar LIT = 26;\n/* o: waiting for output space to write literal */\n\nvar CHECK = 27;\n/* i: waiting for 32-bit check value */\n\nvar LENGTH = 28;\n/* i: waiting for 32-bit length (gzip) */\n\nvar DONE = 29;\n/* finished check, done -- remain here until reset */\n\nvar BAD = 30;\n/* got a data error -- remain here until reset */\n\nvar MEM = 31;\n/* got an inflate() memory error -- remain here until reset */\n\nvar SYNC = 32;\n/* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592; //var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\n\nvar DEF_WBITS = MAX_WBITS;\n\nfunction zswap32(q) {\n  return (q >>> 24 & 0xff) + (q >>> 8 & 0xff00) + ((q & 0xff00) << 8) + ((q & 0xff) << 24);\n}\n\nfunction InflateState() {\n  this.mode = 0;\n  /* current inflate mode */\n\n  this.last = false;\n  /* true if processing last block */\n\n  this.wrap = 0;\n  /* bit 0 true for zlib, bit 1 true for gzip */\n\n  this.havedict = false;\n  /* true if dictionary provided */\n\n  this.flags = 0;\n  /* gzip header method and flags (0 if zlib) */\n\n  this.dmax = 0;\n  /* zlib header max distance (INFLATE_STRICT) */\n\n  this.check = 0;\n  /* protected copy of check value */\n\n  this.total = 0;\n  /* protected copy of output count */\n  // TODO: may be {}\n\n  this.head = null;\n  /* where to save gzip header information */\n\n  /* sliding window */\n\n  this.wbits = 0;\n  /* log base 2 of requested window size */\n\n  this.wsize = 0;\n  /* window size or zero if not using window */\n\n  this.whave = 0;\n  /* valid bytes in the window */\n\n  this.wnext = 0;\n  /* window write index */\n\n  this.window = null;\n  /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n\n  this.hold = 0;\n  /* input bit accumulator */\n\n  this.bits = 0;\n  /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n\n  this.length = 0;\n  /* literal or length of data to copy */\n\n  this.offset = 0;\n  /* distance back to copy string from */\n\n  /* for table and code decoding */\n\n  this.extra = 0;\n  /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n\n  this.lencode = null;\n  /* starting table for length/literal codes */\n\n  this.distcode = null;\n  /* starting table for distance codes */\n\n  this.lenbits = 0;\n  /* index bits for lencode */\n\n  this.distbits = 0;\n  /* index bits for distcode */\n\n  /* dynamic table building */\n\n  this.ncode = 0;\n  /* number of code length code lengths */\n\n  this.nlen = 0;\n  /* number of length code lengths */\n\n  this.ndist = 0;\n  /* number of distance code lengths */\n\n  this.have = 0;\n  /* number of code lengths in lens[] */\n\n  this.next = null;\n  /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320);\n  /* temporary storage for code lengths */\n\n  this.work = new utils.Buf16(288);\n  /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n\n  this.lendyn = null;\n  /* dynamic table for length/literal codes (JS specific) */\n\n  this.distdyn = null;\n  /* dynamic table for distance codes (JS specific) */\n\n  this.sane = 0;\n  /* if false, allow invalid distance too far */\n\n  this.back = 0;\n  /* bits back of last unprocessed length/lit */\n\n  this.was = 0;\n  /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = '';\n  /*Z_NULL*/\n\n  if (state.wrap) {\n    /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null\n  /*Z_NULL*/\n  ;\n  state.hold = 0;\n  state.bits = 0; //state.lencode = state.distcode = state.next = state.codes;\n\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n  state.sane = 1;\n  state.back = -1; //Tracev((stderr, \"inflate: reset\\n\"));\n\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n  /* get the state */\n\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  /* extract wrap request from windowBits parameter */\n\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  } else {\n    wrap = (windowBits >> 4) + 1;\n\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n  /* set number of window bits, free window if different */\n\n\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n  /* update state and reset the rest of it */\n\n\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) {\n    return Z_STREAM_ERROR;\n  } //strm.msg = Z_NULL;                 /* in case we return an error */\n\n\n  state = new InflateState(); //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n\n  strm.state = state;\n  state.window = null\n  /*Z_NULL*/\n  ;\n  ret = inflateReset2(strm, windowBits);\n\n  if (ret !== Z_OK) {\n    strm.state = null\n    /*Z_NULL*/\n    ;\n  }\n\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\n\n\nvar virgin = true;\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n    /* literal/length table */\n\n    sym = 0;\n\n    while (sym < 144) {\n      state.lens[sym++] = 8;\n    }\n\n    while (sym < 256) {\n      state.lens[sym++] = 9;\n    }\n\n    while (sym < 280) {\n      state.lens[sym++] = 7;\n    }\n\n    while (sym < 288) {\n      state.lens[sym++] = 8;\n    }\n\n    inflate_table(LENS, state.lens, 0, 288, lenfix, 0, state.work, {\n      bits: 9\n    });\n    /* distance table */\n\n    sym = 0;\n\n    while (sym < 32) {\n      state.lens[sym++] = 5;\n    }\n\n    inflate_table(DISTS, state.lens, 0, 32, distfix, 0, state.work, {\n      bits: 5\n    });\n    /* do this just once */\n\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\n\n\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n  /* if it hasn't been done already, allocate space for the window */\n\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n    state.window = new utils.Buf8(state.wsize);\n  }\n  /* copy state->wsize or less output bytes into the circular window */\n\n\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  } else {\n    dist = state.wsize - state.wnext;\n\n    if (dist > copy) {\n      dist = copy;\n    } //zmemcpy(state->window + state->wnext, end - copy, dist);\n\n\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    } else {\n      state.wnext += dist;\n\n      if (state.wnext === state.wsize) {\n        state.wnext = 0;\n      }\n\n      if (state.whave < state.wsize) {\n        state.whave += dist;\n      }\n    }\n  }\n\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output; // input/output buffers\n\n  var next;\n  /* next input INDEX */\n\n  var put;\n  /* next output INDEX */\n\n  var have, left;\n  /* available input and output */\n\n  var hold;\n  /* bit buffer */\n\n  var bits;\n  /* bits in bit buffer */\n\n  var _in, _out;\n  /* save starting available input and output */\n\n\n  var copy;\n  /* number of stored or match bytes to copy */\n\n  var from;\n  /* where to copy match bytes from */\n\n  var from_source;\n  var here = 0;\n  /* current decoding table entry */\n\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n\n  var len;\n  /* length to copy for repeats, bits to drop */\n\n  var ret;\n  /* return code */\n\n  var hbuf = new utils.Buf8(4);\n  /* buffer for gzip header crc calculation */\n\n  var opts;\n  var n; // temporary var for NEED_BITS\n\n  var order =\n  /* permutation of code lengths */\n  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  if (!strm || !strm.state || !strm.output || !strm.input && strm.avail_in !== 0) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n\n  if (state.mode === TYPE) {\n    state.mode = TYPEDO;\n  }\n  /* skip check */\n  //--- LOAD() ---\n\n\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits; //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        } //=== NEEDBITS(16);\n\n\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        if (state.wrap & 2 && hold === 0x8b1f) {\n          /* gzip header */\n          state.check = 0\n          /*crc32(0L, Z_NULL, 0)*/\n          ; //=== CRC2(state.check, hold);\n\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0); //===//\n          //=== INITBITS();\n\n          hold = 0;\n          bits = 0; //===//\n\n          state.mode = FLAGS;\n          break;\n        }\n\n        state.flags = 0;\n        /* expect zlib header */\n\n        if (state.head) {\n          state.head.done = false;\n        }\n\n        if (!(state.wrap & 1) ||\n        /* check if zlib header allowed */\n        (((hold & 0xff) <<\n        /*BITS(8)*/\n        8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n\n        if ((hold & 0x0f) !==\n        /*BITS(4)*/\n        Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        } //--- DROPBITS(4) ---//\n\n\n        hold >>>= 4;\n        bits -= 4; //---//\n\n        len = (hold & 0x0f) +\n        /*BITS(4)*/\n        8;\n\n        if (state.wbits === 0) {\n          state.wbits = len;\n        } else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        state.dmax = 1 << len; //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n\n        strm.adler = state.check = 1\n        /*adler32(0L, Z_NULL, 0)*/\n        ;\n        state.mode = hold & 0x200 ? DICTID : TYPE; //=== INITBITS();\n\n        hold = 0;\n        bits = 0; //===//\n\n        break;\n\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        state.flags = hold;\n\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n\n        if (state.head) {\n          state.head.text = hold >> 8 & 1;\n        }\n\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0); //===//\n        } //=== INITBITS();\n\n\n        hold = 0;\n        bits = 0; //===//\n\n        state.mode = TIME;\n\n      /* falls through */\n\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        if (state.head) {\n          state.head.time = hold;\n        }\n\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          hbuf[2] = hold >>> 16 & 0xff;\n          hbuf[3] = hold >>> 24 & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0); //===\n        } //=== INITBITS();\n\n\n        hold = 0;\n        bits = 0; //===//\n\n        state.mode = OS;\n\n      /* falls through */\n\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        if (state.head) {\n          state.head.xflags = hold & 0xff;\n          state.head.os = hold >> 8;\n        }\n\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0); //===//\n        } //=== INITBITS();\n\n\n        hold = 0;\n        bits = 0; //===//\n\n        state.mode = EXLEN;\n\n      /* falls through */\n\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          state.length = hold;\n\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = hold >>> 8 & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0); //===//\n          } //=== INITBITS();\n\n\n          hold = 0;\n          bits = 0; //===//\n        } else if (state.head) {\n          state.head.extra = null\n          /*Z_NULL*/\n          ;\n        }\n\n        state.mode = EXTRA;\n\n      /* falls through */\n\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n\n          if (copy > have) {\n            copy = have;\n          }\n\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n\n              utils.arraySet(state.head.extra, input, next, // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len); //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n\n          if (state.length) {\n            break inf_leave;\n          }\n        }\n\n        state.length = 0;\n        state.mode = NAME;\n\n      /* falls through */\n\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          copy = 0;\n\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n\n            if (state.head && len && state.length < 65536\n            /*state.head.name_max*/\n            ) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n\n          have -= copy;\n          next += copy;\n\n          if (len) {\n            break inf_leave;\n          }\n        } else if (state.head) {\n          state.head.name = null;\n        }\n\n        state.length = 0;\n        state.mode = COMMENT;\n\n      /* falls through */\n\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          copy = 0;\n\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n\n            if (state.head && len && state.length < 65536\n            /*state.head.comm_max*/\n            ) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n\n          have -= copy;\n          next += copy;\n\n          if (len) {\n            break inf_leave;\n          }\n        } else if (state.head) {\n          state.head.comment = null;\n        }\n\n        state.mode = HCRC;\n\n      /* falls through */\n\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          } //=== INITBITS();\n\n\n          hold = 0;\n          bits = 0; //===//\n        }\n\n        if (state.head) {\n          state.head.hcrc = state.flags >> 9 & 1;\n          state.head.done = true;\n        }\n\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        strm.adler = state.check = zswap32(hold); //=== INITBITS();\n\n        hold = 0;\n        bits = 0; //===//\n\n        state.mode = DICT;\n\n      /* falls through */\n\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits; //---\n\n          return Z_NEED_DICT;\n        }\n\n        strm.adler = state.check = 1\n        /*adler32(0L, Z_NULL, 0)*/\n        ;\n        state.mode = TYPE;\n\n      /* falls through */\n\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) {\n          break inf_leave;\n        }\n\n      /* falls through */\n\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7; //---//\n\n          state.mode = CHECK;\n          break;\n        } //=== NEEDBITS(3); */\n\n\n        while (bits < 3) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        state.last = hold & 0x01\n        /*BITS(1)*/\n        ; //--- DROPBITS(1) ---//\n\n        hold >>>= 1;\n        bits -= 1; //---//\n\n        switch (hold & 0x03) {\n          /*BITS(2)*/\n          case 0:\n            /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n\n          case 1:\n            /* fixed block */\n            fixedtables(state); //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n\n            state.mode = LEN_;\n            /* decode codes */\n\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2; //---//\n\n              break inf_leave;\n            }\n\n            break;\n\n          case 2:\n            /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        } //--- DROPBITS(2) ---//\n\n\n        hold >>>= 2;\n        bits -= 2; //---//\n\n        break;\n\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7; //---//\n        //=== NEEDBITS(32); */\n\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        if ((hold & 0xffff) !== (hold >>> 16 ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n\n        state.length = hold & 0xffff; //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n\n        hold = 0;\n        bits = 0; //===//\n\n        state.mode = COPY_;\n\n        if (flush === Z_TREES) {\n          break inf_leave;\n        }\n\n      /* falls through */\n\n      case COPY_:\n        state.mode = COPY;\n\n      /* falls through */\n\n      case COPY:\n        copy = state.length;\n\n        if (copy) {\n          if (copy > have) {\n            copy = have;\n          }\n\n          if (copy > left) {\n            copy = left;\n          }\n\n          if (copy === 0) {\n            break inf_leave;\n          } //--- zmemcpy(put, next, copy); ---\n\n\n          utils.arraySet(output, input, next, copy, put); //---//\n\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        } //Tracev((stderr, \"inflate:       stored end\\n\"));\n\n\n        state.mode = TYPE;\n        break;\n\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        } //===//\n\n\n        state.nlen = (hold & 0x1f) +\n        /*BITS(5)*/\n        257; //--- DROPBITS(5) ---//\n\n        hold >>>= 5;\n        bits -= 5; //---//\n\n        state.ndist = (hold & 0x1f) +\n        /*BITS(5)*/\n        1; //--- DROPBITS(5) ---//\n\n        hold >>>= 5;\n        bits -= 5; //---//\n\n        state.ncode = (hold & 0x0f) +\n        /*BITS(4)*/\n        4; //--- DROPBITS(4) ---//\n\n        hold >>>= 4;\n        bits -= 4; //---//\n        //#ifndef PKZIP_BUG_WORKAROUND\n\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        } //#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n\n\n        state.have = 0;\n        state.mode = LENLENS;\n\n      /* falls through */\n\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          state.lens[order[state.have++]] = hold & 0x07; //BITS(3);\n          //--- DROPBITS(3) ---//\n\n          hold >>>= 3;\n          bits -= 3; //---//\n        }\n\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        } // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n\n\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n        opts = {\n          bits: state.lenbits\n        };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        } //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n\n\n        state.have = 0;\n        state.mode = CODELENS;\n\n      /* falls through */\n\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & (1 << state.lenbits) - 1];\n            /*BITS(state.lenbits)*/\n\n            here_bits = here >>> 24;\n            here_op = here >>> 16 & 0xff;\n            here_val = here & 0xffff;\n\n            if (here_bits <= bits) {\n              break;\n            } //--- PULLBYTE() ---//\n\n\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8; //---//\n          }\n\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits; //---//\n\n            state.lens[state.have++] = here_val;\n          } else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              } //===//\n              //--- DROPBITS(here.bits) ---//\n\n\n              hold >>>= here_bits;\n              bits -= here_bits; //---//\n\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03); //BITS(2);\n              //--- DROPBITS(2) ---//\n\n              hold >>>= 2;\n              bits -= 2; //---//\n            } else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              } //===//\n              //--- DROPBITS(here.bits) ---//\n\n\n              hold >>>= here_bits;\n              bits -= here_bits; //---//\n\n              len = 0;\n              copy = 3 + (hold & 0x07); //BITS(3);\n              //--- DROPBITS(3) ---//\n\n              hold >>>= 3;\n              bits -= 3; //---//\n            } else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              } //===//\n              //--- DROPBITS(here.bits) ---//\n\n\n              hold >>>= here_bits;\n              bits -= here_bits; //---//\n\n              len = 0;\n              copy = 11 + (hold & 0x7f); //BITS(7);\n              //--- DROPBITS(7) ---//\n\n              hold >>>= 7;\n              bits -= 7; //---//\n            }\n\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n        /* handle error breaks in while */\n\n\n        if (state.mode === BAD) {\n          break;\n        }\n        /* check for end-of-block code (better have one) */\n\n\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n\n\n        state.lenbits = 9;\n        opts = {\n          bits: state.lenbits\n        };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts); // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n\n        state.lenbits = opts.bits; // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6; //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n\n        state.distcode = state.distdyn;\n        opts = {\n          bits: state.distbits\n        };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts); // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n\n        state.distbits = opts.bits; // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        } //Tracev((stderr, 'inflate:       codes ok\\n'));\n\n\n        state.mode = LEN_;\n\n        if (flush === Z_TREES) {\n          break inf_leave;\n        }\n\n      /* falls through */\n\n      case LEN_:\n        state.mode = LEN;\n\n      /* falls through */\n\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits; //---\n\n          inflate_fast(strm, _out); //--- LOAD() ---\n\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits; //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n\n          break;\n        }\n\n        state.back = 0;\n\n        for (;;) {\n          here = state.lencode[hold & (1 << state.lenbits) - 1];\n          /*BITS(state.lenbits)*/\n\n          here_bits = here >>> 24;\n          here_op = here >>> 16 & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) {\n            break;\n          } //--- PULLBYTE() ---//\n\n\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8; //---//\n        }\n\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n\n          for (;;) {\n            here = state.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1) >>\n            /*BITS(last.bits + last.op)*/\n            last_bits)];\n            here_bits = here >>> 24;\n            here_op = here >>> 16 & 0xff;\n            here_val = here & 0xffff;\n\n            if (last_bits + here_bits <= bits) {\n              break;\n            } //--- PULLBYTE() ---//\n\n\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8; //---//\n          } //--- DROPBITS(last.bits) ---//\n\n\n          hold >>>= last_bits;\n          bits -= last_bits; //---//\n\n          state.back += last_bits;\n        } //--- DROPBITS(here.bits) ---//\n\n\n        hold >>>= here_bits;\n        bits -= here_bits; //---//\n\n        state.back += here_bits;\n        state.length = here_val;\n\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n\n      /* falls through */\n\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n\n          while (bits < n) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          state.length += hold & (1 << state.extra) - 1\n          /*BITS(state.extra)*/\n          ; //--- DROPBITS(state.extra) ---//\n\n          hold >>>= state.extra;\n          bits -= state.extra; //---//\n\n          state.back += state.extra;\n        } //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n\n\n        state.was = state.length;\n        state.mode = DIST;\n\n      /* falls through */\n\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & (1 << state.distbits) - 1];\n          /*BITS(state.distbits)*/\n\n          here_bits = here >>> 24;\n          here_op = here >>> 16 & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) {\n            break;\n          } //--- PULLBYTE() ---//\n\n\n          if (have === 0) {\n            break inf_leave;\n          }\n\n          have--;\n          hold += input[next++] << bits;\n          bits += 8; //---//\n        }\n\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n\n          for (;;) {\n            here = state.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1) >>\n            /*BITS(last.bits + last.op)*/\n            last_bits)];\n            here_bits = here >>> 24;\n            here_op = here >>> 16 & 0xff;\n            here_val = here & 0xffff;\n\n            if (last_bits + here_bits <= bits) {\n              break;\n            } //--- PULLBYTE() ---//\n\n\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8; //---//\n          } //--- DROPBITS(last.bits) ---//\n\n\n          hold >>>= last_bits;\n          bits -= last_bits; //---//\n\n          state.back += last_bits;\n        } //--- DROPBITS(here.bits) ---//\n\n\n        hold >>>= here_bits;\n        bits -= here_bits; //---//\n\n        state.back += here_bits;\n\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n\n        state.offset = here_val;\n        state.extra = here_op & 15;\n        state.mode = DISTEXT;\n\n      /* falls through */\n\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n\n          while (bits < n) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          state.offset += hold & (1 << state.extra) - 1\n          /*BITS(state.extra)*/\n          ; //--- DROPBITS(state.extra) ---//\n\n          hold >>>= state.extra;\n          bits -= state.extra; //---//\n\n          state.back += state.extra;\n        } //#ifdef INFLATE_STRICT\n\n\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        } //#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n\n\n        state.mode = MATCH;\n\n      /* falls through */\n\n      case MATCH:\n        if (left === 0) {\n          break inf_leave;\n        }\n\n        copy = _out - left;\n\n        if (state.offset > copy) {\n          /* copy from window */\n          copy = state.offset - copy;\n\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            } // (!) This block is disabled in zlib defaults,\n            // don't enable it for binary compatibility\n            //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n            //          Trace((stderr, \"inflate.c too far\\n\"));\n            //          copy -= state.whave;\n            //          if (copy > state.length) { copy = state.length; }\n            //          if (copy > left) { copy = left; }\n            //          left -= copy;\n            //          state.length -= copy;\n            //          do {\n            //            output[put++] = 0;\n            //          } while (--copy);\n            //          if (state.length === 0) { state.mode = LEN; }\n            //          break;\n            //#endif\n\n          }\n\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          } else {\n            from = state.wnext - copy;\n          }\n\n          if (copy > state.length) {\n            copy = state.length;\n          }\n\n          from_source = state.window;\n        } else {\n          /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n\n        if (copy > left) {\n          copy = left;\n        }\n\n        left -= copy;\n        state.length -= copy;\n\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n\n        if (state.length === 0) {\n          state.mode = LEN;\n        }\n\n        break;\n\n      case LIT:\n        if (left === 0) {\n          break inf_leave;\n        }\n\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--; // Use '|' instead of '+' to make sure that result is signed\n\n            hold |= input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n\n          if (_out) {\n            strm.adler = state.check =\n            /*UPDATE(state.check, put - _out, _out);*/\n            state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out);\n          }\n\n          _out = left; // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          } //=== INITBITS();\n\n\n          hold = 0;\n          bits = 0; //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n\n        state.mode = LENGTH;\n\n      /* falls through */\n\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) {\n              break inf_leave;\n            }\n\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          } //===//\n\n\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          } //=== INITBITS();\n\n\n          hold = 0;\n          bits = 0; //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n\n        state.mode = DONE;\n\n      /* falls through */\n\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n\n      case MEM:\n        return Z_MEM_ERROR;\n\n      case SYNC:\n      /* falls through */\n\n      default:\n        return Z_STREAM_ERROR;\n    }\n  } // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n  //--- RESTORE() ---\n\n\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits; //---\n\n  if (state.wsize || _out !== strm.avail_out && state.mode < BAD && (state.mode < CHECK || flush !== Z_FINISH)) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n\n  if (state.wrap && _out) {\n    strm.adler = state.check =\n    /*UPDATE(state.check, strm.next_out - _out, _out);*/\n    state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out);\n  }\n\n  strm.data_type = state.bits + (state.last ? 64 : 0) + (state.mode === TYPE ? 128 : 0) + (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n\n  if ((_in === 0 && _out === 0 || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n  if (!strm || !strm.state\n  /*|| strm->zfree == (free_func)0*/\n  ) {\n      return Z_STREAM_ERROR;\n    }\n\n  var state = strm.state;\n\n  if (state.window) {\n    state.window = null;\n  }\n\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n  /* check state */\n\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n\n  if ((state.wrap & 2) === 0) {\n    return Z_STREAM_ERROR;\n  }\n  /* save header structure */\n\n\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n  var state;\n  var dictid;\n  var ret;\n  /* check state */\n\n  if (!strm\n  /* == Z_NULL */\n  || !strm.state\n  /* == Z_NULL */\n  ) {\n      return Z_STREAM_ERROR;\n    }\n\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n  /* check for correct dictionary identifier */\n\n\n  if (state.mode === DICT) {\n    dictid = 1;\n    /* adler32(0, null, 0)*/\n\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n\n\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n\n  state.havedict = 1; // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n// See state defs from inflate.js\n\nvar BAD = 30;\n/* got a data error -- remain here until reset */\n\nvar TYPE = 12;\n/* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\n\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n\n  var _in;\n  /* local strm.input */\n\n\n  var last;\n  /* have enough input while in < last */\n\n  var _out;\n  /* local strm.output */\n\n\n  var beg;\n  /* inflate()'s initial strm.output */\n\n  var end;\n  /* while out < end, enough space available */\n  //#ifdef INFLATE_STRICT\n\n  var dmax;\n  /* maximum distance from zlib header */\n  //#endif\n\n  var wsize;\n  /* window size or zero if not using window */\n\n  var whave;\n  /* valid bytes in the window */\n\n  var wnext;\n  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n\n  var s_window;\n  /* allocated sliding window, if wsize != 0 */\n\n  var hold;\n  /* local strm.hold */\n\n  var bits;\n  /* local strm.bits */\n\n  var lcode;\n  /* local strm.lencode */\n\n  var dcode;\n  /* local strm.distcode */\n\n  var lmask;\n  /* mask for first level of length codes */\n\n  var dmask;\n  /* mask for first level of distance codes */\n\n  var here;\n  /* retrieved table entry */\n\n  var op;\n  /* code bits, operation, extra bits, or */\n\n  /*  window position, window bytes to copy */\n\n  var len;\n  /* match length, unused bytes */\n\n  var dist;\n  /* match distance */\n\n  var from;\n  /* where to copy match from */\n\n  var from_source;\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n\n  state = strm.state; //here = state.here;\n\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257); //#ifdef INFLATE_STRICT\n\n  dmax = state.dmax; //#endif\n\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top: do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen: for (;;) {\n      // Goto emulation\n      op = here >>> 24\n      /*here.bits*/\n      ;\n      hold >>>= op;\n      bits -= op;\n      op = here >>> 16 & 0xff\n      /*here.op*/\n      ;\n\n      if (op === 0) {\n        /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff\n        /*here.val*/\n        ;\n      } else if (op & 16) {\n        /* length base */\n        len = here & 0xffff\n        /*here.val*/\n        ;\n        op &= 15;\n        /* number of extra bits */\n\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n\n          len += hold & (1 << op) - 1;\n          hold >>>= op;\n          bits -= op;\n        } //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n\n\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n\n        here = dcode[hold & dmask];\n\n        dodist: for (;;) {\n          // goto emulation\n          op = here >>> 24\n          /*here.bits*/\n          ;\n          hold >>>= op;\n          bits -= op;\n          op = here >>> 16 & 0xff\n          /*here.op*/\n          ;\n\n          if (op & 16) {\n            /* distance base */\n            dist = here & 0xffff\n            /*here.val*/\n            ;\n            op &= 15;\n            /* number of extra bits */\n\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n\n            dist += hold & (1 << op) - 1; //#ifdef INFLATE_STRICT\n\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            } //#endif\n\n\n            hold >>>= op;\n            bits -= op; //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n\n            op = _out - beg;\n            /* max distance in output */\n\n            if (dist > op) {\n              /* see if copy from window */\n              op = dist - op;\n              /* distance back in window */\n\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                } // (!) This block is disabled in zlib defaults,\n                // don't enable it for binary compatibility\n                //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n                //                if (len <= op - whave) {\n                //                  do {\n                //                    output[_out++] = 0;\n                //                  } while (--len);\n                //                  continue top;\n                //                }\n                //                len -= op - whave;\n                //                do {\n                //                  output[_out++] = 0;\n                //                } while (--op > whave);\n                //                if (op === 0) {\n                //                  from = _out - dist;\n                //                  do {\n                //                    output[_out++] = output[from++];\n                //                  } while (--len);\n                //                  continue top;\n                //                }\n                //#endif\n\n              }\n\n              from = 0; // window index\n\n              from_source = s_window;\n\n              if (wnext === 0) {\n                /* very common case */\n                from += wsize - op;\n\n                if (op < len) {\n                  /* some from window */\n                  len -= op;\n\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n\n                  from = _out - dist;\n                  /* rest from output */\n\n                  from_source = output;\n                }\n              } else if (wnext < op) {\n                /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n\n                if (op < len) {\n                  /* some from end of window */\n                  len -= op;\n\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n\n                  from = 0;\n\n                  if (wnext < len) {\n                    /* some from start of window */\n                    op = wnext;\n                    len -= op;\n\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n\n                    from = _out - dist;\n                    /* rest from output */\n\n                    from_source = output;\n                  }\n                }\n              } else {\n                /* contiguous in window */\n                from += wnext - op;\n\n                if (op < len) {\n                  /* some from window */\n                  len -= op;\n\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n\n                  from = _out - dist;\n                  /* rest from output */\n\n                  from_source = output;\n                }\n              }\n\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n\n              if (len) {\n                output[_out++] = from_source[from++];\n\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            } else {\n              from = _out - dist;\n              /* copy direct from output */\n\n              do {\n                /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n\n              if (len) {\n                output[_out++] = output[from++];\n\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          } else if ((op & 64) === 0) {\n            /* 2nd level distance code */\n            here = dcode[(here & 0xffff) + (\n            /*here.val*/\n            hold & (1 << op) - 1)];\n            continue dodist;\n          } else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      } else if ((op & 64) === 0) {\n        /* 2nd level length code */\n        here = lcode[(here & 0xffff) + (\n        /*here.val*/\n        hold & (1 << op) - 1)];\n        continue dolen;\n      } else if (op & 32) {\n        /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      } else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n\n\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n  /* update state and return */\n\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);\n  strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592; //var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\nvar lbase = [\n/* Length codes 257..285 base */\n3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\nvar lext = [\n/* Length codes 257..285 extra */\n16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78];\nvar dbase = [\n/* Distance codes 0..29 base */\n1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\nvar dext = [\n/* Distance codes 0..29 extra */\n16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {\n  var bits = opts.bits; //here = opts.here; /* table entry for duplication */\n\n  var len = 0;\n  /* a code's length in bits */\n\n  var sym = 0;\n  /* index of code symbols */\n\n  var min = 0,\n      max = 0;\n  /* minimum and maximum code lengths */\n\n  var root = 0;\n  /* number of index bits for root table */\n\n  var curr = 0;\n  /* number of index bits for current table */\n\n  var drop = 0;\n  /* code bits to drop for sub-table */\n\n  var left = 0;\n  /* number of prefix codes available */\n\n  var used = 0;\n  /* code entries in table used */\n\n  var huff = 0;\n  /* Huffman code */\n\n  var incr;\n  /* for incrementing code, index */\n\n  var fill;\n  /* index for replicating entries */\n\n  var low;\n  /* low bits for current root entry */\n\n  var mask;\n  /* mask for low root bits */\n\n  var next;\n  /* next available space in table */\n\n  var base = null;\n  /* base value table to use */\n\n  var base_index = 0; //  var shoextra;    /* extra bits table to use */\n\n  var end;\n  /* use base and extra for symbol > end */\n\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n\n  var extra = null;\n  var extra_index = 0;\n  var here_bits, here_op, here_val;\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n    This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n    The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n    The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n  /* bound code lengths, force root to be within code lengths */\n\n\n  root = bits;\n\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) {\n      break;\n    }\n  }\n\n  if (root > max) {\n    root = max;\n  }\n\n  if (max === 0) {\n    /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = 1 << 24 | 64 << 16 | 0; //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n\n    table[table_index++] = 1 << 24 | 64 << 16 | 0;\n    opts.bits = 1;\n    return 0;\n    /* no symbols, but wait for decoding to report error */\n  }\n\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) {\n      break;\n    }\n  }\n\n  if (root < min) {\n    root = min;\n  }\n  /* check for an over-subscribed or incomplete set of lengths */\n\n\n  left = 1;\n\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n\n    if (left < 0) {\n      return -1;\n    }\n    /* over-subscribed */\n\n  }\n\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;\n    /* incomplete set */\n  }\n  /* generate offsets into symbol table for each length for sorting */\n\n\n  offs[1] = 0;\n\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n  /* sort symbols by length, by symbol order within each length */\n\n\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n    root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n    When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n    used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n    sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n\n\n  if (type === CODES) {\n    base = extra = work;\n    /* dummy value--not used */\n\n    end = 19;\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n  } else {\n    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n  /* initialize opts for loop */\n\n\n  huff = 0;\n  /* starting code */\n\n  sym = 0;\n  /* starting code symbol */\n\n  len = min;\n  /* starting code length */\n\n  next = table_index;\n  /* current table to fill in */\n\n  curr = root;\n  /* current table index bits */\n\n  drop = 0;\n  /* current bits to drop from code for index */\n\n  low = -1;\n  /* trigger new sub-table when len > root */\n\n  used = 1 << root;\n  /* use root table entries */\n\n  mask = used - 1;\n  /* mask for comparing low */\n\n  /* check available table space */\n\n  if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {\n    return 1;\n  }\n  /* process all codes and make table entries */\n\n\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    } else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    } else {\n      here_op = 32 + 64;\n      /* end of block */\n\n      here_val = 0;\n    }\n    /* replicate for those indices with low len bits equal to huff */\n\n\n    incr = 1 << len - drop;\n    fill = 1 << curr;\n    min = fill;\n    /* save offset to next table */\n\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;\n    } while (fill !== 0);\n    /* backwards increment the len-bit code huff */\n\n\n    incr = 1 << len - 1;\n\n    while (huff & incr) {\n      incr >>= 1;\n    }\n\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n    /* go to next symbol, update count, len */\n\n\n    sym++;\n\n    if (--count[len] === 0) {\n      if (len === max) {\n        break;\n      }\n\n      len = lens[lens_index + work[sym]];\n    }\n    /* create new sub-table if needed */\n\n\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n      /* increment past last table */\n\n\n      next += min;\n      /* here min is 1 << curr */\n\n      /* determine length of next table */\n\n      curr = len - drop;\n      left = 1 << curr;\n\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n\n        if (left <= 0) {\n          break;\n        }\n\n        curr++;\n        left <<= 1;\n      }\n      /* check for enough space */\n\n\n      used += 1 << curr;\n\n      if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {\n        return 1;\n      }\n      /* point entry in root table to sub-table */\n\n\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n\n      table[low] = root << 24 | curr << 16 | next - table_index | 0;\n    }\n  }\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n\n\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = len - drop << 24 | 64 << 16 | 0;\n  }\n  /* set return parameters */\n  //opts.table_index += used;\n\n\n  opts.bits = root;\n  return 0;\n};","'use strict'; // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH: 0,\n  Z_PARTIAL_FLUSH: 1,\n  Z_SYNC_FLUSH: 2,\n  Z_FULL_FLUSH: 3,\n  Z_FINISH: 4,\n  Z_BLOCK: 5,\n  Z_TREES: 6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK: 0,\n  Z_STREAM_END: 1,\n  Z_NEED_DICT: 2,\n  Z_ERRNO: -1,\n  Z_STREAM_ERROR: -2,\n  Z_DATA_ERROR: -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR: -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION: 0,\n  Z_BEST_SPEED: 1,\n  Z_BEST_COMPRESSION: 9,\n  Z_DEFAULT_COMPRESSION: -1,\n  Z_FILTERED: 1,\n  Z_HUFFMAN_ONLY: 2,\n  Z_RLE: 3,\n  Z_FIXED: 4,\n  Z_DEFAULT_STRATEGY: 0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY: 0,\n  Z_TEXT: 1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN: 2,\n\n  /* The deflate compression method */\n  Z_DEFLATED: 8 //Z_NULL:                 null // Use -1 or null inline, depending on var type\n\n};","\"use strict\";\n\n(function () {\n  // ARMv6 (Raspberry Pi) has bug in bitwise operations\n  // https://code.google.com/p/v8/issues/detail?id=3757\n  // https://github.com/alexeyten/qr-image/issues/13\n  if (process.arch === 'arm') {\n    module.exports = require('./crc32buffer');\n    return;\n  }\n\n  var crc_table = [];\n\n  (function () {\n    for (var n = 0; n < 256; n++) {\n      var c = n;\n\n      for (var k = 0; k < 8; k++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ c >>> 1;\n        } else {\n          c = c >>> 1;\n        }\n      }\n\n      crc_table[n] = c >>> 0;\n    }\n  })();\n\n  function update(c, buf) {\n    var l = buf.length;\n\n    for (var n = 0; n < l; n++) {\n      c = crc_table[(c ^ buf[n]) & 0xff] ^ c >>> 8;\n    }\n\n    return c;\n  }\n\n  function crc32()\n  /* arguments */\n  {\n    var l = arguments.length;\n    var c = -1;\n\n    for (var i = 0; i < l; i++) {\n      c = update(c, new Buffer(arguments[i]));\n    }\n\n    c = (c ^ -1) >>> 0;\n    return c;\n  }\n\n  module.exports = crc32;\n})();","'use strict';\n\nvar crc_table = [];\n\nfor (var n = 0; n < 256; n++) {\n  var c = crc_table[n] = new Buffer(4);\n  c.writeUInt32BE(n, 0);\n\n  for (var k = 0; k < 8; k++) {\n    var b0 = c[0] & 1;\n    var b1 = c[1] & 1;\n    var b2 = c[2] & 1;\n    var b3 = c[3] & 1;\n    c[0] = c[0] >> 1 ^ (b3 ? 0xed : 0);\n    c[1] = c[1] >> 1 ^ (b3 ? 0xb8 : 0) ^ (b0 ? 0x80 : 0);\n    c[2] = c[2] >> 1 ^ (b3 ? 0x83 : 0) ^ (b1 ? 0x80 : 0);\n    c[3] = c[3] >> 1 ^ (b3 ? 0x20 : 0) ^ (b2 ? 0x80 : 0);\n  }\n}\n\nfunction update(c, buf) {\n  var l = buf.length;\n\n  for (var n = 0; n < l; n++) {\n    var e = crc_table[c[3] ^ buf[n]];\n    c[3] = e[3] ^ c[2];\n    c[2] = e[2] ^ c[1];\n    c[1] = e[1] ^ c[0];\n    c[0] = e[0];\n  }\n}\n\nfunction crc32()\n/* arguments */\n{\n  var l = arguments.length;\n  var c = new Buffer(4);\n  c.fill(0xff);\n\n  for (var i = 0; i < l; i++) {\n    update(c, new Buffer(arguments[i]));\n  }\n\n  c[0] = c[0] ^ 0xff;\n  c[1] = c[1] ^ 0xff;\n  c[2] = c[2] ^ 0xff;\n  c[3] = c[3] ^ 0xff;\n  return c.readUInt32BE(0);\n}\n\nmodule.exports = crc32;","\"use strict\";\n\nfunction matrix2path(matrix) {\n  var N = matrix.length;\n  var filled = [];\n\n  for (var row = -1; row <= N; row++) {\n    filled[row] = [];\n  }\n\n  var path = [];\n\n  for (var row = 0; row < N; row++) {\n    for (var col = 0; col < N; col++) {\n      if (filled[row][col]) continue;\n      filled[row][col] = 1;\n\n      if (isDark(row, col)) {\n        if (!isDark(row - 1, col)) {\n          path.push(plot(row, col, 'right'));\n        }\n      } else {\n        if (isDark(row, col - 1)) {\n          path.push(plot(row, col, 'down'));\n        }\n      }\n    }\n  }\n\n  return path;\n\n  function isDark(row, col) {\n    if (row < 0 || col < 0 || row >= N || col >= N) return false;\n    return !!matrix[row][col];\n  }\n\n  function plot(row0, col0, dir) {\n    filled[row0][col0] = 1;\n    var res = [];\n    res.push(['M', col0, row0]);\n    var row = row0;\n    var col = col0;\n    var len = 0;\n\n    do {\n      switch (dir) {\n        case 'right':\n          filled[row][col] = 1;\n\n          if (isDark(row, col)) {\n            filled[row - 1][col] = 1;\n\n            if (isDark(row - 1, col)) {\n              res.push(['h', len]);\n              len = 0;\n              dir = 'up';\n            } else {\n              len++;\n              col++;\n            }\n          } else {\n            res.push(['h', len]);\n            len = 0;\n            dir = 'down';\n          }\n\n          break;\n\n        case 'left':\n          filled[row - 1][col - 1] = 1;\n\n          if (isDark(row - 1, col - 1)) {\n            filled[row][col - 1] = 1;\n\n            if (isDark(row, col - 1)) {\n              res.push(['h', -len]);\n              len = 0;\n              dir = 'down';\n            } else {\n              len++;\n              col--;\n            }\n          } else {\n            res.push(['h', -len]);\n            len = 0;\n            dir = 'up';\n          }\n\n          break;\n\n        case 'down':\n          filled[row][col - 1] = 1;\n\n          if (isDark(row, col - 1)) {\n            filled[row][col] = 1;\n\n            if (isDark(row, col)) {\n              res.push(['v', len]);\n              len = 0;\n              dir = 'right';\n            } else {\n              len++;\n              row++;\n            }\n          } else {\n            res.push(['v', len]);\n            len = 0;\n            dir = 'left';\n          }\n\n          break;\n\n        case 'up':\n          filled[row - 1][col] = 1;\n\n          if (isDark(row - 1, col)) {\n            filled[row - 1][col - 1] = 1;\n\n            if (isDark(row - 1, col - 1)) {\n              res.push(['v', -len]);\n              len = 0;\n              dir = 'left';\n            } else {\n              len++;\n              row--;\n            }\n          } else {\n            res.push(['v', -len]);\n            len = 0;\n            dir = 'right';\n          }\n\n          break;\n      }\n    } while (row != row0 || col != col0);\n\n    return res;\n  }\n}\n\nfunction pushSVGPath(matrix, stream, margin) {\n  matrix2path(matrix).forEach(function (subpath) {\n    var res = '';\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          res += 'M' + (item[1] + margin) + ' ' + (item[2] + margin);\n          break;\n\n        default:\n          res += item.join('');\n      }\n    }\n\n    res += 'z';\n    stream.push(res);\n  });\n}\n\nfunction SVG_object(matrix, margin) {\n  var stream = [];\n  pushSVGPath(matrix, stream, margin);\n  var result = {\n    size: matrix.length + 2 * margin,\n    path: stream.filter(Boolean).join('')\n  };\n  return result;\n}\n\nfunction SVG(matrix, stream, margin, size) {\n  var X = matrix.length + 2 * margin;\n  stream.push('<svg xmlns=\"http://www.w3.org/2000/svg\" ');\n\n  if (size > 0) {\n    var XY = X * size;\n    stream.push('width=\"' + XY + '\" height=\"' + XY + '\" ');\n  }\n\n  stream.push('viewBox=\"0 0 ' + X + ' ' + X + '\">');\n  stream.push('<path d=\"');\n  pushSVGPath(matrix, stream, margin);\n  stream.push('\"/></svg>');\n  stream.push(null);\n}\n\nfunction EPS(matrix, stream, margin) {\n  var N = matrix.length;\n  var scale = 9;\n  var X = (N + 2 * margin) * scale;\n  stream.push(['%!PS-Adobe-3.0 EPSF-3.0', '%%BoundingBox: 0 0 ' + X + ' ' + X, '/h { 0 rlineto } bind def', '/v { 0 exch neg rlineto } bind def', '/M { neg ' + (N + margin) + ' add moveto } bind def', '/z { closepath } bind def', scale + ' ' + scale + ' scale', ''].join('\\n'));\n  matrix2path(matrix).forEach(function (subpath) {\n    var res = '';\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          res += item[1] + margin + ' ' + item[2] + ' M ';\n          break;\n\n        default:\n          res += item[1] + ' ' + item[0] + ' ';\n      }\n    }\n\n    res += 'z\\n';\n    stream.push(res);\n  });\n  stream.push('fill\\n%%EOF\\n');\n  stream.push(null);\n}\n\nfunction PDF(matrix, stream, margin) {\n  // TODO deflate\n  var N = matrix.length;\n  var scale = 9;\n  var X = (N + 2 * margin) * scale;\n  var data = ['%PDF-1.0\\n\\n', '1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj\\n', '2 0 obj << /Type /Pages /Count 1 /Kids [ 3 0 R ] >> endobj\\n'];\n  data.push('3 0 obj << /Type /Page /Parent 2 0 R /Resources <<>> ' + '/Contents 4 0 R /MediaBox [ 0 0 ' + X + ' ' + X + ' ] >> endobj\\n');\n  var path = scale + ' 0 0 ' + scale + ' 0 0 cm\\n';\n  path += matrix2path(matrix).map(function (subpath) {\n    var res = '';\n    var x, y;\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          x = item[1] + margin;\n          y = N - item[2] + margin;\n          res += x + ' ' + y + ' m ';\n          break;\n\n        case 'h':\n          x += item[1];\n          res += x + ' ' + y + ' l ';\n          break;\n\n        case 'v':\n          y -= item[1];\n          res += x + ' ' + y + ' l ';\n          break;\n      }\n    }\n\n    res += 'h';\n    return res;\n  }).join('\\n');\n  path += '\\nf\\n';\n  data.push('4 0 obj << /Length ' + path.length + ' >> stream\\n' + path + 'endstream\\nendobj\\n');\n  var xref = 'xref\\n0 5\\n0000000000 65535 f \\n';\n\n  for (var i = 1, l = data[0].length; i < 5; i++) {\n    xref += ('0000000000' + l).substr(-10) + ' 00000 n \\n';\n    l += data[i].length;\n  }\n\n  data.push(xref, 'trailer << /Root 1 0 R /Size 5 >>\\n', 'startxref\\n' + l + '\\n%%EOF\\n');\n  stream.push(data.join(''));\n  stream.push(null);\n}\n\nmodule.exports = {\n  svg: SVG,\n  eps: EPS,\n  pdf: PDF,\n  svg_object: SVG_object\n};","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar QRCodeReader_1 = require(\"../core/qrcode/QRCodeReader\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * QR Code reader to use from browser.\r\n */\n\n\nvar BrowserQRCodeReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserQRCodeReader, _super);\n  /**\r\n   * Creates an instance of BrowserQRCodeReader.\r\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\r\n   */\n\n\n  function BrowserQRCodeReader(timeBetweenScansMillis) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    return _super.call(this, new QRCodeReader_1.default(), timeBetweenScansMillis) || this;\n  }\n\n  return BrowserQRCodeReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserQRCodeReader = BrowserQRCodeReader;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.tsCustomError = {});\n})(this, function (exports) {\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  function __extends(d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  function fixProto(target, prototype) {\n    var setPrototypeOf = Object.setPrototypeOf;\n    setPrototypeOf ? setPrototypeOf(target, prototype) : target.__proto__ = prototype;\n  }\n\n  function fixStack(target, fn) {\n    if (fn === void 0) {\n      fn = target.constructor;\n    }\n\n    var captureStackTrace = Error.captureStackTrace;\n    captureStackTrace && captureStackTrace(target, fn);\n  }\n\n  var CustomError = function (_super) {\n    __extends(CustomError, _super);\n\n    function CustomError(message) {\n      var _newTarget = this.constructor;\n\n      var _this = _super.call(this, message) || this;\n\n      Object.defineProperty(_this, 'name', {\n        value: _newTarget.name,\n        enumerable: false\n      });\n      fixProto(_this, _newTarget.prototype);\n      fixStack(_this);\n      return _this;\n    }\n\n    return CustomError;\n  }(Error);\n\n  function customErrorFactory(fn, parent) {\n    if (parent === void 0) {\n      parent = Error;\n    }\n\n    function CustomError() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      if (!(this instanceof CustomError)) return new (CustomError.bind.apply(CustomError, [void 0].concat(args)))();\n      parent.apply(this, args);\n      fn.apply(this, args);\n      this.name = fn.name || parent.name;\n      fixStack(this, CustomError);\n    }\n\n    return Object.defineProperties(CustomError, {\n      prototype: {\n        value: Object.create(parent.prototype, {\n          constructor: {\n            value: CustomError,\n            writable: true,\n            configurable: true\n          }\n        })\n      }\n    });\n  }\n\n  exports.CustomError = CustomError;\n  exports.customErrorFactory = customErrorFactory;\n}); //# sourceMappingURL=custom-error.umd.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Float =\n/** @class */\nfunction () {\n  function Float() {}\n\n  Float.floatToIntBits = function (f) {\n    return f;\n  };\n\n  return Float;\n}();\n\nexports.default = Float;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BitMatrix_1 = require(\"../../common/BitMatrix\");\n\nvar GenericGF_1 = require(\"../../common/reedsolomon/GenericGF\");\n\nvar ReedSolomonDecoder_1 = require(\"../../common/reedsolomon/ReedSolomonDecoder\");\n\nvar BitMatrixParser_1 = require(\"./BitMatrixParser\");\n\nvar QRCodeDecoderMetaData_1 = require(\"./QRCodeDecoderMetaData\");\n\nvar DataBlock_1 = require(\"./DataBlock\");\n\nvar DecodedBitStreamParser_1 = require(\"./DecodedBitStreamParser\");\n\nvar ChecksumException_1 = require(\"../../ChecksumException\");\n/*import java.util.Map;*/\n\n/**\r\n * <p>The main class which implements QR Code decoding -- as opposed to locating and extracting\r\n * the QR Code from an image.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Decoder =\n/** @class */\nfunction () {\n  function Decoder() {\n    this.rsDecoder = new ReedSolomonDecoder_1.default(GenericGF_1.default.QR_CODE_FIELD_256);\n  } // public decode(image: boolean[][]): DecoderResult /*throws ChecksumException, FormatException*/ {\n  //   return decode(image, null)\n  // }\n\n  /**\r\n   * <p>Convenience method that can decode a QR Code represented as a 2D array of booleans.\r\n   * \"true\" is taken to mean a black module.</p>\r\n   *\r\n   * @param image booleans representing white/black QR Code modules\r\n   * @param hints decoding hints that should be used to influence decoding\r\n   * @return text and bytes encoded within the QR Code\r\n   * @throws FormatException if the QR Code cannot be decoded\r\n   * @throws ChecksumException if error correction fails\r\n   */\n\n\n  Decoder.prototype.decodeBooleanArray = function (image, hints) {\n    return this.decodeBitMatrix(BitMatrix_1.default.parseFromBooleanArray(image), hints);\n  }; // public decodeBitMatrix(bits: BitMatrix): DecoderResult /*throws ChecksumException, FormatException*/ {\n  //   return decode(bits, null)\n  // }\n\n  /**\r\n   * <p>Decodes a QR Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken to mean a black module.</p>\r\n   *\r\n   * @param bits booleans representing white/black QR Code modules\r\n   * @param hints decoding hints that should be used to influence decoding\r\n   * @return text and bytes encoded within the QR Code\r\n   * @throws FormatException if the QR Code cannot be decoded\r\n   * @throws ChecksumException if error correction fails\r\n   */\n\n\n  Decoder.prototype.decodeBitMatrix = function (bits, hints) {\n    // Construct a parser and read version, error-correction level\n    var parser = new BitMatrixParser_1.default(bits);\n    var ex = null;\n\n    try {\n      return this.decodeBitMatrixParser(parser, hints);\n    } catch (e\n    /*: FormatException, ChecksumException*/\n    ) {\n      ex = e;\n    }\n\n    try {\n      // Revert the bit matrix\n      parser.remask(); // Will be attempting a mirrored reading of the version and format info.\n\n      parser.setMirror(true); // Preemptively read the version.\n\n      parser.readVersion(); // Preemptively read the format information.\n\n      parser.readFormatInformation();\n      /*\r\n       * Since we're here, this means we have successfully detected some kind\r\n       * of version and format information when mirrored. This is a good sign,\r\n       * that the QR code may be mirrored, and we should try once more with a\r\n       * mirrored content.\r\n       */\n      // Prepare for a mirrored reading.\n\n      parser.mirror();\n      var result = this.decodeBitMatrixParser(parser, hints); // Success! Notify the caller that the code was mirrored.\n\n      result.setOther(new QRCodeDecoderMetaData_1.default(true));\n      return result;\n    } catch (e\n    /*FormatException | ChecksumException*/\n    ) {\n      // Throw the exception from the original reading\n      if (ex !== null) {\n        throw ex;\n      }\n\n      throw e;\n    }\n  };\n\n  Decoder.prototype.decodeBitMatrixParser = function (parser, hints) {\n    var version = parser.readVersion();\n    var ecLevel = parser.readFormatInformation().getErrorCorrectionLevel(); // Read codewords\n\n    var codewords = parser.readCodewords(); // Separate into data blocks\n\n    var dataBlocks = DataBlock_1.default.getDataBlocks(codewords, version, ecLevel); // Count total number of data bytes\n\n    var totalBytes = 0;\n\n    for (var _i = 0, dataBlocks_1 = dataBlocks; _i < dataBlocks_1.length; _i++) {\n      var dataBlock = dataBlocks_1[_i];\n      totalBytes += dataBlock.getNumDataCodewords();\n    }\n\n    var resultBytes = new Uint8Array(totalBytes);\n    var resultOffset = 0; // Error-correct and copy data blocks together into a stream of bytes\n\n    for (var _a = 0, dataBlocks_2 = dataBlocks; _a < dataBlocks_2.length; _a++) {\n      var dataBlock = dataBlocks_2[_a];\n      var codewordBytes = dataBlock.getCodewords();\n      var numDataCodewords = dataBlock.getNumDataCodewords();\n      this.correctErrors(codewordBytes, numDataCodewords);\n\n      for (var i = 0; i < numDataCodewords; i++) {\n        resultBytes[resultOffset++] = codewordBytes[i];\n      }\n    } // Decode the contents of that stream of bytes\n\n\n    return DecodedBitStreamParser_1.default.decode(resultBytes, version, ecLevel, hints);\n  };\n  /**\r\n   * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\r\n   * correct the errors in-place using Reed-Solomon error correction.</p>\r\n   *\r\n   * @param codewordBytes data and error correction codewords\r\n   * @param numDataCodewords number of codewords that are data bytes\r\n   * @throws ChecksumException if error correction fails\r\n   */\n\n\n  Decoder.prototype.correctErrors = function (codewordBytes, numDataCodewords\n  /*int*/\n  ) {\n    var numCodewords = codewordBytes.length; // First read into an array of ints\n\n    var codewordsInts = new Int32Array(codewordBytes); // TYPESCRIPTPORT: not realy necessary to transform to ints? could redesign everything to work with unsigned bytes?\n    // const codewordsInts = new Int32Array(numCodewords)\n    // for (let i = 0; i < numCodewords; i++) {\n    //   codewordsInts[i] = codewordBytes[i] & 0xFF\n    // }\n\n    try {\n      this.rsDecoder.decode(codewordsInts, codewordBytes.length - numDataCodewords);\n    } catch (ignored\n    /*: ReedSolomonException*/\n    ) {\n      throw new ChecksumException_1.default();\n    } // Copy back into array of bytes -- only need to worry about the bytes that were data\n    // We don't care about errors in the error-correction codewords\n\n\n    for (var i = 0; i < numDataCodewords; i++) {\n      codewordBytes[i] =\n      /*(byte) */\n      codewordsInts[i];\n    }\n  };\n\n  return Decoder;\n}();\n\nexports.default = Decoder;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Version_1 = require(\"./Version\");\n\nvar FormatInformation_1 = require(\"./FormatInformation\");\n\nvar DataMask_1 = require(\"./DataMask\");\n\nvar FormatException_1 = require(\"../../FormatException\");\n/**\r\n * @author Sean Owen\r\n */\n\n\nvar BitMatrixParser =\n/** @class */\nfunction () {\n  /**\r\n   * @param bitMatrix {@link BitMatrix} to parse\r\n   * @throws FormatException if dimension is not >= 21 and 1 mod 4\r\n   */\n  function BitMatrixParser(bitMatrix) {\n    var dimension = bitMatrix.getHeight();\n\n    if (dimension < 21 || (dimension & 0x03) !== 1) {\n      throw new FormatException_1.default();\n    }\n\n    this.bitMatrix = bitMatrix;\n  }\n  /**\r\n   * <p>Reads format information from one of its two locations within the QR Code.</p>\r\n   *\r\n   * @return {@link FormatInformation} encapsulating the QR Code's format info\r\n   * @throws FormatException if both format information locations cannot be parsed as\r\n   * the valid encoding of format information\r\n   */\n\n\n  BitMatrixParser.prototype.readFormatInformation = function () {\n    if (this.parsedFormatInfo !== null && this.parsedFormatInfo !== undefined) {\n      return this.parsedFormatInfo;\n    } // Read top-left format info bits\n\n\n    var formatInfoBits1 = 0;\n\n    for (var i = 0; i < 6; i++) {\n      formatInfoBits1 = this.copyBit(i, 8, formatInfoBits1);\n    } // .. and skip a bit in the timing pattern ...\n\n\n    formatInfoBits1 = this.copyBit(7, 8, formatInfoBits1);\n    formatInfoBits1 = this.copyBit(8, 8, formatInfoBits1);\n    formatInfoBits1 = this.copyBit(8, 7, formatInfoBits1); // .. and skip a bit in the timing pattern ...\n\n    for (var j = 5; j >= 0; j--) {\n      formatInfoBits1 = this.copyBit(8, j, formatInfoBits1);\n    } // Read the top-right/bottom-left pattern too\n\n\n    var dimension = this.bitMatrix.getHeight();\n    var formatInfoBits2 = 0;\n    var jMin = dimension - 7;\n\n    for (var j = dimension - 1; j >= jMin; j--) {\n      formatInfoBits2 = this.copyBit(8, j, formatInfoBits2);\n    }\n\n    for (var i = dimension - 8; i < dimension; i++) {\n      formatInfoBits2 = this.copyBit(i, 8, formatInfoBits2);\n    }\n\n    this.parsedFormatInfo = FormatInformation_1.default.decodeFormatInformation(formatInfoBits1, formatInfoBits2);\n\n    if (this.parsedFormatInfo !== null) {\n      return this.parsedFormatInfo;\n    }\n\n    throw new FormatException_1.default();\n  };\n  /**\r\n   * <p>Reads version information from one of its two locations within the QR Code.</p>\r\n   *\r\n   * @return {@link Version} encapsulating the QR Code's version\r\n   * @throws FormatException if both version information locations cannot be parsed as\r\n   * the valid encoding of version information\r\n   */\n\n\n  BitMatrixParser.prototype.readVersion = function () {\n    if (this.parsedVersion !== null && this.parsedVersion !== undefined) {\n      return this.parsedVersion;\n    }\n\n    var dimension = this.bitMatrix.getHeight();\n    var provisionalVersion = Math.floor((dimension - 17) / 4);\n\n    if (provisionalVersion <= 6) {\n      return Version_1.default.getVersionForNumber(provisionalVersion);\n    } // Read top-right version info: 3 wide by 6 tall\n\n\n    var versionBits = 0;\n    var ijMin = dimension - 11;\n\n    for (var j = 5; j >= 0; j--) {\n      for (var i = dimension - 9; i >= ijMin; i--) {\n        versionBits = this.copyBit(i, j, versionBits);\n      }\n    }\n\n    var theParsedVersion = Version_1.default.decodeVersionInformation(versionBits);\n\n    if (theParsedVersion !== null && theParsedVersion.getDimensionForVersion() === dimension) {\n      this.parsedVersion = theParsedVersion;\n      return theParsedVersion;\n    } // Hmm, failed. Try bottom left: 6 wide by 3 tall\n\n\n    versionBits = 0;\n\n    for (var i = 5; i >= 0; i--) {\n      for (var j = dimension - 9; j >= ijMin; j--) {\n        versionBits = this.copyBit(i, j, versionBits);\n      }\n    }\n\n    theParsedVersion = Version_1.default.decodeVersionInformation(versionBits);\n\n    if (theParsedVersion !== null && theParsedVersion.getDimensionForVersion() === dimension) {\n      this.parsedVersion = theParsedVersion;\n      return theParsedVersion;\n    }\n\n    throw new FormatException_1.default();\n  };\n\n  BitMatrixParser.prototype.copyBit = function (i\n  /*int*/\n  , j\n  /*int*/\n  , versionBits\n  /*int*/\n  ) {\n    var bit = this.isMirror ? this.bitMatrix.get(j, i) : this.bitMatrix.get(i, j);\n    return bit ? versionBits << 1 | 0x1 : versionBits << 1;\n  };\n  /**\r\n   * <p>Reads the bits in the {@link BitMatrix} representing the finder pattern in the\r\n   * correct order in order to reconstruct the codewords bytes contained within the\r\n   * QR Code.</p>\r\n   *\r\n   * @return bytes encoded within the QR Code\r\n   * @throws FormatException if the exact number of bytes expected is not read\r\n   */\n\n\n  BitMatrixParser.prototype.readCodewords = function () {\n    var formatInfo = this.readFormatInformation();\n    var version = this.readVersion(); // Get the data mask for the format used in this QR Code. This will exclude\n    // some bits from reading as we wind through the bit matrix.\n\n    var dataMask = DataMask_1.default.values.get(formatInfo.getDataMask());\n    var dimension = this.bitMatrix.getHeight();\n    dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n    var functionPattern = version.buildFunctionPattern();\n    var readingUp = true;\n    var result = new Uint8Array(version.getTotalCodewords());\n    var resultOffset = 0;\n    var currentByte = 0;\n    var bitsRead = 0; // Read columns in pairs, from right to left\n\n    for (var j = dimension - 1; j > 0; j -= 2) {\n      if (j === 6) {\n        // Skip whole column with vertical alignment pattern\n        // saves time and makes the other code proceed more cleanly\n        j--;\n      } // Read alternatingly from bottom to top then top to bottom\n\n\n      for (var count = 0; count < dimension; count++) {\n        var i = readingUp ? dimension - 1 - count : count;\n\n        for (var col = 0; col < 2; col++) {\n          // Ignore bits covered by the function pattern\n          if (!functionPattern.get(j - col, i)) {\n            // Read a bit\n            bitsRead++;\n            currentByte <<= 1;\n\n            if (this.bitMatrix.get(j - col, i)) {\n              currentByte |= 1;\n            } // If we've made a whole byte, save it off\n\n\n            if (bitsRead === 8) {\n              result[resultOffset++] =\n              /*(byte) */\n              currentByte;\n              bitsRead = 0;\n              currentByte = 0;\n            }\n          }\n        }\n      }\n\n      readingUp = !readingUp; // readingUp ^= true; // readingUp = !readingUp; // switch directions\n    }\n\n    if (resultOffset !== version.getTotalCodewords()) {\n      throw new FormatException_1.default();\n    }\n\n    return result;\n  };\n  /**\r\n   * Revert the mask removal done while reading the code words. The bit matrix should revert to its original state.\r\n   */\n\n\n  BitMatrixParser.prototype.remask = function () {\n    if (this.parsedFormatInfo === null) {\n      return; // We have no format information, and have no data mask\n    }\n\n    var dataMask = DataMask_1.default.values[this.parsedFormatInfo.getDataMask()];\n    var dimension = this.bitMatrix.getHeight();\n    dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n  };\n  /**\r\n   * Prepare the parser for a mirrored operation.\r\n   * This flag has effect only on the {@link #readFormatInformation()} and the\r\n   * {@link #readVersion()}. Before proceeding with {@link #readCodewords()} the\r\n   * {@link #mirror()} method should be called.\r\n   *\r\n   * @param mirror Whether to read version and format information mirrored.\r\n   */\n\n\n  BitMatrixParser.prototype.setMirror = function (isMirror) {\n    this.parsedVersion = null;\n    this.parsedFormatInfo = null;\n    this.isMirror = isMirror;\n  };\n  /** Mirror the bit matrix in order to attempt a second reading. */\n\n\n  BitMatrixParser.prototype.mirror = function () {\n    var bitMatrix = this.bitMatrix;\n\n    for (var x = 0, width = bitMatrix.getWidth(); x < width; x++) {\n      for (var y = x + 1, height = bitMatrix.getHeight(); y < height; y++) {\n        if (bitMatrix.get(x, y) !== bitMatrix.get(y, x)) {\n          bitMatrix.flip(y, x);\n          bitMatrix.flip(x, y);\n        }\n      }\n    }\n  };\n\n  return BitMatrixParser;\n}();\n\nexports.default = BitMatrixParser;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will\r\n * use blocks of differing sizes within one version, so, this encapsulates the parameters for\r\n * each set of blocks. It also holds the number of error-correction codewords per block since it\r\n * will be the same across all blocks within one version.</p>\r\n */\n\nvar ECBlocks =\n/** @class */\nfunction () {\n  function ECBlocks(ecCodewordsPerBlock\n  /*int*/\n  ) {\n    var ecBlocks = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      ecBlocks[_i - 1] = arguments[_i];\n    }\n\n    this.ecCodewordsPerBlock = ecCodewordsPerBlock;\n    this.ecBlocks = ecBlocks;\n  }\n\n  ECBlocks.prototype.getECCodewordsPerBlock = function () {\n    return this.ecCodewordsPerBlock;\n  };\n\n  ECBlocks.prototype.getNumBlocks = function () {\n    var total = 0;\n    var ecBlocks = this.ecBlocks;\n\n    for (var _i = 0, ecBlocks_1 = ecBlocks; _i < ecBlocks_1.length; _i++) {\n      var ecBlock = ecBlocks_1[_i];\n      total += ecBlock.getCount();\n    }\n\n    return total;\n  };\n\n  ECBlocks.prototype.getTotalECCodewords = function () {\n    return this.ecCodewordsPerBlock * this.getNumBlocks();\n  };\n\n  ECBlocks.prototype.getECBlocks = function () {\n    return this.ecBlocks;\n  };\n\n  return ECBlocks;\n}();\n\nexports.default = ECBlocks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * <p>Encapsulates the parameters for one error-correction block in one symbol version.\r\n * This includes the number of data codewords, and the number of times a block with these\r\n * parameters is used consecutively in the QR code version's format.</p>\r\n */\n\nvar ECB =\n/** @class */\nfunction () {\n  function ECB(count\n  /*int*/\n  , dataCodewords\n  /*int*/\n  ) {\n    this.count = count;\n    this.dataCodewords = dataCodewords;\n  }\n\n  ECB.prototype.getCount = function () {\n    return this.count;\n  };\n\n  ECB.prototype.getDataCodewords = function () {\n    return this.dataCodewords;\n  };\n\n  return ECB;\n}();\n\nexports.default = ECB;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DataMaskValues;\n\n(function (DataMaskValues) {\n  DataMaskValues[DataMaskValues[\"DATA_MASK_000\"] = 0] = \"DATA_MASK_000\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_001\"] = 1] = \"DATA_MASK_001\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_010\"] = 2] = \"DATA_MASK_010\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_011\"] = 3] = \"DATA_MASK_011\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_100\"] = 4] = \"DATA_MASK_100\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_101\"] = 5] = \"DATA_MASK_101\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_110\"] = 6] = \"DATA_MASK_110\";\n  DataMaskValues[DataMaskValues[\"DATA_MASK_111\"] = 7] = \"DATA_MASK_111\";\n})(DataMaskValues = exports.DataMaskValues || (exports.DataMaskValues = {}));\n/**\r\n * <p>Encapsulates data masks for the data bits in a QR code, per ISO 18004:2006 6.8. Implementations\r\n * of this class can un-mask a raw BitMatrix. For simplicity, they will unmask the entire BitMatrix,\r\n * including areas used for finder patterns, timing patterns, etc. These areas should be unused\r\n * after the point they are unmasked anyway.</p>\r\n *\r\n * <p>Note that the diagram in section 6.8.1 is misleading since it indicates that i is column position\r\n * and j is row position. In fact, as the text says, i is row position and j is column position.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar DataMask =\n/** @class */\nfunction () {\n  // See ISO 18004:2006 6.8.1\n  function DataMask(value, isMasked) {\n    this.value = value;\n    this.isMasked = isMasked;\n  } // End of enum constants.\n\n  /**\r\n   * <p>Implementations of this method reverse the data masking process applied to a QR Code and\r\n   * make its bits ready to read.</p>\r\n   *\r\n   * @param bits representation of QR Code bits\r\n   * @param dimension dimension of QR Code, represented by bits, being unmasked\r\n   */\n\n\n  DataMask.prototype.unmaskBitMatrix = function (bits, dimension\n  /*int*/\n  ) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n\n  DataMask.values = new Map([\n  /**\r\n   * 000: mask bits for which (x + y) mod 2 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_000, new DataMask(DataMaskValues.DATA_MASK_000, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return (i + j & 0x01) === 0;\n  })],\n  /**\r\n   * 001: mask bits for which x mod 2 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_001, new DataMask(DataMaskValues.DATA_MASK_001, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return (i & 0x01) === 0;\n  })],\n  /**\r\n   * 010: mask bits for which y mod 3 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_010, new DataMask(DataMaskValues.DATA_MASK_010, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return j % 3 === 0;\n  })],\n  /**\r\n   * 011: mask bits for which (x + y) mod 3 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_011, new DataMask(DataMaskValues.DATA_MASK_011, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return (i + j) % 3 === 0;\n  })],\n  /**\r\n   * 100: mask bits for which (x/2 + y/3) mod 2 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_100, new DataMask(DataMaskValues.DATA_MASK_100, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return (Math.floor(i / 2) + Math.floor(j / 3) & 0x01) === 0;\n  })],\n  /**\r\n   * 101: mask bits for which xy mod 2 + xy mod 3 == 0\r\n   * equivalently, such that xy mod 6 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_101, new DataMask(DataMaskValues.DATA_MASK_101, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return i * j % 6 === 0;\n  })],\n  /**\r\n   * 110: mask bits for which (xy mod 2 + xy mod 3) mod 2 == 0\r\n   * equivalently, such that xy mod 6 < 3\r\n   */\n  [DataMaskValues.DATA_MASK_110, new DataMask(DataMaskValues.DATA_MASK_110, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return i * j % 6 < 3;\n  })],\n  /**\r\n   * 111: mask bits for which ((x+y)mod 2 + xy mod 3) mod 2 == 0\r\n   * equivalently, such that (x + y + xy mod 3) mod 2 == 0\r\n   */\n  [DataMaskValues.DATA_MASK_111, new DataMask(DataMaskValues.DATA_MASK_111, function (i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    return (i + j + i * j % 3 & 0x01) === 0;\n  })]]);\n  return DataMask;\n}();\n\nexports.default = DataMask;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\r\n * <p>Encapsulates a block of data within a QR Code. QR Codes may split their data into\r\n * multiple blocks, each of which is a unit of data and error-correction codewords. Each\r\n * is represented by an instance of this class.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar DataBlock =\n/** @class */\nfunction () {\n  function DataBlock(numDataCodewords\n  /*int*/\n  , codewords) {\n    this.numDataCodewords = numDataCodewords;\n    this.codewords = codewords;\n  }\n  /**\r\n   * <p>When QR Codes use multiple data blocks, they are actually interleaved.\r\n   * That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This\r\n   * method will separate the data into original blocks.</p>\r\n   *\r\n   * @param rawCodewords bytes as read directly from the QR Code\r\n   * @param version version of the QR Code\r\n   * @param ecLevel error-correction level of the QR Code\r\n   * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in the\r\n   *         QR Code\r\n   */\n\n\n  DataBlock.getDataBlocks = function (rawCodewords, version, ecLevel) {\n    if (rawCodewords.length !== version.getTotalCodewords()) {\n      throw new IllegalArgumentException_1.default();\n    } // Figure out the number and size of data blocks used by this version and\n    // error correction level\n\n\n    var ecBlocks = version.getECBlocksForLevel(ecLevel); // First count the total number of data blocks\n\n    var totalBlocks = 0;\n    var ecBlockArray = ecBlocks.getECBlocks();\n\n    for (var _i = 0, ecBlockArray_1 = ecBlockArray; _i < ecBlockArray_1.length; _i++) {\n      var ecBlock = ecBlockArray_1[_i];\n      totalBlocks += ecBlock.getCount();\n    } // Now establish DataBlocks of the appropriate size and number of data codewords\n\n\n    var result = new Array(totalBlocks);\n    var numResultBlocks = 0;\n\n    for (var _a = 0, ecBlockArray_2 = ecBlockArray; _a < ecBlockArray_2.length; _a++) {\n      var ecBlock = ecBlockArray_2[_a];\n\n      for (var i = 0; i < ecBlock.getCount(); i++) {\n        var numDataCodewords = ecBlock.getDataCodewords();\n        var numBlockCodewords = ecBlocks.getECCodewordsPerBlock() + numDataCodewords;\n        result[numResultBlocks++] = new DataBlock(numDataCodewords, new Uint8Array(numBlockCodewords));\n      }\n    } // All blocks have the same amount of data, except that the last n\n    // (where n may be 0) have 1 more byte. Figure out where these start.\n\n\n    var shorterBlocksTotalCodewords = result[0].codewords.length;\n    var longerBlocksStartAt = result.length - 1; // TYPESCRIPTPORT: check length is correct here\n\n    while (longerBlocksStartAt >= 0) {\n      var numCodewords = result[longerBlocksStartAt].codewords.length;\n\n      if (numCodewords === shorterBlocksTotalCodewords) {\n        break;\n      }\n\n      longerBlocksStartAt--;\n    }\n\n    longerBlocksStartAt++;\n    var shorterBlocksNumDataCodewords = shorterBlocksTotalCodewords - ecBlocks.getECCodewordsPerBlock(); // The last elements of result may be 1 element longer\n    // first fill out as many elements as all of them have\n\n    var rawCodewordsOffset = 0;\n\n    for (var i = 0; i < shorterBlocksNumDataCodewords; i++) {\n      for (var j = 0; j < numResultBlocks; j++) {\n        result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n      }\n    } // Fill out the last data block in the longer ones\n\n\n    for (var j = longerBlocksStartAt; j < numResultBlocks; j++) {\n      result[j].codewords[shorterBlocksNumDataCodewords] = rawCodewords[rawCodewordsOffset++];\n    } // Now add in error correction blocks\n\n\n    var max = result[0].codewords.length;\n\n    for (var i = shorterBlocksNumDataCodewords; i < max; i++) {\n      for (var j = 0; j < numResultBlocks; j++) {\n        var iOffset = j < longerBlocksStartAt ? i : i + 1;\n        result[j].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n      }\n    }\n\n    return result;\n  };\n\n  DataBlock.prototype.getNumDataCodewords = function () {\n    return this.numDataCodewords;\n  };\n\n  DataBlock.prototype.getCodewords = function () {\n    return this.codewords;\n  };\n\n  return DataBlock;\n}();\n\nexports.default = DataBlock;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BitSource_1 = require(\"../../common/BitSource\");\n\nvar CharacterSetECI_1 = require(\"../../common/CharacterSetECI\");\n\nvar DecoderResult_1 = require(\"../../common/DecoderResult\");\n\nvar StringUtils_1 = require(\"../../common/StringUtils\");\n\nvar Mode_1 = require(\"./Mode\");\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n\nvar StringEncoding_1 = require(\"../../util/StringEncoding\");\n\nvar FormatException_1 = require(\"../../FormatException\");\n/*import java.io.UnsupportedEncodingException;*/\n\n/*import java.util.ArrayList;*/\n\n/*import java.util.Collection;*/\n\n/*import java.util.List;*/\n\n/*import java.util.Map;*/\n\n/**\r\n * <p>QR Codes can encode text as bits in one of several modes, and can use multiple modes\r\n * in one QR Code. This class decodes the bits back into text.</p>\r\n *\r\n * <p>See ISO 18004:2006, 6.4.3 - 6.4.7</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar DecodedBitStreamParser =\n/** @class */\nfunction () {\n  function DecodedBitStreamParser() {}\n\n  DecodedBitStreamParser.decode = function (bytes, version, ecLevel, hints) {\n    var bits = new BitSource_1.default(bytes);\n    var result = new StringBuilder_1.default();\n    var byteSegments = new Array(); // 1\n    // TYPESCRIPTPORT: I do not use constructor with size 1 as in original Java means capacity and the array length is checked below\n\n    var symbolSequence = -1;\n    var parityData = -1;\n\n    try {\n      var currentCharacterSetECI = null;\n      var fc1InEffect = false;\n      var mode = void 0;\n\n      do {\n        // While still another segment to read...\n        if (bits.available() < 4) {\n          // OK, assume we're done. Really, a TERMINATOR mode should have been recorded here\n          mode = Mode_1.default.TERMINATOR;\n        } else {\n          var modeBits = bits.readBits(4);\n          mode = Mode_1.default.forBits(modeBits); // mode is encoded by 4 bits\n        }\n\n        switch (mode) {\n          case Mode_1.default.TERMINATOR:\n            break;\n\n          case Mode_1.default.FNC1_FIRST_POSITION:\n          case Mode_1.default.FNC1_SECOND_POSITION:\n            // We do little with FNC1 except alter the parsed result a bit according to the spec\n            fc1InEffect = true;\n            break;\n\n          case Mode_1.default.STRUCTURED_APPEND:\n            if (bits.available() < 16) {\n              throw new FormatException_1.default();\n            } // sequence number and parity is added later to the result metadata\n            // Read next 8 bits (symbol sequence #) and 8 bits (data: parity), then continue\n\n\n            symbolSequence = bits.readBits(8);\n            parityData = bits.readBits(8);\n            break;\n\n          case Mode_1.default.ECI:\n            // Count doesn't apply to ECI\n            var value = DecodedBitStreamParser.parseECIValue(bits);\n            currentCharacterSetECI = CharacterSetECI_1.default.getCharacterSetECIByValue(value);\n\n            if (currentCharacterSetECI === null) {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          case Mode_1.default.HANZI:\n            // First handle Hanzi mode which does not start with character count\n            // Chinese mode contains a sub set indicator right after mode indicator\n            var subset = bits.readBits(4);\n            var countHanzi = bits.readBits(mode.getCharacterCountBits(version));\n\n            if (subset === DecodedBitStreamParser.GB2312_SUBSET) {\n              DecodedBitStreamParser.decodeHanziSegment(bits, result, countHanzi);\n            }\n\n            break;\n\n          default:\n            // \"Normal\" QR code modes:\n            // How many characters will follow, encoded in this mode?\n            var count = bits.readBits(mode.getCharacterCountBits(version));\n\n            switch (mode) {\n              case Mode_1.default.NUMERIC:\n                DecodedBitStreamParser.decodeNumericSegment(bits, result, count);\n                break;\n\n              case Mode_1.default.ALPHANUMERIC:\n                DecodedBitStreamParser.decodeAlphanumericSegment(bits, result, count, fc1InEffect);\n                break;\n\n              case Mode_1.default.BYTE:\n                DecodedBitStreamParser.decodeByteSegment(bits, result, count, currentCharacterSetECI, byteSegments, hints);\n                break;\n\n              case Mode_1.default.KANJI:\n                DecodedBitStreamParser.decodeKanjiSegment(bits, result, count);\n                break;\n\n              default:\n                throw new FormatException_1.default();\n            }\n\n            break;\n        }\n      } while (mode !== Mode_1.default.TERMINATOR);\n    } catch (iae\n    /*: IllegalArgumentException*/\n    ) {\n      // from readBits() calls\n      throw new FormatException_1.default();\n    }\n\n    return new DecoderResult_1.default(bytes, result.toString(), byteSegments.length === 0 ? null : byteSegments, ecLevel === null ? null : ecLevel.toString(), symbolSequence, parityData);\n  };\n  /**\r\n   * See specification GBT 18284-2000\r\n   */\n\n\n  DecodedBitStreamParser.decodeHanziSegment = function (bits, result, count\n  /*int*/\n  ) {\n    // Don't crash trying to read more bits than we have available.\n    if (count * 13 > bits.available()) {\n      throw new FormatException_1.default();\n    } // Each character will require 2 bytes. Read the characters as 2-byte pairs\n    // and decode as GB2312 afterwards\n\n\n    var buffer = new Uint8Array(2 * count);\n    var offset = 0;\n\n    while (count > 0) {\n      // Each 13 bits encodes a 2-byte character\n      var twoBytes = bits.readBits(13);\n      var assembledTwoBytes = twoBytes / 0x060 << 8 & 0xFFFFFFFF | twoBytes % 0x060;\n\n      if (assembledTwoBytes < 0x003BF) {\n        // In the 0xA1A1 to 0xAAFE range\n        assembledTwoBytes += 0x0A1A1;\n      } else {\n        // In the 0xB0A1 to 0xFAFE range\n        assembledTwoBytes += 0x0A6A1;\n      }\n\n      buffer[offset] =\n      /*(byte) */\n      assembledTwoBytes >> 8 & 0xFF;\n      buffer[offset + 1] =\n      /*(byte) */\n      assembledTwoBytes & 0xFF;\n      offset += 2;\n      count--;\n    }\n\n    try {\n      result.append(StringEncoding_1.default.decode(buffer, StringUtils_1.default.GB2312)); // TYPESCRIPTPORT: TODO: implement GB2312 decode. StringView from MDN could be a starting point\n    } catch (ignored\n    /*: UnsupportedEncodingException*/\n    ) {\n      throw new FormatException_1.default(ignored);\n    }\n  };\n\n  DecodedBitStreamParser.decodeKanjiSegment = function (bits, result, count\n  /*int*/\n  ) {\n    // Don't crash trying to read more bits than we have available.\n    if (count * 13 > bits.available()) {\n      throw new FormatException_1.default();\n    } // Each character will require 2 bytes. Read the characters as 2-byte pairs\n    // and decode as Shift_JIS afterwards\n\n\n    var buffer = new Uint8Array(2 * count);\n    var offset = 0;\n\n    while (count > 0) {\n      // Each 13 bits encodes a 2-byte character\n      var twoBytes = bits.readBits(13);\n      var assembledTwoBytes = twoBytes / 0x0C0 << 8 & 0xFFFFFFFF | twoBytes % 0x0C0;\n\n      if (assembledTwoBytes < 0x01F00) {\n        // In the 0x8140 to 0x9FFC range\n        assembledTwoBytes += 0x08140;\n      } else {\n        // In the 0xE040 to 0xEBBF range\n        assembledTwoBytes += 0x0C140;\n      }\n\n      buffer[offset] =\n      /*(byte) */\n      assembledTwoBytes >> 8;\n      buffer[offset + 1] =\n      /*(byte) */\n      assembledTwoBytes;\n      offset += 2;\n      count--;\n    } // Shift_JIS may not be supported in some environments:\n\n\n    try {\n      result.append(StringEncoding_1.default.decode(buffer, StringUtils_1.default.SHIFT_JIS)); // TYPESCRIPTPORT: TODO: implement SHIFT_JIS decode. StringView from MDN could be a starting point\n    } catch (ignored\n    /*: UnsupportedEncodingException*/\n    ) {\n      throw new FormatException_1.default(ignored);\n    }\n  };\n\n  DecodedBitStreamParser.decodeByteSegment = function (bits, result, count\n  /*int*/\n  , currentCharacterSetECI, byteSegments, hints) {\n    // Don't crash trying to read more bits than we have available.\n    if (8 * count > bits.available()) {\n      throw new FormatException_1.default();\n    }\n\n    var readBytes = new Uint8Array(count);\n\n    for (var i = 0; i < count; i++) {\n      readBytes[i] =\n      /*(byte) */\n      bits.readBits(8);\n    }\n\n    var encoding;\n\n    if (currentCharacterSetECI === null) {\n      // The spec isn't clear on this mode; see\n      // section 6.4.5: t does not say which encoding to assuming\n      // upon decoding. I have seen ISO-8859-1 used as well as\n      // Shift_JIS -- without anything like an ECI designator to\n      // give a hint.\n      encoding = StringUtils_1.default.guessEncoding(readBytes, hints);\n    } else {\n      encoding = currentCharacterSetECI.getName();\n    }\n\n    try {\n      result.append(StringEncoding_1.default.decode(readBytes, encoding));\n    } catch (ignored\n    /*: UnsupportedEncodingException*/\n    ) {\n      throw new FormatException_1.default(ignored);\n    }\n\n    byteSegments.push(readBytes);\n  };\n\n  DecodedBitStreamParser.toAlphaNumericChar = function (value\n  /*int*/\n  ) {\n    if (value >= DecodedBitStreamParser.ALPHANUMERIC_CHARS.length) {\n      throw new FormatException_1.default();\n    }\n\n    return DecodedBitStreamParser.ALPHANUMERIC_CHARS[value];\n  };\n\n  DecodedBitStreamParser.decodeAlphanumericSegment = function (bits, result, count\n  /*int*/\n  , fc1InEffect) {\n    // Read two characters at a time\n    var start = result.length();\n\n    while (count > 1) {\n      if (bits.available() < 11) {\n        throw new FormatException_1.default();\n      }\n\n      var nextTwoCharsBits = bits.readBits(11);\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(nextTwoCharsBits / 45)));\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(nextTwoCharsBits % 45));\n      count -= 2;\n    }\n\n    if (count === 1) {\n      // special case: one character left\n      if (bits.available() < 6) {\n        throw new FormatException_1.default();\n      }\n\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(bits.readBits(6)));\n    } // See section 6.4.8.1, 6.4.8.2\n\n\n    if (fc1InEffect) {\n      // We need to massage the result a bit if in an FNC1 mode:\n      for (var i = start; i < result.length(); i++) {\n        if (result.charAt(i) === '%') {\n          if (i < result.length() - 1 && result.charAt(i + 1) === '%') {\n            // %% is rendered as %\n            result.deleteCharAt(i + 1);\n          } else {\n            // In alpha mode, % should be converted to FNC1 separator 0x1D\n            result.setCharAt(i, String.fromCharCode(0x1D));\n          }\n        }\n      }\n    }\n  };\n\n  DecodedBitStreamParser.decodeNumericSegment = function (bits, result, count\n  /*int*/\n  ) {\n    // Read three digits at a time\n    while (count >= 3) {\n      // Each 10 bits encodes three digits\n      if (bits.available() < 10) {\n        throw new FormatException_1.default();\n      }\n\n      var threeDigitsBits = bits.readBits(10);\n\n      if (threeDigitsBits >= 1000) {\n        throw new FormatException_1.default();\n      }\n\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(threeDigitsBits / 100)));\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(threeDigitsBits / 10) % 10));\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(threeDigitsBits % 10));\n      count -= 3;\n    }\n\n    if (count === 2) {\n      // Two digits left over to read, encoded in 7 bits\n      if (bits.available() < 7) {\n        throw new FormatException_1.default();\n      }\n\n      var twoDigitsBits = bits.readBits(7);\n\n      if (twoDigitsBits >= 100) {\n        throw new FormatException_1.default();\n      }\n\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(twoDigitsBits / 10)));\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(twoDigitsBits % 10));\n    } else if (count === 1) {\n      // One digit left over to read\n      if (bits.available() < 4) {\n        throw new FormatException_1.default();\n      }\n\n      var digitBits = bits.readBits(4);\n\n      if (digitBits >= 10) {\n        throw new FormatException_1.default();\n      }\n\n      result.append(DecodedBitStreamParser.toAlphaNumericChar(digitBits));\n    }\n  };\n\n  DecodedBitStreamParser.parseECIValue = function (bits) {\n    var firstByte = bits.readBits(8);\n\n    if ((firstByte & 0x80) === 0) {\n      // just one byte\n      return firstByte & 0x7F;\n    }\n\n    if ((firstByte & 0xC0) === 0x80) {\n      // two bytes\n      var secondByte = bits.readBits(8);\n      return (firstByte & 0x3F) << 8 & 0xFFFFFFFF | secondByte;\n    }\n\n    if ((firstByte & 0xE0) === 0xC0) {\n      // three bytes\n      var secondThirdBytes = bits.readBits(16);\n      return (firstByte & 0x1F) << 16 & 0xFFFFFFFF | secondThirdBytes;\n    }\n\n    throw new FormatException_1.default();\n  };\n  /**\r\n   * See ISO 18004:2006, 6.4.4 Table 5\r\n   */\n\n\n  DecodedBitStreamParser.ALPHANUMERIC_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\n  DecodedBitStreamParser.GB2312_SUBSET = 1;\n  return DecodedBitStreamParser;\n}();\n\nexports.default = DecodedBitStreamParser;\n\nfunction Uint8ArrayToString(a) {\n  var CHUNK_SZ = 0x8000;\n  var c = new StringBuilder_1.default();\n\n  for (var i = 0, length_1 = a.length; i < length_1; i += CHUNK_SZ) {\n    c.append(String.fromCharCode.apply(null, a.subarray(i, i + CHUNK_SZ)));\n  }\n\n  return c.toString();\n}","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.detector {*/\n\nvar DecodeHintType_1 = require(\"../../DecodeHintType\");\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar DetectorResult_1 = require(\"../../common/DetectorResult\");\n\nvar GridSamplerInstance_1 = require(\"../../common/GridSamplerInstance\");\n\nvar PerspectiveTransform_1 = require(\"../../common/PerspectiveTransform\");\n\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n\nvar Version_1 = require(\"../decoder/Version\");\n\nvar FinderPatternFinder_1 = require(\"./FinderPatternFinder\");\n\nvar AlignmentPatternFinder_1 = require(\"./AlignmentPatternFinder\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n/*import java.util.Map;*/\n\n/**\r\n * <p>Encapsulates logic that can detect a QR Code in an image, even if the QR Code\r\n * is rotated or skewed, or partially obscured.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Detector =\n/** @class */\nfunction () {\n  function Detector(image) {\n    this.image = image;\n  }\n\n  Detector.prototype.getImage = function () {\n    return this.image;\n  };\n\n  Detector.prototype.getResultPointCallback = function () {\n    return this.resultPointCallback;\n  };\n  /**\r\n   * <p>Detects a QR Code in an image.</p>\r\n   *\r\n   * @return {@link DetectorResult} encapsulating results of detecting a QR Code\r\n   * @throws NotFoundException if QR Code cannot be found\r\n   * @throws FormatException if a QR Code cannot be decoded\r\n   */\n  // public detect(): DetectorResult /*throws NotFoundException, FormatException*/ {\n  //   return detect(null)\n  // }\n\n  /**\r\n   * <p>Detects a QR Code in an image.</p>\r\n   *\r\n   * @param hints optional hints to detector\r\n   * @return {@link DetectorResult} encapsulating results of detecting a QR Code\r\n   * @throws NotFoundException if QR Code cannot be found\r\n   * @throws FormatException if a QR Code cannot be decoded\r\n   */\n\n\n  Detector.prototype.detect = function (hints) {\n    this.resultPointCallback = hints === null || hints === undefined ? null :\n    /*(ResultPointCallback) */\n    hints.get(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK);\n    var finder = new FinderPatternFinder_1.default(this.image, this.resultPointCallback);\n    var info = finder.find(hints);\n    return this.processFinderPatternInfo(info);\n  };\n\n  Detector.prototype.processFinderPatternInfo = function (info) {\n    var topLeft = info.getTopLeft();\n    var topRight = info.getTopRight();\n    var bottomLeft = info.getBottomLeft();\n    var moduleSize = this.calculateModuleSize(topLeft, topRight, bottomLeft);\n\n    if (moduleSize < 1.0) {\n      throw new NotFoundException_1.default('No pattern found in proccess finder.');\n    }\n\n    var dimension = Detector.computeDimension(topLeft, topRight, bottomLeft, moduleSize);\n    var provisionalVersion = Version_1.default.getProvisionalVersionForDimension(dimension);\n    var modulesBetweenFPCenters = provisionalVersion.getDimensionForVersion() - 7;\n    var alignmentPattern = null; // Anything above version 1 has an alignment pattern\n\n    if (provisionalVersion.getAlignmentPatternCenters().length > 0) {\n      // Guess where a \"bottom right\" finder pattern would have been\n      var bottomRightX = topRight.getX() - topLeft.getX() + bottomLeft.getX();\n      var bottomRightY = topRight.getY() - topLeft.getY() + bottomLeft.getY(); // Estimate that alignment pattern is closer by 3 modules\n      // from \"bottom right\" to known top left location\n\n      var correctionToTopLeft = 1.0 - 3.0 / modulesBetweenFPCenters;\n      var estAlignmentX =\n      /*(int) */\n      Math.floor(topLeft.getX() + correctionToTopLeft * (bottomRightX - topLeft.getX()));\n      var estAlignmentY =\n      /*(int) */\n      Math.floor(topLeft.getY() + correctionToTopLeft * (bottomRightY - topLeft.getY())); // Kind of arbitrary -- expand search radius before giving up\n\n      for (var i = 4; i <= 16; i <<= 1) {\n        try {\n          alignmentPattern = this.findAlignmentInRegion(moduleSize, estAlignmentX, estAlignmentY, i);\n          break;\n        } catch (re\n        /*NotFoundException*/\n        ) {\n          if (!(re instanceof NotFoundException_1.default)) {\n            throw re;\n          } // try next round\n\n        }\n      } // If we didn't find alignment pattern... well try anyway without it\n\n    }\n\n    var transform = Detector.createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension);\n    var bits = Detector.sampleGrid(this.image, transform, dimension);\n    var points;\n\n    if (alignmentPattern === null) {\n      points = [bottomLeft, topLeft, topRight];\n    } else {\n      points = [bottomLeft, topLeft, topRight, alignmentPattern];\n    }\n\n    return new DetectorResult_1.default(bits, points);\n  };\n\n  Detector.createTransform = function (topLeft, topRight, bottomLeft, alignmentPattern, dimension\n  /*int*/\n  ) {\n    var dimMinusThree = dimension - 3.5;\n    var bottomRightX;\n    /*float*/\n\n    var bottomRightY;\n    /*float*/\n\n    var sourceBottomRightX;\n    /*float*/\n\n    var sourceBottomRightY;\n    /*float*/\n\n    if (alignmentPattern !== null) {\n      bottomRightX = alignmentPattern.getX();\n      bottomRightY = alignmentPattern.getY();\n      sourceBottomRightX = dimMinusThree - 3.0;\n      sourceBottomRightY = sourceBottomRightX;\n    } else {\n      // Don't have an alignment pattern, just make up the bottom-right point\n      bottomRightX = topRight.getX() - topLeft.getX() + bottomLeft.getX();\n      bottomRightY = topRight.getY() - topLeft.getY() + bottomLeft.getY();\n      sourceBottomRightX = dimMinusThree;\n      sourceBottomRightY = dimMinusThree;\n    }\n\n    return PerspectiveTransform_1.default.quadrilateralToQuadrilateral(3.5, 3.5, dimMinusThree, 3.5, sourceBottomRightX, sourceBottomRightY, 3.5, dimMinusThree, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRightX, bottomRightY, bottomLeft.getX(), bottomLeft.getY());\n  };\n\n  Detector.sampleGrid = function (image, transform, dimension\n  /*int*/\n  ) {\n    var sampler = GridSamplerInstance_1.default.getInstance();\n    return sampler.sampleGridWithTransform(image, dimension, dimension, transform);\n  };\n  /**\r\n   * <p>Computes the dimension (number of modules on a size) of the QR Code based on the position\r\n   * of the finder patterns and estimated module size.</p>\r\n   */\n\n\n  Detector.computeDimension = function (topLeft, topRight, bottomLeft, moduleSize\n  /*float*/\n  ) {\n    var tltrCentersDimension = MathUtils_1.default.round(ResultPoint_1.default.distance(topLeft, topRight) / moduleSize);\n    var tlblCentersDimension = MathUtils_1.default.round(ResultPoint_1.default.distance(topLeft, bottomLeft) / moduleSize);\n    var dimension = Math.floor((tltrCentersDimension + tlblCentersDimension) / 2) + 7;\n\n    switch (dimension & 0x03) {\n      // mod 4\n      case 0:\n        dimension++;\n        break;\n      // 1? do nothing\n\n      case 2:\n        dimension--;\n        break;\n\n      case 3:\n        throw new NotFoundException_1.default('Dimensions could be not found.');\n    }\n\n    return dimension;\n  };\n  /**\r\n   * <p>Computes an average estimated module size based on estimated derived from the positions\r\n   * of the three finder patterns.</p>\r\n   *\r\n   * @param topLeft detected top-left finder pattern center\r\n   * @param topRight detected top-right finder pattern center\r\n   * @param bottomLeft detected bottom-left finder pattern center\r\n   * @return estimated module size\r\n   */\n\n\n  Detector.prototype.calculateModuleSize = function (topLeft, topRight, bottomLeft) {\n    // Take the average\n    return (this.calculateModuleSizeOneWay(topLeft, topRight) + this.calculateModuleSizeOneWay(topLeft, bottomLeft)) / 2.0;\n  };\n  /**\r\n   * <p>Estimates module size based on two finder patterns -- it uses\r\n   * {@link #sizeOfBlackWhiteBlackRunBothWays(int, int, int, int)} to figure the\r\n   * width of each, measuring along the axis between their centers.</p>\r\n   */\n\n\n  Detector.prototype.calculateModuleSizeOneWay = function (pattern, otherPattern) {\n    var moduleSizeEst1 = this.sizeOfBlackWhiteBlackRunBothWays(\n    /*(int) */\n    Math.floor(pattern.getX()),\n    /*(int) */\n    Math.floor(pattern.getY()),\n    /*(int) */\n    Math.floor(otherPattern.getX()),\n    /*(int) */\n    Math.floor(otherPattern.getY()));\n    var moduleSizeEst2 = this.sizeOfBlackWhiteBlackRunBothWays(\n    /*(int) */\n    Math.floor(otherPattern.getX()),\n    /*(int) */\n    Math.floor(otherPattern.getY()),\n    /*(int) */\n    Math.floor(pattern.getX()),\n    /*(int) */\n    Math.floor(pattern.getY()));\n\n    if (isNaN(moduleSizeEst1)) {\n      return moduleSizeEst2 / 7.0;\n    }\n\n    if (isNaN(moduleSizeEst2)) {\n      return moduleSizeEst1 / 7.0;\n    } // Average them, and divide by 7 since we've counted the width of 3 black modules,\n    // and 1 white and 1 black module on either side. Ergo, divide sum by 14.\n\n\n    return (moduleSizeEst1 + moduleSizeEst2) / 14.0;\n  };\n  /**\r\n   * See {@link #sizeOfBlackWhiteBlackRun(int, int, int, int)}; computes the total width of\r\n   * a finder pattern by looking for a black-white-black run from the center in the direction\r\n   * of another point (another finder pattern center), and in the opposite direction too.\r\n   */\n\n\n  Detector.prototype.sizeOfBlackWhiteBlackRunBothWays = function (fromX\n  /*int*/\n  , fromY\n  /*int*/\n  , toX\n  /*int*/\n  , toY\n  /*int*/\n  ) {\n    var result = this.sizeOfBlackWhiteBlackRun(fromX, fromY, toX, toY); // Now count other way -- don't run off image though of course\n\n    var scale = 1.0;\n    var otherToX = fromX - (toX - fromX);\n\n    if (otherToX < 0) {\n      scale = fromX / (\n      /*(float) */\n      fromX - otherToX);\n      otherToX = 0;\n    } else if (otherToX >= this.image.getWidth()) {\n      scale = (this.image.getWidth() - 1 - fromX) / (\n      /*(float) */\n      otherToX - fromX);\n      otherToX = this.image.getWidth() - 1;\n    }\n\n    var otherToY =\n    /*(int) */\n    Math.floor(fromY - (toY - fromY) * scale);\n    scale = 1.0;\n\n    if (otherToY < 0) {\n      scale = fromY / (\n      /*(float) */\n      fromY - otherToY);\n      otherToY = 0;\n    } else if (otherToY >= this.image.getHeight()) {\n      scale = (this.image.getHeight() - 1 - fromY) / (\n      /*(float) */\n      otherToY - fromY);\n      otherToY = this.image.getHeight() - 1;\n    }\n\n    otherToX =\n    /*(int) */\n    Math.floor(fromX + (otherToX - fromX) * scale);\n    result += this.sizeOfBlackWhiteBlackRun(fromX, fromY, otherToX, otherToY); // Middle pixel is double-counted this way; subtract 1\n\n    return result - 1.0;\n  };\n  /**\r\n   * <p>This method traces a line from a point in the image, in the direction towards another point.\r\n   * It begins in a black region, and keeps going until it finds white, then black, then white again.\r\n   * It reports the distance from the start to this point.</p>\r\n   *\r\n   * <p>This is used when figuring out how wide a finder pattern is, when the finder pattern\r\n   * may be skewed or rotated.</p>\r\n   */\n\n\n  Detector.prototype.sizeOfBlackWhiteBlackRun = function (fromX\n  /*int*/\n  , fromY\n  /*int*/\n  , toX\n  /*int*/\n  , toY\n  /*int*/\n  ) {\n    // Mild variant of Bresenham's algorithm\n    // see http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n    var steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n\n    if (steep) {\n      var temp = fromX;\n      fromX = fromY;\n      fromY = temp;\n      temp = toX;\n      toX = toY;\n      toY = temp;\n    }\n\n    var dx = Math.abs(toX - fromX);\n    var dy = Math.abs(toY - fromY);\n    var error = -dx / 2;\n    var xstep = fromX < toX ? 1 : -1;\n    var ystep = fromY < toY ? 1 : -1; // In black pixels, looking for white, first or second time.\n\n    var state = 0; // Loop up until x == toX, but not beyond\n\n    var xLimit = toX + xstep;\n\n    for (var x = fromX, y = fromY; x !== xLimit; x += xstep) {\n      var realX = steep ? y : x;\n      var realY = steep ? x : y; // Does current pixel mean we have moved white to black or vice versa?\n      // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n      // color, advance to next state or end if we are in state 2 already\n\n      if (state === 1 === this.image.get(realX, realY)) {\n        if (state === 2) {\n          return MathUtils_1.default.distance(x, y, fromX, fromY);\n        }\n\n        state++;\n      }\n\n      error += dy;\n\n      if (error > 0) {\n        if (y === toY) {\n          break;\n        }\n\n        y += ystep;\n        error -= dx;\n      }\n    } // Found black-white-black; give the benefit of the doubt that the next pixel outside the image\n    // is \"white\" so this last point at (toX+xStep,toY) is the right ending. This is really a\n    // small approximation; (toX+xStep,toY+yStep) might be really correct. Ignore this.\n\n\n    if (state === 2) {\n      return MathUtils_1.default.distance(toX + xstep, toY, fromX, fromY);\n    } // else we didn't find even black-white-black; no estimate is really possible\n\n\n    return NaN;\n  };\n  /**\r\n   * <p>Attempts to locate an alignment pattern in a limited region of the image, which is\r\n   * guessed to contain it. This method uses {@link AlignmentPattern}.</p>\r\n   *\r\n   * @param overallEstModuleSize estimated module size so far\r\n   * @param estAlignmentX x coordinate of center of area probably containing alignment pattern\r\n   * @param estAlignmentY y coordinate of above\r\n   * @param allowanceFactor number of pixels in all directions to search from the center\r\n   * @return {@link AlignmentPattern} if found, or null otherwise\r\n   * @throws NotFoundException if an unexpected error occurs during detection\r\n   */\n\n\n  Detector.prototype.findAlignmentInRegion = function (overallEstModuleSize\n  /*float*/\n  , estAlignmentX\n  /*int*/\n  , estAlignmentY\n  /*int*/\n  , allowanceFactor\n  /*float*/\n  ) {\n    // Look for an alignment pattern (3 modules in size) around where it\n    // should be\n    var allowance =\n    /*(int) */\n    Math.floor(allowanceFactor * overallEstModuleSize);\n    var alignmentAreaLeftX = Math.max(0, estAlignmentX - allowance);\n    var alignmentAreaRightX = Math.min(this.image.getWidth() - 1, estAlignmentX + allowance);\n\n    if (alignmentAreaRightX - alignmentAreaLeftX < overallEstModuleSize * 3) {\n      throw new NotFoundException_1.default('Alignment top exceeds estimated module size.');\n    }\n\n    var alignmentAreaTopY = Math.max(0, estAlignmentY - allowance);\n    var alignmentAreaBottomY = Math.min(this.image.getHeight() - 1, estAlignmentY + allowance);\n\n    if (alignmentAreaBottomY - alignmentAreaTopY < overallEstModuleSize * 3) {\n      throw new NotFoundException_1.default('Alignment bottom exceeds estimated module size.');\n    }\n\n    var alignmentFinder = new AlignmentPatternFinder_1.default(this.image, alignmentAreaLeftX, alignmentAreaTopY, alignmentAreaRightX - alignmentAreaLeftX, alignmentAreaBottomY - alignmentAreaTopY, overallEstModuleSize, this.resultPointCallback);\n    return alignmentFinder.find();\n  };\n\n  return Detector;\n}();\n\nexports.default = Detector;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.detector {*/\n\nvar DecodeHintType_1 = require(\"../../DecodeHintType\");\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar FinderPattern_1 = require(\"./FinderPattern\");\n\nvar FinderPatternInfo_1 = require(\"./FinderPatternInfo\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n/*import java.io.Serializable;*/\n\n/*import java.util.ArrayList;*/\n\n/*import java.util.Collections;*/\n\n/*import java.util.Comparator;*/\n\n/*import java.util.List;*/\n\n/*import java.util.Map;*/\n\n/**\r\n * <p>This class attempts to find finder patterns in a QR Code. Finder patterns are the square\r\n * markers at three corners of a QR Code.</p>\r\n *\r\n * <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar FinderPatternFinder =\n/** @class */\nfunction () {\n  /**\r\n   * <p>Creates a finder that will search the image for three finder patterns.</p>\r\n   *\r\n   * @param image image to search\r\n   */\n  // public constructor(image: BitMatrix) {\n  //   this(image, null)\n  // }\n  function FinderPatternFinder(image, resultPointCallback) {\n    this.image = image;\n    this.resultPointCallback = resultPointCallback;\n    this.possibleCenters = [];\n    this.crossCheckStateCount = new Int32Array(5);\n    this.resultPointCallback = resultPointCallback;\n  }\n\n  FinderPatternFinder.prototype.getImage = function () {\n    return this.image;\n  };\n\n  FinderPatternFinder.prototype.getPossibleCenters = function () {\n    return this.possibleCenters;\n  };\n\n  FinderPatternFinder.prototype.find = function (hints) {\n    var tryHarder = hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType_1.default.TRY_HARDER);\n    var pureBarcode = hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType_1.default.PURE_BARCODE);\n    var image = this.image;\n    var maxI = image.getHeight();\n    var maxJ = image.getWidth(); // We are looking for black/white/black/white/black modules in\n    // 1:1:3:1:1 ratio; this tracks the number of such modules seen so far\n    // Let's assume that the maximum version QR Code we support takes up 1/4 the height of the\n    // image, and then account for the center being 3 modules in size. This gives the smallest\n    // number of pixels the center could be, so skip this often. When trying harder, look for all\n    // QR versions regardless of how dense they are.\n\n    var iSkip = Math.floor(3 * maxI / (4 * FinderPatternFinder.MAX_MODULES));\n\n    if (iSkip < FinderPatternFinder.MIN_SKIP || tryHarder) {\n      iSkip = FinderPatternFinder.MIN_SKIP;\n    }\n\n    var done = false;\n    var stateCount = new Int32Array(5);\n\n    for (var i = iSkip - 1; i < maxI && !done; i += iSkip) {\n      // Get a row of black/white values\n      stateCount[0] = 0;\n      stateCount[1] = 0;\n      stateCount[2] = 0;\n      stateCount[3] = 0;\n      stateCount[4] = 0;\n      var currentState = 0;\n\n      for (var j = 0; j < maxJ; j++) {\n        if (image.get(j, i)) {\n          // Black pixel\n          if ((currentState & 1) === 1) {\n            // Counting white pixels\n            currentState++;\n          }\n\n          stateCount[currentState]++;\n        } else {\n          // White pixel\n          if ((currentState & 1) === 0) {\n            // Counting black pixels\n            if (currentState === 4) {\n              // A winner?\n              if (FinderPatternFinder.foundPatternCross(stateCount)) {\n                // Yes\n                var confirmed = this.handlePossibleCenter(stateCount, i, j, pureBarcode);\n\n                if (confirmed === true) {\n                  // Start examining every other line. Checking each line turned out to be too\n                  // expensive and didn't improve performance.\n                  iSkip = 2;\n\n                  if (this.hasSkipped === true) {\n                    done = this.haveMultiplyConfirmedCenters();\n                  } else {\n                    var rowSkip = this.findRowSkip();\n\n                    if (rowSkip > stateCount[2]) {\n                      // Skip rows between row of lower confirmed center\n                      // and top of presumed third confirmed center\n                      // but back up a bit to get a full chance of detecting\n                      // it, entire width of center of finder pattern\n                      // Skip by rowSkip, but back off by stateCount[2] (size of last center\n                      // of pattern we saw) to be conservative, and also back off by iSkip which\n                      // is about to be re-added\n                      i += rowSkip - stateCount[2] - iSkip;\n                      j = maxJ - 1;\n                    }\n                  }\n                } else {\n                  stateCount[0] = stateCount[2];\n                  stateCount[1] = stateCount[3];\n                  stateCount[2] = stateCount[4];\n                  stateCount[3] = 1;\n                  stateCount[4] = 0;\n                  currentState = 3;\n                  continue;\n                } // Clear state to start looking again\n\n\n                currentState = 0;\n                stateCount[0] = 0;\n                stateCount[1] = 0;\n                stateCount[2] = 0;\n                stateCount[3] = 0;\n                stateCount[4] = 0;\n              } else {\n                // No, shift counts back by two\n                stateCount[0] = stateCount[2];\n                stateCount[1] = stateCount[3];\n                stateCount[2] = stateCount[4];\n                stateCount[3] = 1;\n                stateCount[4] = 0;\n                currentState = 3;\n              }\n            } else {\n              stateCount[++currentState]++;\n            }\n          } else {\n            // Counting white pixels\n            stateCount[currentState]++;\n          }\n        }\n      }\n\n      if (FinderPatternFinder.foundPatternCross(stateCount)) {\n        var confirmed = this.handlePossibleCenter(stateCount, i, maxJ, pureBarcode);\n\n        if (confirmed === true) {\n          iSkip = stateCount[0];\n\n          if (this.hasSkipped) {\n            // Found a third one\n            done = this.haveMultiplyConfirmedCenters();\n          }\n        }\n      }\n    }\n\n    var patternInfo = this.selectBestPatterns();\n    ResultPoint_1.default.orderBestPatterns(patternInfo);\n    return new FinderPatternInfo_1.default(patternInfo);\n  };\n  /**\r\n   * Given a count of black/white/black/white/black pixels just seen and an end position,\r\n   * figures the location of the center of this run.\r\n   */\n\n\n  FinderPatternFinder.centerFromEnd = function (stateCount, end\n  /*int*/\n  ) {\n    return end - stateCount[4] - stateCount[3] - stateCount[2] / 2.0;\n  };\n  /**\r\n   * @param stateCount count of black/white/black/white/black pixels just read\r\n   * @return true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios\r\n   *         used by finder patterns to be considered a match\r\n   */\n\n\n  FinderPatternFinder.foundPatternCross = function (stateCount) {\n    var totalModuleSize = 0;\n\n    for (var i = 0; i < 5; i++) {\n      var count = stateCount[i];\n\n      if (count === 0) {\n        return false;\n      }\n\n      totalModuleSize += count;\n    }\n\n    if (totalModuleSize < 7) {\n      return false;\n    }\n\n    var moduleSize = totalModuleSize / 7.0;\n    var maxVariance = moduleSize / 2.0; // Allow less than 50% variance from 1-1-3-1-1 proportions\n\n    return Math.abs(moduleSize - stateCount[0]) < maxVariance && Math.abs(moduleSize - stateCount[1]) < maxVariance && Math.abs(3.0 * moduleSize - stateCount[2]) < 3 * maxVariance && Math.abs(moduleSize - stateCount[3]) < maxVariance && Math.abs(moduleSize - stateCount[4]) < maxVariance;\n  };\n\n  FinderPatternFinder.prototype.getCrossCheckStateCount = function () {\n    var crossCheckStateCount = this.crossCheckStateCount;\n    crossCheckStateCount[0] = 0;\n    crossCheckStateCount[1] = 0;\n    crossCheckStateCount[2] = 0;\n    crossCheckStateCount[3] = 0;\n    crossCheckStateCount[4] = 0;\n    return crossCheckStateCount;\n  };\n  /**\r\n   * After a vertical and horizontal scan finds a potential finder pattern, this method\r\n   * \"cross-cross-cross-checks\" by scanning down diagonally through the center of the possible\r\n   * finder pattern to see if the same proportion is detected.\r\n   *\r\n   * @param startI row where a finder pattern was detected\r\n   * @param centerJ center of the section that appears to cross a finder pattern\r\n   * @param maxCount maximum reasonable number of modules that should be\r\n   *  observed in any reading state, based on the results of the horizontal scan\r\n   * @param originalStateCountTotal The original state count total.\r\n   * @return true if proportions are withing expected limits\r\n   */\n\n\n  FinderPatternFinder.prototype.crossCheckDiagonal = function (startI\n  /*int*/\n  , centerJ\n  /*int*/\n  , maxCount\n  /*int*/\n  , originalStateCountTotal\n  /*int*/\n  ) {\n    var stateCount = this.getCrossCheckStateCount(); // Start counting up, left from center finding black center mass\n\n    var i = 0;\n    var image = this.image;\n\n    while (startI >= i && centerJ >= i && image.get(centerJ - i, startI - i)) {\n      stateCount[2]++;\n      i++;\n    }\n\n    if (startI < i || centerJ < i) {\n      return false;\n    } // Continue up, left finding white space\n\n\n    while (startI >= i && centerJ >= i && !image.get(centerJ - i, startI - i) && stateCount[1] <= maxCount) {\n      stateCount[1]++;\n      i++;\n    } // If already too many modules in this state or ran off the edge:\n\n\n    if (startI < i || centerJ < i || stateCount[1] > maxCount) {\n      return false;\n    } // Continue up, left finding black border\n\n\n    while (startI >= i && centerJ >= i && image.get(centerJ - i, startI - i) && stateCount[0] <= maxCount) {\n      stateCount[0]++;\n      i++;\n    }\n\n    if (stateCount[0] > maxCount) {\n      return false;\n    }\n\n    var maxI = image.getHeight();\n    var maxJ = image.getWidth(); // Now also count down, right from center\n\n    i = 1;\n\n    while (startI + i < maxI && centerJ + i < maxJ && image.get(centerJ + i, startI + i)) {\n      stateCount[2]++;\n      i++;\n    } // Ran off the edge?\n\n\n    if (startI + i >= maxI || centerJ + i >= maxJ) {\n      return false;\n    }\n\n    while (startI + i < maxI && centerJ + i < maxJ && !image.get(centerJ + i, startI + i) && stateCount[3] < maxCount) {\n      stateCount[3]++;\n      i++;\n    }\n\n    if (startI + i >= maxI || centerJ + i >= maxJ || stateCount[3] >= maxCount) {\n      return false;\n    }\n\n    while (startI + i < maxI && centerJ + i < maxJ && image.get(centerJ + i, startI + i) && stateCount[4] < maxCount) {\n      stateCount[4]++;\n      i++;\n    }\n\n    if (stateCount[4] >= maxCount) {\n      return false;\n    } // If we found a finder-pattern-like section, but its size is more than 100% different than\n    // the original, assume it's a false positive\n\n\n    var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n    return Math.abs(stateCountTotal - originalStateCountTotal) < 2 * originalStateCountTotal && FinderPatternFinder.foundPatternCross(stateCount);\n  };\n  /**\r\n   * <p>After a horizontal scan finds a potential finder pattern, this method\r\n   * \"cross-checks\" by scanning down vertically through the center of the possible\r\n   * finder pattern to see if the same proportion is detected.</p>\r\n   *\r\n   * @param startI row where a finder pattern was detected\r\n   * @param centerJ center of the section that appears to cross a finder pattern\r\n   * @param maxCount maximum reasonable number of modules that should be\r\n   * observed in any reading state, based on the results of the horizontal scan\r\n   * @return vertical center of finder pattern, or {@link Float#NaN} if not found\r\n   */\n\n\n  FinderPatternFinder.prototype.crossCheckVertical = function (startI\n  /*int*/\n  , centerJ\n  /*int*/\n  , maxCount\n  /*int*/\n  , originalStateCountTotal\n  /*int*/\n  ) {\n    var image = this.image;\n    var maxI = image.getHeight();\n    var stateCount = this.getCrossCheckStateCount(); // Start counting up from center\n\n    var i = startI;\n\n    while (i >= 0 && image.get(centerJ, i)) {\n      stateCount[2]++;\n      i--;\n    }\n\n    if (i < 0) {\n      return NaN;\n    }\n\n    while (i >= 0 && !image.get(centerJ, i) && stateCount[1] <= maxCount) {\n      stateCount[1]++;\n      i--;\n    } // If already too many modules in this state or ran off the edge:\n\n\n    if (i < 0 || stateCount[1] > maxCount) {\n      return NaN;\n    }\n\n    while (i >= 0 && image.get(centerJ, i) && stateCount[0] <= maxCount) {\n      stateCount[0]++;\n      i--;\n    }\n\n    if (stateCount[0] > maxCount) {\n      return NaN;\n    } // Now also count down from center\n\n\n    i = startI + 1;\n\n    while (i < maxI && image.get(centerJ, i)) {\n      stateCount[2]++;\n      i++;\n    }\n\n    if (i === maxI) {\n      return NaN;\n    }\n\n    while (i < maxI && !image.get(centerJ, i) && stateCount[3] < maxCount) {\n      stateCount[3]++;\n      i++;\n    }\n\n    if (i === maxI || stateCount[3] >= maxCount) {\n      return NaN;\n    }\n\n    while (i < maxI && image.get(centerJ, i) && stateCount[4] < maxCount) {\n      stateCount[4]++;\n      i++;\n    }\n\n    if (stateCount[4] >= maxCount) {\n      return NaN;\n    } // If we found a finder-pattern-like section, but its size is more than 40% different than\n    // the original, assume it's a false positive\n\n\n    var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n\n    if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n      return NaN;\n    }\n\n    return FinderPatternFinder.foundPatternCross(stateCount) ? FinderPatternFinder.centerFromEnd(stateCount, i) : NaN;\n  };\n  /**\r\n   * <p>Like {@link #crossCheckVertical(int, int, int, int)}, and in fact is basically identical,\r\n   * except it reads horizontally instead of vertically. This is used to cross-cross\r\n   * check a vertical cross check and locate the real center of the alignment pattern.</p>\r\n   */\n\n\n  FinderPatternFinder.prototype.crossCheckHorizontal = function (startJ\n  /*int*/\n  , centerI\n  /*int*/\n  , maxCount\n  /*int*/\n  , originalStateCountTotal\n  /*int*/\n  ) {\n    var image = this.image;\n    var maxJ = image.getWidth();\n    var stateCount = this.getCrossCheckStateCount();\n    var j = startJ;\n\n    while (j >= 0 && image.get(j, centerI)) {\n      stateCount[2]++;\n      j--;\n    }\n\n    if (j < 0) {\n      return NaN;\n    }\n\n    while (j >= 0 && !image.get(j, centerI) && stateCount[1] <= maxCount) {\n      stateCount[1]++;\n      j--;\n    }\n\n    if (j < 0 || stateCount[1] > maxCount) {\n      return NaN;\n    }\n\n    while (j >= 0 && image.get(j, centerI) && stateCount[0] <= maxCount) {\n      stateCount[0]++;\n      j--;\n    }\n\n    if (stateCount[0] > maxCount) {\n      return NaN;\n    }\n\n    j = startJ + 1;\n\n    while (j < maxJ && image.get(j, centerI)) {\n      stateCount[2]++;\n      j++;\n    }\n\n    if (j === maxJ) {\n      return NaN;\n    }\n\n    while (j < maxJ && !image.get(j, centerI) && stateCount[3] < maxCount) {\n      stateCount[3]++;\n      j++;\n    }\n\n    if (j === maxJ || stateCount[3] >= maxCount) {\n      return NaN;\n    }\n\n    while (j < maxJ && image.get(j, centerI) && stateCount[4] < maxCount) {\n      stateCount[4]++;\n      j++;\n    }\n\n    if (stateCount[4] >= maxCount) {\n      return NaN;\n    } // If we found a finder-pattern-like section, but its size is significantly different than\n    // the original, assume it's a false positive\n\n\n    var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n\n    if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= originalStateCountTotal) {\n      return NaN;\n    }\n\n    return FinderPatternFinder.foundPatternCross(stateCount) ? FinderPatternFinder.centerFromEnd(stateCount, j) : NaN;\n  };\n  /**\r\n   * <p>This is called when a horizontal scan finds a possible alignment pattern. It will\r\n   * cross check with a vertical scan, and if successful, will, ah, cross-cross-check\r\n   * with another horizontal scan. This is needed primarily to locate the real horizontal\r\n   * center of the pattern in cases of extreme skew.\r\n   * And then we cross-cross-cross check with another diagonal scan.</p>\r\n   *\r\n   * <p>If that succeeds the finder pattern location is added to a list that tracks\r\n   * the number of times each location has been nearly-matched as a finder pattern.\r\n   * Each additional find is more evidence that the location is in fact a finder\r\n   * pattern center\r\n   *\r\n   * @param stateCount reading state module counts from horizontal scan\r\n   * @param i row where finder pattern may be found\r\n   * @param j end of possible finder pattern in row\r\n   * @param pureBarcode true if in \"pure barcode\" mode\r\n   * @return true if a finder pattern candidate was found this time\r\n   */\n\n\n  FinderPatternFinder.prototype.handlePossibleCenter = function (stateCount, i\n  /*int*/\n  , j\n  /*int*/\n  , pureBarcode) {\n    var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n    var centerJ = FinderPatternFinder.centerFromEnd(stateCount, j);\n    var centerI = this.crossCheckVertical(i,\n    /*(int) */\n    Math.floor(centerJ), stateCount[2], stateCountTotal);\n\n    if (!isNaN(centerI)) {\n      // Re-cross check\n      centerJ = this.crossCheckHorizontal(\n      /*(int) */\n      Math.floor(centerJ),\n      /*(int) */\n      Math.floor(centerI), stateCount[2], stateCountTotal);\n\n      if (!isNaN(centerJ) && (!pureBarcode || this.crossCheckDiagonal(\n      /*(int) */\n      Math.floor(centerI),\n      /*(int) */\n      Math.floor(centerJ), stateCount[2], stateCountTotal))) {\n        var estimatedModuleSize = stateCountTotal / 7.0;\n        var found = false;\n        var possibleCenters = this.possibleCenters;\n\n        for (var index = 0, length_1 = possibleCenters.length; index < length_1; index++) {\n          var center = possibleCenters[index]; // Look for about the same center and module size:\n\n          if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n            possibleCenters[index] = center.combineEstimate(centerI, centerJ, estimatedModuleSize);\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          var point = new FinderPattern_1.default(centerJ, centerI, estimatedModuleSize);\n          possibleCenters.push(point);\n\n          if (this.resultPointCallback !== null && this.resultPointCallback !== undefined) {\n            this.resultPointCallback.foundPossibleResultPoint(point);\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @return number of rows we could safely skip during scanning, based on the first\r\n   *         two finder patterns that have been located. In some cases their position will\r\n   *         allow us to infer that the third pattern must lie below a certain point farther\r\n   *         down in the image.\r\n   */\n\n\n  FinderPatternFinder.prototype.findRowSkip = function () {\n    var max = this.possibleCenters.length;\n\n    if (max <= 1) {\n      return 0;\n    }\n\n    var firstConfirmedCenter = null;\n\n    for (var _i = 0, _a = this.possibleCenters; _i < _a.length; _i++) {\n      var center = _a[_i];\n\n      if (center.getCount() >= FinderPatternFinder.CENTER_QUORUM) {\n        if (firstConfirmedCenter == null) {\n          firstConfirmedCenter = center;\n        } else {\n          // We have two confirmed centers\n          // How far down can we skip before resuming looking for the next\n          // pattern? In the worst case, only the difference between the\n          // difference in the x / y coordinates of the two centers.\n          // This is the case where you find top left last.\n          this.hasSkipped = true;\n          return (\n            /*(int) */\n            Math.floor((Math.abs(firstConfirmedCenter.getX() - center.getX()) - Math.abs(firstConfirmedCenter.getY() - center.getY())) / 2)\n          );\n        }\n      }\n    }\n\n    return 0;\n  };\n  /**\r\n   * @return true iff we have found at least 3 finder patterns that have been detected\r\n   *         at least {@link #CENTER_QUORUM} times each, and, the estimated module size of the\r\n   *         candidates is \"pretty similar\"\r\n   */\n\n\n  FinderPatternFinder.prototype.haveMultiplyConfirmedCenters = function () {\n    var confirmedCount = 0;\n    var totalModuleSize = 0.0;\n    var max = this.possibleCenters.length;\n\n    for (var _i = 0, _a = this.possibleCenters; _i < _a.length; _i++) {\n      var pattern = _a[_i];\n\n      if (pattern.getCount() >= FinderPatternFinder.CENTER_QUORUM) {\n        confirmedCount++;\n        totalModuleSize += pattern.getEstimatedModuleSize();\n      }\n    }\n\n    if (confirmedCount < 3) {\n      return false;\n    } // OK, we have at least 3 confirmed centers, but, it's possible that one is a \"false positive\"\n    // and that we need to keep looking. We detect this by asking if the estimated module sizes\n    // vary too much. We arbitrarily say that when the total deviation from average exceeds\n    // 5% of the total module size estimates, it's too much.\n\n\n    var average = totalModuleSize / max;\n    var totalDeviation = 0.0;\n\n    for (var _b = 0, _c = this.possibleCenters; _b < _c.length; _b++) {\n      var pattern = _c[_b];\n      totalDeviation += Math.abs(pattern.getEstimatedModuleSize() - average);\n    }\n\n    return totalDeviation <= 0.05 * totalModuleSize;\n  };\n  /**\r\n   * @return the 3 best {@link FinderPattern}s from our list of candidates. The \"best\" are\r\n   *         those that have been detected at least {@link #CENTER_QUORUM} times, and whose module\r\n   *         size differs from the average among those patterns the least\r\n   * @throws NotFoundException if 3 such finder patterns do not exist\r\n   */\n\n\n  FinderPatternFinder.prototype.selectBestPatterns = function () {\n    var startSize = this.possibleCenters.length;\n\n    if (startSize < 3) {\n      // Couldn't find enough finder patterns\n      throw new NotFoundException_1.default();\n    }\n\n    var possibleCenters = this.possibleCenters;\n    var average;\n    /*float*/\n    // Filter outlier possibilities whose module size is too different\n\n    if (startSize > 3) {\n      // But we can only afford to do so if we have at least 4 possibilities to choose from\n      var totalModuleSize = 0.0;\n      var square = 0.0;\n\n      for (var _i = 0, _a = this.possibleCenters; _i < _a.length; _i++) {\n        var center = _a[_i];\n        var size = center.getEstimatedModuleSize();\n        totalModuleSize += size;\n        square += size * size;\n      }\n\n      average = totalModuleSize / startSize;\n      var stdDev = Math.sqrt(square / startSize - average * average);\n      possibleCenters.sort(\n      /**\r\n       * <p>Orders by furthest from average</p>\r\n       */\n      // FurthestFromAverageComparator implements Comparator<FinderPattern>\n      function (center1, center2) {\n        var dA = Math.abs(center2.getEstimatedModuleSize() - average);\n        var dB = Math.abs(center1.getEstimatedModuleSize() - average);\n        return dA < dB ? -1 : dA > dB ? 1 : 0;\n      });\n      var limit = Math.max(0.2 * average, stdDev);\n\n      for (var i = 0; i < possibleCenters.length && possibleCenters.length > 3; i++) {\n        var pattern = possibleCenters[i];\n\n        if (Math.abs(pattern.getEstimatedModuleSize() - average) > limit) {\n          possibleCenters.splice(i, 1);\n          i--;\n        }\n      }\n    }\n\n    if (possibleCenters.length > 3) {\n      // Throw away all but those first size candidate points we found.\n      var totalModuleSize = 0.0;\n\n      for (var _b = 0, possibleCenters_1 = possibleCenters; _b < possibleCenters_1.length; _b++) {\n        var possibleCenter = possibleCenters_1[_b];\n        totalModuleSize += possibleCenter.getEstimatedModuleSize();\n      }\n\n      average = totalModuleSize / possibleCenters.length;\n      possibleCenters.sort(\n      /**\r\n       * <p>Orders by {@link FinderPattern#getCount()}, descending.</p>\r\n       */\n      // CenterComparator implements Comparator<FinderPattern>\n      function (center1, center2) {\n        if (center2.getCount() === center1.getCount()) {\n          var dA = Math.abs(center2.getEstimatedModuleSize() - average);\n          var dB = Math.abs(center1.getEstimatedModuleSize() - average);\n          return dA < dB ? 1 : dA > dB ? -1 : 0;\n        } else {\n          return center2.getCount() - center1.getCount();\n        }\n      });\n      possibleCenters.splice(3); // this is not realy necessary as we only return first 3 anyway\n    }\n\n    return [possibleCenters[0], possibleCenters[1], possibleCenters[2]];\n  };\n\n  FinderPatternFinder.CENTER_QUORUM = 2;\n  FinderPatternFinder.MIN_SKIP = 3; // 1 pixel/module times 3 modules/center\n\n  FinderPatternFinder.MAX_MODULES = 57; // support up to version 10 for mobile clients\n\n  return FinderPatternFinder;\n}();\n\nexports.default = FinderPatternFinder;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.detector {*/\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n/**\r\n * <p>Encapsulates a finder pattern, which are the three square patterns found in\r\n * the corners of QR Codes. It also encapsulates a count of similar finder patterns,\r\n * as a convenience to the finder's bookkeeping.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar FinderPattern =\n/** @class */\nfunction (_super) {\n  __extends(FinderPattern, _super); // FinderPattern(posX: number/*float*/, posY: number/*float*/, estimatedModuleSize: number/*float*/) {\n  //   this(posX, posY, estimatedModuleSize, 1)\n  // }\n\n\n  function FinderPattern(posX\n  /*float*/\n  , posY\n  /*float*/\n  , estimatedModuleSize\n  /*float*/\n  , count\n  /*int*/\n  ) {\n    var _this = _super.call(this, posX, posY) || this;\n\n    _this.estimatedModuleSize = estimatedModuleSize;\n    _this.count = count;\n\n    if (undefined === count) {\n      _this.count = 1;\n    }\n\n    return _this;\n  }\n\n  FinderPattern.prototype.getEstimatedModuleSize = function () {\n    return this.estimatedModuleSize;\n  };\n\n  FinderPattern.prototype.getCount = function () {\n    return this.count;\n  };\n  /*\r\n  void incrementCount() {\r\n    this.count++\r\n  }\r\n   */\n\n  /**\r\n   * <p>Determines if this finder pattern \"about equals\" a finder pattern at the stated\r\n   * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\r\n   */\n\n\n  FinderPattern.prototype.aboutEquals = function (moduleSize\n  /*float*/\n  , i\n  /*float*/\n  , j\n  /*float*/\n  ) {\n    if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n      var moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n      return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n    }\n\n    return false;\n  };\n  /**\r\n   * Combines this object's current estimate of a finder pattern position and module size\r\n   * with a new estimate. It returns a new {@code FinderPattern} containing a weighted average\r\n   * based on count.\r\n   */\n\n\n  FinderPattern.prototype.combineEstimate = function (i\n  /*float*/\n  , j\n  /*float*/\n  , newModuleSize\n  /*float*/\n  ) {\n    var combinedCount = this.count + 1;\n    var combinedX = (this.count * this.getX() + j) / combinedCount;\n    var combinedY = (this.count * this.getY() + i) / combinedCount;\n    var combinedModuleSize = (this.count * this.estimatedModuleSize + newModuleSize) / combinedCount;\n    return new FinderPattern(combinedX, combinedY, combinedModuleSize, combinedCount);\n  };\n\n  return FinderPattern;\n}(ResultPoint_1.default);\n\nexports.default = FinderPattern;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * <p>Encapsulates information about finder patterns in an image, including the location of\r\n * the three finder patterns, and their estimated module size.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\nvar FinderPatternInfo =\n/** @class */\nfunction () {\n  function FinderPatternInfo(patternCenters) {\n    this.bottomLeft = patternCenters[0];\n    this.topLeft = patternCenters[1];\n    this.topRight = patternCenters[2];\n  }\n\n  FinderPatternInfo.prototype.getBottomLeft = function () {\n    return this.bottomLeft;\n  };\n\n  FinderPatternInfo.prototype.getTopLeft = function () {\n    return this.topLeft;\n  };\n\n  FinderPatternInfo.prototype.getTopRight = function () {\n    return this.topRight;\n  };\n\n  return FinderPatternInfo;\n}();\n\nexports.default = FinderPatternInfo;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AlignmentPattern_1 = require(\"./AlignmentPattern\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n/*import java.util.ArrayList;*/\n\n/*import java.util.List;*/\n\n/**\r\n * <p>This class attempts to find alignment patterns in a QR Code. Alignment patterns look like finder\r\n * patterns but are smaller and appear at regular intervals throughout the image.</p>\r\n *\r\n * <p>At the moment this only looks for the bottom-right alignment pattern.</p>\r\n *\r\n * <p>This is mostly a simplified copy of {@link FinderPatternFinder}. It is copied,\r\n * pasted and stripped down here for maximum performance but does unfortunately duplicate\r\n * some code.</p>\r\n *\r\n * <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar AlignmentPatternFinder =\n/** @class */\nfunction () {\n  /**\r\n   * <p>Creates a finder that will look in a portion of the whole image.</p>\r\n   *\r\n   * @param image image to search\r\n   * @param startX left column from which to start searching\r\n   * @param startY top row from which to start searching\r\n   * @param width width of region to search\r\n   * @param height height of region to search\r\n   * @param moduleSize estimated module size so far\r\n   */\n  function AlignmentPatternFinder(image, startX\n  /*int*/\n  , startY\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  , moduleSize\n  /*float*/\n  , resultPointCallback) {\n    this.image = image;\n    this.startX = startX;\n    this.startY = startY;\n    this.width = width;\n    this.height = height;\n    this.moduleSize = moduleSize;\n    this.resultPointCallback = resultPointCallback;\n    this.possibleCenters = []; // new Array<any>(5))\n    // TYPESCRIPTPORT: array initialization without size as the length is checked below\n\n    this.crossCheckStateCount = new Int32Array(3);\n  }\n  /**\r\n   * <p>This method attempts to find the bottom-right alignment pattern in the image. It is a bit messy since\r\n   * it's pretty performance-critical and so is written to be fast foremost.</p>\r\n   *\r\n   * @return {@link AlignmentPattern} if found\r\n   * @throws NotFoundException if not found\r\n   */\n\n\n  AlignmentPatternFinder.prototype.find = function () {\n    var startX = this.startX;\n    var height = this.height;\n    var width = this.width;\n    var maxJ = startX + width;\n    var middleI = this.startY + height / 2; // We are looking for black/white/black modules in 1:1:1 ratio\n    // this tracks the number of black/white/black modules seen so far\n\n    var stateCount = new Int32Array(3);\n    var image = this.image;\n\n    for (var iGen = 0; iGen < height; iGen++) {\n      // Search from middle outwards\n      var i = middleI + ((iGen & 0x01) === 0 ? Math.floor((iGen + 1) / 2) : -Math.floor((iGen + 1) / 2));\n      stateCount[0] = 0;\n      stateCount[1] = 0;\n      stateCount[2] = 0;\n      var j = startX; // Burn off leading white pixels before anything else; if we start in the middle of\n      // a white run, it doesn't make sense to count its length, since we don't know if the\n      // white run continued to the left of the start point\n\n      while (j < maxJ && !image.get(j, i)) {\n        j++;\n      }\n\n      var currentState = 0;\n\n      while (j < maxJ) {\n        if (image.get(j, i)) {\n          // Black pixel\n          if (currentState === 1) {\n            // Counting black pixels\n            stateCount[1]++;\n          } else {\n            // Counting white pixels\n            if (currentState === 2) {\n              // A winner?\n              if (this.foundPatternCross(stateCount)) {\n                // Yes\n                var confirmed = this.handlePossibleCenter(stateCount, i, j);\n\n                if (confirmed !== null) {\n                  return confirmed;\n                }\n              }\n\n              stateCount[0] = stateCount[2];\n              stateCount[1] = 1;\n              stateCount[2] = 0;\n              currentState = 1;\n            } else {\n              stateCount[++currentState]++;\n            }\n          }\n        } else {\n          // White pixel\n          if (currentState === 1) {\n            // Counting black pixels\n            currentState++;\n          }\n\n          stateCount[currentState]++;\n        }\n\n        j++;\n      }\n\n      if (this.foundPatternCross(stateCount)) {\n        var confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\n\n        if (confirmed !== null) {\n          return confirmed;\n        }\n      }\n    } // Hmm, nothing we saw was observed and confirmed twice. If we had\n    // any guess at all, return it.\n\n\n    if (this.possibleCenters.length !== 0) {\n      return this.possibleCenters[0];\n    }\n\n    throw new NotFoundException_1.default();\n  };\n  /**\r\n   * Given a count of black/white/black pixels just seen and an end position,\r\n   * figures the location of the center of this black/white/black run.\r\n   */\n\n\n  AlignmentPatternFinder.centerFromEnd = function (stateCount, end\n  /*int*/\n  ) {\n    return end - stateCount[2] - stateCount[1] / 2.0;\n  };\n  /**\r\n   * @param stateCount count of black/white/black pixels just read\r\n   * @return true iff the proportions of the counts is close enough to the 1/1/1 ratios\r\n   *         used by alignment patterns to be considered a match\r\n   */\n\n\n  AlignmentPatternFinder.prototype.foundPatternCross = function (stateCount) {\n    var moduleSize = this.moduleSize;\n    var maxVariance = moduleSize / 2.0;\n\n    for (var i = 0; i < 3; i++) {\n      if (Math.abs(moduleSize - stateCount[i]) >= maxVariance) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * <p>After a horizontal scan finds a potential alignment pattern, this method\r\n   * \"cross-checks\" by scanning down vertically through the center of the possible\r\n   * alignment pattern to see if the same proportion is detected.</p>\r\n   *\r\n   * @param startI row where an alignment pattern was detected\r\n   * @param centerJ center of the section that appears to cross an alignment pattern\r\n   * @param maxCount maximum reasonable number of modules that should be\r\n   * observed in any reading state, based on the results of the horizontal scan\r\n   * @return vertical center of alignment pattern, or {@link Float#NaN} if not found\r\n   */\n\n\n  AlignmentPatternFinder.prototype.crossCheckVertical = function (startI\n  /*int*/\n  , centerJ\n  /*int*/\n  , maxCount\n  /*int*/\n  , originalStateCountTotal\n  /*int*/\n  ) {\n    var image = this.image;\n    var maxI = image.getHeight();\n    var stateCount = this.crossCheckStateCount;\n    stateCount[0] = 0;\n    stateCount[1] = 0;\n    stateCount[2] = 0; // Start counting up from center\n\n    var i = startI;\n\n    while (i >= 0 && image.get(centerJ, i) && stateCount[1] <= maxCount) {\n      stateCount[1]++;\n      i--;\n    } // If already too many modules in this state or ran off the edge:\n\n\n    if (i < 0 || stateCount[1] > maxCount) {\n      return NaN;\n    }\n\n    while (i >= 0 && !image.get(centerJ, i) && stateCount[0] <= maxCount) {\n      stateCount[0]++;\n      i--;\n    }\n\n    if (stateCount[0] > maxCount) {\n      return NaN;\n    } // Now also count down from center\n\n\n    i = startI + 1;\n\n    while (i < maxI && image.get(centerJ, i) && stateCount[1] <= maxCount) {\n      stateCount[1]++;\n      i++;\n    }\n\n    if (i === maxI || stateCount[1] > maxCount) {\n      return NaN;\n    }\n\n    while (i < maxI && !image.get(centerJ, i) && stateCount[2] <= maxCount) {\n      stateCount[2]++;\n      i++;\n    }\n\n    if (stateCount[2] > maxCount) {\n      return NaN;\n    }\n\n    var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n\n    if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n      return NaN;\n    }\n\n    return this.foundPatternCross(stateCount) ? AlignmentPatternFinder.centerFromEnd(stateCount, i) : NaN;\n  };\n  /**\r\n   * <p>This is called when a horizontal scan finds a possible alignment pattern. It will\r\n   * cross check with a vertical scan, and if successful, will see if this pattern had been\r\n   * found on a previous horizontal scan. If so, we consider it confirmed and conclude we have\r\n   * found the alignment pattern.</p>\r\n   *\r\n   * @param stateCount reading state module counts from horizontal scan\r\n   * @param i row where alignment pattern may be found\r\n   * @param j end of possible alignment pattern in row\r\n   * @return {@link AlignmentPattern} if we have found the same pattern twice, or null if not\r\n   */\n\n\n  AlignmentPatternFinder.prototype.handlePossibleCenter = function (stateCount, i\n  /*int*/\n  , j\n  /*int*/\n  ) {\n    var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n    var centerJ = AlignmentPatternFinder.centerFromEnd(stateCount, j);\n    var centerI = this.crossCheckVertical(i,\n    /*(int) */\n    centerJ, 2 * stateCount[1], stateCountTotal);\n\n    if (!isNaN(centerI)) {\n      var estimatedModuleSize = (stateCount[0] + stateCount[1] + stateCount[2]) / 3.0;\n\n      for (var _i = 0, _a = this.possibleCenters; _i < _a.length; _i++) {\n        var center = _a[_i]; // Look for about the same center and module size:\n\n        if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n          return center.combineEstimate(centerI, centerJ, estimatedModuleSize);\n        }\n      } // Hadn't found this before; save it\n\n\n      var point = new AlignmentPattern_1.default(centerJ, centerI, estimatedModuleSize);\n      this.possibleCenters.push(point);\n\n      if (this.resultPointCallback !== null && this.resultPointCallback !== undefined) {\n        this.resultPointCallback.foundPossibleResultPoint(point);\n      }\n    }\n\n    return null;\n  };\n\n  return AlignmentPatternFinder;\n}();\n\nexports.default = AlignmentPatternFinder;","\"use strict\";\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.detector {*/\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n/**\r\n * <p>Encapsulates an alignment pattern, which are the smaller square patterns found in\r\n * all but the simplest QR Codes.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar AlignmentPattern =\n/** @class */\nfunction (_super) {\n  __extends(AlignmentPattern, _super);\n\n  function AlignmentPattern(posX\n  /*float*/\n  , posY\n  /*float*/\n  , estimatedModuleSize\n  /*float*/\n  ) {\n    var _this = _super.call(this, posX, posY) || this;\n\n    _this.estimatedModuleSize = estimatedModuleSize;\n    return _this;\n  }\n  /**\r\n   * <p>Determines if this alignment pattern \"about equals\" an alignment pattern at the stated\r\n   * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\r\n   */\n\n\n  AlignmentPattern.prototype.aboutEquals = function (moduleSize\n  /*float*/\n  , i\n  /*float*/\n  , j\n  /*float*/\n  ) {\n    if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n      var moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n      return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n    }\n\n    return false;\n  };\n  /**\r\n   * Combines this object's current estimate of a finder pattern position and module size\r\n   * with a new estimate. It returns a new {@code FinderPattern} containing an average of the two.\r\n   */\n\n\n  AlignmentPattern.prototype.combineEstimate = function (i\n  /*float*/\n  , j\n  /*float*/\n  , newModuleSize\n  /*float*/\n  ) {\n    var combinedX = (this.getX() + j) / 2.0;\n    var combinedY = (this.getY() + i) / 2.0;\n    var combinedModuleSize = (this.estimatedModuleSize + newModuleSize) / 2.0;\n    return new AlignmentPattern(combinedX, combinedY, combinedModuleSize);\n  };\n\n  return AlignmentPattern;\n}(ResultPoint_1.default);\n\nexports.default = AlignmentPattern;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar DataMatrixReader_1 = require(\"../core/datamatrix/DataMatrixReader\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * QR Code reader to use from browser.\r\n */\n\n\nvar BrowserDatamatrixCodeReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserDatamatrixCodeReader, _super);\n  /**\r\n   * Creates an instance of BrowserQRCodeReader.\r\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\r\n   */\n\n\n  function BrowserDatamatrixCodeReader(timeBetweenScansMillis) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    return _super.call(this, new DataMatrixReader_1.default(), timeBetweenScansMillis) || this;\n  }\n\n  return BrowserDatamatrixCodeReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserDatamatrixCodeReader = BrowserDatamatrixCodeReader;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ReedSolomonDecoder_1 = require(\"../../common/reedsolomon/ReedSolomonDecoder\");\n\nvar GenericGF_1 = require(\"../../common/reedsolomon/GenericGF\");\n\nvar BitMatrixParser_1 = require(\"./BitMatrixParser\");\n\nvar DataBlock_1 = require(\"./DataBlock\");\n\nvar DecodedBitStreamParser_1 = require(\"./DecodedBitStreamParser\");\n\nvar ChecksumException_1 = require(\"../../ChecksumException\");\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * <p>The main class which implements Data Matrix Code decoding -- as opposed to locating and extracting\r\n * the Data Matrix Code from an image.</p>\r\n *\r\n * @author bbrown@google.com (Brian Brown)\r\n */\n\n\nvar Decoder =\n/** @class */\nfunction () {\n  function Decoder() {\n    this.rsDecoder = new ReedSolomonDecoder_1.default(GenericGF_1.default.DATA_MATRIX_FIELD_256);\n  }\n  /**\r\n   * <p>Decodes a Data Matrix Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken\r\n   * to mean a black module.</p>\r\n   *\r\n   * @param bits booleans representing white/black Data Matrix Code modules\r\n   * @return text and bytes encoded within the Data Matrix Code\r\n   * @throws FormatException if the Data Matrix Code cannot be decoded\r\n   * @throws ChecksumException if error correction fails\r\n   */\n\n\n  Decoder.prototype.decode = function (bits) {\n    // Construct a parser and read version, error-correction level\n    var parser = new BitMatrixParser_1.default(bits);\n    var version = parser.getVersion(); // Read codewords\n\n    var codewords = parser.readCodewords(); // Separate into data blocks\n\n    var dataBlocks = DataBlock_1.default.getDataBlocks(codewords, version); // Count total number of data bytes\n\n    var totalBytes = 0;\n\n    for (var _i = 0, dataBlocks_1 = dataBlocks; _i < dataBlocks_1.length; _i++) {\n      var db = dataBlocks_1[_i];\n      totalBytes += db.getNumDataCodewords();\n    }\n\n    var resultBytes = new Uint8Array(totalBytes);\n    var dataBlocksCount = dataBlocks.length; // Error-correct and copy data blocks together into a stream of bytes\n\n    for (var j = 0; j < dataBlocksCount; j++) {\n      var dataBlock = dataBlocks[j];\n      var codewordBytes = dataBlock.getCodewords();\n      var numDataCodewords = dataBlock.getNumDataCodewords();\n      this.correctErrors(codewordBytes, numDataCodewords);\n\n      for (var i = 0; i < numDataCodewords; i++) {\n        // De-interlace data blocks.\n        resultBytes[i * dataBlocksCount + j] = codewordBytes[i];\n      }\n    } // Decode the contents of that stream of bytes\n\n\n    return DecodedBitStreamParser_1.default.decode(resultBytes);\n  };\n  /**\r\n   * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\r\n   * correct the errors in-place using Reed-Solomon error correction.</p>\r\n   *\r\n   * @param codewordBytes data and error correction codewords\r\n   * @param numDataCodewords number of codewords that are data bytes\r\n   * @throws ChecksumException if error correction fails\r\n   */\n\n\n  Decoder.prototype.correctErrors = function (codewordBytes, numDataCodewords) {\n    var numCodewords = codewordBytes.length; // First read into an array of ints\n\n    var codewordsInts = new Int32Array(codewordBytes); // for (let i = 0; i < numCodewords; i++) {\n    //   codewordsInts[i] = codewordBytes[i] & 0xFF;\n    // }\n\n    try {\n      this.rsDecoder.decode(codewordsInts, codewordBytes.length - numDataCodewords);\n    } catch (ignored\n    /* ReedSolomonException */\n    ) {\n      throw new ChecksumException_1.default();\n    } // Copy back into array of bytes -- only need to worry about the bytes that were data\n    // We don't care about errors in the error-correction codewords\n\n\n    for (var i = 0; i < numDataCodewords; i++) {\n      codewordBytes[i] = codewordsInts[i];\n    }\n  };\n\n  return Decoder;\n}();\n\nexports.default = Decoder;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BitMatrix_1 = require(\"../../common/BitMatrix\");\n\nvar Version_1 = require(\"./Version\");\n\nvar FormatException_1 = require(\"../../FormatException\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @author bbrown@google.com (Brian Brown)\r\n */\n\n\nvar BitMatrixParser =\n/** @class */\nfunction () {\n  /**\r\n   * @param bitMatrix {@link BitMatrix} to parse\r\n   * @throws FormatException if dimension is < 8 or > 144 or not 0 mod 2\r\n   */\n  function BitMatrixParser(bitMatrix) {\n    var dimension = bitMatrix.getHeight();\n\n    if (dimension < 8 || dimension > 144 || (dimension & 0x01) !== 0) {\n      throw new FormatException_1.default();\n    }\n\n    this.version = BitMatrixParser.readVersion(bitMatrix);\n    this.mappingBitMatrix = this.extractDataRegion(bitMatrix);\n    this.readMappingMatrix = new BitMatrix_1.default(this.mappingBitMatrix.getWidth(), this.mappingBitMatrix.getHeight());\n  }\n\n  BitMatrixParser.prototype.getVersion = function () {\n    return this.version;\n  };\n  /**\r\n   * <p>Creates the version object based on the dimension of the original bit matrix from\r\n   * the datamatrix code.</p>\r\n   *\r\n   * <p>See ISO 16022:2006 Table 7 - ECC 200 symbol attributes</p>\r\n   *\r\n   * @param bitMatrix Original {@link BitMatrix} including alignment patterns\r\n   * @return {@link Version} encapsulating the Data Matrix Code's \"version\"\r\n   * @throws FormatException if the dimensions of the mapping matrix are not valid\r\n   * Data Matrix dimensions.\r\n   */\n\n\n  BitMatrixParser.readVersion = function (bitMatrix) {\n    var numRows = bitMatrix.getHeight();\n    var numColumns = bitMatrix.getWidth();\n    return Version_1.default.getVersionForDimensions(numRows, numColumns);\n  };\n  /**\r\n   * <p>Reads the bits in the {@link BitMatrix} representing the mapping matrix (No alignment patterns)\r\n   * in the correct order in order to reconstitute the codewords bytes contained within the\r\n   * Data Matrix Code.</p>\r\n   *\r\n   * @return bytes encoded within the Data Matrix Code\r\n   * @throws FormatException if the exact number of bytes expected is not read\r\n   */\n\n\n  BitMatrixParser.prototype.readCodewords = function () {\n    var result = new Int8Array(this.version.getTotalCodewords());\n    var resultOffset = 0;\n    var row = 4;\n    var column = 0;\n    var numRows = this.mappingBitMatrix.getHeight();\n    var numColumns = this.mappingBitMatrix.getWidth();\n    var corner1Read = false;\n    var corner2Read = false;\n    var corner3Read = false;\n    var corner4Read = false; // Read all of the codewords\n\n    do {\n      // Check the four corner cases\n      if (row === numRows && column === 0 && !corner1Read) {\n        result[resultOffset++] = this.readCorner1(numRows, numColumns) & 0xff;\n        row -= 2;\n        column += 2;\n        corner1Read = true;\n      } else if (row === numRows - 2 && column === 0 && (numColumns & 0x03) !== 0 && !corner2Read) {\n        result[resultOffset++] = this.readCorner2(numRows, numColumns) & 0xff;\n        row -= 2;\n        column += 2;\n        corner2Read = true;\n      } else if (row === numRows + 4 && column === 2 && (numColumns & 0x07) === 0 && !corner3Read) {\n        result[resultOffset++] = this.readCorner3(numRows, numColumns) & 0xff;\n        row -= 2;\n        column += 2;\n        corner3Read = true;\n      } else if (row === numRows - 2 && column === 0 && (numColumns & 0x07) === 4 && !corner4Read) {\n        result[resultOffset++] = this.readCorner4(numRows, numColumns) & 0xff;\n        row -= 2;\n        column += 2;\n        corner4Read = true;\n      } else {\n        // Sweep upward diagonally to the right\n        do {\n          if (row < numRows && column >= 0 && !this.readMappingMatrix.get(column, row)) {\n            result[resultOffset++] = this.readUtah(row, column, numRows, numColumns) & 0xff;\n          }\n\n          row -= 2;\n          column += 2;\n        } while (row >= 0 && column < numColumns);\n\n        row += 1;\n        column += 3; // Sweep downward diagonally to the left\n\n        do {\n          if (row >= 0 && column < numColumns && !this.readMappingMatrix.get(column, row)) {\n            result[resultOffset++] = this.readUtah(row, column, numRows, numColumns) & 0xff;\n          }\n\n          row += 2;\n          column -= 2;\n        } while (row < numRows && column >= 0);\n\n        row += 3;\n        column += 1;\n      }\n    } while (row < numRows || column < numColumns);\n\n    if (resultOffset !== this.version.getTotalCodewords()) {\n      throw new FormatException_1.default();\n    }\n\n    return result;\n  };\n  /**\r\n   * <p>Reads a bit of the mapping matrix accounting for boundary wrapping.</p>\r\n   *\r\n   * @param row Row to read in the mapping matrix\r\n   * @param column Column to read in the mapping matrix\r\n   * @param numRows Number of rows in the mapping matrix\r\n   * @param numColumns Number of columns in the mapping matrix\r\n   * @return value of the given bit in the mapping matrix\r\n   */\n\n\n  BitMatrixParser.prototype.readModule = function (row, column, numRows, numColumns) {\n    // Adjust the row and column indices based on boundary wrapping\n    if (row < 0) {\n      row += numRows;\n      column += 4 - (numRows + 4 & 0x07);\n    }\n\n    if (column < 0) {\n      column += numColumns;\n      row += 4 - (numColumns + 4 & 0x07);\n    }\n\n    this.readMappingMatrix.set(column, row);\n    return this.mappingBitMatrix.get(column, row);\n  };\n  /**\r\n   * <p>Reads the 8 bits of the standard Utah-shaped pattern.</p>\r\n   *\r\n   * <p>See ISO 16022:2006, 5.8.1 Figure 6</p>\r\n   *\r\n   * @param row Current row in the mapping matrix, anchored at the 8th bit (LSB) of the pattern\r\n   * @param column Current column in the mapping matrix, anchored at the 8th bit (LSB) of the pattern\r\n   * @param numRows Number of rows in the mapping matrix\r\n   * @param numColumns Number of columns in the mapping matrix\r\n   * @return byte from the utah shape\r\n   */\n\n\n  BitMatrixParser.prototype.readUtah = function (row, column, numRows, numColumns) {\n    var currentByte = 0;\n\n    if (this.readModule(row - 2, column - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row - 2, column - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row - 1, column - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row - 1, column - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row - 1, column, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row, column - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row, column - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(row, column, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    return currentByte;\n  };\n  /**\r\n   * <p>Reads the 8 bits of the special corner condition 1.</p>\r\n   *\r\n   * <p>See ISO 16022:2006, Figure F.3</p>\r\n   *\r\n   * @param numRows Number of rows in the mapping matrix\r\n   * @param numColumns Number of columns in the mapping matrix\r\n   * @return byte from the Corner condition 1\r\n   */\n\n\n  BitMatrixParser.prototype.readCorner1 = function (numRows, numColumns) {\n    var currentByte = 0;\n\n    if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 1, 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 1, 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(2, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(3, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    return currentByte;\n  };\n  /**\r\n   * <p>Reads the 8 bits of the special corner condition 2.</p>\r\n   *\r\n   * <p>See ISO 16022:2006, Figure F.4</p>\r\n   *\r\n   * @param numRows Number of rows in the mapping matrix\r\n   * @param numColumns Number of columns in the mapping matrix\r\n   * @return byte from the Corner condition 2\r\n   */\n\n\n  BitMatrixParser.prototype.readCorner2 = function (numRows, numColumns) {\n    var currentByte = 0;\n\n    if (this.readModule(numRows - 3, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 2, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 4, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 3, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    return currentByte;\n  };\n  /**\r\n   * <p>Reads the 8 bits of the special corner condition 3.</p>\r\n   *\r\n   * <p>See ISO 16022:2006, Figure F.5</p>\r\n   *\r\n   * @param numRows Number of rows in the mapping matrix\r\n   * @param numColumns Number of columns in the mapping matrix\r\n   * @return byte from the Corner condition 3\r\n   */\n\n\n  BitMatrixParser.prototype.readCorner3 = function (numRows, numColumns) {\n    var currentByte = 0;\n\n    if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 1, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 3, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(1, numColumns - 3, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(1, numColumns - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    return currentByte;\n  };\n  /**\r\n   * <p>Reads the 8 bits of the special corner condition 4.</p>\r\n   *\r\n   * <p>See ISO 16022:2006, Figure F.6</p>\r\n   *\r\n   * @param numRows Number of rows in the mapping matrix\r\n   * @param numColumns Number of columns in the mapping matrix\r\n   * @return byte from the Corner condition 4\r\n   */\n\n\n  BitMatrixParser.prototype.readCorner4 = function (numRows, numColumns) {\n    var currentByte = 0;\n\n    if (this.readModule(numRows - 3, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 2, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(2, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    currentByte <<= 1;\n\n    if (this.readModule(3, numColumns - 1, numRows, numColumns)) {\n      currentByte |= 1;\n    }\n\n    return currentByte;\n  };\n  /**\r\n   * <p>Extracts the data region from a {@link BitMatrix} that contains\r\n   * alignment patterns.</p>\r\n   *\r\n   * @param bitMatrix Original {@link BitMatrix} with alignment patterns\r\n   * @return BitMatrix that has the alignment patterns removed\r\n   */\n\n\n  BitMatrixParser.prototype.extractDataRegion = function (bitMatrix) {\n    var symbolSizeRows = this.version.getSymbolSizeRows();\n    var symbolSizeColumns = this.version.getSymbolSizeColumns();\n\n    if (bitMatrix.getHeight() !== symbolSizeRows) {\n      throw new IllegalArgumentException_1.default('Dimension of bitMatrix must match the version size');\n    }\n\n    var dataRegionSizeRows = this.version.getDataRegionSizeRows();\n    var dataRegionSizeColumns = this.version.getDataRegionSizeColumns();\n    var numDataRegionsRow = symbolSizeRows / dataRegionSizeRows | 0;\n    var numDataRegionsColumn = symbolSizeColumns / dataRegionSizeColumns | 0;\n    var sizeDataRegionRow = numDataRegionsRow * dataRegionSizeRows;\n    var sizeDataRegionColumn = numDataRegionsColumn * dataRegionSizeColumns;\n    var bitMatrixWithoutAlignment = new BitMatrix_1.default(sizeDataRegionColumn, sizeDataRegionRow);\n\n    for (var dataRegionRow = 0; dataRegionRow < numDataRegionsRow; ++dataRegionRow) {\n      var dataRegionRowOffset = dataRegionRow * dataRegionSizeRows;\n\n      for (var dataRegionColumn = 0; dataRegionColumn < numDataRegionsColumn; ++dataRegionColumn) {\n        var dataRegionColumnOffset = dataRegionColumn * dataRegionSizeColumns;\n\n        for (var i = 0; i < dataRegionSizeRows; ++i) {\n          var readRowOffset = dataRegionRow * (dataRegionSizeRows + 2) + 1 + i;\n          var writeRowOffset = dataRegionRowOffset + i;\n\n          for (var j = 0; j < dataRegionSizeColumns; ++j) {\n            var readColumnOffset = dataRegionColumn * (dataRegionSizeColumns + 2) + 1 + j;\n\n            if (bitMatrix.get(readColumnOffset, readRowOffset)) {\n              var writeColumnOffset = dataRegionColumnOffset + j;\n              bitMatrixWithoutAlignment.set(writeColumnOffset, writeRowOffset);\n            }\n          }\n        }\n      }\n    }\n\n    return bitMatrixWithoutAlignment;\n  };\n\n  return BitMatrixParser;\n}();\n\nexports.default = BitMatrixParser;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar FormatException_1 = require(\"../../FormatException\");\n/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will\r\n * use blocks of differing sizes within one version, so, this encapsulates the parameters for\r\n * each set of blocks. It also holds the number of error-correction codewords per block since it\r\n * will be the same across all blocks within one version.</p>\r\n */\n\n\nvar ECBlocks =\n/** @class */\nfunction () {\n  function ECBlocks(ecCodewords, ecBlocks1, ecBlocks2) {\n    this.ecCodewords = ecCodewords;\n    this.ecBlocks = [ecBlocks1];\n    ecBlocks2 && this.ecBlocks.push(ecBlocks2);\n  }\n\n  ECBlocks.prototype.getECCodewords = function () {\n    return this.ecCodewords;\n  };\n\n  ECBlocks.prototype.getECBlocks = function () {\n    return this.ecBlocks;\n  };\n\n  return ECBlocks;\n}();\n\nexports.ECBlocks = ECBlocks;\n/**\r\n * <p>Encapsulates the parameters for one error-correction block in one symbol version.\r\n * This includes the number of data codewords, and the number of times a block with these\r\n * parameters is used consecutively in the Data Matrix code version's format.</p>\r\n */\n\nvar ECB =\n/** @class */\nfunction () {\n  function ECB(count, dataCodewords) {\n    this.count = count;\n    this.dataCodewords = dataCodewords;\n  }\n\n  ECB.prototype.getCount = function () {\n    return this.count;\n  };\n\n  ECB.prototype.getDataCodewords = function () {\n    return this.dataCodewords;\n  };\n\n  return ECB;\n}();\n\nexports.ECB = ECB;\n/**\r\n * The Version object encapsulates attributes about a particular\r\n * size Data Matrix Code.\r\n *\r\n * @author bbrown@google.com (Brian Brown)\r\n */\n\nvar Version =\n/** @class */\nfunction () {\n  function Version(versionNumber, symbolSizeRows, symbolSizeColumns, dataRegionSizeRows, dataRegionSizeColumns, ecBlocks) {\n    this.versionNumber = versionNumber;\n    this.symbolSizeRows = symbolSizeRows;\n    this.symbolSizeColumns = symbolSizeColumns;\n    this.dataRegionSizeRows = dataRegionSizeRows;\n    this.dataRegionSizeColumns = dataRegionSizeColumns;\n    this.ecBlocks = ecBlocks; // Calculate the total number of codewords\n\n    var total = 0;\n    var ecCodewords = ecBlocks.getECCodewords();\n    var ecbArray = ecBlocks.getECBlocks();\n\n    for (var _i = 0, ecbArray_1 = ecbArray; _i < ecbArray_1.length; _i++) {\n      var ecBlock = ecbArray_1[_i];\n      total += ecBlock.getCount() * (ecBlock.getDataCodewords() + ecCodewords);\n    }\n\n    this.totalCodewords = total;\n  }\n\n  Version.prototype.getVersionNumber = function () {\n    return this.versionNumber;\n  };\n\n  Version.prototype.getSymbolSizeRows = function () {\n    return this.symbolSizeRows;\n  };\n\n  Version.prototype.getSymbolSizeColumns = function () {\n    return this.symbolSizeColumns;\n  };\n\n  Version.prototype.getDataRegionSizeRows = function () {\n    return this.dataRegionSizeRows;\n  };\n\n  Version.prototype.getDataRegionSizeColumns = function () {\n    return this.dataRegionSizeColumns;\n  };\n\n  Version.prototype.getTotalCodewords = function () {\n    return this.totalCodewords;\n  };\n\n  Version.prototype.getECBlocks = function () {\n    return this.ecBlocks;\n  };\n  /**\r\n   * <p>Deduces version information from Data Matrix dimensions.</p>\r\n   *\r\n   * @param numRows Number of rows in modules\r\n   * @param numColumns Number of columns in modules\r\n   * @return Version for a Data Matrix Code of those dimensions\r\n   * @throws FormatException if dimensions do correspond to a valid Data Matrix size\r\n   */\n\n\n  Version.getVersionForDimensions = function (numRows, numColumns) {\n    if ((numRows & 0x01) !== 0 || (numColumns & 0x01) !== 0) {\n      throw new FormatException_1.default();\n    }\n\n    for (var _i = 0, _a = Version.VERSIONS; _i < _a.length; _i++) {\n      var version = _a[_i];\n\n      if (version.symbolSizeRows === numRows && version.symbolSizeColumns === numColumns) {\n        return version;\n      }\n    }\n\n    throw new FormatException_1.default();\n  }; //  @Override\n\n\n  Version.prototype.toString = function () {\n    return '' + this.versionNumber;\n  };\n  /**\r\n   * See ISO 16022:2006 5.5.1 Table 7\r\n   */\n\n\n  Version.buildVersions = function () {\n    return [new Version(1, 10, 10, 8, 8, new ECBlocks(5, new ECB(1, 3))), new Version(2, 12, 12, 10, 10, new ECBlocks(7, new ECB(1, 5))), new Version(3, 14, 14, 12, 12, new ECBlocks(10, new ECB(1, 8))), new Version(4, 16, 16, 14, 14, new ECBlocks(12, new ECB(1, 12))), new Version(5, 18, 18, 16, 16, new ECBlocks(14, new ECB(1, 18))), new Version(6, 20, 20, 18, 18, new ECBlocks(18, new ECB(1, 22))), new Version(7, 22, 22, 20, 20, new ECBlocks(20, new ECB(1, 30))), new Version(8, 24, 24, 22, 22, new ECBlocks(24, new ECB(1, 36))), new Version(9, 26, 26, 24, 24, new ECBlocks(28, new ECB(1, 44))), new Version(10, 32, 32, 14, 14, new ECBlocks(36, new ECB(1, 62))), new Version(11, 36, 36, 16, 16, new ECBlocks(42, new ECB(1, 86))), new Version(12, 40, 40, 18, 18, new ECBlocks(48, new ECB(1, 114))), new Version(13, 44, 44, 20, 20, new ECBlocks(56, new ECB(1, 144))), new Version(14, 48, 48, 22, 22, new ECBlocks(68, new ECB(1, 174))), new Version(15, 52, 52, 24, 24, new ECBlocks(42, new ECB(2, 102))), new Version(16, 64, 64, 14, 14, new ECBlocks(56, new ECB(2, 140))), new Version(17, 72, 72, 16, 16, new ECBlocks(36, new ECB(4, 92))), new Version(18, 80, 80, 18, 18, new ECBlocks(48, new ECB(4, 114))), new Version(19, 88, 88, 20, 20, new ECBlocks(56, new ECB(4, 144))), new Version(20, 96, 96, 22, 22, new ECBlocks(68, new ECB(4, 174))), new Version(21, 104, 104, 24, 24, new ECBlocks(56, new ECB(6, 136))), new Version(22, 120, 120, 18, 18, new ECBlocks(68, new ECB(6, 175))), new Version(23, 132, 132, 20, 20, new ECBlocks(62, new ECB(8, 163))), new Version(24, 144, 144, 22, 22, new ECBlocks(62, new ECB(8, 156), new ECB(2, 155))), new Version(25, 8, 18, 6, 16, new ECBlocks(7, new ECB(1, 5))), new Version(26, 8, 32, 6, 14, new ECBlocks(11, new ECB(1, 10))), new Version(27, 12, 26, 10, 24, new ECBlocks(14, new ECB(1, 16))), new Version(28, 12, 36, 10, 16, new ECBlocks(18, new ECB(1, 22))), new Version(29, 16, 36, 14, 16, new ECBlocks(24, new ECB(1, 32))), new Version(30, 16, 48, 14, 22, new ECBlocks(28, new ECB(1, 49)))];\n  };\n\n  Version.VERSIONS = Version.buildVersions();\n  return Version;\n}();\n\nexports.default = Version;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * <p>Encapsulates a block of data within a Data Matrix Code. Data Matrix Codes may split their data into\r\n * multiple blocks, each of which is a unit of data and error-correction codewords. Each\r\n * is represented by an instance of this class.</p>\r\n *\r\n * @author bbrown@google.com (Brian Brown)\r\n */\n\n\nvar DataBlock =\n/** @class */\nfunction () {\n  function DataBlock(numDataCodewords, codewords) {\n    this.numDataCodewords = numDataCodewords;\n    this.codewords = codewords;\n  }\n  /**\r\n   * <p>When Data Matrix Codes use multiple data blocks, they actually interleave the bytes of each of them.\r\n   * That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This\r\n   * method will separate the data into original blocks.</p>\r\n   *\r\n   * @param rawCodewords bytes as read directly from the Data Matrix Code\r\n   * @param version version of the Data Matrix Code\r\n   * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in the\r\n   *         Data Matrix Code\r\n   */\n\n\n  DataBlock.getDataBlocks = function (rawCodewords, version) {\n    // Figure out the number and size of data blocks used by this version\n    var ecBlocks = version.getECBlocks(); // First count the total number of data blocks\n\n    var totalBlocks = 0;\n    var ecBlockArray = ecBlocks.getECBlocks();\n\n    for (var _i = 0, ecBlockArray_1 = ecBlockArray; _i < ecBlockArray_1.length; _i++) {\n      var ecBlock = ecBlockArray_1[_i];\n      totalBlocks += ecBlock.getCount();\n    } // Now establish DataBlocks of the appropriate size and number of data codewords\n\n\n    var result = new Array(totalBlocks);\n    var numResultBlocks = 0;\n\n    for (var _a = 0, ecBlockArray_2 = ecBlockArray; _a < ecBlockArray_2.length; _a++) {\n      var ecBlock = ecBlockArray_2[_a];\n\n      for (var i = 0; i < ecBlock.getCount(); i++) {\n        var numDataCodewords = ecBlock.getDataCodewords();\n        var numBlockCodewords = ecBlocks.getECCodewords() + numDataCodewords;\n        result[numResultBlocks++] = new DataBlock(numDataCodewords, new Uint8Array(numBlockCodewords));\n      }\n    } // All blocks have the same amount of data, except that the last n\n    // (where n may be 0) have 1 less byte. Figure out where these start.\n    // TODO(bbrown): There is only one case where there is a difference for Data Matrix for size 144\n\n\n    var longerBlocksTotalCodewords = result[0].codewords.length; // int shorterBlocksTotalCodewords = longerBlocksTotalCodewords - 1;\n\n    var longerBlocksNumDataCodewords = longerBlocksTotalCodewords - ecBlocks.getECCodewords();\n    var shorterBlocksNumDataCodewords = longerBlocksNumDataCodewords - 1; // The last elements of result may be 1 element shorter for 144 matrix\n    // first fill out as many elements as all of them have minus 1\n\n    var rawCodewordsOffset = 0;\n\n    for (var i = 0; i < shorterBlocksNumDataCodewords; i++) {\n      for (var j = 0; j < numResultBlocks; j++) {\n        result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n      }\n    } // Fill out the last data block in the longer ones\n\n\n    var specialVersion = version.getVersionNumber() === 24;\n    var numLongerBlocks = specialVersion ? 8 : numResultBlocks;\n\n    for (var j = 0; j < numLongerBlocks; j++) {\n      result[j].codewords[longerBlocksNumDataCodewords - 1] = rawCodewords[rawCodewordsOffset++];\n    } // Now add in error correction blocks\n\n\n    var max = result[0].codewords.length;\n\n    for (var i = longerBlocksNumDataCodewords; i < max; i++) {\n      for (var j = 0; j < numResultBlocks; j++) {\n        var jOffset = specialVersion ? (j + 8) % numResultBlocks : j;\n        var iOffset = specialVersion && jOffset > 7 ? i - 1 : i;\n        result[jOffset].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n      }\n    }\n\n    if (rawCodewordsOffset !== rawCodewords.length) {\n      throw new IllegalArgumentException_1.default();\n    }\n\n    return result;\n  };\n\n  DataBlock.prototype.getNumDataCodewords = function () {\n    return this.numDataCodewords;\n  };\n\n  DataBlock.prototype.getCodewords = function () {\n    return this.codewords;\n  };\n\n  return DataBlock;\n}();\n\nexports.default = DataBlock;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DecoderResult_1 = require(\"../../common/DecoderResult\");\n\nvar BitSource_1 = require(\"../../common/BitSource\");\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n\nvar StringEncoding_1 = require(\"../../util/StringEncoding\");\n\nvar __1 = require(\"../../..\");\n\nvar FormatException_1 = require(\"../../FormatException\");\n\nvar IllegalStateException_1 = require(\"../../IllegalStateException\");\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Mode;\n\n(function (Mode) {\n  Mode[Mode[\"PAD_ENCODE\"] = 0] = \"PAD_ENCODE\";\n  Mode[Mode[\"ASCII_ENCODE\"] = 1] = \"ASCII_ENCODE\";\n  Mode[Mode[\"C40_ENCODE\"] = 2] = \"C40_ENCODE\";\n  Mode[Mode[\"TEXT_ENCODE\"] = 3] = \"TEXT_ENCODE\";\n  Mode[Mode[\"ANSIX12_ENCODE\"] = 4] = \"ANSIX12_ENCODE\";\n  Mode[Mode[\"EDIFACT_ENCODE\"] = 5] = \"EDIFACT_ENCODE\";\n  Mode[Mode[\"BASE256_ENCODE\"] = 6] = \"BASE256_ENCODE\";\n})(Mode || (Mode = {}));\n/**\r\n * <p>Data Matrix Codes can encode text as bits in one of several modes, and can use multiple modes\r\n * in one Data Matrix Code. This class decodes the bits back into text.</p>\r\n *\r\n * <p>See ISO 16022:2006, 5.2.1 - 5.2.9.2</p>\r\n *\r\n * @author bbrown@google.com (Brian Brown)\r\n * @author Sean Owen\r\n */\n\n\nvar DecodedBitStreamParser =\n/** @class */\nfunction () {\n  function DecodedBitStreamParser() {}\n\n  DecodedBitStreamParser.decode = function (bytes) {\n    var bits = new BitSource_1.default(bytes);\n    var result = new StringBuilder_1.default();\n    var resultTrailer = new StringBuilder_1.default();\n    var byteSegments = new Array();\n    var mode = Mode.ASCII_ENCODE;\n\n    do {\n      if (mode === Mode.ASCII_ENCODE) {\n        mode = this.decodeAsciiSegment(bits, result, resultTrailer);\n      } else {\n        switch (mode) {\n          case Mode.C40_ENCODE:\n            this.decodeC40Segment(bits, result);\n            break;\n\n          case Mode.TEXT_ENCODE:\n            this.decodeTextSegment(bits, result);\n            break;\n\n          case Mode.ANSIX12_ENCODE:\n            this.decodeAnsiX12Segment(bits, result);\n            break;\n\n          case Mode.EDIFACT_ENCODE:\n            this.decodeEdifactSegment(bits, result);\n            break;\n\n          case Mode.BASE256_ENCODE:\n            this.decodeBase256Segment(bits, result, byteSegments);\n            break;\n\n          default:\n            throw new FormatException_1.default();\n        }\n\n        mode = Mode.ASCII_ENCODE;\n      }\n    } while (mode !== Mode.PAD_ENCODE && bits.available() > 0);\n\n    if (resultTrailer.length() > 0) {\n      result.append(resultTrailer.toString());\n    }\n\n    return new DecoderResult_1.default(bytes, result.toString(), byteSegments.length === 0 ? null : byteSegments, null);\n  };\n  /**\r\n   * See ISO 16022:2006, 5.2.3 and Annex C, Table C.2\r\n   */\n\n\n  DecodedBitStreamParser.decodeAsciiSegment = function (bits, result, resultTrailer) {\n    var upperShift = false;\n\n    do {\n      var oneByte = bits.readBits(8);\n\n      if (oneByte === 0) {\n        throw new FormatException_1.default();\n      } else if (oneByte <= 128) {\n        // ASCII data (ASCII value + 1)\n        if (upperShift) {\n          oneByte += 128; // upperShift = false;\n        }\n\n        result.append(String.fromCharCode(oneByte - 1));\n        return Mode.ASCII_ENCODE;\n      } else if (oneByte === 129) {\n        // Pad\n        return Mode.PAD_ENCODE;\n      } else if (oneByte <= 229) {\n        // 2-digit data 00-99 (Numeric Value + 130)\n        var value = oneByte - 130;\n\n        if (value < 10) {\n          // pad with '0' for single digit values\n          result.append('0');\n        }\n\n        result.append('' + value);\n      } else {\n        switch (oneByte) {\n          case 230:\n            // Latch to C40 encodation\n            return Mode.C40_ENCODE;\n\n          case 231:\n            // Latch to Base 256 encodation\n            return Mode.BASE256_ENCODE;\n\n          case 232:\n            // FNC1\n            result.append(String.fromCharCode(29)); // translate as ASCII 29\n\n            break;\n\n          case 233: // Structured Append\n\n          case 234:\n            // Reader Programming\n            // Ignore these symbols for now\n            // throw ReaderException.getInstance();\n            break;\n\n          case 235:\n            // Upper Shift (shift to Extended ASCII)\n            upperShift = true;\n            break;\n\n          case 236:\n            // 05 Macro\n            result.append(\"[)>\\x1E05\\x1D\");\n            resultTrailer.insert(0, \"\\x1E\\x04\");\n            break;\n\n          case 237:\n            // 06 Macro\n            result.append(\"[)>\\x1E06\\x1D\");\n            resultTrailer.insert(0, \"\\x1E\\x04\");\n            break;\n\n          case 238:\n            // Latch to ANSI X12 encodation\n            return Mode.ANSIX12_ENCODE;\n\n          case 239:\n            // Latch to Text encodation\n            return Mode.TEXT_ENCODE;\n\n          case 240:\n            // Latch to EDIFACT encodation\n            return Mode.EDIFACT_ENCODE;\n\n          case 241:\n            // ECI Character\n            // TODO(bbrown): I think we need to support ECI\n            // throw ReaderException.getInstance();\n            // Ignore this symbol for now\n            break;\n\n          default:\n            // Not to be used in ASCII encodation\n            // but work around encoders that end with 254, latch back to ASCII\n            if (oneByte !== 254 || bits.available() !== 0) {\n              throw new FormatException_1.default();\n            }\n\n            break;\n        }\n      }\n    } while (bits.available() > 0);\n\n    return Mode.ASCII_ENCODE;\n  };\n  /**\r\n   * See ISO 16022:2006, 5.2.5 and Annex C, Table C.1\r\n   */\n\n\n  DecodedBitStreamParser.decodeC40Segment = function (bits, result) {\n    // Three C40 values are encoded in a 16-bit value as\n    // (1600 * C1) + (40 * C2) + C3 + 1\n    // TODO(bbrown): The Upper Shift with C40 doesn't work in the 4 value scenario all the time\n    var upperShift = false;\n    var cValues = [];\n    var shift = 0;\n\n    do {\n      // If there is only one byte left then it will be encoded as ASCII\n      if (bits.available() === 8) {\n        return;\n      }\n\n      var firstByte = bits.readBits(8);\n\n      if (firstByte === 254) {\n        // Unlatch codeword\n        return;\n      }\n\n      this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n\n      for (var i = 0; i < 3; i++) {\n        var cValue = cValues[i];\n\n        switch (shift) {\n          case 0:\n            if (cValue < 3) {\n              shift = cValue + 1;\n            } else if (cValue < this.C40_BASIC_SET_CHARS.length) {\n              var c40char = this.C40_BASIC_SET_CHARS[cValue];\n\n              if (upperShift) {\n                result.append(String.fromCharCode(c40char.charCodeAt(0) + 128));\n                upperShift = false;\n              } else {\n                result.append(c40char);\n              }\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          case 1:\n            if (upperShift) {\n              result.append(String.fromCharCode(cValue + 128));\n              upperShift = false;\n            } else {\n              result.append(String.fromCharCode(cValue));\n            }\n\n            shift = 0;\n            break;\n\n          case 2:\n            if (cValue < this.C40_SHIFT2_SET_CHARS.length) {\n              var c40char = this.C40_SHIFT2_SET_CHARS[cValue];\n\n              if (upperShift) {\n                result.append(String.fromCharCode(c40char.charCodeAt(0) + 128));\n                upperShift = false;\n              } else {\n                result.append(c40char);\n              }\n            } else {\n              switch (cValue) {\n                case 27:\n                  // FNC1\n                  result.append(String.fromCharCode(29)); // translate as ASCII 29\n\n                  break;\n\n                case 30:\n                  // Upper Shift\n                  upperShift = true;\n                  break;\n\n                default:\n                  throw new FormatException_1.default();\n              }\n            }\n\n            shift = 0;\n            break;\n\n          case 3:\n            if (upperShift) {\n              result.append(String.fromCharCode(cValue + 224));\n              upperShift = false;\n            } else {\n              result.append(String.fromCharCode(cValue + 96));\n            }\n\n            shift = 0;\n            break;\n\n          default:\n            throw new FormatException_1.default();\n        }\n      }\n    } while (bits.available() > 0);\n  };\n  /**\r\n   * See ISO 16022:2006, 5.2.6 and Annex C, Table C.2\r\n   */\n\n\n  DecodedBitStreamParser.decodeTextSegment = function (bits, result) {\n    // Three Text values are encoded in a 16-bit value as\n    // (1600 * C1) + (40 * C2) + C3 + 1\n    // TODO(bbrown): The Upper Shift with Text doesn't work in the 4 value scenario all the time\n    var upperShift = false;\n    var cValues = [];\n    var shift = 0;\n\n    do {\n      // If there is only one byte left then it will be encoded as ASCII\n      if (bits.available() === 8) {\n        return;\n      }\n\n      var firstByte = bits.readBits(8);\n\n      if (firstByte === 254) {\n        // Unlatch codeword\n        return;\n      }\n\n      this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n\n      for (var i = 0; i < 3; i++) {\n        var cValue = cValues[i];\n\n        switch (shift) {\n          case 0:\n            if (cValue < 3) {\n              shift = cValue + 1;\n            } else if (cValue < this.TEXT_BASIC_SET_CHARS.length) {\n              var textChar = this.TEXT_BASIC_SET_CHARS[cValue];\n\n              if (upperShift) {\n                result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                upperShift = false;\n              } else {\n                result.append(textChar);\n              }\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          case 1:\n            if (upperShift) {\n              result.append(String.fromCharCode(cValue + 128));\n              upperShift = false;\n            } else {\n              result.append(String.fromCharCode(cValue));\n            }\n\n            shift = 0;\n            break;\n\n          case 2:\n            // Shift 2 for Text is the same encoding as C40\n            if (cValue < this.TEXT_SHIFT2_SET_CHARS.length) {\n              var textChar = this.TEXT_SHIFT2_SET_CHARS[cValue];\n\n              if (upperShift) {\n                result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                upperShift = false;\n              } else {\n                result.append(textChar);\n              }\n            } else {\n              switch (cValue) {\n                case 27:\n                  // FNC1\n                  result.append(String.fromCharCode(29)); // translate as ASCII 29\n\n                  break;\n\n                case 30:\n                  // Upper Shift\n                  upperShift = true;\n                  break;\n\n                default:\n                  throw new FormatException_1.default();\n              }\n            }\n\n            shift = 0;\n            break;\n\n          case 3:\n            if (cValue < this.TEXT_SHIFT3_SET_CHARS.length) {\n              var textChar = this.TEXT_SHIFT3_SET_CHARS[cValue];\n\n              if (upperShift) {\n                result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                upperShift = false;\n              } else {\n                result.append(textChar);\n              }\n\n              shift = 0;\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n\n          default:\n            throw new FormatException_1.default();\n        }\n      }\n    } while (bits.available() > 0);\n  };\n  /**\r\n   * See ISO 16022:2006, 5.2.7\r\n   */\n\n\n  DecodedBitStreamParser.decodeAnsiX12Segment = function (bits, result) {\n    // Three ANSI X12 values are encoded in a 16-bit value as\n    // (1600 * C1) + (40 * C2) + C3 + 1\n    var cValues = [];\n\n    do {\n      // If there is only one byte left then it will be encoded as ASCII\n      if (bits.available() === 8) {\n        return;\n      }\n\n      var firstByte = bits.readBits(8);\n\n      if (firstByte === 254) {\n        // Unlatch codeword\n        return;\n      }\n\n      this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n\n      for (var i = 0; i < 3; i++) {\n        var cValue = cValues[i];\n\n        switch (cValue) {\n          case 0:\n            // X12 segment terminator <CR>\n            result.append('\\r');\n            break;\n\n          case 1:\n            // X12 segment separator *\n            result.append('*');\n            break;\n\n          case 2:\n            // X12 sub-element separator >\n            result.append('>');\n            break;\n\n          case 3:\n            // space\n            result.append(' ');\n            break;\n\n          default:\n            if (cValue < 14) {\n              // 0 - 9\n              result.append(String.fromCharCode(cValue + 44));\n            } else if (cValue < 40) {\n              // A - Z\n              result.append(String.fromCharCode(cValue + 51));\n            } else {\n              throw new FormatException_1.default();\n            }\n\n            break;\n        }\n      }\n    } while (bits.available() > 0);\n  };\n\n  DecodedBitStreamParser.parseTwoBytes = function (firstByte, secondByte, result) {\n    var fullBitValue = (firstByte << 8) + secondByte - 1;\n    var temp = Math.floor(fullBitValue / 1600);\n    result[0] = temp;\n    fullBitValue -= temp * 1600;\n    temp = Math.floor(fullBitValue / 40);\n    result[1] = temp;\n    result[2] = fullBitValue - temp * 40;\n  };\n  /**\r\n   * See ISO 16022:2006, 5.2.8 and Annex C Table C.3\r\n   */\n\n\n  DecodedBitStreamParser.decodeEdifactSegment = function (bits, result) {\n    do {\n      // If there is only two or less bytes left then it will be encoded as ASCII\n      if (bits.available() <= 16) {\n        return;\n      }\n\n      for (var i = 0; i < 4; i++) {\n        var edifactValue = bits.readBits(6); // Check for the unlatch character\n\n        if (edifactValue === 0x1F) {\n          // 011111\n          // Read rest of byte, which should be 0, and stop\n          var bitsLeft = 8 - bits.getBitOffset();\n\n          if (bitsLeft !== 8) {\n            bits.readBits(bitsLeft);\n          }\n\n          return;\n        }\n\n        if ((edifactValue & 0x20) === 0) {\n          // no 1 in the leading (6th) bit\n          edifactValue |= 0x40; // Add a leading 01 to the 6 bit binary value\n        }\n\n        result.append(String.fromCharCode(edifactValue));\n      }\n    } while (bits.available() > 0);\n  };\n  /**\r\n   * See ISO 16022:2006, 5.2.9 and Annex B, B.2\r\n   */\n\n\n  DecodedBitStreamParser.decodeBase256Segment = function (bits, result, byteSegments) {\n    // Figure out how long the Base 256 Segment is.\n    var codewordPosition = 1 + bits.getByteOffset(); // position is 1-indexed\n\n    var d1 = this.unrandomize255State(bits.readBits(8), codewordPosition++);\n    var count;\n\n    if (d1 === 0) {\n      // Read the remainder of the symbol\n      count = bits.available() / 8 | 0;\n    } else if (d1 < 250) {\n      count = d1;\n    } else {\n      count = 250 * (d1 - 249) + this.unrandomize255State(bits.readBits(8), codewordPosition++);\n    } // We're seeing NegativeArraySizeException errors from users.\n\n\n    if (count < 0) {\n      throw new FormatException_1.default();\n    }\n\n    var bytes = new Uint8Array(count);\n\n    for (var i = 0; i < count; i++) {\n      // Have seen this particular error in the wild, such as at\n      // http://www.bcgen.com/demo/IDAutomationStreamingDataMatrix.aspx?MODE=3&D=Fred&PFMT=3&PT=F&X=0.3&O=0&LM=0.2\n      if (bits.available() < 8) {\n        throw new FormatException_1.default();\n      }\n\n      bytes[i] = this.unrandomize255State(bits.readBits(8), codewordPosition++);\n    }\n\n    byteSegments.push(bytes);\n\n    try {\n      result.append(StringEncoding_1.default.decode(bytes, __1.StringUtils.ISO88591));\n    } catch (uee) {\n      throw new IllegalStateException_1.default('Platform does not support required encoding: ' + uee.message);\n    }\n  };\n  /**\r\n   * See ISO 16022:2006, Annex B, B.2\r\n   */\n\n\n  DecodedBitStreamParser.unrandomize255State = function (randomizedBase256Codeword, base256CodewordPosition) {\n    var pseudoRandomNumber = 149 * base256CodewordPosition % 255 + 1;\n    var tempVariable = randomizedBase256Codeword - pseudoRandomNumber;\n    return tempVariable >= 0 ? tempVariable : tempVariable + 256;\n  };\n  /**\r\n   * See ISO 16022:2006, Annex C Table C.1\r\n   * The C40 Basic Character Set (*'s used for placeholders for the shift values)\r\n   */\n\n\n  DecodedBitStreamParser.C40_BASIC_SET_CHARS = ['*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  DecodedBitStreamParser.C40_SHIFT2_SET_CHARS = ['!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '_'];\n  /**\r\n   * See ISO 16022:2006, Annex C Table C.2\r\n   * The Text Basic Character Set (*'s used for placeholders for the shift values)\r\n   */\n\n  DecodedBitStreamParser.TEXT_BASIC_SET_CHARS = ['*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']; // Shift 2 for Text is the same encoding as C40\n\n  DecodedBitStreamParser.TEXT_SHIFT2_SET_CHARS = DecodedBitStreamParser.C40_SHIFT2_SET_CHARS;\n  DecodedBitStreamParser.TEXT_SHIFT3_SET_CHARS = ['`', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '{', '|', '}', '~', String.fromCharCode(127)];\n  return DecodedBitStreamParser;\n}();\n\nexports.default = DecodedBitStreamParser;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar DetectorResult_1 = require(\"../../common/DetectorResult\");\n\nvar GridSamplerInstance_1 = require(\"../../common/GridSamplerInstance\");\n\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n\nvar WhiteRectangleDetector_1 = require(\"../../common/detector/WhiteRectangleDetector\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * <p>Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code\r\n * is rotated or skewed, or partially obscured.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar Detector =\n/** @class */\nfunction () {\n  function Detector(image) {\n    this.image = image;\n    this.rectangleDetector = new WhiteRectangleDetector_1.default(image);\n  }\n  /**\r\n   * <p>Detects a Data Matrix Code in an image.</p>\r\n   *\r\n   * @return {@link DetectorResult} encapsulating results of detecting a Data Matrix Code\r\n   * @throws NotFoundException if no Data Matrix Code can be found\r\n   */\n\n\n  Detector.prototype.detect = function () {\n    var cornerPoints = this.rectangleDetector.detect();\n    var pointA = cornerPoints[0];\n    var pointB = cornerPoints[1];\n    var pointC = cornerPoints[2];\n    var pointD = cornerPoints[3]; // Point A and D are across the diagonal from one another,\n    // as are B and C. Figure out which are the solid black lines\n    // by counting transitions\n\n    var transitions = [];\n    transitions.push(this.transitionsBetween(pointA, pointB));\n    transitions.push(this.transitionsBetween(pointA, pointC));\n    transitions.push(this.transitionsBetween(pointB, pointD));\n    transitions.push(this.transitionsBetween(pointC, pointD));\n    transitions.sort(ResultPointsAndTransitions.resultPointsAndTransitionsComparator); // Sort by number of transitions. First two will be the two solid sides; last two\n    // will be the two alternating black/white sides\n\n    var lSideOne = transitions[0];\n    var lSideTwo = transitions[1]; // Figure out which point is their intersection by tallying up the number of times we see the\n    // endpoints in the four endpoints. One will show up twice.\n\n    var pointCount = new Map();\n    Detector.increment(pointCount, lSideOne.getFrom());\n    Detector.increment(pointCount, lSideOne.getTo());\n    Detector.increment(pointCount, lSideTwo.getFrom());\n    Detector.increment(pointCount, lSideTwo.getTo());\n    var maybeTopLeft = null;\n    var bottomLeft = null;\n    var maybeBottomRight = null;\n\n    for (var _i = 0, _a = Array.from(pointCount.entries()); _i < _a.length; _i++) {\n      var _b = _a[_i],\n          point = _b[0],\n          value = _b[1];\n\n      if (value === 2) {\n        bottomLeft = point; // this is definitely the bottom left, then -- end of two L sides\n      } else {\n        // Otherwise it's either top left or bottom right -- just assign the two arbitrarily now\n        if (maybeTopLeft == null) {\n          maybeTopLeft = point;\n        } else {\n          maybeBottomRight = point;\n        }\n      }\n    }\n\n    if (maybeTopLeft == null || bottomLeft == null || maybeBottomRight == null) {\n      throw new NotFoundException_1.default();\n    } // Bottom left is correct but top left and bottom right might be switched\n\n\n    var corners = [maybeTopLeft, bottomLeft, maybeBottomRight]; // Use the dot product trick to sort them out\n\n    ResultPoint_1.default.orderBestPatterns(corners); // Now we know which is which:\n\n    var bottomRight = corners[0];\n    bottomLeft = corners[1];\n    var topLeft = corners[2]; // Which point didn't we find in relation to the \"L\" sides? that's the top right corner\n\n    var topRight;\n\n    if (!pointCount.has(pointA)) {\n      topRight = pointA;\n    } else if (!pointCount.has(pointB)) {\n      topRight = pointB;\n    } else if (!pointCount.has(pointC)) {\n      topRight = pointC;\n    } else {\n      topRight = pointD;\n    } // Next determine the dimension by tracing along the top or right side and counting black/white\n    // transitions. Since we start inside a black module, we should see a number of transitions\n    // equal to 1 less than the code dimension. Well, actually 2 less, because we are going to\n    // end on a black module:\n    // The top right point is actually the corner of a module, which is one of the two black modules\n    // adjacent to the white module at the top right. Tracing to that corner from either the top left\n    // or bottom right should work here.\n\n\n    var dimensionTop = this.transitionsBetween(topLeft, topRight).getTransitions();\n    var dimensionRight = this.transitionsBetween(bottomRight, topRight).getTransitions();\n\n    if ((dimensionTop & 0x01) === 1) {\n      // it can't be odd, so, round... up?\n      dimensionTop++;\n    }\n\n    dimensionTop += 2;\n\n    if ((dimensionRight & 0x01) === 1) {\n      // it can't be odd, so, round... up?\n      dimensionRight++;\n    }\n\n    dimensionRight += 2;\n    var bits;\n    var correctedTopRight; // Rectangular symbols are 6x16, 6x28, 10x24, 10x32, 14x32, or 14x44. If one dimension is more\n    // than twice the other, it's certainly rectangular, but to cut a bit more slack we accept it as\n    // rectangular if the bigger side is at least 7/4 times the other:\n\n    if (4 * dimensionTop >= 7 * dimensionRight || 4 * dimensionRight >= 7 * dimensionTop) {\n      // The matrix is rectangular\n      correctedTopRight = this.correctTopRightRectangular(bottomLeft, bottomRight, topLeft, topRight, dimensionTop, dimensionRight);\n\n      if (correctedTopRight == null) {\n        correctedTopRight = topRight;\n      }\n\n      dimensionTop = this.transitionsBetween(topLeft, correctedTopRight).getTransitions();\n      dimensionRight = this.transitionsBetween(bottomRight, correctedTopRight).getTransitions();\n\n      if ((dimensionTop & 0x01) === 1) {\n        // it can't be odd, so, round... up?\n        dimensionTop++;\n      }\n\n      if ((dimensionRight & 0x01) === 1) {\n        // it can't be odd, so, round... up?\n        dimensionRight++;\n      }\n\n      bits = Detector.sampleGrid(this.image, topLeft, bottomLeft, bottomRight, correctedTopRight, dimensionTop, dimensionRight);\n    } else {\n      // The matrix is square\n      var dimension = Math.min(dimensionRight, dimensionTop); // correct top right point to match the white module\n\n      correctedTopRight = this.correctTopRight(bottomLeft, bottomRight, topLeft, topRight, dimension);\n\n      if (correctedTopRight == null) {\n        correctedTopRight = topRight;\n      } // Redetermine the dimension using the corrected top right point\n\n\n      var dimensionCorrected = Math.max(this.transitionsBetween(topLeft, correctedTopRight).getTransitions(), this.transitionsBetween(bottomRight, correctedTopRight).getTransitions());\n      dimensionCorrected++;\n\n      if ((dimensionCorrected & 0x01) === 1) {\n        dimensionCorrected++;\n      }\n\n      bits = Detector.sampleGrid(this.image, topLeft, bottomLeft, bottomRight, correctedTopRight, dimensionCorrected, dimensionCorrected);\n    }\n\n    return new DetectorResult_1.default(bits, [topLeft, bottomLeft, bottomRight, correctedTopRight]);\n  };\n  /**\r\n   * Calculates the position of the white top right module using the output of the rectangle detector\r\n   * for a rectangular matrix\r\n   */\n\n\n  Detector.prototype.correctTopRightRectangular = function (bottomLeft, bottomRight, topLeft, topRight, dimensionTop, dimensionRight) {\n    var corr = Detector.distance(bottomLeft, bottomRight) / dimensionTop;\n    var norm = Detector.distance(topLeft, topRight);\n    var cos = (topRight.getX() - topLeft.getX()) / norm;\n    var sin = (topRight.getY() - topLeft.getY()) / norm;\n    var c1 = new ResultPoint_1.default(topRight.getX() + corr * cos, topRight.getY() + corr * sin);\n    corr = Detector.distance(bottomLeft, topLeft) / dimensionRight;\n    norm = Detector.distance(bottomRight, topRight);\n    cos = (topRight.getX() - bottomRight.getX()) / norm;\n    sin = (topRight.getY() - bottomRight.getY()) / norm;\n    var c2 = new ResultPoint_1.default(topRight.getX() + corr * cos, topRight.getY() + corr * sin);\n\n    if (!this.isValid(c1)) {\n      if (this.isValid(c2)) {\n        return c2;\n      }\n\n      return null;\n    }\n\n    if (!this.isValid(c2)) {\n      return c1;\n    }\n\n    var l1 = Math.abs(dimensionTop - this.transitionsBetween(topLeft, c1).getTransitions()) + Math.abs(dimensionRight - this.transitionsBetween(bottomRight, c1).getTransitions());\n    var l2 = Math.abs(dimensionTop - this.transitionsBetween(topLeft, c2).getTransitions()) + Math.abs(dimensionRight - this.transitionsBetween(bottomRight, c2).getTransitions());\n\n    if (l1 <= l2) {\n      return c1;\n    }\n\n    return c2;\n  };\n  /**\r\n   * Calculates the position of the white top right module using the output of the rectangle detector\r\n   * for a square matrix\r\n   */\n\n\n  Detector.prototype.correctTopRight = function (bottomLeft, bottomRight, topLeft, topRight, dimension) {\n    var corr = Detector.distance(bottomLeft, bottomRight) / dimension;\n    var norm = Detector.distance(topLeft, topRight);\n    var cos = (topRight.getX() - topLeft.getX()) / norm;\n    var sin = (topRight.getY() - topLeft.getY()) / norm;\n    var c1 = new ResultPoint_1.default(topRight.getX() + corr * cos, topRight.getY() + corr * sin);\n    corr = Detector.distance(bottomLeft, topLeft) / dimension;\n    norm = Detector.distance(bottomRight, topRight);\n    cos = (topRight.getX() - bottomRight.getX()) / norm;\n    sin = (topRight.getY() - bottomRight.getY()) / norm;\n    var c2 = new ResultPoint_1.default(topRight.getX() + corr * cos, topRight.getY() + corr * sin);\n\n    if (!this.isValid(c1)) {\n      if (this.isValid(c2)) {\n        return c2;\n      }\n\n      return null;\n    }\n\n    if (!this.isValid(c2)) {\n      return c1;\n    }\n\n    var l1 = Math.abs(this.transitionsBetween(topLeft, c1).getTransitions() - this.transitionsBetween(bottomRight, c1).getTransitions());\n    var l2 = Math.abs(this.transitionsBetween(topLeft, c2).getTransitions() - this.transitionsBetween(bottomRight, c2).getTransitions());\n    return l1 <= l2 ? c1 : c2;\n  };\n\n  Detector.prototype.isValid = function (p) {\n    return p.getX() >= 0 && p.getX() < this.image.getWidth() && p.getY() > 0 && p.getY() < this.image.getHeight();\n  };\n\n  Detector.distance = function (a, b) {\n    return MathUtils_1.default.round(ResultPoint_1.default.distance(a, b));\n  };\n  /**\r\n   * Increments the Integer associated with a key by one.\r\n   */\n\n\n  Detector.increment = function (table, key) {\n    var value = table.get(key);\n    table.set(key, value == null ? 1 : value + 1);\n  };\n\n  Detector.sampleGrid = function (image, topLeft, bottomLeft, bottomRight, topRight, dimensionX, dimensionY) {\n    var sampler = GridSamplerInstance_1.default.getInstance();\n    return sampler.sampleGrid(image, dimensionX, dimensionY, 0.5, 0.5, dimensionX - 0.5, 0.5, dimensionX - 0.5, dimensionY - 0.5, 0.5, dimensionY - 0.5, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n  };\n  /**\r\n   * Counts the number of black/white transitions between two points, using something like Bresenham's algorithm.\r\n   */\n\n\n  Detector.prototype.transitionsBetween = function (from, to) {\n    // See QR Code Detector, sizeOfBlackWhiteBlackRun()\n    var fromX = from.getX() | 0;\n    var fromY = from.getY() | 0;\n    var toX = to.getX() | 0;\n    var toY = to.getY() | 0;\n    var steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n\n    if (steep) {\n      var temp = fromX;\n      fromX = fromY;\n      fromY = temp;\n      temp = toX;\n      toX = toY;\n      toY = temp;\n    }\n\n    var dx = Math.abs(toX - fromX);\n    var dy = Math.abs(toY - fromY);\n    var error = -dx / 2;\n    var ystep = fromY < toY ? 1 : -1;\n    var xstep = fromX < toX ? 1 : -1;\n    var transitions = 0;\n    var inBlack = this.image.get(steep ? fromY : fromX, steep ? fromX : fromY);\n\n    for (var x = fromX, y = fromY; x !== toX; x += xstep) {\n      var isBlack = this.image.get(steep ? y : x, steep ? x : y);\n\n      if (isBlack !== inBlack) {\n        transitions++;\n        inBlack = isBlack;\n      }\n\n      error += dy;\n\n      if (error > 0) {\n        if (y === toY) {\n          break;\n        }\n\n        y += ystep;\n        error -= dx;\n      }\n    }\n\n    return new ResultPointsAndTransitions(from, to, transitions);\n  };\n\n  return Detector;\n}();\n\nexports.default = Detector;\n\nvar ResultPointsAndTransitions =\n/** @class */\nfunction () {\n  function ResultPointsAndTransitions(from, to, transitions) {\n    this.from = from;\n    this.to = to;\n    this.transitions = transitions;\n  }\n\n  ResultPointsAndTransitions.prototype.getFrom = function () {\n    return this.from;\n  };\n\n  ResultPointsAndTransitions.prototype.getTo = function () {\n    return this.to;\n  };\n\n  ResultPointsAndTransitions.prototype.getTransitions = function () {\n    return this.transitions;\n  }; // @Override\n\n\n  ResultPointsAndTransitions.prototype.toString = function () {\n    return this.from + '/' + this.to + '/' + this.transitions;\n  };\n\n  ResultPointsAndTransitions.resultPointsAndTransitionsComparator = function (o1, o2) {\n    return o1.getTransitions() - o2.getTransitions();\n  };\n\n  return ResultPointsAndTransitions;\n}();","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EncodeHintType_1 = require(\"../core/EncodeHintType\");\n\nvar Encoder_1 = require(\"../core/qrcode/encoder/Encoder\");\n\nvar ErrorCorrectionLevel_1 = require(\"../core/qrcode/decoder/ErrorCorrectionLevel\");\n\nvar IllegalArgumentException_1 = require(\"../core/IllegalArgumentException\");\n\nvar IllegalStateException_1 = require(\"../core/IllegalStateException\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n */\n\n\nvar BrowserQRCodeSvgWriter =\n/** @class */\nfunction () {\n  function BrowserQRCodeSvgWriter() {}\n  /**\r\n   * Writes and renders a QRCode SVG element.\r\n   *\r\n   * @param contents\r\n   * @param width\r\n   * @param height\r\n   * @param hints\r\n   */\n\n\n  BrowserQRCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    if (contents.length === 0) {\n      throw new IllegalArgumentException_1.default('Found empty contents');\n    } // if (format != BarcodeFormat.QR_CODE) {\n    //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n    // }\n\n\n    if (width < 0 || height < 0) {\n      throw new IllegalArgumentException_1.default('Requested dimensions are too small: ' + width + 'x' + height);\n    }\n\n    var errorCorrectionLevel = ErrorCorrectionLevel_1.default.L;\n    var quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\n\n    if (hints !== null) {\n      if (undefined !== hints.get(EncodeHintType_1.default.ERROR_CORRECTION)) {\n        errorCorrectionLevel = ErrorCorrectionLevel_1.default.fromString(hints.get(EncodeHintType_1.default.ERROR_CORRECTION).toString());\n      }\n\n      if (undefined !== hints.get(EncodeHintType_1.default.MARGIN)) {\n        quietZone = Number.parseInt(hints.get(EncodeHintType_1.default.MARGIN).toString(), 10);\n      }\n    }\n\n    var code = Encoder_1.default.encode(contents, errorCorrectionLevel, hints);\n    return this.renderResult(code, width, height, quietZone);\n  };\n  /**\r\n   * Renders the result and then appends it to the DOM.\r\n   */\n\n\n  BrowserQRCodeSvgWriter.prototype.writeToDom = function (containerElement, contents, width, height, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    if (typeof containerElement === 'string') {\n      containerElement = document.querySelector(containerElement);\n    }\n\n    var svgElement = this.write(contents, width, height, hints);\n    if (containerElement) containerElement.appendChild(svgElement);\n  };\n  /**\r\n   * Note that the input matrix uses 0 == white, 1 == black.\r\n   * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\r\n   */\n\n\n  BrowserQRCodeSvgWriter.prototype.renderResult = function (code, width\n  /*int*/\n  , height\n  /*int*/\n  , quietZone\n  /*int*/\n  ) {\n    var input = code.getMatrix();\n\n    if (input === null) {\n      throw new IllegalStateException_1.default();\n    }\n\n    var inputWidth = input.getWidth();\n    var inputHeight = input.getHeight();\n    var qrWidth = inputWidth + quietZone * 2;\n    var qrHeight = inputHeight + quietZone * 2;\n    var outputWidth = Math.max(width, qrWidth);\n    var outputHeight = Math.max(height, qrHeight);\n    var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight)); // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n    // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n    // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n    // handle all the padding from 100x100 (the actual QR) up to 200x160.\n\n    var leftPadding = Math.floor((outputWidth - inputWidth * multiple) / 2);\n    var topPadding = Math.floor((outputHeight - inputHeight * multiple) / 2);\n    var svgElement = this.createSVGElement(outputWidth, outputHeight);\n\n    for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n      // Write the contents of this row of the barcode\n      for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n        if (input.get(inputX, inputY) === 1) {\n          var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n          svgElement.appendChild(svgRectElement);\n        }\n      }\n    }\n\n    return svgElement;\n  };\n  /**\r\n   * Creates a SVG element.\r\n   *\r\n   * @param w SVG's width attribute\r\n   * @param h SVG's height attribute\r\n   */\n\n\n  BrowserQRCodeSvgWriter.prototype.createSVGElement = function (w, h) {\n    var svgElement = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'svg');\n    svgElement.setAttributeNS(null, 'height', w.toString());\n    svgElement.setAttributeNS(null, 'width', h.toString());\n    return svgElement;\n  };\n  /**\r\n   * Creates a SVG rect element.\r\n   *\r\n   * @param x Element's x coordinate\r\n   * @param y Element's y coordinate\r\n   * @param w Element's width attribute\r\n   * @param h Element's height attribute\r\n   */\n\n\n  BrowserQRCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\n    var rect = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'rect');\n    rect.setAttributeNS(null, 'x', x.toString());\n    rect.setAttributeNS(null, 'y', y.toString());\n    rect.setAttributeNS(null, 'height', w.toString());\n    rect.setAttributeNS(null, 'width', h.toString());\n    rect.setAttributeNS(null, 'fill', '#000000');\n    return rect;\n  };\n\n  BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n  /**\r\n   * SVG markup NameSpace\r\n   */\n\n  BrowserQRCodeSvgWriter.SVG_NS = 'http://www.w3.org/2000/svg';\n  return BrowserQRCodeSvgWriter;\n}();\n\nexports.BrowserQRCodeSvgWriter = BrowserQRCodeSvgWriter;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.encoder {*/\n\n/*import java.util.Arrays;*/\n\nvar Arrays_1 = require(\"../../util/Arrays\");\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\r\n * JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned\r\n * -1, 0, and 1, I'm going to use less memory and go with bytes.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar ByteMatrix =\n/** @class */\nfunction () {\n  function ByteMatrix(width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    this.width = width;\n    this.height = height;\n    var bytes = new Array(height); // [height][width]\n\n    for (var i = 0; i !== height; i++) {\n      bytes[i] = new Uint8Array(width);\n    }\n\n    this.bytes = bytes;\n  }\n\n  ByteMatrix.prototype.getHeight = function () {\n    return this.height;\n  };\n\n  ByteMatrix.prototype.getWidth = function () {\n    return this.width;\n  };\n\n  ByteMatrix.prototype.get = function (x\n  /*int*/\n  , y\n  /*int*/\n  ) {\n    return this.bytes[y][x];\n  };\n  /**\r\n   * @return an internal representation as bytes, in row-major order. array[y][x] represents point (x,y)\r\n   */\n\n\n  ByteMatrix.prototype.getArray = function () {\n    return this.bytes;\n  }; // TYPESCRIPTPORT: preffer to let two methods instead of override to avoid type comparison inside\n\n\n  ByteMatrix.prototype.setNumber = function (x\n  /*int*/\n  , y\n  /*int*/\n  , value\n  /*byte|int*/\n  ) {\n    this.bytes[y][x] = value;\n  }; // public set(x: number /*int*/, y: number /*int*/, value: number /*int*/): void {\n  //   bytes[y][x] = (byte) value\n  // }\n\n\n  ByteMatrix.prototype.setBoolean = function (x\n  /*int*/\n  , y\n  /*int*/\n  , value) {\n    this.bytes[y][x] =\n    /*(byte) */\n    value ? 1 : 0;\n  };\n\n  ByteMatrix.prototype.clear = function (value\n  /*byte*/\n  ) {\n    for (var _i = 0, _a = this.bytes; _i < _a.length; _i++) {\n      var aByte = _a[_i];\n      Arrays_1.default.fillUint8Array(aByte, value);\n    }\n  };\n\n  ByteMatrix.prototype.equals = function (o) {\n    if (!(o instanceof ByteMatrix)) {\n      return false;\n    }\n\n    var other = o;\n\n    if (this.width !== other.width) {\n      return false;\n    }\n\n    if (this.height !== other.height) {\n      return false;\n    }\n\n    for (var y = 0, height = this.height; y < height; ++y) {\n      var bytesY = this.bytes[y];\n      var otherBytesY = other.bytes[y];\n\n      for (var x = 0, width = this.width; x < width; ++x) {\n        if (bytesY[x] !== otherBytesY[x]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n  /*@Override*/\n\n\n  ByteMatrix.prototype.toString = function () {\n    var result = new StringBuilder_1.default(); // (2 * width * height + 2)\n\n    for (var y = 0, height = this.height; y < height; ++y) {\n      var bytesY = this.bytes[y];\n\n      for (var x = 0, width = this.width; x < width; ++x) {\n        switch (bytesY[x]) {\n          case 0:\n            result.append(' 0');\n            break;\n\n          case 1:\n            result.append(' 1');\n            break;\n\n          default:\n            result.append('  ');\n            break;\n        }\n      }\n\n      result.append('\\n');\n    }\n\n    return result.toString();\n  };\n\n  return ByteMatrix;\n}();\n\nexports.default = ByteMatrix;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.encoder {*/\n\nvar BitArray_1 = require(\"../../common/BitArray\");\n\nvar Integer_1 = require(\"../../util/Integer\");\n\nvar QRCode_1 = require(\"./QRCode\");\n\nvar MaskUtil_1 = require(\"./MaskUtil\");\n\nvar WriterException_1 = require(\"../../WriterException\");\n\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\r\n * @author satorux@google.com (Satoru Takabayashi) - creator\r\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\r\n */\n\n\nvar MatrixUtil =\n/** @class */\nfunction () {\n  function MatrixUtil() {} // do nothing\n  // Set all cells to -1 (TYPESCRIPTPORT: 255).  -1 (TYPESCRIPTPORT: 255) means that the cell is empty (not set yet).\n  //\n  // JAVAPORT: We shouldn't need to do this at all. The code should be rewritten to begin encoding\n  // with the ByteMatrix initialized all to zero.\n\n\n  MatrixUtil.clearMatrix = function (matrix) {\n    // TYPESCRIPTPORT: we use UintArray se changed here from -1 to 255\n    matrix.clear(\n    /*(byte) */\n\n    /*-1*/\n    255);\n  }; // Build 2D matrix of QR Code from \"dataBits\" with \"ecLevel\", \"version\" and \"getMaskPattern\". On\n  // success, store the result in \"matrix\" and return true.\n\n\n  MatrixUtil.buildMatrix = function (dataBits, ecLevel, version, maskPattern\n  /*int*/\n  , matrix) {\n    MatrixUtil.clearMatrix(matrix);\n    MatrixUtil.embedBasicPatterns(version, matrix); // Type information appear with any version.\n\n    MatrixUtil.embedTypeInfo(ecLevel, maskPattern, matrix); // Version info appear if version >= 7.\n\n    MatrixUtil.maybeEmbedVersionInfo(version, matrix); // Data should be embedded at end.\n\n    MatrixUtil.embedDataBits(dataBits, maskPattern, matrix);\n  }; // Embed basic patterns. On success, modify the matrix and return true.\n  // The basic patterns are:\n  // - Position detection patterns\n  // - Timing patterns\n  // - Dark dot at the left bottom corner\n  // - Position adjustment patterns, if need be\n\n\n  MatrixUtil.embedBasicPatterns = function (version, matrix) {\n    // Let's get started with embedding big squares at corners.\n    MatrixUtil.embedPositionDetectionPatternsAndSeparators(matrix); // Then, embed the dark dot at the left bottom corner.\n\n    MatrixUtil.embedDarkDotAtLeftBottomCorner(matrix); // Position adjustment patterns appear if version >= 2.\n\n    MatrixUtil.maybeEmbedPositionAdjustmentPatterns(version, matrix); // Timing patterns should be embedded after position adj. patterns.\n\n    MatrixUtil.embedTimingPatterns(matrix);\n  }; // Embed type information. On success, modify the matrix.\n\n\n  MatrixUtil.embedTypeInfo = function (ecLevel, maskPattern\n  /*int*/\n  , matrix) {\n    var typeInfoBits = new BitArray_1.default();\n    MatrixUtil.makeTypeInfoBits(ecLevel, maskPattern, typeInfoBits);\n\n    for (var i = 0, size = typeInfoBits.getSize(); i < size; ++i) {\n      // Place bits in LSB to MSB order.  LSB (least significant bit) is the last value in\n      // \"typeInfoBits\".\n      var bit = typeInfoBits.get(typeInfoBits.getSize() - 1 - i); // Type info bits at the left top corner. See 8.9 of JISX0510:2004 (p.46).\n\n      var coordinates = MatrixUtil.TYPE_INFO_COORDINATES[i];\n      var x1 = coordinates[0];\n      var y1 = coordinates[1];\n      matrix.setBoolean(x1, y1, bit);\n\n      if (i < 8) {\n        // Right top corner.\n        var x2 = matrix.getWidth() - i - 1;\n        var y2 = 8;\n        matrix.setBoolean(x2, y2, bit);\n      } else {\n        // Left bottom corner.\n        var x2 = 8;\n        var y2 = matrix.getHeight() - 7 + (i - 8);\n        matrix.setBoolean(x2, y2, bit);\n      }\n    }\n  }; // Embed version information if need be. On success, modify the matrix and return true.\n  // See 8.10 of JISX0510:2004 (p.47) for how to embed version information.\n\n\n  MatrixUtil.maybeEmbedVersionInfo = function (version, matrix) {\n    if (version.getVersionNumber() < 7) {\n      // Version info is necessary if version >= 7.\n      return; // Don't need version info.\n    }\n\n    var versionInfoBits = new BitArray_1.default();\n    MatrixUtil.makeVersionInfoBits(version, versionInfoBits);\n    var bitIndex = 6 * 3 - 1; // It will decrease from 17 to 0.\n\n    for (var i = 0; i < 6; ++i) {\n      for (var j = 0; j < 3; ++j) {\n        // Place bits in LSB (least significant bit) to MSB order.\n        var bit = versionInfoBits.get(bitIndex);\n        bitIndex--; // Left bottom corner.\n\n        matrix.setBoolean(i, matrix.getHeight() - 11 + j, bit); // Right bottom corner.\n\n        matrix.setBoolean(matrix.getHeight() - 11 + j, i, bit);\n      }\n    }\n  }; // Embed \"dataBits\" using \"getMaskPattern\". On success, modify the matrix and return true.\n  // For debugging purposes, it skips masking process if \"getMaskPattern\" is -1(TYPESCRIPTPORT: 255).\n  // See 8.7 of JISX0510:2004 (p.38) for how to embed data bits.\n\n\n  MatrixUtil.embedDataBits = function (dataBits, maskPattern\n  /*int*/\n  , matrix) {\n    var bitIndex = 0;\n    var direction = -1; // Start from the right bottom cell.\n\n    var x = matrix.getWidth() - 1;\n    var y = matrix.getHeight() - 1;\n\n    while (x > 0) {\n      // Skip the vertical timing pattern.\n      if (x === 6) {\n        x -= 1;\n      }\n\n      while (y >= 0 && y < matrix.getHeight()) {\n        for (var i = 0; i < 2; ++i) {\n          var xx = x - i; // Skip the cell if it's not empty.\n\n          if (!MatrixUtil.isEmpty(matrix.get(xx, y))) {\n            continue;\n          }\n\n          var bit = void 0;\n\n          if (bitIndex < dataBits.getSize()) {\n            bit = dataBits.get(bitIndex);\n            ++bitIndex;\n          } else {\n            // Padding bit. If there is no bit left, we'll fill the left cells with 0, as described\n            // in 8.4.9 of JISX0510:2004 (p. 24).\n            bit = false;\n          } // Skip masking if mask_pattern is -1 (TYPESCRIPTPORT: 255).\n\n\n          if (maskPattern !== 255 && MaskUtil_1.default.getDataMaskBit(maskPattern, xx, y)) {\n            bit = !bit;\n          }\n\n          matrix.setBoolean(xx, y, bit);\n        }\n\n        y += direction;\n      }\n\n      direction = -direction; // Reverse the direction.\n\n      y += direction;\n      x -= 2; // Move to the left.\n    } // All bits should be consumed.\n\n\n    if (bitIndex !== dataBits.getSize()) {\n      throw new WriterException_1.default('Not all bits consumed: ' + bitIndex + '/' + dataBits.getSize());\n    }\n  }; // Return the position of the most significant bit set (one: to) in the \"value\". The most\n  // significant bit is position 32. If there is no bit set, return 0. Examples:\n  // - findMSBSet(0) => 0\n  // - findMSBSet(1) => 1\n  // - findMSBSet(255) => 8\n\n\n  MatrixUtil.findMSBSet = function (value\n  /*int*/\n  ) {\n    return 32 - Integer_1.default.numberOfLeadingZeros(value);\n  }; // Calculate BCH (Bose-Chaudhuri-Hocquenghem) code for \"value\" using polynomial \"poly\". The BCH\n  // code is used for encoding type information and version information.\n  // Example: Calculation of version information of 7.\n  // f(x) is created from 7.\n  //   - 7 = 000111 in 6 bits\n  //   - f(x) = x^2 + x^1 + x^0\n  // g(x) is given by the standard (p. 67)\n  //   - g(x) = x^12 + x^11 + x^10 + x^9 + x^8 + x^5 + x^2 + 1\n  // Multiply f(x) by x^(18 - 6)\n  //   - f'(x) = f(x) * x^(18 - 6)\n  //   - f'(x) = x^14 + x^13 + x^12\n  // Calculate the remainder of f'(x) / g(x)\n  //         x^2\n  //         __________________________________________________\n  //   g(x) )x^14 + x^13 + x^12\n  //         x^14 + x^13 + x^12 + x^11 + x^10 + x^7 + x^4 + x^2\n  //         --------------------------------------------------\n  //                              x^11 + x^10 + x^7 + x^4 + x^2\n  //\n  // The remainder is x^11 + x^10 + x^7 + x^4 + x^2\n  // Encode it in binary: 110010010100\n  // The return value is 0xc94 (1100 1001 0100)\n  //\n  // Since all coefficients in the polynomials are 1 or 0, we can do the calculation by bit\n  // operations. We don't care if coefficients are positive or negative.\n\n\n  MatrixUtil.calculateBCHCode = function (value\n  /*int*/\n  , poly\n  /*int*/\n  ) {\n    if (poly === 0) {\n      throw new IllegalArgumentException_1.default('0 polynomial');\n    } // If poly is \"1 1111 0010 0101\" (version info poly), msbSetInPoly is 13. We'll subtract 1\n    // from 13 to make it 12.\n\n\n    var msbSetInPoly = MatrixUtil.findMSBSet(poly);\n    value <<= msbSetInPoly - 1; // Do the division business using exclusive-or operations.\n\n    while (MatrixUtil.findMSBSet(value) >= msbSetInPoly) {\n      value ^= poly << MatrixUtil.findMSBSet(value) - msbSetInPoly;\n    } // Now the \"value\" is the remainder (i.e. the BCH code)\n\n\n    return value;\n  }; // Make bit vector of type information. On success, store the result in \"bits\" and return true.\n  // Encode error correction level and mask pattern. See 8.9 of\n  // JISX0510:2004 (p.45) for details.\n\n\n  MatrixUtil.makeTypeInfoBits = function (ecLevel, maskPattern\n  /*int*/\n  , bits) {\n    if (!QRCode_1.default.isValidMaskPattern(maskPattern)) {\n      throw new WriterException_1.default('Invalid mask pattern');\n    }\n\n    var typeInfo = ecLevel.getBits() << 3 | maskPattern;\n    bits.appendBits(typeInfo, 5);\n    var bchCode = MatrixUtil.calculateBCHCode(typeInfo, MatrixUtil.TYPE_INFO_POLY);\n    bits.appendBits(bchCode, 10);\n    var maskBits = new BitArray_1.default();\n    maskBits.appendBits(MatrixUtil.TYPE_INFO_MASK_PATTERN, 15);\n    bits.xor(maskBits);\n\n    if (bits.getSize() !== 15) {\n      // Just in case.\n      throw new WriterException_1.default('should not happen but we got: ' + bits.getSize());\n    }\n  }; // Make bit vector of version information. On success, store the result in \"bits\" and return true.\n  // See 8.10 of JISX0510:2004 (p.45) for details.\n\n\n  MatrixUtil.makeVersionInfoBits = function (version, bits) {\n    bits.appendBits(version.getVersionNumber(), 6);\n    var bchCode = MatrixUtil.calculateBCHCode(version.getVersionNumber(), MatrixUtil.VERSION_INFO_POLY);\n    bits.appendBits(bchCode, 12);\n\n    if (bits.getSize() !== 18) {\n      // Just in case.\n      throw new WriterException_1.default('should not happen but we got: ' + bits.getSize());\n    }\n  }; // Check if \"value\" is empty.\n\n\n  MatrixUtil.isEmpty = function (value\n  /*int*/\n  ) {\n    return value === 255; // -1\n  };\n\n  MatrixUtil.embedTimingPatterns = function (matrix) {\n    // -8 is for skipping position detection patterns (7: size), and two horizontal/vertical\n    // separation patterns (1: size). Thus, 8 = 7 + 1.\n    for (var i = 8; i < matrix.getWidth() - 8; ++i) {\n      var bit = (i + 1) % 2; // Horizontal line.\n\n      if (MatrixUtil.isEmpty(matrix.get(i, 6))) {\n        matrix.setNumber(i, 6, bit);\n      } // Vertical line.\n\n\n      if (MatrixUtil.isEmpty(matrix.get(6, i))) {\n        matrix.setNumber(6, i, bit);\n      }\n    }\n  }; // Embed the lonely dark dot at left bottom corner. JISX0510:2004 (p.46)\n\n\n  MatrixUtil.embedDarkDotAtLeftBottomCorner = function (matrix) {\n    if (matrix.get(8, matrix.getHeight() - 8) === 0) {\n      throw new WriterException_1.default();\n    }\n\n    matrix.setNumber(8, matrix.getHeight() - 8, 1);\n  };\n\n  MatrixUtil.embedHorizontalSeparationPattern = function (xStart\n  /*int*/\n  , yStart\n  /*int*/\n  , matrix) {\n    for (var x = 0; x < 8; ++x) {\n      if (!MatrixUtil.isEmpty(matrix.get(xStart + x, yStart))) {\n        throw new WriterException_1.default();\n      }\n\n      matrix.setNumber(xStart + x, yStart, 0);\n    }\n  };\n\n  MatrixUtil.embedVerticalSeparationPattern = function (xStart\n  /*int*/\n  , yStart\n  /*int*/\n  , matrix) {\n    for (var y = 0; y < 7; ++y) {\n      if (!MatrixUtil.isEmpty(matrix.get(xStart, yStart + y))) {\n        throw new WriterException_1.default();\n      }\n\n      matrix.setNumber(xStart, yStart + y, 0);\n    }\n  };\n\n  MatrixUtil.embedPositionAdjustmentPattern = function (xStart\n  /*int*/\n  , yStart\n  /*int*/\n  , matrix) {\n    for (var y = 0; y < 5; ++y) {\n      var patternY = MatrixUtil.POSITION_ADJUSTMENT_PATTERN[y];\n\n      for (var x = 0; x < 5; ++x) {\n        matrix.setNumber(xStart + x, yStart + y, patternY[x]);\n      }\n    }\n  };\n\n  MatrixUtil.embedPositionDetectionPattern = function (xStart\n  /*int*/\n  , yStart\n  /*int*/\n  , matrix) {\n    for (var y = 0; y < 7; ++y) {\n      var patternY = MatrixUtil.POSITION_DETECTION_PATTERN[y];\n\n      for (var x = 0; x < 7; ++x) {\n        matrix.setNumber(xStart + x, yStart + y, patternY[x]);\n      }\n    }\n  }; // Embed position detection patterns and surrounding vertical/horizontal separators.\n\n\n  MatrixUtil.embedPositionDetectionPatternsAndSeparators = function (matrix) {\n    // Embed three big squares at corners.\n    var pdpWidth = MatrixUtil.POSITION_DETECTION_PATTERN[0].length; // Left top corner.\n\n    MatrixUtil.embedPositionDetectionPattern(0, 0, matrix); // Right top corner.\n\n    MatrixUtil.embedPositionDetectionPattern(matrix.getWidth() - pdpWidth, 0, matrix); // Left bottom corner.\n\n    MatrixUtil.embedPositionDetectionPattern(0, matrix.getWidth() - pdpWidth, matrix); // Embed horizontal separation patterns around the squares.\n\n    var hspWidth = 8; // Left top corner.\n\n    MatrixUtil.embedHorizontalSeparationPattern(0, hspWidth - 1, matrix); // Right top corner.\n\n    MatrixUtil.embedHorizontalSeparationPattern(matrix.getWidth() - hspWidth, hspWidth - 1, matrix); // Left bottom corner.\n\n    MatrixUtil.embedHorizontalSeparationPattern(0, matrix.getWidth() - hspWidth, matrix); // Embed vertical separation patterns around the squares.\n\n    var vspSize = 7; // Left top corner.\n\n    MatrixUtil.embedVerticalSeparationPattern(vspSize, 0, matrix); // Right top corner.\n\n    MatrixUtil.embedVerticalSeparationPattern(matrix.getHeight() - vspSize - 1, 0, matrix); // Left bottom corner.\n\n    MatrixUtil.embedVerticalSeparationPattern(vspSize, matrix.getHeight() - vspSize, matrix);\n  }; // Embed position adjustment patterns if need be.\n\n\n  MatrixUtil.maybeEmbedPositionAdjustmentPatterns = function (version, matrix) {\n    if (version.getVersionNumber() < 2) {\n      // The patterns appear if version >= 2\n      return;\n    }\n\n    var index = version.getVersionNumber() - 1;\n    var coordinates = MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[index];\n\n    for (var i = 0, length_1 = coordinates.length; i !== length_1; i++) {\n      var y = coordinates[i];\n\n      if (y >= 0) {\n        for (var j = 0; j !== length_1; j++) {\n          var x = coordinates[j];\n\n          if (x >= 0 && MatrixUtil.isEmpty(matrix.get(x, y))) {\n            // If the cell is unset, we embed the position adjustment pattern here.\n            // -2 is necessary since the x/y coordinates point to the center of the pattern, not the\n            // left top corner.\n            MatrixUtil.embedPositionAdjustmentPattern(x - 2, y - 2, matrix);\n          }\n        }\n      }\n    }\n  };\n\n  MatrixUtil.POSITION_DETECTION_PATTERN = Array.from([Int32Array.from([1, 1, 1, 1, 1, 1, 1]), Int32Array.from([1, 0, 0, 0, 0, 0, 1]), Int32Array.from([1, 0, 1, 1, 1, 0, 1]), Int32Array.from([1, 0, 1, 1, 1, 0, 1]), Int32Array.from([1, 0, 1, 1, 1, 0, 1]), Int32Array.from([1, 0, 0, 0, 0, 0, 1]), Int32Array.from([1, 1, 1, 1, 1, 1, 1])]);\n  MatrixUtil.POSITION_ADJUSTMENT_PATTERN = Array.from([Int32Array.from([1, 1, 1, 1, 1]), Int32Array.from([1, 0, 0, 0, 1]), Int32Array.from([1, 0, 1, 0, 1]), Int32Array.from([1, 0, 0, 0, 1]), Int32Array.from([1, 1, 1, 1, 1])]); // From Appendix E. Table 1, JIS0510X:2004 (71: p). The table was double-checked by komatsu.\n\n  MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE = Array.from([Int32Array.from([-1, -1, -1, -1, -1, -1, -1]), Int32Array.from([6, 18, -1, -1, -1, -1, -1]), Int32Array.from([6, 22, -1, -1, -1, -1, -1]), Int32Array.from([6, 26, -1, -1, -1, -1, -1]), Int32Array.from([6, 30, -1, -1, -1, -1, -1]), Int32Array.from([6, 34, -1, -1, -1, -1, -1]), Int32Array.from([6, 22, 38, -1, -1, -1, -1]), Int32Array.from([6, 24, 42, -1, -1, -1, -1]), Int32Array.from([6, 26, 46, -1, -1, -1, -1]), Int32Array.from([6, 28, 50, -1, -1, -1, -1]), Int32Array.from([6, 30, 54, -1, -1, -1, -1]), Int32Array.from([6, 32, 58, -1, -1, -1, -1]), Int32Array.from([6, 34, 62, -1, -1, -1, -1]), Int32Array.from([6, 26, 46, 66, -1, -1, -1]), Int32Array.from([6, 26, 48, 70, -1, -1, -1]), Int32Array.from([6, 26, 50, 74, -1, -1, -1]), Int32Array.from([6, 30, 54, 78, -1, -1, -1]), Int32Array.from([6, 30, 56, 82, -1, -1, -1]), Int32Array.from([6, 30, 58, 86, -1, -1, -1]), Int32Array.from([6, 34, 62, 90, -1, -1, -1]), Int32Array.from([6, 28, 50, 72, 94, -1, -1]), Int32Array.from([6, 26, 50, 74, 98, -1, -1]), Int32Array.from([6, 30, 54, 78, 102, -1, -1]), Int32Array.from([6, 28, 54, 80, 106, -1, -1]), Int32Array.from([6, 32, 58, 84, 110, -1, -1]), Int32Array.from([6, 30, 58, 86, 114, -1, -1]), Int32Array.from([6, 34, 62, 90, 118, -1, -1]), Int32Array.from([6, 26, 50, 74, 98, 122, -1]), Int32Array.from([6, 30, 54, 78, 102, 126, -1]), Int32Array.from([6, 26, 52, 78, 104, 130, -1]), Int32Array.from([6, 30, 56, 82, 108, 134, -1]), Int32Array.from([6, 34, 60, 86, 112, 138, -1]), Int32Array.from([6, 30, 58, 86, 114, 142, -1]), Int32Array.from([6, 34, 62, 90, 118, 146, -1]), Int32Array.from([6, 30, 54, 78, 102, 126, 150]), Int32Array.from([6, 24, 50, 76, 102, 128, 154]), Int32Array.from([6, 28, 54, 80, 106, 132, 158]), Int32Array.from([6, 32, 58, 84, 110, 136, 162]), Int32Array.from([6, 26, 54, 82, 110, 138, 166]), Int32Array.from([6, 30, 58, 86, 114, 142, 170])]); // Type info cells at the left top corner.\n\n  MatrixUtil.TYPE_INFO_COORDINATES = Array.from([Int32Array.from([8, 0]), Int32Array.from([8, 1]), Int32Array.from([8, 2]), Int32Array.from([8, 3]), Int32Array.from([8, 4]), Int32Array.from([8, 5]), Int32Array.from([8, 7]), Int32Array.from([8, 8]), Int32Array.from([7, 8]), Int32Array.from([5, 8]), Int32Array.from([4, 8]), Int32Array.from([3, 8]), Int32Array.from([2, 8]), Int32Array.from([1, 8]), Int32Array.from([0, 8])]); // From Appendix D in JISX0510:2004 (p. 67)\n\n  MatrixUtil.VERSION_INFO_POLY = 0x1f25; // 1 1111 0010 0101\n  // From Appendix C in JISX0510:2004 (p.65).\n\n  MatrixUtil.TYPE_INFO_POLY = 0x537;\n  MatrixUtil.TYPE_INFO_MASK_PATTERN = 0x5412;\n  return MatrixUtil;\n}();\n\nexports.default = MatrixUtil;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.qrcode.encoder {*/\n\nvar BlockPair =\n/** @class */\nfunction () {\n  function BlockPair(dataBytes, errorCorrectionBytes) {\n    this.dataBytes = dataBytes;\n    this.errorCorrectionBytes = errorCorrectionBytes;\n  }\n\n  BlockPair.prototype.getDataBytes = function () {\n    return this.dataBytes;\n  };\n\n  BlockPair.prototype.getErrorCorrectionBytes = function () {\n    return this.errorCorrectionBytes;\n  };\n\n  return BlockPair;\n}();\n\nexports.default = BlockPair;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar MultiFormatOneDReader_1 = require(\"../core/oned/MultiFormatOneDReader\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * Barcode reader reader to use from browser.\r\n */\n\n\nvar BrowserBarcodeReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserBarcodeReader, _super);\n  /**\r\n   * Creates an instance of BrowserBarcodeReader.\r\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\r\n   * @param {Map<DecodeHintType, any>} hints\r\n   */\n\n\n  function BrowserBarcodeReader(timeBetweenScansMillis, hints) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    return _super.call(this, new MultiFormatOneDReader_1.default(hints), timeBetweenScansMillis, hints) || this;\n  }\n\n  return BrowserBarcodeReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserBarcodeReader = BrowserBarcodeReader;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OneDReader_1 = require(\"../OneDReader\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n\nvar AbstractRSSReader =\n/** @class */\nfunction (_super) {\n  __extends(AbstractRSSReader, _super);\n\n  function AbstractRSSReader() {\n    var _this = _super.call(this) || this;\n\n    _this.decodeFinderCounters = new Array(4);\n    _this.dataCharacterCounters = new Array(8);\n    _this.oddRoundingErrors = new Array(4);\n    _this.evenRoundingErrors = new Array(4);\n    _this.oddCounts = new Array(_this.dataCharacterCounters.length / 2);\n    _this.evenCounts = new Array(_this.dataCharacterCounters.length / 2);\n    return _this;\n  }\n\n  AbstractRSSReader.prototype.getDecodeFinderCounters = function () {\n    return this.decodeFinderCounters;\n  };\n\n  AbstractRSSReader.prototype.getDataCharacterCounters = function () {\n    return this.dataCharacterCounters;\n  };\n\n  AbstractRSSReader.prototype.getOddRoundingErrors = function () {\n    return this.oddRoundingErrors;\n  };\n\n  AbstractRSSReader.prototype.getEvenRoundingErrors = function () {\n    return this.evenRoundingErrors;\n  };\n\n  AbstractRSSReader.prototype.getOddCounts = function () {\n    return this.oddCounts;\n  };\n\n  AbstractRSSReader.prototype.getEvenCounts = function () {\n    return this.evenCounts;\n  };\n\n  AbstractRSSReader.prototype.parseFinderValue = function (counters, finderPatterns) {\n    for (var value = 0; value < finderPatterns.length; value++) {\n      if (OneDReader_1.default.patternMatchVariance(counters, finderPatterns[value], AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE) < AbstractRSSReader.MAX_AVG_VARIANCE) {\n        return value;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n  /**\r\n   * @param array values to sum\r\n   * @return sum of values\r\n   * @deprecated call {@link MathUtils#sum(int[])}\r\n   */\n\n\n  AbstractRSSReader.count = function (array) {\n    return MathUtils_1.default.sum(new Int32Array(array));\n  };\n\n  AbstractRSSReader.increment = function (array, errors) {\n    var index = 0;\n    var biggestError = errors[0];\n\n    for (var i = 1; i < array.length; i++) {\n      if (errors[i] > biggestError) {\n        biggestError = errors[i];\n        index = i;\n      }\n    }\n\n    array[index]++;\n  };\n\n  AbstractRSSReader.decrement = function (array, errors) {\n    var index = 0;\n    var biggestError = errors[0];\n\n    for (var i = 1; i < array.length; i++) {\n      if (errors[i] < biggestError) {\n        biggestError = errors[i];\n        index = i;\n      }\n    }\n\n    array[index]--;\n  };\n\n  AbstractRSSReader.isFinderPattern = function (counters) {\n    var firstTwoSum = counters[0] + counters[1];\n    var sum = firstTwoSum + counters[2] + counters[3];\n    var ratio = firstTwoSum / sum;\n\n    if (ratio >= AbstractRSSReader.MIN_FINDER_PATTERN_RATIO && ratio <= AbstractRSSReader.MAX_FINDER_PATTERN_RATIO) {\n      // passes ratio test in spec, but see if the counts are unreasonable\n      var minCounter = Number.MAX_SAFE_INTEGER;\n      var maxCounter = Number.MIN_SAFE_INTEGER;\n\n      for (var _i = 0, counters_1 = counters; _i < counters_1.length; _i++) {\n        var counter = counters_1[_i];\n\n        if (counter > maxCounter) {\n          maxCounter = counter;\n        }\n\n        if (counter < minCounter) {\n          minCounter = counter;\n        }\n      }\n\n      return maxCounter < 10 * minCounter;\n    }\n\n    return false;\n  };\n\n  AbstractRSSReader.MAX_AVG_VARIANCE = 0.2;\n  AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE = 0.45;\n  AbstractRSSReader.MIN_FINDER_PATTERN_RATIO = 9.5 / 12.0;\n  AbstractRSSReader.MAX_FINDER_PATTERN_RATIO = 12.5 / 14.0;\n  return AbstractRSSReader;\n}(OneDReader_1.default);\n\nexports.default = AbstractRSSReader;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DataCharacter_1 = require(\"./DataCharacter\");\n\nvar Pair =\n/** @class */\nfunction (_super) {\n  __extends(Pair, _super);\n\n  function Pair(value, checksumPortion, finderPattern) {\n    var _this = _super.call(this, value, checksumPortion) || this;\n\n    _this.count = 0;\n    _this.finderPattern = finderPattern;\n    return _this;\n  }\n\n  Pair.prototype.getFinderPattern = function () {\n    return this.finderPattern;\n  };\n\n  Pair.prototype.getCount = function () {\n    return this.count;\n  };\n\n  Pair.prototype.incrementCount = function () {\n    this.count++;\n  };\n\n  return Pair;\n}(DataCharacter_1.default);\n\nexports.default = Pair;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar FinderPattern =\n/** @class */\nfunction () {\n  function FinderPattern(value, startEnd, start, end, rowNumber) {\n    this.value = value;\n    this.startEnd = startEnd;\n    this.value = value;\n    this.startEnd = startEnd;\n    this.resultPoints = new Array();\n    this.resultPoints.push(new ResultPoint_1.default(start, rowNumber));\n    this.resultPoints.push(new ResultPoint_1.default(end, rowNumber));\n  }\n\n  FinderPattern.prototype.getValue = function () {\n    return this.value;\n  };\n\n  FinderPattern.prototype.getStartEnd = function () {\n    return this.startEnd;\n  };\n\n  FinderPattern.prototype.getResultPoints = function () {\n    return this.resultPoints;\n  };\n\n  FinderPattern.prototype.equals = function (o) {\n    if (!(o instanceof FinderPattern)) {\n      return false;\n    }\n\n    var that = o;\n    return this.value === that.value;\n  };\n\n  FinderPattern.prototype.hashCode = function () {\n    return this.value;\n  };\n\n  return FinderPattern;\n}();\n\nexports.default = FinderPattern;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * RSS util functions.\r\n */\n\nvar RSSUtils =\n/** @class */\nfunction () {\n  function RSSUtils() {}\n\n  RSSUtils.prototype.RSSUtils = function () {};\n\n  RSSUtils.getRSSvalue = function (widths, maxWidth, noNarrow) {\n    var n = 0;\n\n    for (var _i = 0, widths_1 = widths; _i < widths_1.length; _i++) {\n      var width = widths_1[_i];\n      n += width;\n    }\n\n    var val = 0;\n    var narrowMask = 0;\n    var elements = widths.length;\n\n    for (var bar = 0; bar < elements - 1; bar++) {\n      var elmWidth = void 0;\n\n      for (elmWidth = 1, narrowMask |= 1 << bar; elmWidth < widths[bar]; elmWidth++, narrowMask &= ~(1 << bar)) {\n        var subVal = RSSUtils.combins(n - elmWidth - 1, elements - bar - 2);\n\n        if (noNarrow && narrowMask === 0 && n - elmWidth - (elements - bar - 1) >= elements - bar - 1) {\n          subVal -= RSSUtils.combins(n - elmWidth - (elements - bar), elements - bar - 2);\n        }\n\n        if (elements - bar - 1 > 1) {\n          var lessVal = 0;\n\n          for (var mxwElement = n - elmWidth - (elements - bar - 2); mxwElement > maxWidth; mxwElement--) {\n            lessVal += RSSUtils.combins(n - elmWidth - mxwElement - 1, elements - bar - 3);\n          }\n\n          subVal -= lessVal * (elements - 1 - bar);\n        } else if (n - elmWidth > maxWidth) {\n          subVal--;\n        }\n\n        val += subVal;\n      }\n\n      n -= elmWidth;\n    }\n\n    return val;\n  };\n\n  RSSUtils.combins = function (n, r) {\n    var maxDenom;\n    var minDenom;\n\n    if (n - r > r) {\n      minDenom = r;\n      maxDenom = n - r;\n    } else {\n      minDenom = n - r;\n      maxDenom = r;\n    }\n\n    var val = 1;\n    var j = 1;\n\n    for (var i = n; i > maxDenom; i--) {\n      val *= i;\n\n      if (j <= minDenom) {\n        val /= j;\n        j++;\n      }\n    }\n\n    while (j <= minDenom) {\n      val /= j;\n      j++;\n    }\n\n    return val;\n  };\n\n  return RSSUtils;\n}();\n\nexports.default = RSSUtils;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar EAN13Reader_1 = require(\"./EAN13Reader\");\n\nvar EAN8Reader_1 = require(\"./EAN8Reader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * <p>A reader that can read all available UPC/EAN formats. If a caller wants to try to\r\n * read all such formats, it is most efficient to use this implementation rather than invoke\r\n * individual readers.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar MultiFormatUPCEANReader =\n/** @class */\nfunction (_super) {\n  __extends(MultiFormatUPCEANReader, _super);\n\n  function MultiFormatUPCEANReader(hints) {\n    var _this = _super.call(this) || this;\n\n    var possibleFormats = hints == null ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n    var readers = [];\n\n    if (possibleFormats != null) {\n      if (possibleFormats.indexOf(BarcodeFormat_1.default.EAN_13) > -1) {\n        readers.push(new EAN13Reader_1.default());\n      }\n\n      if (possibleFormats.indexOf(BarcodeFormat_1.default.EAN_8) > -1) {\n        readers.push(new EAN8Reader_1.default());\n      } // todo add UPC_A, UPC_E\n\n    }\n\n    if (readers.length === 0) {\n      readers.push(new EAN13Reader_1.default());\n      readers.push(new EAN8Reader_1.default()); // todo add UPC_A, UPC_E\n    }\n\n    _this.readers = readers;\n    return _this;\n  }\n\n  MultiFormatUPCEANReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    for (var _i = 0, _a = this.readers; _i < _a.length; _i++) {\n      var reader = _a[_i];\n\n      try {\n        return reader.decodeRow(rowNumber, row, hints); // TODO ean13MayBeUPCA\n      } catch (err) {// continue;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  MultiFormatUPCEANReader.prototype.reset = function () {\n    for (var _i = 0, _a = this.readers; _i < _a.length; _i++) {\n      var reader = _a[_i];\n      reader.reset();\n    }\n  };\n\n  return MultiFormatUPCEANReader;\n}(OneDReader_1.default);\n\nexports.default = MultiFormatUPCEANReader;","\"use strict\";\n/*\r\n * Copyright (C) 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar UPCEANReader_1 = require(\"./UPCEANReader\");\n\nvar UPCEANExtension5Support_1 = require(\"./UPCEANExtension5Support\");\n\nvar UPCEANExtension2Support_1 = require(\"./UPCEANExtension2Support\");\n\nvar UPCEANExtensionSupport =\n/** @class */\nfunction () {\n  function UPCEANExtensionSupport() {}\n\n  UPCEANExtensionSupport.decodeRow = function (rowNumber, row, rowOffset) {\n    var extensionStartRange = UPCEANReader_1.default.findGuardPattern(row, rowOffset, false, this.EXTENSION_START_PATTERN, new Array(this.EXTENSION_START_PATTERN.length).fill(0));\n\n    try {\n      var fiveSupport = new UPCEANExtension5Support_1.default();\n      return fiveSupport.decodeRow(rowNumber, row, extensionStartRange);\n    } catch (err) {\n      var twoSupport = new UPCEANExtension2Support_1.default();\n      return twoSupport.decodeRow(rowNumber, row, extensionStartRange);\n    }\n  };\n\n  UPCEANExtensionSupport.EXTENSION_START_PATTERN = [1, 1, 2];\n  return UPCEANExtensionSupport;\n}();\n\nexports.default = UPCEANExtensionSupport;","\"use strict\";\n/*\r\n * Copyright (C) 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar UPCEANReader_1 = require(\"./UPCEANReader\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * @see UPCEANExtension2Support\r\n */\n\n\nvar UPCEANExtension5Support =\n/** @class */\nfunction () {\n  function UPCEANExtension5Support() {\n    this.CHECK_DIGIT_ENCODINGS = [0x18, 0x14, 0x12, 0x11, 0x0C, 0x06, 0x03, 0x0A, 0x09, 0x05];\n    this.decodeMiddleCounters = [0, 0, 0, 0];\n    this.decodeRowStringBuffer = '';\n  }\n\n  UPCEANExtension5Support.prototype.decodeRow = function (rowNumber, row, extensionStartRange) {\n    var result = this.decodeRowStringBuffer;\n    var end = this.decodeMiddle(row, extensionStartRange, result);\n    var resultString = result.toString();\n    var extensionData = UPCEANExtension5Support.parseExtensionString(resultString);\n    var resultPoints = [new ResultPoint_1.default((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber), new ResultPoint_1.default(end, rowNumber)];\n    var extensionResult = new Result_1.default(resultString, null, 0, resultPoints, BarcodeFormat_1.default.UPC_EAN_EXTENSION, new Date().getTime());\n\n    if (extensionData != null) {\n      extensionResult.putAllMetadata(extensionData);\n    }\n\n    return extensionResult;\n  };\n\n  UPCEANExtension5Support.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n    var lgPatternFound = 0;\n\n    for (var x = 0; x < 5 && rowOffset < end; x++) {\n      var bestMatch = UPCEANReader_1.default.decodeDigit(row, counters, rowOffset, UPCEANReader_1.default.L_AND_G_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch % 10);\n\n      for (var _i = 0, counters_1 = counters; _i < counters_1.length; _i++) {\n        var counter = counters_1[_i];\n        rowOffset += counter;\n      }\n\n      if (bestMatch >= 10) {\n        lgPatternFound |= 1 << 4 - x;\n      }\n\n      if (x !== 4) {\n        // Read off separator if not last\n        rowOffset = row.getNextSet(rowOffset);\n        rowOffset = row.getNextUnset(rowOffset);\n      }\n    }\n\n    if (resultString.length !== 5) {\n      throw new NotFoundException_1.default();\n    }\n\n    var checkDigit = this.determineCheckDigit(lgPatternFound);\n\n    if (UPCEANExtension5Support.extensionChecksum(resultString.toString()) !== checkDigit) {\n      throw new NotFoundException_1.default();\n    }\n\n    return rowOffset;\n  };\n\n  UPCEANExtension5Support.extensionChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n    }\n\n    sum *= 3;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n    }\n\n    sum *= 3;\n    return sum % 10;\n  };\n\n  UPCEANExtension5Support.prototype.determineCheckDigit = function (lgPatternFound) {\n    for (var d = 0; d < 10; d++) {\n      if (lgPatternFound === this.CHECK_DIGIT_ENCODINGS[d]) {\n        return d;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  UPCEANExtension5Support.parseExtensionString = function (raw) {\n    if (raw.length !== 5) {\n      return null;\n    }\n\n    var value = UPCEANExtension5Support.parseExtension5String(raw);\n\n    if (value == null) {\n      return null;\n    }\n\n    return new Map([[ResultMetadataType_1.default.SUGGESTED_PRICE, value]]);\n  };\n\n  UPCEANExtension5Support.parseExtension5String = function (raw) {\n    var currency;\n\n    switch (raw.charAt(0)) {\n      case '0':\n        currency = '£';\n        break;\n\n      case '5':\n        currency = '$';\n        break;\n\n      case '9':\n        // Reference: http://www.jollytech.com\n        switch (raw) {\n          case '90000':\n            // No suggested retail price\n            return null;\n\n          case '99991':\n            // Complementary\n            return '0.00';\n\n          case '99990':\n            return 'Used';\n        } // Otherwise... unknown currency?\n\n\n        currency = '';\n        break;\n\n      default:\n        currency = '';\n        break;\n    }\n\n    var rawAmount = parseInt(raw.substring(1));\n    var unitsString = (rawAmount / 100).toString();\n    var hundredths = rawAmount % 100;\n    var hundredthsString = hundredths < 10 ? '0' + hundredths : hundredths.toString(); // fixme\n\n    return currency + unitsString + '.' + hundredthsString;\n  };\n\n  return UPCEANExtension5Support;\n}();\n\nexports.default = UPCEANExtension5Support;","\"use strict\";\n/*\r\n * Copyright (C) 2012 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar UPCEANReader_1 = require(\"./UPCEANReader\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\r\n * @see UPCEANExtension5Support\r\n */\n\n\nvar UPCEANExtension2Support =\n/** @class */\nfunction () {\n  function UPCEANExtension2Support() {\n    this.decodeMiddleCounters = [0, 0, 0, 0];\n    this.decodeRowStringBuffer = '';\n  }\n\n  UPCEANExtension2Support.prototype.decodeRow = function (rowNumber, row, extensionStartRange) {\n    var result = this.decodeRowStringBuffer;\n    var end = this.decodeMiddle(row, extensionStartRange, result);\n    var resultString = result.toString();\n    var extensionData = UPCEANExtension2Support.parseExtensionString(resultString);\n    var resultPoints = [new ResultPoint_1.default((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber), new ResultPoint_1.default(end, rowNumber)];\n    var extensionResult = new Result_1.default(resultString, null, 0, resultPoints, BarcodeFormat_1.default.UPC_EAN_EXTENSION, new Date().getTime());\n\n    if (extensionData != null) {\n      extensionResult.putAllMetadata(extensionData);\n    }\n\n    return extensionResult;\n  };\n\n  UPCEANExtension2Support.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n    var checkParity = 0;\n\n    for (var x = 0; x < 2 && rowOffset < end; x++) {\n      var bestMatch = UPCEANReader_1.default.decodeDigit(row, counters, rowOffset, UPCEANReader_1.default.L_AND_G_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch % 10);\n\n      for (var _i = 0, counters_1 = counters; _i < counters_1.length; _i++) {\n        var counter = counters_1[_i];\n        rowOffset += counter;\n      }\n\n      if (bestMatch >= 10) {\n        checkParity |= 1 << 1 - x;\n      }\n\n      if (x !== 1) {\n        // Read off separator if not last\n        rowOffset = row.getNextSet(rowOffset);\n        rowOffset = row.getNextUnset(rowOffset);\n      }\n    }\n\n    if (resultString.length !== 2) {\n      throw new NotFoundException_1.default();\n    }\n\n    if (parseInt(resultString.toString()) % 4 !== checkParity) {\n      throw new NotFoundException_1.default();\n    }\n\n    return rowOffset;\n  };\n\n  UPCEANExtension2Support.parseExtensionString = function (raw) {\n    if (raw.length !== 2) {\n      return null;\n    }\n\n    return new Map([[ResultMetadataType_1.default.ISSUE_NUMBER, parseInt(raw)]]);\n  };\n\n  return UPCEANExtension2Support;\n}();\n\nexports.default = UPCEANExtension2Support;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar UPCEANReader_1 = require(\"./UPCEANReader\");\n/**\r\n * <p>Implements decoding of the EAN-8 format.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar EAN8Reader =\n/** @class */\nfunction (_super) {\n  __extends(EAN8Reader, _super);\n\n  function EAN8Reader() {\n    var _this = _super.call(this) || this;\n\n    _this.decodeMiddleCounters = [0, 0, 0, 0];\n    return _this;\n  }\n\n  EAN8Reader.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n\n    for (var x = 0; x < 4 && rowOffset < end; x++) {\n      var bestMatch = UPCEANReader_1.default.decodeDigit(row, counters, rowOffset, UPCEANReader_1.default.L_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch);\n\n      for (var _i = 0, counters_1 = counters; _i < counters_1.length; _i++) {\n        var counter = counters_1[_i];\n        rowOffset += counter;\n      }\n    }\n\n    var middleRange = UPCEANReader_1.default.findGuardPattern(row, rowOffset, true, UPCEANReader_1.default.MIDDLE_PATTERN, new Array(UPCEANReader_1.default.MIDDLE_PATTERN.length).fill(0));\n    rowOffset = middleRange[1];\n\n    for (var x = 0; x < 4 && rowOffset < end; x++) {\n      var bestMatch = UPCEANReader_1.default.decodeDigit(row, counters, rowOffset, UPCEANReader_1.default.L_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch);\n\n      for (var _a = 0, counters_2 = counters; _a < counters_2.length; _a++) {\n        var counter = counters_2[_a];\n        rowOffset += counter;\n      }\n    }\n\n    return {\n      rowOffset: rowOffset,\n      resultString: resultString\n    };\n  };\n\n  EAN8Reader.prototype.getBarcodeFormat = function () {\n    return BarcodeFormat_1.default.EAN_8;\n  };\n\n  return EAN8Reader;\n}(UPCEANReader_1.default);\n\nexports.default = EAN8Reader;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar MultiFormatReader_1 = require(\"../core/MultiFormatReader\");\n\nvar BrowserMultiFormatReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserMultiFormatReader, _super);\n\n  function BrowserMultiFormatReader(hints, timeBetweenScansMillis) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    var _this = this;\n\n    var reader = new MultiFormatReader_1.default();\n    reader.setHints(hints);\n    _this = _super.call(this, reader, timeBetweenScansMillis) || this;\n    return _this;\n  }\n  /**\r\n   * Overwrite decodeBitmap to call decodeWithState, which will pay\r\n   * attention to the hints set in the constructor function\r\n   */\n\n\n  BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decodeWithState(binaryBitmap);\n  };\n\n  return BrowserMultiFormatReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserMultiFormatReader = BrowserMultiFormatReader;","\"use strict\";\n/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // import DataMatrixWriter from './datamatrix/DataMatrixWriter'\n// import CodaBarWriter from './oned/CodaBarWriter'\n// import Code128Writer from './oned/Code128Writer'\n// import Code39Writer from './oned/Code39Writer'\n// import Code93Writer from './oned/Code93Writer'\n// import EAN13Writer from './oned/EAN13Writer'\n// import EAN8Writer from './oned/EAN8Writer'\n// import ITFWriter from './oned/ITFWriter'\n// import UPCAWriter from './oned/UPCAWriter'\n// import UPCEWriter from './oned/UPCEWriter'\n// import PDF417Writer from './pdf417/PDF417Writer'\n\nvar QRCodeWriter_1 = require(\"./qrcode/QRCodeWriter\");\n\nvar BarcodeFormat_1 = require(\"./BarcodeFormat\");\n\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n/*import java.util.Map;*/\n\n/**\r\n * This is a factory class which finds the appropriate Writer subclass for the BarcodeFormat\r\n * requested and encodes the barcode with the supplied contents.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar MultiFormatWriter =\n/** @class */\nfunction () {\n  function MultiFormatWriter() {}\n  /*@Override*/\n  // public encode(contents: string,\n  //                         format: BarcodeFormat,\n  //                         width: number /*int*/,\n  //                         height: number /*int*/): BitMatrix /*throws WriterException */ {\n  //   return encode(contents, format, width, height, null)\n  // }\n\n  /*@Override*/\n\n\n  MultiFormatWriter.prototype.encode = function (contents, format, width\n  /*int*/\n  , height\n  /*int*/\n  , hints) {\n    var writer;\n\n    switch (format) {\n      // case BarcodeFormat.EAN_8:\n      //   writer = new EAN8Writer()\n      //   break\n      // case BarcodeFormat.UPC_E:\n      //   writer = new UPCEWriter()\n      //   break\n      // case BarcodeFormat.EAN_13:\n      //   writer = new EAN13Writer()\n      //   break\n      // case BarcodeFormat.UPC_A:\n      //   writer = new UPCAWriter()\n      //   break\n      case BarcodeFormat_1.default.QR_CODE:\n        writer = new QRCodeWriter_1.default();\n        break;\n      // case BarcodeFormat.CODE_39:\n      //   writer = new Code39Writer()\n      //   break\n      // case BarcodeFormat.CODE_93:\n      //   writer = new Code93Writer()\n      //   break\n      // case BarcodeFormat.CODE_128:\n      //   writer = new Code128Writer()\n      //   break\n      // case BarcodeFormat.ITF:\n      //   writer = new ITFWriter()\n      //   break\n      // case BarcodeFormat.PDF_417:\n      //   writer = new PDF417Writer()\n      //   break\n      // case BarcodeFormat.CODABAR:\n      //   writer = new CodaBarWriter()\n      //   break\n      // case BarcodeFormat.DATA_MATRIX:\n      //   writer = new DataMatrixWriter()\n      //   break\n      // case BarcodeFormat.AZTEC:\n      //   writer = new AztecWriter()\n      //   break\n\n      default:\n        throw new IllegalArgumentException_1.default('No encoder available for format ' + format);\n    }\n\n    return writer.encode(contents, format, width, height, hints);\n  };\n\n  return MultiFormatWriter;\n}();\n\nexports.default = MultiFormatWriter;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\nvar System_1 = require(\"./util/System\");\n\nvar LuminanceSource_1 = require(\"./LuminanceSource\");\n\nvar InvertedLuminanceSource_1 = require(\"./InvertedLuminanceSource\");\n\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n/**\r\n * This object extends LuminanceSource around an array of YUV data returned from the camera driver,\r\n * with the option to crop to a rectangle within the full data. This can be used to exclude\r\n * superfluous pixels around the perimeter and speed up decoding.\r\n *\r\n * It works for any pixel format where the Y channel is planar and appears first, including\r\n * YCbCr_420_SP and YCbCr_422_SP.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\n\n\nvar PlanarYUVLuminanceSource =\n/** @class */\nfunction (_super) {\n  __extends(PlanarYUVLuminanceSource, _super);\n\n  function PlanarYUVLuminanceSource(yuvData, dataWidth\n  /*int*/\n  , dataHeight\n  /*int*/\n  , left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  , reverseHorizontal) {\n    var _this = _super.call(this, width, height) || this;\n\n    _this.yuvData = yuvData;\n    _this.dataWidth = dataWidth;\n    _this.dataHeight = dataHeight;\n    _this.left = left;\n    _this.top = top;\n\n    if (left + width > dataWidth || top + height > dataHeight) {\n      throw new IllegalArgumentException_1.default('Crop rectangle does not fit within image data.');\n    }\n\n    if (reverseHorizontal) {\n      _this.reverseHorizontal(width, height);\n    }\n\n    return _this;\n  }\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException_1.default('Requested row is outside the image: ' + y);\n    }\n\n    var width = this.getWidth();\n\n    if (row === null || row === undefined || row.length < width) {\n      row = new Uint8ClampedArray(width);\n    }\n\n    var offset = (y + this.top) * this.dataWidth + this.left;\n    System_1.default.arraycopy(this.yuvData, offset, row, 0, width);\n    return row;\n  };\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.getMatrix = function () {\n    var width = this.getWidth();\n    var height = this.getHeight(); // If the caller asks for the entire underlying image, save the copy and give them the\n    // original data. The docs specifically warn that result.length must be ignored.\n\n    if (width === this.dataWidth && height === this.dataHeight) {\n      return this.yuvData;\n    }\n\n    var area = width * height;\n    var matrix = new Uint8ClampedArray(area);\n    var inputOffset = this.top * this.dataWidth + this.left; // If the width matches the full width of the underlying data, perform a single copy.\n\n    if (width === this.dataWidth) {\n      System_1.default.arraycopy(this.yuvData, inputOffset, matrix, 0, area);\n      return matrix;\n    } // Otherwise copy one cropped row at a time.\n\n\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n      System_1.default.arraycopy(this.yuvData, inputOffset, matrix, outputOffset, width);\n      inputOffset += this.dataWidth;\n    }\n\n    return matrix;\n  };\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    return new PlanarYUVLuminanceSource(this.yuvData, this.dataWidth, this.dataHeight, this.left + left, this.top + top, width, height, false);\n  };\n\n  PlanarYUVLuminanceSource.prototype.renderThumbnail = function () {\n    var width = this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    var height = this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    var pixels = new Int32Array(width * height);\n    var yuv = this.yuvData;\n    var inputOffset = this.top * this.dataWidth + this.left;\n\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n\n      for (var x = 0; x < width; x++) {\n        var grey = yuv[inputOffset + x * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR] & 0xff;\n        pixels[outputOffset + x] = 0xFF000000 | grey * 0x00010101;\n      }\n\n      inputOffset += this.dataWidth * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    }\n\n    return pixels;\n  };\n  /**\r\n   * @return width of image from {@link #renderThumbnail()}\r\n   */\n\n\n  PlanarYUVLuminanceSource.prototype.getThumbnailWidth = function () {\n    return this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n  };\n  /**\r\n   * @return height of image from {@link #renderThumbnail()}\r\n   */\n\n\n  PlanarYUVLuminanceSource.prototype.getThumbnailHeight = function () {\n    return this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n  };\n\n  PlanarYUVLuminanceSource.prototype.reverseHorizontal = function (width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    var yuvData = this.yuvData;\n\n    for (var y = 0, rowStart = this.top * this.dataWidth + this.left; y < height; y++, rowStart += this.dataWidth) {\n      var middle = rowStart + width / 2;\n\n      for (var x1 = rowStart, x2 = rowStart + width - 1; x1 < middle; x1++, x2--) {\n        var temp = yuvData[x1];\n        yuvData[x1] = yuvData[x2];\n        yuvData[x2] = temp;\n      }\n    }\n  };\n\n  PlanarYUVLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource_1.default(this);\n  };\n\n  PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR = 2;\n  return PlanarYUVLuminanceSource;\n}(LuminanceSource_1.default);\n\nexports.default = PlanarYUVLuminanceSource;","\"use strict\";\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\nrequire(\"./InvertedLuminanceSource\"); // required because of circular dependencies between LuminanceSource and InvertedLuminanceSource\n\n\nvar InvertedLuminanceSource_1 = require(\"./InvertedLuminanceSource\");\n\nvar LuminanceSource_1 = require(\"./LuminanceSource\");\n\nvar System_1 = require(\"./util/System\");\n\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n/**\r\n * This class is used to help decode images from files which arrive as RGB data from\r\n * an ARGB pixel array. It does not support rotation.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n * @author Betaminos\r\n */\n\n\nvar RGBLuminanceSource =\n/** @class */\nfunction (_super) {\n  __extends(RGBLuminanceSource, _super);\n\n  function RGBLuminanceSource(luminances, width\n  /*int*/\n  , height\n  /*int*/\n  , dataWidth\n  /*int*/\n  , dataHeight\n  /*int*/\n  , left\n  /*int*/\n  , top\n  /*int*/\n  ) {\n    var _this = _super.call(this, width, height) || this;\n\n    _this.dataWidth = dataWidth;\n    _this.dataHeight = dataHeight;\n    _this.left = left;\n    _this.top = top;\n\n    if (luminances.BYTES_PER_ELEMENT === 4) {\n      // Int32Array\n      var size = width * height;\n      var luminancesUint8Array = new Uint8ClampedArray(size);\n\n      for (var offset = 0; offset < size; offset++) {\n        var pixel = luminances[offset];\n        var r = pixel >> 16 & 0xff; // red\n\n        var g2 = pixel >> 7 & 0x1fe; // 2 * green\n\n        var b = pixel & 0xff; // blue\n        // Calculate green-favouring average cheaply\n\n        luminancesUint8Array[offset] =\n        /*(byte) */\n        (r + g2 + b) / 4 & 0xFF;\n      }\n\n      _this.luminances = luminancesUint8Array;\n    } else {\n      _this.luminances = luminances;\n    }\n\n    if (undefined === dataWidth) {\n      _this.dataWidth = width;\n    }\n\n    if (undefined === dataHeight) {\n      _this.dataHeight = height;\n    }\n\n    if (undefined === left) {\n      _this.left = 0;\n    }\n\n    if (undefined === top) {\n      _this.top = 0;\n    }\n\n    if (_this.left + width > _this.dataWidth || _this.top + height > _this.dataHeight) {\n      throw new IllegalArgumentException_1.default('Crop rectangle does not fit within image data.');\n    }\n\n    return _this;\n  }\n  /*@Override*/\n\n\n  RGBLuminanceSource.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException_1.default('Requested row is outside the image: ' + y);\n    }\n\n    var width = this.getWidth();\n\n    if (row === null || row === undefined || row.length < width) {\n      row = new Uint8ClampedArray(width);\n    }\n\n    var offset = (y + this.top) * this.dataWidth + this.left;\n    System_1.default.arraycopy(this.luminances, offset, row, 0, width);\n    return row;\n  };\n  /*@Override*/\n\n\n  RGBLuminanceSource.prototype.getMatrix = function () {\n    var width = this.getWidth();\n    var height = this.getHeight(); // If the caller asks for the entire underlying image, save the copy and give them the\n    // original data. The docs specifically warn that result.length must be ignored.\n\n    if (width === this.dataWidth && height === this.dataHeight) {\n      return this.luminances;\n    }\n\n    var area = width * height;\n    var matrix = new Uint8ClampedArray(area);\n    var inputOffset = this.top * this.dataWidth + this.left; // If the width matches the full width of the underlying data, perform a single copy.\n\n    if (width === this.dataWidth) {\n      System_1.default.arraycopy(this.luminances, inputOffset, matrix, 0, area);\n      return matrix;\n    } // Otherwise copy one cropped row at a time.\n\n\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n      System_1.default.arraycopy(this.luminances, inputOffset, matrix, outputOffset, width);\n      inputOffset += this.dataWidth;\n    }\n\n    return matrix;\n  };\n  /*@Override*/\n\n\n  RGBLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  /*@Override*/\n\n\n  RGBLuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    return new RGBLuminanceSource(this.luminances, width, height, this.dataWidth, this.dataHeight, this.left + left, this.top + top);\n  };\n\n  RGBLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource_1.default(this);\n  };\n\n  return RGBLuminanceSource;\n}(LuminanceSource_1.default);\n\nexports.default = RGBLuminanceSource;"],"sourceRoot":""}